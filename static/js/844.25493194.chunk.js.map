{"version":3,"file":"static/js/844.25493194.chunk.js","mappings":"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","sources":["Main.js","additional/ADRow.js","boostStuff/ConsumablesBuilder.js","consumables/ConsumableTools.js","consumables/view/ConsumableButton.js","consumables/view/ConsumableItems.js","consumables/view/ConsumableToast.js","consumables/view/ConsumableFilter.js","consumables/view/ConsumablesView.js","consumables/view/FilterDisplay.js","creature/CreatureChartView.js","creature/CreatureNamesDropdown.js","creature/CreatureLevelsDropdown.js","creature/CreatureChooser.js","race/RaceDataProvider.js","creature/CreatureDataProvider.js","creature/CreatureDataView.js","creature/CreatureDropdown.js","creature/CreatureInfoButton.js","creature/CreatureInfoPopover.js","creature/CreatureResHealthChartsView.js","creature/CreatureParamsLineView.js","creature/CreaturesCardView.js","creature/Creature.js","creature/CreaturesProduction.js","viewComponents/tag/UTag.js","creature/CreatureBodyView.js","creature/CreatureTagsView.js","creature/CreatureReductionView.js","creature/CreatureStats.js","creature/CreaturesStats.js","creature/CreaturesView.js","damage/AAView.js","damage/DamageDetails.js","damage/DamageDetailsCard.js","damage/DamageEmulator.js","damage/weapon/Weapon.js","boostStuff/StuffBoostsCollector.js","helpers/Array.js","helpers/AccuracyAdjuster.js","damage/weapon/WeaponSpecsAssembler.js","damage/weapon/WeaponFactory.js","entities/EAddDamages.js","entities/EBoosts.js","entities/ECreatures.js","entities/EPlayer.js","entities/EPlayerStats.js","boostStuff/BoostFunctions.js","entities/EStuffBoost.js","entities/EWeaponSpecs.js","entities/ExtraDamageOptions.js","helpers/AdditionalDView.js","helpers/Ammo.js","helpers/BoostStuffProvider.js","helpers/Calc.js","helpers/Colors.js","helpers/CritView.js","helpers/DropdownHelpers.js","helpers/EffectProvider.js","helpers/Emoji.js","helpers/Input.js","helpers/Item.js","helpers/LegendaryProvider.js","helpers/Mods.js","helpers/PerkProvider.js","helpers/Proj.js","helpers/ProjView.js","helpers/Spell.js","helpers/PerkPopover.js","templates/EffectPopover.js","helpers/SpellView.js","helpers/StringHelpers.js","helpers/Strings.js","helpers/TemplatesRegister.js","helpers/Time.js","helpers/ViewHelper.js","helpers/WTypeDropdown.js","helpers/WeaponImages.js","helpers/WeaponPopoverOverlay.js","helpers/mods/DamageExtractor.js","damage/DamageBlackList.js","helpers/mods/DamageSetter.js","helpers/mods/appliers/DamageBonusMult.js","helpers/mods/appliers/Ammo.js","helpers/mods/appliers/IsAutomatic.js","helpers/mods/appliers/Speed.js","helpers/mods/appliers/APCost.js","helpers/mods/appliers/Weight.js","helpers/mods/appliers/AttackDelay.js","helpers/mods/appliers/CriticalDamageMult.js","helpers/mods/appliers/AmmoCapacity.js","helpers/mods/appliers/ReloadSpeed.js","helpers/mods/appliers/OverrideProjectile.js","helpers/mods/appliers/HasRepeatableSingleFire.js","helpers/mods/appliers/ActorValues.js","helpers/mods/appliers/Keywords.js","helpers/mods/appliers/CritEffect.js","helpers/mods/appliers/AttackDamage.js","helpers/mods/appliers/DamageTypeValues.js","helpers/mods/appliers/WeightReduction.js","helpers/mods/appliers/Enchantments.js","helpers/mods/appliers/NumProjectiles.js","helpers/mods/appliers/Appliers.js","helpers/mods/ModParser.js","helpers/mods/ModTools.js","helpers/mods/appliers/Apply.js","helpers/mods/appliers/ConIronSight.js","helpers/mods/appliers/MaxConDegree.js","helpers/mods/appliers/MinConDegree.js","helpers/mods/appliers/RecoilMaxDegree.js","helpers/mods/appliers/RecoilMinDegree.js","helpers/mods/appliers/SightedTransition.js","helpers/views/BSRadio.js","helpers/views/GroupView.js","helpers/views/SimpleNameDropdown.js","helpers/EffectViewHelper.js","perkCard/view/PerkCardCompactView.js","perk/view/PerkCompactView.js","spell/view/SpellCompactView.js","effect/view/EffectCompactView.js","consumables/view/ConsumableTagsView.js","consumables/view/AlchemyCompactView.js","vmad/view/VMADCompactView.js","helpers/views/StackEffectView.js","additional/AdditionalTable.js","main/AdditionalDamage.js","viewComponents/popover/InfoPopover.js","boostStuff/EffectItem.js","boostStuff/EffectItems.js","boostStuff/EffectView.js","boostStuff/ANRow.js","boostStuff/General.js","main/BoostStuff.js","perkCardBoosts/BRows.js","perkCardBoosts/BoostTable.js","main/DamageBoosts.js","main/GraphInfoView.js","main/HotMeter.js","main/MainCardsDisplay.js","main/ResistanceChart.js","snapshot/ModalNewItem.js","helpers/Files.js","snapshot/ModalDownloadSnapshots.js","snapshot/ModalDownloadSnapshot.js","snapshot/ModalDeleteItem.js","snapshot/ModalDeleteAll.js","snapshot/ModalApplyItem.js","helpers/FetchSnapshots.js","snapshot/ModalUploadSnapshots.js","snapshot/ModalRenameItem.js","snapshot/ModalUpdateItem.js","snapshot/SnapshotsHeader.js","snapshot/BoostRowView.js","snapshot/SnapshotItem.js","snapshot/SnapshotItems.js","main/Snapshots.js","main/MainInfoPopover.js","main/MainInfoButton.js","main/SummaryView.js","main/ToastSpecs.js","damage/WRow.js","damage/LegSlider.js","damage/LegendarySelector.js","damage/AutoHandSelector.js","damage/DamageItem.js","helpers/NotificationToast.js","damage/DamageAdd.js","damage/ModalDeleteDamage.js","damage/AmmoInfoView.js","damage/TagInfoView.js","damage/DamageTable.js","main/WeaponSpecs.js","perkCardBoosts/BoostHelpers.js","perkCardBoosts/PerkCardBuilder.js","perkCardBoosts/PerkImageProvider.js","perkCard/PerkCardProvider.js","perkCard/PerkCardTools.js","perkCard/view/PerkCardButton.js","perkCard/view/PerkCardItems.js","perkCard/view/PerkCardFilter.js","perkCard/view/PerkCardToast.js","perkCard/view/PerkCardView.js","race/view/ChartView.js","race/view/GeneralRaceView.js","race/view/RaceBodyView.js","race/RaceTools.js","race/view/RaceDropdown.js","race/view/RaceTagView.js","race/view/RaceView.js","race/view/ResistanceView.js","templates/ModPropsPopover.js","templates/TemplateTools.js","templates/ModalApplyTemplate.js","helpers/AmmoView.js","helpers/DamageView.js","helpers/GeneralView.js","helpers/LegendaryView.js","helpers/DamageOverview.js","templates/ModRow.js","templates/TestedWeapons.js","helpers/WeaponRestrictions.js","templates/WeaponTemplate.js","helpers/mods/LegendarySetter.js","templates/TemplateItems.js","helpers/mods/ModsSetter.js","helpers/Combinator.js","helpers/AccuracyHelper.js","helpers/LegsId.js","helpers/LegendaryCalcBuilder.js","templates/calc/ParameterCalculator.js","templates/calc/view/PickedGroups.js","templates/calc/view/CalcModGroups.js","templates/calc/view/CalcModOptionsView.js","templates/calc/view/CalcCards.js","templates/calc/view/CalcMain.js","templates/calc/view/CalcConsumables.js","templates/calc/view/CalcLegendary.js","templates/WeaponEmblem.js","templates/calc/view/LegendaryCalcRowView.js","templates/calc/view/ModsCalcRowView.js","templates/calc/ParametersApplier.js","templates/ModalCalculateWeapon.js","templates/calc/CalcEntities.js","templates/calc/view/CalcModGroupsAll.js","templates/calc/view/CalcWGroupsDropdown.js","templates/calc/view/CalcCurrentItem.js","templates/calc/view/CalcResultItem.js","templates/calc/view/CalcResultItems.js","templates/ModalCalculateWeapons.js","templates/TestedCarousel.js","templates/ModalTestedWeapon.js","templates/WeaponTemplates.js","templates/calc/view/EmblemCalcRowView.js","viewComponents/checkbox/UCheckbox.js","viewComponents/dropdown/BaseDropdown.js","viewComponents/popover/StaticPopoverRenderer.js","resources/boostStuff/bobbleHeads|sync|/.webp","resources/boostStuff/drink|sync|/.webp","resources/boostStuff/food|sync|/.webp","resources/boostStuff/magazines|sync|/.webp","resources/boostStuff/others|sync|/.webp","resources/boostStuff/psycho|sync|/.webp","resources/boostStuff/serums|sync|/.webp","resources/forReadme/Tests|sync|/.json$","resources/forReadme/Tests|sync|/.webp$","resources/perks|sync|/.webp","resources/weaponTemplates|sync|/.json$","resources/weapon_icons|sync|/.webp$"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport AdditionalDamage from \"./main/AdditionalDamage\";\r\nimport MainCardsDisplay from \"./main/MainCardsDisplay\";\r\nimport ToastSpecs from \"./main/ToastSpecs\";\r\nimport CreaturesView from \"./creature/CreaturesView\";\r\nimport WeaponFactory from './damage/weapon/WeaponFactory';\r\nimport { calcDamage, graphDamage } from \"./helpers/Calc\";\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { defaultExtraDamage } from './entities/ExtraDamageOptions';\r\nimport { defaultCreatures, buildCreatureNames } from './entities/ECreatures';\r\nimport { defaultBoosts } from './entities/EBoosts';\r\nimport { defaultPlayerStats } from './entities/EPlayerStats';\r\nimport { defaultPlayer } from './entities/EPlayer';\r\nimport { defaultAdds } from './entities/EAddDamages';\r\nimport { defaultWeaponSpecs } from './entities/EWeaponSpecs';\r\nimport WeaponSpecs from './main/WeaponSpecs';\r\nimport DamageBoosts from './main/DamageBoosts';\r\nimport Snapshots from './main/Snapshots';\r\nimport BoostStuff from './main/BoostStuff';\r\nimport WeaponTemplates from './templates/WeaponTemplates';\r\nimport ConsumablesBuilder from './boostStuff/ConsumablesBuilder';\r\nimport RaceView from './race/view/RaceView';\r\nimport PerkCardView from './perkCard/view/PerkCardView';\r\nimport ConsumablesView from './consumables/view/ConsumablesView';\r\nimport LoadingLine from './main/LoadingLine';\r\nimport Global from './helpers/Global';\r\n\r\n\r\nconst defPlayerStats = defaultPlayerStats();\r\n\r\nconst defPlayer = defaultPlayer();\r\n\r\nfunction getDefaultGraphData() {\r\n    let xValues = [];\r\n    let yValues = [];\r\n    const maxRes = 1000;\r\n    const coef = maxRes / Global.points;\r\n    for (let i = 0; i <= Global.points; i++) {\r\n        xValues.push(coef * i);\r\n        yValues.push(0);\r\n    }\r\n    return {\r\n        xValues: xValues,\r\n        yValues: yValues,\r\n    }\r\n}\r\n\r\nexport default function Main() {\r\n    console.log(\"Main\");\r\n\r\n    const [key, setKey] = useState('Main');\r\n\r\n    const [creatureChartNumber, setCreatureChartNumber] = useState(1);\r\n\r\n    const [loadedScreen, setLoadedScreen] = useState(false);\r\n\r\n    const [wSpec, setWSpec] = useState(defaultWeaponSpecs());\r\n\r\n    const [showStat, setShowStat] = useState(false);\r\n\r\n    const [graphValues, setGraphValues] = useState(getDefaultGraphData());\r\n\r\n    const [creatures, setCreatures] = useState(defaultCreatures());\r\n\r\n    const [boostDamage, setBoostDamage] = useState(defaultBoosts());\r\n\r\n    const [resultDamage, setResultDamage] = useState({});\r\n\r\n    const [extraDamage, setExtraDamage] = useState(defaultExtraDamage());\r\n\r\n    const [additionalDamages, setAdditionalDamages] = useState(defaultAdds());\r\n\r\n    const [stuffBoost, setStuffBoost] = useState(ConsumablesBuilder.getEmptyConsumableBoosts());\r\n\r\n    const [player, setPlayer] = useState(defPlayer);\r\n\r\n    const [playerStats, setPlayerStats] = useState(defPlayerStats);\r\n\r\n    const [magazines, setMagazines] = useState(ConsumablesBuilder.getMagazines());\r\n\r\n    const [bobbleHeads, setBobbleHeads] = useState(ConsumablesBuilder.getBobbleHeads());\r\n\r\n    const [food, setFood] = useState(ConsumablesBuilder.getFood());\r\n\r\n    const [drink, setDrink] = useState(ConsumablesBuilder.getDrink());\r\n\r\n    const [psycho, setPsycho] = useState(ConsumablesBuilder.getPsycho());\r\n\r\n    const [serum, setSerum] = useState(ConsumablesBuilder.getSerum());\r\n\r\n    const [others, setOthers] = useState(ConsumablesBuilder.getOthers());\r\n\r\n    const [foodPref, setFoodPref] = useState({carnivore: false, herbivore: false});\r\n\r\n    const [consumableTouched, setConsumableTouched] = useState([]);\r\n\r\n    // Refs\r\n    const creatureNamesRef = useRef(buildCreatureNames(creatures));\r\n\r\n    const applySnapshotRef = useRef(null);\r\n\r\n    const wSpecRef = useRef(null);\r\n\r\n    const resultDamageRef = useRef(null);\r\n\r\n    const playerRef = useRef(null);\r\n\r\n    const playerStatsRef = useRef(null);\r\n\r\n    const stuffBoostRef = useRef(null);\r\n\r\n    const boostDamageRef = useRef(null);\r\n\r\n    const extraDamageRef = useRef(null);\r\n\r\n    const additionalDamagesRef = useRef(null);\r\n\r\n    const creaturesRef = useRef(null);\r\n\r\n    const showStatRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n            const weaponFactory = new WeaponFactory(wSpec, boostDamage, extraDamage, additionalDamages, stuffBoost, playerStats);\r\n            setGraphValues(graphDamage(creatures[\"creature\" + creatureChartNumber], weaponFactory));\r\n            setResultDamage(calcDamage(weaponFactory, creatures));\r\n            setLoadedScreen(true);\r\n    }, [boostDamage, wSpec, extraDamage, creatures, additionalDamages, stuffBoost, consumableTouched, player, playerStats]);\r\n\r\n    useEffect(() => {\r\n        const weaponFactory = new WeaponFactory(wSpec, boostDamage, extraDamage, additionalDamages, stuffBoost, playerStats);\r\n        setGraphValues(graphDamage(creatures[\"creature\" + creatureChartNumber], weaponFactory));\r\n    }, [creatures, creatureChartNumber]);\r\n\r\n    const applySnapshot = (cBoostDamage, cWSpec, cExtraDamage, cAdditionalDamages, cCreatures, cPlayer, cPlayerStats, cStuff) => {\r\n        setPlayer(cPlayer);\r\n        setPlayerStats(cPlayerStats);\r\n        setBoostDamage(cBoostDamage);\r\n        setWSpec(cWSpec);\r\n        setExtraDamage(cExtraDamage);\r\n        setAdditionalDamages(cAdditionalDamages);\r\n        const [foodPref, allStuffBoosts, consumables] = ConsumablesBuilder.buildFromList(cStuff, cPlayer);\r\n        ConsumablesBuilder.setConsumableItems(consumables, setMagazines, setBobbleHeads, setFood, setDrink, setPsycho, setSerum, setOthers);\r\n        setFoodPref(foodPref);\r\n        setStuffBoost(allStuffBoosts);\r\n        setCreatures({...cCreatures});\r\n    }\r\n    applySnapshotRef.current = applySnapshot;\r\n    wSpecRef.current = wSpec;\r\n    resultDamageRef.current = resultDamage;\r\n    playerRef.current = player;\r\n    playerStatsRef.current = playerStats;\r\n    stuffBoostRef.current = stuffBoost;\r\n    boostDamageRef.current = boostDamage;\r\n    extraDamageRef.current = extraDamage;\r\n    additionalDamagesRef.current = additionalDamages;\r\n    creaturesRef.current = creatures;\r\n    creatureNamesRef.current = buildCreatureNames(creatures);\r\n    showStatRef.current = showStat;\r\n    if (!loadedScreen) {\r\n        return (<LoadingLine text=\"Please Wait...\"/>);\r\n    }\r\n    const b = (\r\n        <div>\r\n            <MainCardsDisplay creatureNamesRef={creatureNamesRef} wSpecRef={wSpecRef} graphValues={graphValues} resultDamage={resultDamage} creatures={creatures} boostDamageRef={boostDamageRef} setBoostDamage={setBoostDamage} setCreatures={setCreatures} creatureChartNumber={creatureChartNumber} setCreatureChartNumber={setCreatureChartNumber} extraDamage={extraDamage} setExtraDamage={setExtraDamage}></MainCardsDisplay>\r\n            <ToastSpecs creatures={creatures} legendary={wSpec.legendary} iconName={wSpec.iconName} weaponName={wSpec.defaultName} graphValues={graphValues} resultDamage={resultDamage} showStat={showStat} setShowStat={setShowStat} creatureChartNumber={creatureChartNumber} setCreatureChartNumber={setCreatureChartNumber} extraDamage={extraDamage} setExtraDamage={setExtraDamage} boostDamageRef={boostDamageRef} setBoostDamage={setBoostDamage}></ToastSpecs>\r\n            <Tabs\r\n                id=\"tab\"\r\n                activeKey={key}\r\n                onSelect={(k) => setKey(k)}\r\n                className=\"mt-1 mb-3 ms-1 me-1\">\r\n                <Tab eventKey=\"Main\" title={<span className=\"tab-text\">Main</span>}>\r\n                    <Accordion className=\"accordion\">\r\n                        <WeaponSpecs wSpec={wSpec} setWSpec={setWSpec} showStatRef={showStatRef} setShowStat={setShowStat} health={player.health.value}></WeaponSpecs>\r\n                        <DamageBoosts player={player} setPlayer={setPlayer} extraDamage={extraDamage} boostDamage={boostDamage} setBoostDamage={setBoostDamage} showStatRef={showStatRef} setShowStat={setShowStat}></DamageBoosts>\r\n                        <AdditionalDamage additionalDamages={additionalDamages} setAdditionalDamages={setAdditionalDamages} showStatRef={showStatRef} setShowStat={setShowStat}></AdditionalDamage>\r\n                        <CreaturesView creatureNamesRef={creatureNamesRef} creatures={creatures} setCreatures={setCreatures} resultDamage={resultDamage} extraDamage={extraDamage} setExtraDamage={setExtraDamage} boostDamageRef={boostDamageRef} setBoostDamage={setBoostDamage}></CreaturesView>\r\n                        <RaceView />\r\n                        <ConsumablesView />\r\n                        <PerkCardView />\r\n                    </Accordion>\r\n                </Tab>\r\n                <Tab eventKey=\"Templates\" title={<span className=\"tab-text\">Weapons</span>}>\r\n                    <WeaponTemplates creatureNamesRef={creatureNamesRef} setWSpec={setWSpec} setBoostDamage={setBoostDamage} setPlayer={setPlayer} setExtraDamage={setExtraDamage} setFoodPref={setFoodPref} setStuffBoost={setStuffBoost} setAdditionalDamages={setAdditionalDamages} setPlayerStats={setPlayerStats} setMagazines={setMagazines} setBobbleHeads={setBobbleHeads} setFood={setFood} setDrink={setDrink} setPsycho={setPsycho} setSerum={setSerum} setOthers={setOthers}></WeaponTemplates>\r\n                </Tab>\r\n                <Tab eventKey=\"Boosts\" title={<span className=\"tab-text\">Boosts</span>}>\r\n                    <BoostStuff foodPref={foodPref} setFoodPref={setFoodPref} magazines={magazines} setMagazines={setMagazines} bobbleHeads={bobbleHeads} setBobbleHeads={setBobbleHeads} food={food} setFood={setFood} drink={drink} setDrink={setDrink} psycho={psycho} setPsycho={setPsycho} serum={serum} setSerum={setSerum} others={others} setOthers={setOthers} player={player} setPlayer={setPlayer} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} showStat={showStat} setShowStat={setShowStat} boostDamage={boostDamage} setBoostDamage={setBoostDamage} playerStats={playerStats} setPlayerStats={setPlayerStats} setConsumableTouched={setConsumableTouched}></BoostStuff>\r\n                </Tab>\r\n                <Tab eventKey=\"Snapshots\" title={<span className=\"tab-text\">Snapshots</span>}>\r\n                     <Snapshots playerRef={playerRef} playerStatsRef={playerStatsRef} stuffBoostRef={stuffBoostRef} boostDamageRef={boostDamageRef} wSpecRef={wSpecRef} extraDamageRef={extraDamageRef} additionalDamagesRef={additionalDamagesRef} creaturesRef={creaturesRef} resultDamageRef={resultDamageRef} applySnapshotRef={applySnapshotRef}></Snapshots>\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    );\r\n    return b;\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { Slider } from 'antd';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction buildPopover(text) {\r\n    return (\r\n        <Popover className=\"popover-adjustable\">\r\n            <Popover.Header as=\"h3\"><strong>Why?</strong></Popover.Header>\r\n            <Popover.Body>\r\n                {text}\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nfunction qa(text) {\r\n    if (text === '' || text === null) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={buildPopover(text)}>\r\n            <Button variant=\"danger\">?</Button>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nfunction addIconName(name) {\r\n    switch(name) {\r\n        case \"Ballistic BDB\":\r\n            return \"💥 BDB\";\r\n        case \"Energy BDB\":\r\n            return \"⚡ BDB\";\r\n        case \"Fire BDB\":\r\n            return \"🔥 BDB\";\r\n        case \"Poison BDB\":\r\n            return \"☣️ BDB\";\r\n        case \"Cold BDB\":\r\n            return \"❄️ BDB\";\r\n        case \"Rad BDB\":\r\n            return \"☢️ BDB\";\r\n        case \"Damage To Creature\":\r\n            return \"🐵 Damage\";\r\n        case \"Sneak\":\r\n            return \"🐍 Sneak\";\r\n        case \"Crit\":\r\n            return \"☠️ Crit\";\r\n        case \"Strength\":\r\n            return \"💪 Strength\";\r\n        case \"Swift\":\r\n            return \"💨 Swift\";\r\n        case \"Health\":\r\n            return \"❤️ Health\";\r\n        default:\r\n            return name;\r\n    }\r\n}\r\n\r\nfunction ADRow({additionalDamage, updateAdditionalDamages, marks, text=''}) {\r\n    const [redraw, setRedraw] = useState(false);\r\n    const width = (text === '' || text === null) ? '8.9rem' : '7rem';\r\n    function slideChanged(e) {\r\n        setRedraw(!redraw);\r\n        additionalDamage.value = e;\r\n    }\r\n\r\n    function onAfterChange(e) {\r\n        updateAdditionalDamages();\r\n    }\r\n\r\n    function onChange(e) {\r\n        additionalDamage.is_used = e.target.checked;\r\n        updateAdditionalDamages();\r\n    }\r\n\r\n    let isUsed = false;\r\n    let disabled = false;\r\n    if (typeof additionalDamage.is_used === \"undefined\") {\r\n        isUsed = true;\r\n        disabled = true;\r\n    } else {\r\n        isUsed = additionalDamage.is_used;\r\n    }\r\n    return (\r\n        <Row>\r\n            <Card className=\"mb-2 pt-2 pb-2 ps-3 pe-3\">\r\n                <Col>\r\n                    <InputGroup className=\"mb-1\">\r\n                        <InputGroup.Text style={{ width: '2.5rem' }} >\r\n                            <UCheckbox onChange={onChange} checked={isUsed} disabled={disabled} checkBgColor={'#00b6ff'}></UCheckbox>\r\n                        </InputGroup.Text>\r\n                        <InputGroup.Text style={{ width: width }}>\r\n                            <strong>{addIconName(additionalDamage.name)}</strong>\r\n                        </InputGroup.Text>\r\n                        {qa(text)}\r\n                        <InputGroup.Text style={{width: '4.6rem'}}>\r\n                            <div className=\"badge bg-info\" style={{width: '3rem'}}>{additionalDamage.value}</div>\r\n                        </InputGroup.Text>\r\n                    </InputGroup>\r\n                    <Slider onChange={slideChanged} onAfterChange={onAfterChange} tooltip={{ open: false }} marks={marks.marks} min={marks.min} max={marks.max} step={marks.step} value={additionalDamage.value} />\r\n                </Col>\r\n            </Card>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ADRow;","import magazines from '../resources/boostStuff/magazines/magazines.json';\r\nimport bobbleHeads from '../resources/boostStuff/bobbleHeads/bobbleHeads.json';\r\nimport food from '../resources/boostStuff/food/food.json';\r\nimport drink from '../resources/boostStuff/drink/drink.json';\r\nimport psycho from '../resources/boostStuff/psycho/psycho.json';\r\nimport serum from '../resources/boostStuff/serums/serum.json';\r\nimport others from '../resources/boostStuff/others/others.json';\r\nimport { prepareItems, loadBoosts } from '../entities/EStuffBoost';\r\nimport { getMagazine, getBobbleHead, getFood, getDrink, getPsycho, getSerum, getOther } from '../helpers/BoostStuffProvider';\r\n\r\n\r\nexport default class ConsumablesBuilder {\r\n\r\n    static getImagePathById(cId) {\r\n        const type = cId.substring(cId.lastIndexOf(\"_\") + 1);\r\n        let jsonItems = null;\r\n        let getter = null;\r\n        switch(type) {\r\n            case 'magazine':\r\n                jsonItems = magazines;\r\n                getter = getMagazine;\r\n                break;\r\n            case 'bobble':\r\n                jsonItems = bobbleHeads;\r\n                getter = getBobbleHead;\r\n                break;\r\n            case 'food':\r\n                jsonItems = food;\r\n                getter = getFood;\r\n                break;\r\n            case 'drink':\r\n                jsonItems = drink;\r\n                getter = getDrink;\r\n                break;\r\n            case 'psycho':\r\n                jsonItems = psycho;\r\n                getter = getPsycho;\r\n                break;\r\n            case 'serum':\r\n                jsonItems = serum;\r\n                getter = getSerum;\r\n                break;\r\n             case 'other':\r\n                jsonItems = others\r\n                getter = getOther;\r\n                break;\r\n             default:\r\n                return \"\";\r\n        }\r\n        for (let i = 0; i < jsonItems.length; i++) {\r\n            const item = jsonItems[i];\r\n            if (item.id === cId) {\r\n                return getter(item.imName);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    static getMagazineItems(wType, wName, tags, crit, team, scoped, creatureTags) {\r\n        const result = [];\r\n        const combination = [];\r\n\r\n        // Creatures\r\n        if (creatureTags.includes(\"mirelurk\")) {\r\n            combination.push(\"attack_of_the_fishmen_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"ghoul\")) {\r\n            combination.push(\"curse_of_the_burned_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"supermutant\")) {\r\n            combination.push(\"rise_of_the_mutants_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"animal\")) {\r\n            combination.push(\"home_in_the_hills_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"scorched\")) {\r\n            combination.push(\"demon_slaves_demon_sands_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"robot\")) {\r\n            combination.push(\"the_future_of_hunting_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"yaoguai\")) {\r\n            combination.push(\"bear_proofing_your_campsite_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"liberator\")) {\r\n            combination.push(\"guide_to_hunting_commies_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"wendigo\")) {\r\n            combination.push(\"wendigo_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"mothman\")) {\r\n            combination.push(\"mothman_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"graftonmonster\")) {\r\n            combination.push(\"grafton_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"snallygaster\")) {\r\n            combination.push(\"snallygaster_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"flatwoodsmonster\")) {\r\n            combination.push(\"flatwoods_alien_magazine\");\r\n        }\r\n\r\n        if (wName === \"Alien Blaster\") {\r\n            combination.push(\"invasion_of_the_zetans_magazine\");\r\n        } else if (wName === \"Cryolator\") {\r\n            combination.push(\"when_apes_go_bananas_magazine\");\r\n        }\r\n\r\n        // TODO: Does unarmed really work here?\r\n        if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n            combination.push(\"blood_on_the_harp_magazine\");\r\n            if (crit) {\r\n                combination.push(\"corsair_queen_magazine\");\r\n            }\r\n        } else {\r\n            if (scoped) {\r\n                combination.push(\"the_starlet_sniper_magazine\");\r\n            } else {\r\n                combination.push(\"take_aim_army_style_magazine\");\r\n            }\r\n        }\r\n        if (tags.includes(\"Knives\") || wType === \"Unarmed\") {\r\n            combination.push(\"camouflage_special_magazine\");\r\n        }\r\n        if (team) {\r\n            combination.push(\"nuke_the_man_magazine\");\r\n        }\r\n        if (tags.includes(\"Plasma\")) {\r\n            combination.push(\"tomorrow_technology_magazine\");\r\n        }\r\n        if (wType === \"Heavy\") {\r\n            combination.push(\"giant_super_weapons_magazine\");\r\n        }\r\n        if (crit) {\r\n            if (tags.includes(\"Laser\")) {\r\n                combination.push(\"acceptable_overkill_magazine\");\r\n            }\r\n            if (tags.includes(\"Ballistic\") && wType !== \"Heavy\" && wType !== \"Bow\") {\r\n                combination.push(\"little_guns_for_little_ladies_magazine\");\r\n            }\r\n            if (tags.includes(\"Plasma\")) {\r\n                combination.push(\"plasma_the_weapon_of_tomorrow_magazine\");\r\n            }\r\n            if (tags.includes(\"Energy\")) {\r\n                combination.push(\"us_army_goes_to_space_magazine\");\r\n            }\r\n            if (wType === \"Heavy\") {\r\n                combination.push(\"future_of_warfare_magazine\");\r\n            }\r\n            combination.push(\"rockobot_takes_the_nation_by_storm_magazine\");\r\n        }\r\n        result.push(combination);\r\n        return result;\r\n    }\r\n\r\n    static getOtherItems(hasPhysicalDamage) {\r\n        const result = [];\r\n        const combination = [];\r\n        if (hasPhysicalDamage) {\r\n            combination.push(\"syringer_other\");\r\n        }\r\n        if (combination.length > 0) {\r\n            result.push(combination);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getBobbleHeadItems(wType, tags) {\r\n        const result = [];\r\n        const combination = [];\r\n\r\n        if (wType === \"Heavy\") {\r\n            combination.push(\"big_guns_bobble\");\r\n        } else if (wType === \"Unarmed\") {\r\n            combination.push(\"unarmed_bobble\");\r\n            combination.push(\"strength_bobble\");\r\n        } else if (wType === \"Melee\") { // Does Unarmed work here?\r\n            combination.push(\"melee_bobble\");\r\n            combination.push(\"strength_bobble\");\r\n        }\r\n        if (tags.includes(\"Energy\")) {\r\n            combination.push(\"energy_bobble\");\r\n        }\r\n        if (tags.includes(\"Explosive\")) {\r\n            combination.push(\"explosive_bobble\");\r\n        }\r\n        if (tags.includes(\"FusionCore\")) {\r\n            combination.push(\"repair_bobble\");\r\n        }\r\n        if (tags.includes(\"Ballistic\") && wType !== \"Heavy\" && wType !== \"Bow\") {\r\n            combination.push(\"small_guns_bobble\");\r\n        }\r\n        if (combination.length > 0) {\r\n            result.push(combination);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getDrinkItems(wType, tags, crit) {\r\n        const result = [];\r\n        const combination = [];\r\n        if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n            combination.push(\"whiskey_drink\");\r\n            if (wType === \"Melee\") {\r\n                combination.push(\"gulpershine_vintage_drink\");\r\n            } else {\r\n                combination.push(\"sugar_free_nukashine_drink\"); // Possibly gulpershine will also work as unarmed is a melee\r\n            }\r\n        }\r\n        if (crit) {\r\n            combination.push(\"sweetmutfruit_drink\");\r\n        }\r\n        if (tags.includes(\"Ballistic\")) {\r\n            combination.push(\"ballistic_bock_drink\");\r\n        }\r\n        if (tags.includes(\"Energy\")) {\r\n            combination.push(\"high_voltage_hefe_drink\");\r\n        }\r\n        if (combination.length > 0) {\r\n            result.push(combination);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getFoodItems(wType, crit) {\r\n        const result = [];\r\n        const combination = [];\r\n        if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n            combination.push(\"tasty_mutant_hound_stew_food\");\r\n            combination.push(\"deathclaw_wellington_food\");\r\n            combination.push(\"spiked_venison_tato_stew_food\");\r\n        } else if (crit) {\r\n            combination.push(\"blight_soup_food\");\r\n        } else {\r\n            combination.push(\"spiked_venison_tato_stew_food\");\r\n        }\r\n        if (combination.length > 0) {\r\n            result.push(combination);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getSerumItems(wType, crit, lowHP, team, food) {\r\n        const result = [];\r\n        const combination1 = [];\r\n        const combination2 = [];\r\n        result.push(combination1);\r\n        ConsumablesBuilder.getSerumItemsBase(wType, false, lowHP, team, combination1);\r\n        if ((wType === \"Melee\" || wType === \"Unarmed\") && food) {\r\n            result.push(combination2);\r\n            ConsumablesBuilder.getSerumItemsBase(wType, false, lowHP, team, combination2);\r\n            ConsumablesBuilder.getSerumItemsAdditional(true, combination1);\r\n            ConsumablesBuilder.getSerumItemsAdditional(false, combination2);\r\n        }\r\n        if (crit && food) {\r\n            const combination3 = [];\r\n            const combination4 = [];\r\n            const combination5 = [];\r\n            result.push(combination3);\r\n            ConsumablesBuilder.getSerumItemsBase(wType, true, lowHP, team, combination3);\r\n            ConsumablesBuilder.getSerumItemsAdditional(false, combination3);\r\n            if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n                result.push(combination4);\r\n                ConsumablesBuilder.getSerumItemsBase(wType, true, lowHP, team, combination4);\r\n                ConsumablesBuilder.getSerumItemsAdditional(true, combination4);\r\n\r\n                // no eagle\r\n                result.push(combination5);\r\n                ConsumablesBuilder.getSerumItemsBase(wType, true, lowHP, team, combination5, true);\r\n                ConsumablesBuilder.getSerumItemsAdditional(true, combination5);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getSerumItemsBase(wType, crit, lowHP, team, combination, noEagle=false) {\r\n        if (lowHP) {\r\n            combination.push(\"adrenal_reaction_serum\");\r\n        }\r\n        if (wType === \"Melee\") {\r\n            combination.push(\"twisted_muscles_serum\");\r\n            combination.push(\"empath_serum\");\r\n        }\r\n        if (wType === \"Unarmed\") {\r\n            combination.push(\"twisted_muscles_serum\");\r\n            combination.push(\"talons_serum\");\r\n            combination.push(\"empath_serum\");\r\n        }\r\n        if (wType !== \"Melee\" && wType !== \"Unarmed\") {\r\n            combination.push(\"speed_demon_serum\");\r\n        }\r\n\r\n        // For the calculator it does not matter to have this mutation for crit, but technically it's important for (Luck)\r\n        if (team && (wType === \"Melee\" || wType === \"Unarmed\" || crit)) {\r\n            combination.push(\"herd_mentality_serum\");\r\n        }\r\n        if (crit && !noEagle) {\r\n            combination.push(\"eagle_eyes_serum\");\r\n        }\r\n    }\r\n\r\n    static getSerumItemsAdditional(isCarnivore, combination) {\r\n        if (isCarnivore) {\r\n            combination.push(\"carnivore_serum\");\r\n        } else {\r\n            combination.push(\"herbivore_serum\");\r\n        }\r\n    }\r\n\r\n    // Nuclear Don's blend is not included (As it is very rare and surpasses any others anyway).\r\n    // Super Chem MK1 in not included (Fury is used instead as it gives the same effect with Psychobuff)\r\n    static getChemicalItems(wType, crit, sneak) {\r\n        const result = [];\r\n        const combination = [];\r\n        result.push(combination);\r\n        combination.push(\"psychobuff_psycho\");\r\n        if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n            combination.push(\"fury_psycho\");\r\n        }\r\n        if (crit) {\r\n            combination.push(\"overdrive_psycho\");\r\n        }\r\n        if (sneak) {\r\n            combination.push(\"calmex_psycho\");\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static prepare(consumableObjs, consumableNames=null) {\r\n        prepareItems(consumableObjs[\"Magazines\"], consumableNames);\r\n        prepareItems(consumableObjs[\"BobbleHeads\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Food\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Drink\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Psycho\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Serum\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Others\"], consumableNames);\r\n    }\r\n\r\n    static getEmptyConsumableBoosts() {\r\n        return {\r\n            creature: new Map(),\r\n            weapon: new Map(),\r\n        };\r\n    }\r\n\r\n    static getFood() {\r\n        return JSON.parse(JSON.stringify(food));\r\n    }\r\n\r\n    static getDrink() {\r\n        return JSON.parse(JSON.stringify(drink));\r\n    }\r\n\r\n    static getPsycho() {\r\n        return JSON.parse(JSON.stringify(psycho));\r\n    }\r\n\r\n    static getSerum() {\r\n        return JSON.parse(JSON.stringify(serum));\r\n    }\r\n\r\n    static getOthers() {\r\n        return JSON.parse(JSON.stringify(others));\r\n    }\r\n\r\n    static getMagazines() {\r\n        return JSON.parse(JSON.stringify(magazines));\r\n    }\r\n\r\n    static getBobbleHeads() {\r\n        return JSON.parse(JSON.stringify(bobbleHeads));\r\n    }\r\n\r\n    static buildFromList(consumablesList, player) {\r\n        const consumablesSet = new Set(consumablesList);\r\n        const foodPref = {carnivore: consumablesSet.has(\"carnivore_serum\"), herbivore: consumablesSet.has(\"herbivore_serum\")};\r\n        const consumables = {};\r\n        consumables[\"Magazines\"] = ConsumablesBuilder.getMagazines();\r\n        consumables[\"BobbleHeads\"] = ConsumablesBuilder.getBobbleHeads();\r\n        consumables[\"Food\"] = ConsumablesBuilder.getFood();\r\n        consumables[\"Drink\"] = ConsumablesBuilder.getDrink();\r\n        consumables[\"Psycho\"] = ConsumablesBuilder.getPsycho();\r\n        consumables[\"Serum\"] = ConsumablesBuilder.getSerum();\r\n        consumables[\"Others\"] = ConsumablesBuilder.getOthers();\r\n        ConsumablesBuilder.prepare(consumables, consumablesSet);\r\n        const consumableBoosts = loadBoosts(consumables[\"Magazines\"], consumables[\"BobbleHeads\"],consumables[\"Food\"],\r\n        consumables[\"Drink\"], consumables[\"Psycho\"], consumables[\"Serum\"], consumables[\"Others\"], foodPref, player);\r\n        return [foodPref, consumableBoosts, consumables];\r\n    }\r\n\r\n    static setConsumableItems(consumables, setMagazines, setBobbleHeads, setFood, setDrink, setPsycho, setSerum, setOthers) {\r\n        setMagazines(consumables[\"Magazines\"]);\r\n        setBobbleHeads(consumables[\"BobbleHeads\"]);\r\n        setFood(consumables[\"Food\"]);\r\n        setDrink(consumables[\"Drink\"]);\r\n        setPsycho(consumables[\"Psycho\"]);\r\n        setSerum(consumables[\"Serum\"]);\r\n        setOthers(consumables[\"Others\"]);\r\n    }\r\n}","const objT = \"ObjectType\";\r\nconst chT = \"ChemType\";\r\nconst dT = \"DrinkType\";\r\nconst ingT = \"IngredientType\";\r\nconst meT = \"MealType\";\r\nconst boT = \"BobbleheadType\";\r\nconst plT = \"PlantType\";\r\nconst mT = \"MagazineType\";\r\nconst fT = \"FoodType\";\r\nconst itT = \"ItemType\";\r\nconst alT = \"AlcoholType\";\r\n\r\nconst dupl = \"DUPLICATE000\";\r\n\r\nconst cTypes = {\r\n    \"Chemical\": [chT, true], // true / false - prefix / suffix\r\n    \"Drink\": [dT, true],\r\n    \"Bobblehead\": [boT, true],\r\n    \"Magazine\": [mT, true],\r\n    \"Food\": [fT, true],\r\n    \"Item\": [itT, true],\r\n    \"Alcohol\": [alT, false],\r\n}\r\n\r\nconst tagPrefixes = [objT, ingT, meT, chT, dT, boT, plT, mT, fT, itT];\r\nconst tagEndings = [dupl, alT];\r\n\r\n\r\nexport default class ConsumableTools {\r\n\r\n    static getTagName(tag) {\r\n        if (typeof tag === typeof '') {\r\n            return tag;\r\n        }\r\n        if (tag.full && tag.full.length > 0) {\r\n            return tag.full;\r\n        }\r\n        return tag.name;\r\n    }\r\n\r\n    static getItemType(item) {\r\n        for (let i = 0; i < item.tags.length; i++) {\r\n            const tag = ConsumableTools.getTagName(item.tags[i]);\r\n            if (tag.startsWith(objT)) {\r\n                return tag.slice(objT.length, tag.length);\r\n            }\r\n        }\r\n        for (let i = 0; i < item.tags.length; i++) {\r\n            const tag = ConsumableTools.getTagName(item.tags[i]);\r\n            for (const name in cTypes) {\r\n                const data = cTypes[name];\r\n                const prefix = data[0];\r\n                const isPrefix = data[1];\r\n                if (isPrefix) {\r\n                    if (tag.startsWith(prefix)) {\r\n                        return name;\r\n                    }\r\n                } else {\r\n                    if (tag.endsWith(prefix)) {\r\n                        return name;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    static removeTagPrefix(tagName) {\r\n        for (let i = 0; i < tagPrefixes.length; i++) {\r\n            const tagPrefix = tagPrefixes[i];\r\n            if (tagName.startsWith(tagPrefix)) {\r\n                return tagName.slice(tagPrefix.length, tagName.length);\r\n            }\r\n        }\r\n        return tagName;\r\n    }\r\n\r\n    static removeTagEndings(tagName) {\r\n        for (let i = 0; i < tagEndings.length; i++) {\r\n            const tagEnding = tagEndings[i];\r\n            if (tagName.endsWith(tagEnding)) {\r\n                return tagName.slice(0, tagName.length - tagEnding.length);\r\n            }\r\n        }\r\n        return tagName;\r\n    }\r\n\r\n    static removePrefixSuffix(tagName) {\r\n        return ConsumableTools.removeTagEndings(ConsumableTools.removeTagPrefix(tagName));\r\n    }\r\n\r\n    static getItemColor(type) {\r\n        switch(type) {\r\n            case 'Bobblehead':\r\n                return '#b6d9ff';\r\n            case 'Chem':\r\n                return '#f5cfff';\r\n            case 'Magazine':\r\n                return '#ffdb95';\r\n            case 'Serum':\r\n                return '#b4ffbf';\r\n            case 'BloodPack':\r\n                return '#ff3779';\r\n            case 'Drink':\r\n                return '#daf2ff';\r\n            case 'Food':\r\n                return '#ffebce';\r\n            default:\r\n                return '#f4f4f4';\r\n        }\r\n    }\r\n\r\n    static getItemColorDark(type) {\r\n        switch(type) {\r\n            case 'Bobblehead':\r\n                return '#7cbbff';\r\n            case 'Chem':\r\n                return '#be9ac8';\r\n            case 'Magazine':\r\n                return '#c4ab5f';\r\n            case 'Serum':\r\n                return '#6ab576';\r\n            case 'BloodPack':\r\n                return '#b58192';\r\n            case 'Drink':\r\n                return '#85a9bd';\r\n            case 'Food':\r\n                return '#c4ad8b';\r\n            default:\r\n                return '#9d9d9d';\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import Button from 'react-bootstrap/Button';\r\nimport ConsumableTools from '../ConsumableTools';\r\nimport { leftRight } from '../../helpers/RowBuilder';\r\n\r\n\r\nfunction getEffectValues(tagData) {\r\n    const magnitudes = []\r\n    const durations = []\r\n    for (let i = 0; i < tagData.length; i++) {\r\n        magnitudes.push(tagData[i].magnitude);\r\n        durations.push(tagData[i].duration);\r\n    }\r\n    if (magnitudes.length === 0) {\r\n        return (<></>);\r\n    }\r\n    const name = tagData[0].name;\r\n    const max = Math.max(...magnitudes);\r\n    const min = Math.min(...magnitudes);\r\n    const maxText = (+max.toFixed(3)).toString();\r\n    const minText = (+min.toFixed(3)).toString();\r\n    const duration = Math.max(...durations);\r\n    const valueColor = '#fc5972';\r\n    let durationText;\r\n    if (duration > 60) {\r\n        durationText = \"(\" + duration / 60 + \"min)\";\r\n    } else {\r\n        durationText = (duration === 0) ? \"\" : \"(\" + duration + \"sec)\";\r\n    }\r\n\r\n    if (min === 0 && max === 0) {\r\n        return getEffectFilterInfo(name, durationText, \"\", valueColor);\r\n    } else if (min === max) {\r\n        return getEffectFilterInfo(name, durationText, maxText, valueColor);\r\n    }\r\n    return getEffectFilterInfo(name, durationText, minText + \" ‣‣‣ \" + maxText, valueColor);\r\n}\r\n\r\nfunction getEffectFilterInfo(resultName, durationText, max, valueColor) {\r\n    return leftRight(<div className=\"p-0\" style={{wordBreak: \"break-all\"}}>{resultName} {durationText}</div>, <span style={{color: valueColor}}>{max}</span>, 9, 3, \"m-0 p-1\");\r\n}\r\n\r\nexport default function ConsumableButton(props) {\r\n    const typeColor = ConsumableTools.getItemColor(props.type);\r\n    let effectValues = null;\r\n    if (props.effectTag && props.effectTag !== \"None\") {\r\n        effectValues = getEffectValues(props.item.effectTagsData[props.effectTag]);\r\n    }\r\n    const textBgColor = ConsumableTools.getItemColorDark(props.type);\r\n    const textStyle = (effectValues) ? {borderRadius: '1px', backgroundColor: textBgColor} : {};\r\n    let itemType = props.type;\r\n    if (!itemType || itemType === \"Chemical\") {\r\n        itemType = \"Other\";\r\n    }\r\n    return (\r\n        <div>\r\n            <Button id={props.item['id']} className=\"lite-shadow\" variant=\"blue-white-border\" style={{width: '100%', margin: '0.1rem', paddingTop: '0.2rem', paddingBottom: '0.1rem', padding: \"0.3rem\"}} onClick={props.onClick}>\r\n                <div className=\"d-flex justify-content-start p-1\" style={{fontSize: '0.9rem', backgroundColor: '#f4f4f4', borderRadius: '0.1rem'}}>\r\n                    <b>{props.item['full']}</b>\r\n                </div>\r\n                <div className=\"p-0\" style={textStyle}>\r\n                    <b className=\"p-0 bg-text-shadow\">{effectValues}</b>\r\n                </div>\r\n                <div className=\"d-flex pt-2 justify-content-end\">\r\n                    <div className=\"badge bg-lite-shadow2\" style={{backgroundColor: typeColor}}>{itemType}</div>\r\n                </div>\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import consItems from '../../resources/consumables.json';\r\nimport Container from 'react-bootstrap/Container';\r\nimport ConsumableButton from './ConsumableButton';\r\nimport ConsumableTools from '../ConsumableTools';\r\nimport { memo, useState } from 'react';\r\nimport { Pagination, FloatButton } from 'antd';\r\n\r\n\r\nfunction nameComparator(item1, item2) {\r\n    const name1 = item1['full'];\r\n    const name2 = item2['full'];\r\n    return name1.localeCompare(name2)\r\n}\r\n\r\nexport const sortItems = consItems.sort(nameComparator);\r\n\r\nexport function getItem(id) {\r\n    for (let i = 0; i < sortItems.length; i++) {\r\n        const item = sortItems[i];\r\n        if (item.id === id) {\r\n            return item;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nconst types = [\"Chem\", \"Food\", \"Magazine\", \"Serum\", \"Drink\", \"Bobblehead\", \"Stimpak\", \"BloodPack\"];\r\n\r\nconst ConsumableItems = memo(function ConsumableItems(props) {\r\n    console.log(\"Consumable Items\");\r\n    const [pageSize, setPageSize] = useState(20);\r\n    function onItemClick(e) {\r\n        const id = e.currentTarget.id;\r\n        if (!props.currentItem) {\r\n            props.setShowToast(true);\r\n        } else {\r\n            props.setShowToast(!(props.currentItem.id === id && props.showToast));\r\n        }\r\n        props.setCurrentItem(getItem(id));\r\n    }\r\n    const items = [];\r\n    const needTypeFilter = props.filterType !== 'All';\r\n    for (let i = 0; i < sortItems.length; i++) {\r\n        const item = sortItems[i];\r\n        const type = ConsumableTools.getItemType(item);\r\n        if (needTypeFilter) {\r\n            if (props.filterType === \"Other\" && types.includes(type)) {\r\n                continue;\r\n            } else if (props.filterType !== \"Other\" && props.filterType !== type) {\r\n                continue;\r\n            }\r\n        }\r\n        if (props.filterName && props.filterName.length > 0) {\r\n            if (!item.full.toLowerCase().includes(props.filterName.toLowerCase())) {\r\n                continue;\r\n            }\r\n        }\r\n        if (props.filterEffect && props.filterEffect !== 'None') {\r\n            if (!item.effectTags.includes(props.filterEffect)) {\r\n                continue;\r\n            }\r\n        }\r\n        items.push(\r\n            <ConsumableButton key={item.id} index={i} item={item} type={type} effectTag={props.filterEffect} onClick={onItemClick} />\r\n        );\r\n    }\r\n    function onPageChanged(page, pageSize) {\r\n        props.setCurrentPage(page);\r\n        setPageSize(pageSize);\r\n    }\r\n    const paginated = [];\r\n    const start = (props.currentPage - 1) * pageSize;\r\n    const end = start + pageSize;\r\n    for (let i = start; i < end; i++) {\r\n        paginated.push(items[i]);\r\n    }\r\n    return (\r\n        <Container>\r\n            <Pagination className=\"pt-1 pb-3\" align=\"center\" current={props.currentPage} defaultPageSize={pageSize} onChange={onPageChanged} total={items.length} />\r\n            {paginated}\r\n            <Pagination className=\"pt-3\" align=\"center\" current={props.currentPage} defaultPageSize={pageSize} onChange={onPageChanged} total={items.length} />\r\n            <FloatButton.BackTop style={{ right: 60 }} duration={100} visibilityHeight={2000} />\r\n        </Container>\r\n\r\n    );\r\n});\r\n\r\nexport default ConsumableItems;","import Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport StackEffectView from '../../helpers/views/StackEffectView';\r\n\r\n\r\nexport default function ConsumableToast(props) {\r\n    if (!props.showToast || !props.item) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <ToastContainer\r\n            className=\"p-3 position-fixed p-3\"\r\n            position={\"top-center\"}\r\n            role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\r\n            style={{ zIndex: 10 }}>\r\n            <Toast bg=\"light\" onClose={(e) => props.setShowToast(false)} show={props.showToast} animation={false}>\r\n                <Toast.Header className=\"pe-3\">\r\n                    <strong className=\"ms-2 mt-auto mb-auto p-auto me-auto\">{props.item['full']}</strong>\r\n                </Toast.Header>\r\n                <Toast.Body className={\"pt-1 pb-2 modal-scroll-60 p-2\"}>\r\n                    <StackEffectView item={props.item} />\r\n                </Toast.Body>\r\n            </Toast>\r\n        </ToastContainer>\r\n    );\r\n}","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport BaseDropdown from '../../viewComponents/dropdown/BaseDropdown';\r\nimport Form from 'react-bootstrap/Form';\r\nimport effectDictJSON from '../../resources/consumable_tags';\r\n\r\n\r\nconst typeDict = {All: 'All', Chem: 'Chem', Food: 'Food', Magazine: 'Magazine', Serum: 'Serum', Drink: 'Drink', Bobblehead: 'Bobblehead', Stimpak: 'Stimpak', BloodPack: 'BloodPack', Other: 'Other'};\r\n\r\nconst effectDict = effectDictJSON[0];\r\n\r\nexport default function ConsumableFilter(props) {\r\n    function nameChanged(e) {\r\n        props.setFilterName(e.target.value);\r\n        props.setCurrentPage(1);\r\n    }\r\n    function onSelectType(e) {\r\n        props.setFilterType(e);\r\n        props.setCurrentPage(1);\r\n    }\r\n    function onSelectEffect(e) {\r\n        props.setFilterEffect(e);\r\n        props.setCurrentPage(1);\r\n    }\r\n    return (\r\n        <div>\r\n            <InputGroup className=\"ps-1 pe-1 pb-2 flex-nowrap\">\r\n                <BaseDropdown title={\"Type\"} dict={typeDict} onSelect={onSelectType}></BaseDropdown>\r\n                <Form.Control style={{width: '10rem'}} maxLength=\"70\" onChange={nameChanged} />\r\n                <BaseDropdown title={\"Effect\"} dict={effectDict} onSelect={onSelectEffect}></BaseDropdown>\r\n            </InputGroup>\r\n        </div>\r\n    );\r\n}","import Accordion from 'react-bootstrap/Accordion';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { memo, useState } from 'react';\r\nimport ConsumableItems from './ConsumableItems';\r\nimport ConsumableToast from './ConsumableToast';\r\nimport ConsumableFilter from './ConsumableFilter';\r\nimport FilterDisplay from './FilterDisplay';\r\nimport StaticPopoverRenderer from '../../viewComponents/popover/StaticPopoverRenderer';\r\nimport Global from '../../helpers/Global';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst questionPopoverHeader = (<b>Consumables</b>);\r\n\r\nconst questionPopoverBody = (\r\n    <>\r\n        <div><b>Items with next properties are not included:</b></div>\r\n        <div>⁃<i> No name</i></div>\r\n        <div>⁃<i> Templates</i></div>\r\n        <div>⁃<i> Events</i></div>\r\n        <div>⁃<i> CUT</i></div>\r\n        <div>⁃<i> DEPRECATED</i></div>\r\n        <div>⁃<i> test</i></div>\r\n        <div className=\"mb-2\">⁃<i> Babylon</i></div>\r\n        <div className=\"mb-2\"><b>Parsed from:</b></div>\r\n        <div><i>{Global.consumablesParseVersion}</i></div>\r\n        <div><i>{Global.consumablesParseVersionName}</i></div>\r\n    </>\r\n);\r\n\r\nconst questionPopover = new StaticPopoverRenderer(questionPopoverHeader, questionPopoverBody, 'ConsumablesViewQuestionPopoverPlace');\r\n\r\nconst ConsumablesView = memo(function ConsumablesView() {\r\n    console.log(\"ConsumablesView\");\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [filterType, setFilterType] = useState('All');\r\n    const [filterName, setFilterName] = useState('');\r\n    const [filterEffect, setFilterEffect] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    function onQClick(e) {\r\n        questionPopover.renderToggle(e.target);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"6\">\r\n                <Accordion.Header>\r\n                    <div id=\"ConsumablesViewQuestionPopoverPlace\"></div>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '12rem'}}>\r\n                            <span className=\"ac-text\">Consumables</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '2rem'}} onClick={onQClick}>?</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <ConsumableToast item={currentItem} showToast={showToast} setShowToast={setShowToast} />\r\n                    <ConsumableFilter setFilterType={setFilterType} setFilterName={setFilterName} setFilterEffect={setFilterEffect} setCurrentPage={setCurrentPage} />\r\n                    <FilterDisplay filterType={filterType} filterEffect={filterEffect} />\r\n                    <ConsumableItems filterName={filterName} filterType={filterType} filterEffect={filterEffect} currentPage={currentPage} setCurrentPage={setCurrentPage} currentItem={currentItem} setCurrentItem={setCurrentItem} showToast={showToast} setShowToast={setShowToast} />\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ConsumablesView;","import {keyValueRow} from '../../helpers/RowBuilder';\r\n\r\n\r\nexport default function FilterDisplay(props) {\r\n    const effect = (!props.filterEffect || props.filterEffect === \"None\") ? \"-\" : props.filterEffect;\r\n    return (\r\n        <div className=\"ps-2 pe-2 pb-2\">\r\n            {keyValueRow(props.filterType, effect)}\r\n        </div>\r\n    );\r\n}","import { useEffect, memo } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nconst { Chart } = await import('chart.js/auto');\r\n\r\n\r\nfunction getData(values, label, color) {\r\n    return {\r\n        datasets: [{\r\n            label: label,\r\n            data: values,\r\n            borderColor: color,\r\n            pointRadius: 1.5,\r\n            borderWidth: 2,\r\n            fill: false,\r\n        }],\r\n    };\r\n}\r\n\r\nfunction getConfig(data, titleText) {\r\n    return {\r\n        type: 'line',\r\n        data: data,\r\n        options: {\r\n            plugins: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n            },\r\n            elements: {\r\n                line: {\r\n                    tension: 0,\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    position: 'bottom',\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Level',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                },\r\n                y: {\r\n                    title: {\r\n                        display: true,\r\n                        text: titleText,\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                }\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\nfunction drawChart(config, chartId) {\r\n    const curChart = Chart.getChart(chartId);\r\n    if (curChart) {\r\n        curChart.destroy();\r\n    }\r\n    new Chart(document.getElementById(chartId), config);\r\n}\r\n\r\nfunction getCanvas(id) {\r\n    if (!id) {\r\n        return (<></>);\r\n    }\r\n    return (<canvas id={id}></canvas>);\r\n}\r\n\r\nconst CreatureChartView = memo(function CreatureChartView(props) {\r\n    const titleText = (props.title === \"❤️ Health\") ? \"Health\" : \"Resistance\";\r\n    const config = getConfig(getData(props.values, props.title, props.color), titleText);\r\n    useEffect(() => {\r\n        drawChart(config, props.chartId);\r\n    });\r\n    return (\r\n        <Card className={props.className} style={{minWidth: '18rem'}}>\r\n            <Card.Header className={props.headerClassName}>\r\n                {props.title}\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex justify-content-center p-0\">\r\n                {getCanvas(props.chartId)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default CreatureChartView","import { buildCreature, buildCreatureNames } from '../entities/ECreatures';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\n\r\n\r\nconst names = CreatureDataProvider.getCreatureNames();\r\n\r\nexport default function CreatureNamesDropdown(props) {\r\n    function onSelect(e) {\r\n        props.creatures[props.creature.fieldName] = buildCreature(e, props.creature.level, props.creature.fieldName);\r\n        props.creatureNamesRef.current = buildCreatureNames(props.creatures);\r\n        props.setCreatures({\r\n            ...props.creatures,\r\n        });\r\n    }\r\n    return (\r\n        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelect} names={names} title={<strong>{props.creature.capName}</strong>} />\r\n    );\r\n}","import { buildCreature, buildCreatureNames } from '../entities/ECreatures';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\n\r\n\r\nconst levels = CreatureDataProvider.getCreatureLevels(true);\r\n\r\nexport default function CreatureLevelsDropdown(props) {\r\n    function onSelect(e) {\r\n        props.creatures[props.creature.fieldName] = buildCreature(props.creature.name, e, props.creature.fieldName);\r\n        props.creatureNamesRef.current = buildCreatureNames(props.creatures);\r\n        props.setCreatures({\r\n            ...props.creatures,\r\n        });\r\n    }\r\n    return (\r\n        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelect} names={levels} title={<strong>{props.creature.level}</strong>} />\r\n    );\r\n}","import CreatureNamesDropdown from './CreatureNamesDropdown';\r\nimport CreatureLevelsDropdown from './CreatureLevelsDropdown';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Stack from 'react-bootstrap/Stack';\r\n\r\n\r\nexport default function CreatureChooser(props) {\r\n    return (\r\n        <Stack className='justify-content-center' direction=\"horizontal\" gap={1}>\r\n            <Col xs={10} className=\"d-flex justify-content-start\">\r\n                <CreatureNamesDropdown creatureNamesRef={props.creatureNamesRef} creature={props.creature} creatures={props.creatures} setCreatures={props.setCreatures} />\r\n            </Col>\r\n            <Col xs={2} className=\"d-flex justify-content-end\">\r\n                <CreatureLevelsDropdown creatureNamesRef={props.creatureNamesRef} creature={props.creature} creatures={props.creatures} setCreatures={props.setCreatures} />\r\n            </Col>\r\n        </Stack>\r\n    );\r\n}","import raceItems from '../resources/race.json';\r\n\r\n\r\nconst raceMap = new Map();\r\n\r\nfor (let i = 0; i < raceItems.length; i++) {\r\n        const item = raceItems[i];\r\n        raceMap.set(item.id, item);\r\n}\r\n\r\nexport default class RaceDataProvider {\r\n\r\n    static getRaceById(id) {\r\n        return raceMap.get(id);\r\n    }\r\n}","import creatureItems from '../resources/creature_health_res.json';\r\nimport RaceDataProvider from '../race/RaceDataProvider';\r\n\r\n\r\nconst creatureNames = [];\r\n\r\nfor (const creatureName in creatureItems[0]) {\r\n    creatureNames.push(creatureName);\r\n}\r\n\r\nconst creatureLevels = [];\r\nconst creatureLevelsWithMax = [\"Max\"];\r\n\r\nfor (let i = 1; i <= 150; i++) {\r\n    creatureLevels.push(i);\r\n    creatureLevelsWithMax.push(i);\r\n}\r\n\r\ncreatureNames.sort();\r\n\r\nexport default class CreatureDataProvider {\r\n\r\n    static getCreatureData(creatureName) {\r\n        return creatureItems[0][creatureName];\r\n    }\r\n\r\n    static getCreatureParametersByName(creatureName, level) {\r\n        const creatureData = CreatureDataProvider.getCreatureData(creatureName);\r\n        return CreatureDataProvider.getCreatureParametersByData(creatureData, level);\r\n    }\r\n\r\n    static getCreatureParametersByData(creatureData, level) {\r\n        const result = {};\r\n        const creatureDataCurve = creatureData['curve'];\r\n        for (const name in creatureDataCurve) {\r\n            const values = creatureDataCurve[name];\r\n            const lastItem = values.length - 1;\r\n            for (let i = 0; i <= lastItem; i++) {\r\n                const sample = values[i];\r\n                const sampleLevel = sample.x;\r\n                const sampleValue = sample.y;\r\n                if (i === 0 && level <= sampleLevel) { // Return min possible value\r\n                    result[name] = sampleValue;\r\n                    break;\r\n                } else if (level === sampleLevel) { // Exact level\r\n                    result[name] = sampleValue;\r\n                    break;\r\n                } else if (i !== 0) { // Value could lie somewhere between\r\n                    const prevSampleLevel = values[i - 1].x;\r\n                    if (level > prevSampleLevel && level < sampleLevel) {\r\n                        const prevSampleValue = values[i - 1].y;\r\n                        result[name] = CreatureDataProvider.calculateExactValue(prevSampleLevel, sampleLevel, level, prevSampleValue, sampleValue);\r\n                        break;\r\n                    }\r\n                }\r\n                if (i === lastItem) { // Return max possible value\r\n                    result[name] = sampleValue;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        result[\"immuneToRad\"] = creatureData.immune_to_rad;\r\n        result[\"immuneToPoison\"] = creatureData.immune_to_poison;\r\n        result[\"reduction\"] = creatureData.reduction;\r\n        result[\"reductions\"] = [...creatureData.reductions];\r\n        result[\"tags\"] = [...creatureData.tags];\r\n        result[\"reductionOnlyNotBleeding\"] = creatureData.reduction_only_not_bleeding;\r\n        const race = RaceDataProvider.getRaceById(creatureData.race_id);\r\n        result['body'] = {...race.bodyData.body};\r\n        result['headMult'] = CreatureDataProvider.getMaxBodyMultiplier(result['body']);\r\n        result['normalMult'] = 1;\r\n        result['averageMult'] = CreatureDataProvider.getAverageBodyMultiplier(result['body']);\r\n        return result;\r\n    }\r\n\r\n    static getMaxBodyMultiplier(body) {\r\n        let maxMult = 0;\r\n        for (const name in body) {\r\n            const part = body[name];\r\n            const mult = part.damage_mult;\r\n            if (maxMult < mult) {\r\n                maxMult = mult;\r\n            }\r\n        }\r\n        return maxMult;\r\n    }\r\n\r\n    static getAverageBodyMultiplier(body) {\r\n        let multSum = 0;\r\n        let count = 0\r\n        for (const name in body) {\r\n            const part = body[name];\r\n            multSum += part.damage_mult;\r\n            count += 1;\r\n        }\r\n        return (count === 0) ? 0 : multSum / count;\r\n    }\r\n\r\n    static calculateExactValue(prevLevel, nextLevel, curLevel, prevValue, nextValue) {\r\n        const valueGap = nextValue - prevValue;\r\n        const levelsAmount = nextLevel - prevLevel;\r\n        const valuePerLevel = valueGap / levelsAmount;\r\n        const shift = curLevel - prevLevel;\r\n        return prevValue + valuePerLevel * shift;\r\n    }\r\n\r\n    static getCreatureNames() {\r\n        return creatureNames;\r\n    }\r\n\r\n    static getCreatureLevels(withMax=false) {\r\n        return (withMax) ? creatureLevelsWithMax : creatureLevels;\r\n    }\r\n\r\n    static getMaxLevel(name) {\r\n        let creatureData = CreatureDataProvider.getCreatureData(name);\r\n        if (!creatureData) {\r\n            return 1;\r\n        }\r\n        creatureData = creatureData['curve'];\r\n        const result = [];\r\n        for (const name in creatureData) {\r\n            const values = creatureData[name];\r\n            result.push(values[values.length -1].x);\r\n        }\r\n        let max = Math.max(...result);\r\n        if (max < 1) {\r\n            max = 1;\r\n        }\r\n        return max;\r\n    }\r\n\r\n    static getLevelsList(name) {\r\n        const maxLevel = CreatureDataProvider.getMaxLevel(name);\r\n        const result = [];\r\n        for (let i = 1; i <= maxLevel; i++) {\r\n            result.push(i);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static capitalizeCreatureName(creatureName) {\r\n        let name = creatureName.charAt(0).toUpperCase() + creatureName.slice(1);\r\n        return name.replaceAll(\"_\", \" \");\r\n    }\r\n\r\n    static getStyle(rType) {\r\n        switch(rType) {\r\n            case \"physical\":\r\n                return [\"💥 Physical\", \"small p-1 bg-ballistic\", \"grey\"];\r\n            case \"energy\":\r\n                return [\"⚡ Energy\", \"small p-1 bg-energy\", \"purple\"];\r\n            case \"fire\":\r\n                return [\"🔥 Fire\", \"small p-1 bg-fire\", \"red\"];\r\n            case \"cold\":\r\n                return [\"❄️ Cold\", \"small p-1 bg-cold\", \"#40aac2\"];\r\n            case \"poison\":\r\n                return [\"☣️ Poison\", \"small p-1 bg-poison\", \"green\"];\r\n            case \"radiation\":\r\n                return [\"☢️ Radiation\", \"small p-1 bg-rad\", \"#ccc976\"];\r\n            case \"health\":\r\n                return [\"❤️ Health\", \"small p-1 bg-health\", \"#cc7681\"]\r\n            default:\r\n                return [\"\", \"\"];\r\n        }\r\n    }\r\n}","import { Collapse } from 'antd';\r\nimport CreatureDataProvider from './CreatureDataProvider';\r\nimport CreatureDropdown from './CreatureDropdown';\r\nimport { useState } from 'react';\r\nimport CreatureResHealthChartsView from './CreatureResHealthChartsView';\r\n\r\n\r\nfunction getView(creatureName, setCreatureName) {\r\n    const creatureNames = CreatureDataProvider.getCreatureNames();\r\n    let title = null;\r\n    if (creatureName) {\r\n        title = CreatureDataProvider.capitalizeCreatureName(creatureName);\r\n    }\r\n    return (\r\n        <>\r\n            <CreatureDropdown title={title} names={creatureNames} setCreatureName={setCreatureName} />\r\n            <CreatureResHealthChartsView creatureName={creatureName} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function CreatureDataView(props) {\r\n    const [creatureName, setCreatureName] = useState(null);\r\n    // let title = creatureName;\r\n    // if (!title) {\r\n    let title = 'Creature Curves';\r\n    // } else {\r\n        title = CreatureDataProvider.capitalizeCreatureName(title);\r\n    // }\r\n    const item = {\r\n        key: 1,\r\n        label: <b className=\"creature-label-text\">{title}</b>,\r\n        children: getView(creatureName, setCreatureName),\r\n    };\r\n    const items = [];\r\n    items.push(item);\r\n    return (\r\n        <Collapse accordion key={\"Creature\"} items={items} />\r\n    );\r\n}","import { getUniqueDropdownItemsByNames } from '../helpers/DropdownHelpers';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst CreatureDropdown = memo(function RaceDropdown(props) {\r\n    let title = \"Choose a creature\";\r\n    if (props.title) {\r\n        title = props.title;\r\n    }\r\n    function onSelect(e) {\r\n        props.setCreatureName(e);\r\n    }\r\n    return (\r\n        <Row className=\"p-1 mb-2 mt-0\">\r\n            <Col className=\"d-flex justify-content-center\">\r\n                <DropdownButton variant=\"warning\" size=\"sm\" onSelect={onSelect} title={<strong>{title}</strong>}>\r\n                    {getUniqueDropdownItemsByNames(props.names)}\r\n                </DropdownButton>\r\n            </Col>\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default CreatureDropdown;\r\n\r\n","import { creatureInfoPopover } from './CreatureInfoPopover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nexport default function CreatureInfoButton(props) {\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"left\" overlay={creatureInfoPopover(props.creature, props.resultDamage, props.resultDamage.weaponName)}>\r\n            <Button variant=\"blue-white-border m-0\" style={{cursor: 'pointer'}}><b style={{fontSize: 'auto'}}>?</b></Button>\r\n        </OverlayTrigger>\r\n    );\r\n}","import Popover from 'react-bootstrap/Popover';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport { Divider } from 'antd';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport { truncate } from '../helpers/Input';\r\nimport { tAmmo, addText } from '../helpers/Emoji';\r\nimport { millisToTime } from '../helpers/Time';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\nimport { Tag } from 'antd';\r\n\r\n\r\nfunction getResBadge(className, value, immune) {\r\n    const result = (immune) ? \"Infinity\" : value.toFixed(1);\r\n    return (\r\n        <span style={{ width: '2.7rem' }} className={className}><small>{result}</small></span>\r\n    );\r\n}\r\n\r\nfunction prepareTags(creature) {\r\n    const tags3 = [];\r\n    let tags;\r\n    for (let i = 0; i < creature.tags.length; i++) {\r\n        if (i % 3 === 0) {\r\n            tags = [];\r\n            tags3.push(tags);\r\n        }\r\n        tags.push(creature.tags[i]);\r\n    }\r\n    const result = [];\r\n    for (let i = 0; i < tags3.length; i++) {\r\n        const curTags = tags3[i];\r\n        result.push(<div key={curTags.toString()} className=\"mt-1 mb-1 p-0 d-flex justify-content-center\"><Tag className=\"m-0\" color=\"purple\"><b>{curTags.join(\" ∙ \")}</b></Tag></div>);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction showDamageIf(what, damageLine, notShow=false) {\r\n    if (notShow || !damageLine || damageLine === \"\" || damageLine === 0 || damageLine.includes(\"0.0 - ↑0.0\")) {\r\n        return (<></>);\r\n    }\r\n    return what;\r\n}\r\n\r\nexport function buildCreatureInfo2(creature, resultDamage) {\r\n    let armor = null;\r\n    if (resultDamage && Object.keys(resultDamage).length > 0) {\r\n        armor = resultDamage.resultArmor.get(creature.name);\r\n    }\r\n    if (!armor) {\r\n        armor = [creature.b, creature.e, creature.f, creature.p, creature.c, creature.r];\r\n    }\r\n    const showHeadExp = (creature.explosiveDamage === creature.headExpShotDamage);\r\n    const showCritHeadExp = (creature.critExplosiveDamage === creature.critExplosiveHeadDamage);\r\n    let capitalized = CreatureDataProvider.capitalizeCreatureName(creature.name);\r\n    return (\r\n        <div>\r\n            <div className='d-flex pb-2 justify-content-center'><b>{capitalized} (Lvl: {creature.level})</b></div>\r\n            <Stack className='pt-0 pb-2 justify-content-center' direction=\"horizontal\" gap={1}>\r\n                {getResBadge(\"badge bg-ballistic-shadow\", armor[0], false)}\r\n                {getResBadge(\"badge bg-energy-shadow\", armor[1], false)}\r\n                {getResBadge(\"badge bg-fire-shadow\", armor[2], false)}\r\n                {getResBadge(\"badge bg-poison-shadow\", armor[3], creature.immuneToPoison)}\r\n                {getResBadge(\"badge bg-cold-shadow\", armor[4], false)}\r\n                {getResBadge(\"badge bg-rad-shadow\", armor[5], creature.immuneToRadiation)}\r\n            </Stack>\r\n            <Stack className='pb-0' direction=\"vertical\" gap={0}>\r\n                {keyValueRow(\"❤️ Health:\", creature.h.toFixed(2), \"default\", \"red\")}\r\n                {keyValueRow(\"🧽 Damage Reduction:\", (creature.damageReduction * 100).toFixed(0) + \"%\", \"default\", \"orange\")}\r\n                {showDamageIf(keyValueRow(\"🐍 Sneak:\", creature.sneak, \"default\", \"green\"), creature.sneak)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit:\", creature.crit, \"default\", \"magenta\"), creature.crit)}\r\n                {keyValueRow(\"💥 Total Damage:\", creature.totalDamage, \"default\", \"blue\")}\r\n                {showDamageIf(keyValueRow(\"💥 Normal Damage:\", creature.normalDamage, \"default\", \"blue\"), creature.normalDamage)}\r\n                {showDamageIf(keyValueRow(\"🤕 HShot (\" + creature.headShot.toFixed(2) + \"x):\", creature.headShotDamage, \"default\", \"blue\"), creature.headShotDamage)}\r\n                {showDamageIf(keyValueRow(\"💣 Explosive:\", creature.explosiveDamage, \"default\", \"blue\"), creature.explosiveDamage)}\r\n                {showDamageIf(keyValueRow(\"💣 Explosive Head:\", creature.headExpShotDamage, \"default\", \"blue\"), creature.headExpShotDamage, showHeadExp)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit:\", creature.critNormalDamage, \"default\", \"blue\"), creature.critNormalDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Head:\", creature.critHeadNormalDamage, \"default\", \"blue\"), creature.critHeadNormalDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Explosive:\", creature.critExplosiveDamage, \"default\", \"blue\"), creature.critExplosiveDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Head Explosive:\", creature.critExplosiveHeadDamage, \"default\", \"blue\"), creature.critExplosiveHeadDamage, showCritHeadExp)}\r\n                {keyValueRow(addText(tAmmo, '0.7rem', '0.27rem', \"Ammo / Hits:\"), creature.ammo, \"default\", \"pink\")}\r\n                {keyValueRow(\"Reloads:\", creature.reloads, \"default\", \"green\")}\r\n                {keyValueRow(\"Life Time:\", millisToTime(creature.lifeTime), \"default\", \"brown\")}\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\nexport function buildCreatureInfo(creature, resultDamage, showDefaultResistance, weaponName=null) {\r\n    let weaponSection;\r\n    let wNameTrunc = \"\";\r\n    if (!weaponName) {\r\n        weaponSection = (<></>);\r\n    } else {\r\n        wNameTrunc = truncate(weaponName, 55);\r\n        weaponSection = (\r\n            <>\r\n                <Divider className='p-0 m-1 mb-3'></Divider>\r\n                <span className=\"badge bg-warning mb-0 text-dark p-2 shadow-outline-unselected\"><small>{wNameTrunc}</small></span>\r\n            </>\r\n        );\r\n    }\r\n    let armor = null;\r\n    if (resultDamage && Object.keys(resultDamage).length > 0) {\r\n        armor = resultDamage.resultArmor.get(creature.name);\r\n    }\r\n    if (!armor) {\r\n        armor = [creature.b, creature.e, creature.f, creature.p, creature.c, creature.r];\r\n    }\r\n    const showHeadExp = (creature.explosiveDamage === creature.headExpShotDamage);\r\n    const showCritHeadExp = (creature.critExplosiveDamage === creature.critExplosiveHeadDamage);\r\n    let defaultResistance = (<></>);\r\n    if (showDefaultResistance) {\r\n        defaultResistance = (\r\n            <>\r\n                <Stack className='pt-0 pb-0 d-flex justify-content-center' direction=\"horizontal\" gap={1}>\r\n                    {getResBadge(\"badge bg-ballistic-shadow\", creature.b, false)}\r\n                    {getResBadge(\"badge bg-energy-shadow\", creature.e, false)}\r\n                    {getResBadge(\"badge bg-fire-shadow\", creature.f, false)}\r\n                    {getResBadge(\"badge bg-poison-shadow\", creature.p, creature.immuneToPoison)}\r\n                    {getResBadge(\"badge bg-cold-shadow\", creature.c, false)}\r\n                    {getResBadge(\"badge bg-rad-shadow\", creature.r, creature.immuneToRadiation)}\r\n                </Stack>\r\n                <Divider className='p-0 m-0'>v</Divider>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            {defaultResistance}\r\n            <Stack className='pt-0 pb-2 d-flex justify-content-center' direction=\"horizontal\" gap={1}>\r\n                {getResBadge(\"badge bg-ballistic-shadow\", armor[0], false)}\r\n                {getResBadge(\"badge bg-energy-shadow\", armor[1], false)}\r\n                {getResBadge(\"badge bg-fire-shadow\", armor[2], false)}\r\n                {getResBadge(\"badge bg-poison-shadow\", armor[3], creature.immuneToPoison)}\r\n                {getResBadge(\"badge bg-cold-shadow\", armor[4], false)}\r\n                {getResBadge(\"badge bg-rad-shadow\", armor[5], creature.immuneToRadiation)}\r\n            </Stack>\r\n            {prepareTags(creature)}\r\n            <Stack className='pb-0' direction=\"vertical\" gap={0}>\r\n                {keyValueRow(\" Body:\", creature.curBody, \"default\", \"default\")}\r\n                {keyValueRow(\"❤️ Health:\", creature.h.toFixed(2), \"default\", \"red\")}\r\n                {keyValueRow(\"🧽 Damage Reduction:\", (creature.damageReduction * 100).toFixed(0) + \"%\", \"default\", \"orange\")}\r\n                {showDamageIf(keyValueRow(\"🐍 Sneak:\", creature.sneak, \"default\", \"green\"), creature.sneak)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit:\", creature.crit, \"default\", \"magenta\"), creature.crit)}\r\n                {keyValueRow(\"💥 Total Damage:\", creature.totalDamage, \"default\", \"blue\")}\r\n                {showDamageIf(keyValueRow(\"💥 Normal Damage:\", creature.normalDamage, \"default\", \"blue\"), creature.normalDamage)}\r\n                {showDamageIf(keyValueRow(\"🤕 HShot (\" + creature.headShot.toFixed(2) + \"x):\", creature.headShotDamage, \"default\", \"blue\"), creature.headShotDamage)}\r\n                {showDamageIf(keyValueRow(\"💣 Explosive:\", creature.explosiveDamage, \"default\", \"blue\"), creature.explosiveDamage)}\r\n                {showDamageIf(keyValueRow(\"💣 Explosive Head:\", creature.headExpShotDamage, \"default\", \"blue\"), creature.headExpShotDamage, showHeadExp)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit:\", creature.critNormalDamage, \"default\", \"blue\"), creature.critNormalDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Head:\", creature.critHeadNormalDamage, \"default\", \"blue\"), creature.critHeadNormalDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Explosive:\", creature.critExplosiveDamage, \"default\", \"blue\"), creature.critExplosiveDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Head Explosive:\", creature.critExplosiveHeadDamage, \"default\", \"blue\"), creature.critExplosiveHeadDamage, showCritHeadExp)}\r\n                {keyValueRow(addText(tAmmo, '0.7rem', '0.27rem', \"Ammo / Hits:\"), creature.ammo, \"default\", \"pink\")}\r\n                {keyValueRow(\"Reloads:\", creature.reloads, \"default\", \"green\")}\r\n                {keyValueRow(\"Reloads Time:\", creature.reloadsTime.toFixed(2) + \" s\", \"default\", \"green\")}\r\n                {keyValueRow(\"Life Time:\", creature.lifeTime + \" ms\", \"default\", \"brown\")}\r\n                {weaponSection}\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const creatureInfoPopover = (creature, resultDamage, weaponName) => {\r\n    let capitalized = CreatureDataProvider.capitalizeCreatureName(creature.name);\r\n    return (\r\n        <Popover title=\"CreatureInfoPopover\" className=\"popover-adjustable\">\r\n            <Popover.Header className=\"d-flex justify-content-center\"><strong style={{fontSize: '0.9rem'}}>{capitalized} (Level: {creature.level})</strong></Popover.Header>\r\n            <Popover.Body className=\"popover-body3 ms-1\">\r\n                {buildCreatureInfo(creature, resultDamage, true, weaponName)}\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n};","import CreatureChartView from \"./CreatureChartView\";\r\nimport CreatureDataProvider from './CreatureDataProvider';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nfunction buildResCols(creatureName) {\r\n    const result = [];\r\n    let data = CreatureDataProvider.getCreatureData(creatureName);\r\n    if (data) {\r\n        data = data['curve'];\r\n    }\r\n    for (const name in data) {\r\n        const cRes = data[name];\r\n        const typeData = CreatureDataProvider.getStyle(name);\r\n        result.push(\r\n            <Col className=\"d-flex justify-content-center\" key={name}>\r\n                <CreatureChartView className=\"d-flex justify-content-center m-1\" color={typeData[2]} headerClassName={typeData[1]} title={typeData[0]} chartId={name + \"Creature\"} values={cRes} />\r\n            </Col>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function CreatureResHealthChartsView(props) {\r\n    return (\r\n        <Row className=\"d-flex justify-content-center\">\r\n            {buildResCols(props.creatureName)}\r\n        </Row>\r\n    )\r\n}","import Stack from 'react-bootstrap/Stack';\r\nimport CreatureInfoButton from './CreatureInfoButton';\r\nimport { keyValueBadge } from '../helpers/RowBuilder';\r\nimport { tAmmo } from '../helpers/Emoji';\r\nimport { millisToTime } from '../helpers/Time';\r\nimport { numberToString } from '../helpers/StringHelpers';\r\n\r\n\r\nexport default function CreatureParamsLineView(props) {\r\n    return (\r\n        <Stack className='ps-0 pe-1' direction=\"horizontal\" gap={1}>\r\n            {keyValueBadge(\"mt-1 mb-1 badge p-1 ms-1 me-0 bg-health-outline\", '5.5rem', '❤️', numberToString(props.creature.h, 2))}\r\n            {keyValueBadge(\"mt-1 mb-1 p-1 badge bg-ammo-outline ms-auto me-auto\", '7rem', tAmmo(\"0.5rem\"), props.creature.ammo)}\r\n            {keyValueBadge(\"mt-1 mb-1 p-1 badge bg-lifetime-outline ms-auto me-auto\", '7rem', (<small>⌛</small>), millisToTime(props.creature.lifeTime))}\r\n            <CreatureInfoButton creature={props.creature} resultDamage={props.resultDamage} />\r\n        </Stack>\r\n    );\r\n}","\r\nimport Card from 'react-bootstrap/Card';\r\nimport CreatureChooser from './CreatureChooser';\r\nimport CreatureParamsLineView from './CreatureParamsLineView';\r\n\r\n\r\nfunction enemy(creatureNamesRef, creature, creatures, setCreatures, resultDamage) {\r\n    return (\r\n        <Card className='pt-0 mt-0 mb-1'>\r\n            <Card.Header className='pt-0 pb-0'>\r\n                <CreatureChooser creatureNamesRef={creatureNamesRef} creature={creature} creatures={creatures} setCreatures={setCreatures} />\r\n            </Card.Header>\r\n            <CreatureParamsLineView creature={creature} resultDamage={resultDamage} />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function CreaturesCardView(props) {\r\n    return (\r\n        <Card className={props.className}>\r\n            <Card.Body className=\"pt-2 pb-1 ps-1 pe-1\">\r\n                {enemy(props.creatureNamesRef, props.creatures.creature1, props.creatures, props.setCreatures, props.resultDamage)}\r\n                {enemy(props.creatureNamesRef, props.creatures.creature2, props.creatures, props.setCreatures, props.resultDamage)}\r\n                {enemy(props.creatureNamesRef, props.creatures.creature3, props.creatures, props.setCreatures, props.resultDamage)}\r\n                {enemy(props.creatureNamesRef, props.creatures.creature4, props.creatures, props.setCreatures, props.resultDamage)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","export default class Creature {\r\n\r\n    constructor(creatureInfo) {\r\n        this.creatureInfo = creatureInfo;\r\n        this.physical = creatureInfo.b;\r\n        this.energy = creatureInfo.e;\r\n        this.fire = creatureInfo.f;\r\n        this.poison = creatureInfo.p;\r\n        this.cryo = creatureInfo.c;\r\n        this.name = creatureInfo.name;\r\n        this.tags = creatureInfo.tags;\r\n        this.tags = [];\r\n        for (let i = 0; i < creatureInfo.tags.length; i++) {\r\n            this.tags.push(creatureInfo.tags[i].toLowerCase());\r\n        }\r\n        this.body = creatureInfo.curBody;\r\n        this.radiation = creatureInfo.r;\r\n        this.health = creatureInfo.h;\r\n        this.damageReduction = creatureInfo.damageReduction;\r\n        this.damageReductionOnlyNotBleeding = creatureInfo.damageReductionOnlyNotBleeding;\r\n        this.headMult = creatureInfo.headShot;\r\n        this.bodyMult = creatureInfo.bodyShot;\r\n        this.immuneToRadiation = creatureInfo.immuneToRadiation;\r\n        this.immuneToPoison = creatureInfo.immuneToPoison;\r\n        this.expResistance = true;\r\n        this.reported = false;\r\n        this.maxHit = 0;\r\n        this.hits = 0;\r\n        this.sumDamages = 0;\r\n        this.lifeTime = 0;\r\n        this.lastShotTime = 0;\r\n        this.timeDamages = new Map();\r\n        this.lastTotalDamage = 0;\r\n        this.lastDamageNoTime = 0;\r\n        this.lastExpDamageNoTime = 0;\r\n        this.minNormalShot = 0;\r\n        this.maxNormalShot = 0;\r\n        this.minHeadShot = 0;\r\n        this.maxHeadShot = 0;\r\n        this.minHeadExpShot = 0;\r\n        this.maxHeadExpShot = 0;\r\n        this.minNormalCritShot = 0;\r\n        this.maxNormalCritShot = 0;\r\n        this.minNormalHeadCritShot = 0;\r\n        this.maxNormalHeadCritShot = 0;\r\n        this.minExpShot = 0;\r\n        this.maxExpShot = 0;\r\n        this.minExpCritShot = 0;\r\n        this.maxExpCritShot = 0;\r\n        this.minExpCritHeadShot = 0;\r\n        this.maxExpCritHeadShot = 0;\r\n        this.bulletCount = 1;\r\n        this.minTotalDamage = 0;\r\n        this.maxTotalDamage = 0;\r\n        this.maxTimeEffects = 0;\r\n        this.tdCounter = 0;\r\n        this.sneakPercent = 0;\r\n        this.critPercent = 0;\r\n        this.bleed = false;\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getArmor() {\r\n        return [this.physical, this.energy, this.fire, this.poison, this.cryo, this.radiation];\r\n    }\r\n\r\n    // To speed up the process we reduce armors in advance as they are basically static (except for some cases like TOFT\r\n    // where we ignore it anyway)\r\n    reduceArmor(antiArmor) {\r\n        let b = (1 - antiArmor.b / 100.0);\r\n        let e = (1 - antiArmor.e / 100.0);\r\n        let f = (1 - antiArmor.f / 100.0);\r\n        let p = (1 - antiArmor.p / 100.0);\r\n        let c = (1 - antiArmor.c / 100.0);\r\n        let r = (1 - antiArmor.r / 100.0);\r\n        if (this.tags.includes(\"bug\") || this.tags.includes(\"mirelurk\")) {\r\n            let i = 1 - antiArmor.insect / 100.0;\r\n            b *= i;\r\n            e *= i;\r\n            f *= i;\r\n            p *= i;\r\n            c *= i;\r\n            r *= i;\r\n        }\r\n        this.physical *= b;\r\n        this.physical = (this.physical < 0) ? 0 : this.physical;\r\n        this.energy *= e;\r\n        this.energy = (this.energy < 0) ? 0 : this.energy;\r\n        this.fire *= f;\r\n        this.fire = (this.fire < 0) ? 0 : this.fire;\r\n        this.poison *= p;\r\n        this.poison = (this.poison < 0) ? 0 : this.poison;\r\n        this.cryo *= c;\r\n        this.cryo = (this.cryo < 0) ? 0 : this.cryo;\r\n        this.radiation *= r;\r\n        this.radiation = (this.radiation < 0) ? 0 : this.radiation;\r\n        return this;\r\n    }\r\n\r\n    takeDamage(hit) {\r\n\r\n        // Dead\r\n        if (this.health <= 0) {\r\n            return true;\r\n        }\r\n        this.bulletCount = hit.bulletCount;\r\n        this.lastTotalDamage = 0;\r\n        this.lastDamageNoTime = 0;\r\n        this.lastExpDamageNoTime = 0;\r\n        this.hits += 1;\r\n        this.lifeTime += hit.deltaTime;\r\n        this.lastShotTime = hit.deltaTime;\r\n\r\n        // Run through damages to cause damage\r\n        this.applyDamages(hit, hit.damages);\r\n        if (hit.critShot) {\r\n            this.applyCritDamages(hit, hit.critDamages);\r\n        }\r\n        return this.isDead();\r\n    }\r\n\r\n    // TODO: Should we apply boosts to crit damages? How does this work?\r\n    applyCritDamages(hit, damages) {\r\n        this.applyDamages(hit, damages);\r\n    }\r\n\r\n    // WARNING: Considers every shot is hit (time is not important)\r\n    setupBleed(damages) {\r\n        for (let i = 0; i < damages.length; i++) {\r\n            const damageInfo = damages[i];\r\n            if (damageInfo.kind === 'bleed') {\r\n                this.bleed = true;\r\n                return;\r\n            }\r\n        }\r\n        this.bleed = false;\r\n    }\r\n    applyDamages(hit, damages) {\r\n        this.setupBleed(damages);\r\n        for (let i = 0; i < damages.length; i++) {\r\n            const damageInfo = damages[i];\r\n\r\n            if (damageInfo.time === 0) {\r\n                this.causeNonTimeDamages(hit, damageInfo);\r\n            } else {\r\n                this.gatherTimeDamages(hit, damageInfo);\r\n                this.causeTimeDamages(damageInfo.type);\r\n            }\r\n            if (this.health <= 0) {\r\n                break;\r\n            }\r\n        }\r\n        this.recordDamage(hit);\r\n    }\r\n\r\n    recordDamage(hit) {\r\n        if (this.minTotalDamage === 0 || this.lastTotalDamage < this.minTotalDamage) {\r\n            this.minTotalDamage = this.lastTotalDamage;\r\n        }\r\n        if (this.maxTotalDamage < this.lastTotalDamage) {\r\n            this.maxTotalDamage = this.lastTotalDamage;\r\n        }\r\n        if (!hit.critShot && !hit.headShot) {\r\n            if (this.minNormalShot === 0 || this.lastDamageNoTime < this.minNormalShot) {\r\n                this.minNormalShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.lastDamageNoTime > this.maxNormalShot) {\r\n                this.maxNormalShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.minExpShot === 0 || this.lastExpDamageNoTime < this.minExpShot) {\r\n                this.minExpShot = this.lastExpDamageNoTime;\r\n            }\r\n            if (this.lastExpDamageNoTime > this.maxExpShot) {\r\n                this.maxExpShot = this.lastExpDamageNoTime;\r\n            }\r\n        } else if (!hit.critShot && hit.headShot) {\r\n            if (this.minHeadShot === 0 || this.lastDamageNoTime < this.minHeadShot) {\r\n                this.minHeadShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.lastDamageNoTime > this.maxHeadShot) {\r\n                this.maxHeadShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.minHeadExpShot === 0 || this.lastExpDamageNoTime < this.minHeadExpShot) {\r\n                this.minHeadExpShot = this.lastExpDamageNoTime;\r\n            }\r\n            if (this.lastExpDamageNoTime > this.maxHeadExpShot) {\r\n                this.maxHeadExpShot = this.lastExpDamageNoTime;\r\n            }\r\n        } else if (hit.critShot && !hit.headShot) {\r\n            if (this.minNormalCritShot === 0 || this.lastDamageNoTime < this.minNormalCritShot) {\r\n                this.minNormalCritShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.lastDamageNoTime > this.maxNormalCritShot) {\r\n                this.maxNormalCritShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.minExpCritShot === 0 || this.lastExpDamageNoTime < this.minExpCritShot) {\r\n                this.minExpCritShot = this.lastExpDamageNoTime;\r\n            }\r\n            if (this.lastExpDamageNoTime > this.maxExpCritShot) {\r\n                this.maxExpCritShot = this.lastExpDamageNoTime;\r\n            }\r\n        } else if (hit.critShot && hit.headShot) {\r\n            if (this.minNormalHeadCritShot === 0 || this.lastDamageNoTime < this.minNormalHeadCritShot) {\r\n                this.minNormalHeadCritShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.lastDamageNoTime > this.maxNormalHeadCritShot) {\r\n                this.maxNormalHeadCritShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.minExpCritHeadShot === 0 || this.lastExpDamageNoTime < this.minExpCritHeadShot) {\r\n                this.minExpCritHeadShot = this.lastExpDamageNoTime;\r\n            }\r\n            if (this.lastExpDamageNoTime > this.maxExpCritHeadShot) {\r\n                this.maxExpCritHeadShot = this.lastExpDamageNoTime;\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: What the bonuses will work here? cripple, bash, power, total, crit, sneak?\r\n    gatherTimeDamages(hit, damageInfo) {\r\n        const baseDamage = damageInfo.damage;\r\n        let bonus = hit.bonusMult[damageInfo.type];\r\n        bonus += this.getCreatureBonusMultiplier(hit.creatureDamageBonuses);\r\n        const totalBonus = this.getTotalBonus(hit);\r\n        let value = baseDamage * bonus * totalBonus;\r\n\r\n        // TODO: The way of stacking is unknown (may be there is no stacking at all)\r\n        if (damageInfo.stack) {\r\n            const existedDamages = this.timeDamages.get(damageInfo.index);\r\n            if (existedDamages) {\r\n                if (existedDamages.length < 10) {\r\n                    existedDamages.push({damageType: damageInfo.type, time: damageInfo.time, value: value, index: damageInfo.index});\r\n                }\r\n            } else {\r\n                this.timeDamages.set(damageInfo.index, [{damageType: damageInfo.type, time: damageInfo.time, value: value, index: damageInfo.index}]);\r\n            }\r\n        } else {\r\n            this.timeDamages.set(damageInfo.index, [{damageType: damageInfo.type, time: damageInfo.time, value: value, index: damageInfo.index}]);\r\n        }\r\n    }\r\n\r\n    timeDamagesHandler(items, key, map) {\r\n        let dTime = this.lastShotTime;\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n\r\n            // Protect\r\n            if (dTime === 0) {\r\n                item.time = 0;\r\n            }\r\n            else if (item.time < dTime) {\r\n                dTime = item.time;\r\n                item.time = 0;\r\n            } else {\r\n                item.time -= dTime;\r\n            }\r\n            const damage = item.value * dTime;\r\n            this.tdCounter += 1;\r\n            this.causeFinalDamage(damage, item.damageType, false, false);\r\n        }\r\n    }\r\n\r\n    deleteTimeDamages(items, key, map) {\r\n        map.set(key, items.filter(item => item.time > 0));\r\n    }\r\n\r\n    getMaxTimeEffects() {\r\n        return this.maxTimeEffects;\r\n    }\r\n\r\n    causeTimeDamages(damageType) {\r\n        this.tdCounter = 0;\r\n        this.timeDamages.forEach(this.timeDamagesHandler, this);\r\n        this.timeDamages.forEach(this.deleteTimeDamages);\r\n        if (this.maxTimeEffects < this.tdCounter) {\r\n            this.maxTimeEffects = this.tdCounter;\r\n        }\r\n    }\r\n\r\n    causeNonTimeDamages(hit, damageInfo) {\r\n        const baseDamage = damageInfo.damage;\r\n        let bonus = hit.bonusMult[damageInfo.type];\r\n        bonus += this.getCreatureBonusMultiplier(hit.creatureDamageBonuses);\r\n        bonus += hit.cripple;\r\n        bonus += hit.powerAttack;\r\n        bonus += hit.lastShotBonus;\r\n        if (damageInfo.kind === \"explosive\") {\r\n            bonus += hit.expDTypeBonus;\r\n        }\r\n        let crit = 0;\r\n        if (hit.critShot) {\r\n            this.critPercent = hit.critBoost;\r\n            crit = baseDamage * hit.critBoost;\r\n        }\r\n        if (damageInfo.type === \"dtPhysical\" && damageInfo.kind === \"physical\") {\r\n            bonus += hit.bash;\r\n        }\r\n        if (this.health === this.creatureInfo.h) {\r\n            bonus += hit.firstBloodBonus;\r\n        }\r\n        const totalBonus = this.getTotalBonus(hit);\r\n        let sneak = 0;\r\n        if (hit.sneakShot) {\r\n            this.sneakPercent = hit.sneak;\r\n            sneak = baseDamage * hit.sneak * totalBonus;\r\n        }\r\n        let value = baseDamage * bonus * totalBonus;\r\n        let expValue = this.getExplosiveDamage(value, hit.weaponType, damageInfo.type, damageInfo.kind, hit.expBonus);\r\n        let critExp = 0;\r\n        if (expValue > 0) {\r\n            critExp = crit * hit.expBonus;\r\n        }\r\n        value += sneak;\r\n        value += crit;\r\n        expValue *= hit.tenderizer;\r\n        expValue += critExp;\r\n        const timeDamage = damageInfo.time > 0;\r\n        let finalDamage = this.causeFinalDamage(value, damageInfo.type, hit.headShot, false);\r\n        this.memoDamage(finalDamage, timeDamage, false);\r\n\r\n        // Explosives add for each bullet (no headshot)\r\n        const nonCritExp = expValue - critExp;\r\n        if (expValue > 0) {\r\n            for (let i = 0; i < this.bulletCount; i++) {\r\n                if (i === 0) { // Seems that crit exp must be added only for one bullet?\r\n                    finalDamage = this.causeFinalDamage(expValue, damageInfo.type, false, true);\r\n                } else {\r\n                    finalDamage = this.causeFinalDamage(nonCritExp, damageInfo.type, false, true);\r\n                }\r\n                this.memoDamage(finalDamage, timeDamage, true);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    memoDamage(finalDamage, timeDamage, expDamage) {\r\n        this.lastTotalDamage += finalDamage;\r\n        if (!timeDamage && !expDamage) {\r\n            this.lastDamageNoTime += finalDamage;\r\n        } else if (!timeDamage && expDamage) {\r\n            this.lastExpDamageNoTime += finalDamage;\r\n        }\r\n    }\r\n\r\n    getArmorValue(type) {\r\n        switch(type) {\r\n            case \"dtPhysical\":\r\n                return this.physical;\r\n            case \"dtEnergy\":\r\n                return this.energy;\r\n            case \"dtFire\":\r\n                return this.fire;\r\n            case \"dtPoison\":\r\n                return this.poison;\r\n            case \"dtCryo\":\r\n                return this.cryo;\r\n            case \"dtRadiationExposure\":\r\n                return this.radiation;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    getExplosiveDamage(value, weaponType, damageType, damageKind, expBonus) {\r\n        if (damageKind === 'bleed') {\r\n            return 0;\r\n        }\r\n        if (weaponType !== \"Melee\" && weaponType !== \"Unarmed\" && weaponType !== \"Thrown\") {\r\n            if ((damageType === 'dtPhysical' && damageKind === \"physical\") || damageType === 'dtEnergy') {\r\n                return value * expBonus;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getTotalBonus(hit) {\r\n        let totalBonus = hit.totalDamageBonus * hit.tenderizer;\r\n        totalBonus *= (this.health / this.creatureInfo.h < 0.4) ? hit.executionerBonus : 1.0;\r\n        return totalBonus;\r\n    }\r\n\r\n    getCreatureBonusMultiplier(creatureDamageBonuses) {\r\n        let result = 0;\r\n        if (this.name === \"Dummy\") {\r\n            return 0;\r\n        }\r\n        for (let [, damageBonus] of creatureDamageBonuses) {\r\n            const bonusName = damageBonus.name;\r\n            const bonusMult = damageBonus.value;\r\n            if (this.tags.includes(bonusName) || this.body === bonusName || this.name === bonusName) {\r\n                result += (bonusMult / 100.0);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getLastTotalDamage() {\r\n        return this.lastTotalDamage;\r\n    }\r\n\r\n    causeFinalDamage(value, damageType, isHead, explosive) {\r\n        let finalDamage;\r\n        let damageReduction = 1 - this.damageReduction;\r\n\r\n        // No reduction if bleeding (storm boss)\r\n        if (this.bleed && this.damageReductionOnlyNotBleeding) {\r\n            damageReduction = 1;\r\n        }\r\n        if (explosive && !this.expResistance) {\r\n            finalDamage = value * damageReduction;\r\n        } else {\r\n            finalDamage = this.finalDamage(value, damageType) * damageReduction;\r\n        }\r\n        if (isHead) {\r\n            finalDamage *= this.headMult;\r\n        } else {\r\n            finalDamage *= this.bodyMult;\r\n        }\r\n        this.health -= finalDamage;\r\n\r\n        // It is useful if you need to check average hit to determine the best weapon especially if a creature live time is 0\r\n        this.sumDamages += finalDamage;\r\n        if (finalDamage > this.maxHit) {\r\n            this.maxHit = finalDamage;\r\n        }\r\n        return finalDamage;\r\n    }\r\n\r\n    getAverageHit() {\r\n        if (this.hits === 0) {\r\n            return 0;\r\n        }\r\n        return this.sumDamages / this.hits;\r\n    }\r\n\r\n    finalDamage(value, type) {\r\n        if (type === \"dtRadiationExposure\" && this.immuneToRadiation) {\r\n            return 0;\r\n        } else if (type === \"dtPoison\" && this.immuneToPoison) {\r\n            return 0;\r\n        }\r\n        const armor = this.getArmorValue(type);\r\n        if (armor === Infinity) {\r\n            return 0;\r\n        } else if (armor === 0) {\r\n            return value;\r\n        }\r\n        let k = (0.15 * value / armor) ** 0.365;\r\n        if (k > 0.99) {\r\n            k = 0.99;\r\n        } else if (k < 0.01) {\r\n            k = 0.01;\r\n        }\r\n        return  k * value;\r\n    }\r\n\r\n    isDead() {\r\n        return this.health <= 0;\r\n    }\r\n\r\n    totalTime() {\r\n        return parseInt((this.lifeTime - this.lastShotTime) * 1000);\r\n    }\r\n\r\n    formDeadReport(reloads, reloadsTime) {\r\n        if (!this.reported) {\r\n            this.reported = true;\r\n            this.creatureInfo.averageHit = this.getAverageHit();\r\n            this.creatureInfo.maxHit = this.maxHit;\r\n            this.creatureInfo.sneak = (this.sneakPercent > 0) ? (this.sneakPercent * 100.0).toFixed(1) + \"%\" : \"\";\r\n            this.creatureInfo.crit = (this.critPercent > 0) ? (this.critPercent * 100.0).toFixed(1) + \"%\" : \"\";\r\n            this.creatureInfo.totalDamage = \"↓\" + this.minTotalDamage.toFixed(1) + \" - ↑\" + this.maxTotalDamage.toFixed(1);\r\n            this.creatureInfo.normalDamage = \"(↓\" + (this.minNormalShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxNormalShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.headShotDamage = \"(↓\" + (this.minHeadShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxHeadShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.headExpShotDamage = \"(↓\" + (this.minHeadExpShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxHeadExpShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.critNormalDamage = \"(↓\" + (this.minNormalCritShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxNormalCritShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.critHeadNormalDamage = \"(↓\" + (this.minNormalHeadCritShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxNormalHeadCritShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.explosiveDamage = \"(↓\" + (this.minExpShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxExpShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.critExplosiveDamage = \"(↓\" + (this.minExpCritShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxExpCritShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.critExplosiveHeadDamage = \"(↓\" + (this.minExpCritHeadShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxExpCritHeadShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            if (this.isDead()) {\r\n                this.creatureInfo.ammo = this.hits;\r\n                this.creatureInfo.reloads = reloads;\r\n                this.creatureInfo.reloadsTime = reloadsTime;\r\n                this.creatureInfo.lifeTime = this.totalTime();\r\n            } else { // Damage is to small, just emulate\r\n                const damagedHealth = this.creatureInfo.h - this.health;\r\n                if (damagedHealth === 0) {\r\n                    this.creatureInfo.ammo = Infinity;\r\n                    this.creatureInfo.reloads = Infinity;\r\n                    this.creatureInfo.reloadsTime = Infinity;\r\n                    this.creatureInfo.lifeTime = Infinity;\r\n                } else {\r\n                    const ratio = this.health / damagedHealth;\r\n                    this.creatureInfo.reloads = reloads + parseInt(reloads * ratio);\r\n                    this.creatureInfo.reloadsTime = reloadsTime + parseInt(reloadsTime * ratio);\r\n                    this.creatureInfo.ammo = this.hits + parseInt(this.hits * ratio);\r\n                    this.creatureInfo.lifeTime = parseInt((this.lifeTime + this.lifeTime * ratio - this.lastShotTime) * 1000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import Creature from './Creature';\r\nimport { getDummy } from '../entities/ECreatures';\r\n\r\n\r\nexport default class CreaturesProduction {\r\n\r\n    static produce(materials, antiArmor) {\r\n        const creatures = [];\r\n        for (const property in materials) {\r\n            const creatureInfo = materials[property];\r\n            const creature = new Creature(creatureInfo);\r\n            creature.reduceArmor(antiArmor);\r\n            creatures.push(creature);\r\n        }\r\n        return creatures;\r\n    }\r\n\r\n    static produceByArmor(creatureInfo, armor) {\r\n        const dummy = getDummy(creatureInfo);\r\n        dummy.b = armor[0];\r\n        dummy.e = armor[1];\r\n        dummy.f = armor[2];\r\n        dummy.p = armor[3];\r\n        dummy.c = armor[4];\r\n        dummy.r = armor[5];\r\n        return new Creature(dummy);\r\n    }\r\n}\r\n\r\n","const darkBlue = {\r\n    backgroundColor: '#e6f7ff',\r\n    borderColor: '#0085c6',\r\n    color: '#003e5d',\r\n}\r\n\r\nconst blue = {\r\n    backgroundColor: '#f7fbff',\r\n    borderColor: '#0072a3',\r\n    color: '#1d6db8',\r\n}\r\n\r\nconst indigo = {\r\n    backgroundColor: '#fdfaff',\r\n    borderColor: '#5a008a',\r\n    color: '#430067',\r\n}\r\n\r\nconst red = {\r\n    backgroundColor: '#fff4f4',\r\n    borderColor: '#890000',\r\n    color: '#c90000',\r\n}\r\n\r\nconst orange = {\r\n    backgroundColor: '#fffaf0',\r\n    borderColor: '#ffa800',\r\n    color: '#b56b1d',\r\n}\r\n\r\nconst magenta = {\r\n    backgroundColor: '#fff1fa',\r\n    borderColor: '#ca007c',\r\n    color: '#ab1672',\r\n}\r\n\r\nconst grey = {\r\n    backgroundColor: '#f4f4f4',\r\n    borderColor: '#9f9f9f',\r\n    color: '#3f3f3f',\r\n}\r\n\r\nconst colors = {\r\n    blue: blue,\r\n    darkBlue: darkBlue,\r\n    orange: orange,\r\n    magenta: magenta,\r\n    grey: grey,\r\n    indigo: indigo,\r\n    red: red,\r\n};\r\n\r\nexport default function UTag(props) {\r\n    const colorScheme = colors[props.color];\r\n    const borderRadius = props.bRadius ? props.bRadius : \"2px\";\r\n    const bWidth = props.bWidth ? props.bWidth : \"1px\";\r\n    let bgColor = grey.backgroundColor;\r\n    let borderColor = grey.borderColor;\r\n    let color = grey.color;\r\n    if (colorScheme) {\r\n        bgColor = colorScheme.backgroundColor;\r\n        color = colorScheme.color;\r\n        borderColor = colorScheme.borderColor;\r\n    }\r\n    if (!props.border) {\r\n        borderColor = bgColor;\r\n    }\r\n    const style = {\r\n        width: \"auto\",\r\n        fontSize: \"0.7rem\",\r\n        fontWeight: \"bold\",\r\n        backgroundColor: bgColor,\r\n        borderRadius: borderRadius,\r\n        borderStyle: \"solid\",\r\n        borderWidth: bWidth,\r\n        borderColor: borderColor,\r\n        color: color,\r\n        whiteSpace: \"nowrap\",\r\n    }\r\n    let result;\r\n    if (props.onClick) {\r\n       result = getButton(props, style);\r\n    } else {\r\n        result = getTag(props, style);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getButton(props, style) {\r\n    const className = (props.className) ? \"button-3 \" + props.className : \"button-3\";\r\n    return (<button className={className} title={props.title} style={style} onClick={props.onClick}>{props.children}</button>);\r\n}\r\n\r\nfunction getTag(props, style) {\r\n    return (<div title={props.title} className={props.className} style={style} onClick={props.onClick}>{props.children}</div>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Divider } from 'antd';\r\nimport UTag from '../viewComponents/tag/UTag';\r\nimport { numberToString } from '../helpers/StringHelpers';\r\n\r\n\r\nfunction getColTagView(tag, index, position, mult, onBodyPartClick) {\r\n    return (\r\n        <Col key={tag + index} className={\"m-1 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <UTag title={mult} style={{cursor: 'pointer'}} className=\"m-1 ps-2 pe-2 p-2\" bRadius=\"5px\" border={true} color={\"grey\"} onClick={onBodyPartClick}>\r\n                {tag}\r\n            </UTag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function CreatureBodyView(props) {\r\n    function onBodyPartClick(e) {\r\n        props.creature.bodyShot = e.currentTarget.title;\r\n        props.setCreatures({...props.creatures});\r\n    }\r\n    const body = props.creature.bodyParts;\r\n    if (body) {\r\n        const result = [];\r\n        let index = 0\r\n        for (const partName in body) {\r\n            index += 1;\r\n            const part = body[partName];\r\n            const partText = part.name + \" ‣ \" + numberToString(part.damage_mult, 2) + \"x\"\r\n            result.push(getColTagView(partText, index, \"center\", part.damage_mult, onBodyPartClick));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-2 mb-1\">Body Damage Multipliers</Divider>\r\n                <div className=\"m-3\" />\r\n                <Row className=\"ps-1 pe-1 pb-2\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Divider } from 'antd';\r\nimport UTag from '../viewComponents/tag/UTag';\r\n\r\n\r\nfunction getColTagView(tag, index, position) {\r\n    return (\r\n        <Col key={tag + index} className={\"m-1 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <UTag className=\"m-1 ps-2 pe-2 p-1\" bRadius=\"5px\" border={true} color={\"indigo\"}>\r\n                {tag}\r\n            </UTag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function CreatureBodyView(props) {\r\n    const tags = props.creature.tags;\r\n    if (tags) {\r\n        const result = [];\r\n        for (let i = 0; i < tags.length; i++) {\r\n            result.push(getColTagView(tags[i], i, \"center\"));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-4 mb-1\">Tags</Divider>\r\n                <div className=\"m-3\" />\r\n                <Row className=\"ps-1 pe-1 pb-2\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Divider } from 'antd';\r\nimport UTag from '../viewComponents/tag/UTag';\r\n\r\n\r\nfunction getColTagView(red, index, position, onClick) {\r\n    return (\r\n        <Col key={red + index} className={\"m-1 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <UTag title={red} className=\"m-1 ps-2 pe-2 p-1\" bRadius=\"5px\" border={true} color={\"orange\"} onClick={onClick}>\r\n                {red}\r\n            </UTag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function CreatureReductionView(props) {\r\n    const reductions = props.creature.damageReductions;\r\n    function onClick(e) {\r\n        props.creature.damageReduction = e.currentTarget.title;\r\n        props.setCreatures({...props.creatures});\r\n    }\r\n    if (reductions) {\r\n        const result = [];\r\n        for (let i = 0; i < reductions.length; i++) {\r\n            result.push(getColTagView(reductions[i], i, \"center\", onClick));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-2 mb-1\">Damage Reduction</Divider>\r\n                <div className=\"m-2\" />\r\n                <Row className=\"ps-1 pe-1 pb-2\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { checkLength } from '../helpers/Input';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport CreatureBodyView from './CreatureBodyView';\r\nimport CreatureTagsView from './CreatureTagsView';\r\nimport CreatureReductionView from './CreatureReductionView';\r\nimport { Divider } from 'antd';\r\nimport CreatureChooser from './CreatureChooser';\r\nimport CreatureInfoButton from './CreatureInfoButton';\r\n\r\n\r\nfunction col(name, creatures, setCreatures, creature, res_field, color, canDisable, min=0, max=9999) {\r\n    function onChange(e) {\r\n        checkLength(e);\r\n        if (e.target.value < min) {\r\n            e.target.value = min;\r\n        }\r\n        creature[res_field] = parseFloat(e.target.value);\r\n        setCreatures({\r\n            ...creatures,\r\n        });\r\n    }\r\n    function getCheckbox(canDisable) {\r\n        const chColor = (res_field === \"p\") ? \"#237504\" : \"#a4aa04\";\r\n        function onChange(e) {\r\n            const enabled = (res_field === \"p\") ? creature.immuneToPoison : creature.immuneToRadiation;\r\n            const result = !enabled\r\n            if (res_field === \"p\") {\r\n                creature.immuneToPoison = result;\r\n            } else {\r\n                creature.immuneToRadiation = result;\r\n            }\r\n            setCreatures({\r\n                ...creatures,\r\n            });\r\n        }\r\n        if (canDisable) {\r\n            return (\r\n                <InputGroup.Text style={{width: '2.6rem'}}>\r\n                    <UCheckbox checked={!((res_field === \"p\") ? creature.immuneToPoison : creature.immuneToRadiation)} checkBorderColor={chColor} checkBgColor={chColor} onChange={onChange}></UCheckbox>\r\n                </InputGroup.Text>\r\n            );\r\n        }\r\n        return <></>;\r\n    }\r\n    let disabled = false;\r\n    if (res_field === \"p\" || res_field === \"r\") {\r\n        disabled = (res_field === \"p\") ? creature.immuneToPoison : creature.immuneToRadiation;\r\n    }\r\n    const width = (canDisable) ? '7.45rem' : '10rem';\r\n    const value = creature[res_field];\r\n    return (\r\n        <Col>\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                <InputGroup.Text className={color} style={{ width: width }}>{name}</InputGroup.Text>\r\n                {getCheckbox(canDisable)}\r\n                <Form.Control className='w-auto' disabled={disabled} type=\"number\" min={min} value={value} max={max} maxLength=\"7\" onChange={onChange} />\r\n            </InputGroup>\r\n        </Col>);\r\n}\r\n\r\nconst energy = <>&#9889; Energy</>;\r\nconst ballistic = <>&#128165; Physical</>;\r\nconst fire = <>&#128293; Fire</>;\r\nconst poison = <>☣️ Poison</>;\r\nconst cold = <>❄️ Cryo</>;\r\nconst rad = <>☢️ Radiation</>;\r\nconst health = <>❤️ Health</>;\r\nconst reduction = <>🧽 Reduction</>;\r\nconst headShot = <>🤕 Head Shot</>;\r\nconst bodyShot = <>🧍 Body Shot</>;\r\nconst creatureTypes = {Normal: 'normal', Scorched: 'scorched', Glowing: 'glowing'};\r\n\r\n\r\nfunction CreatureStats({creatureNamesRef, creatures, setCreatures, creature, resultDamage}) {\r\n    console.log(\"CreatureStats\");\r\n    function onRadioTypeClick(e) {\r\n        creature.curBody = e.target.value;\r\n        setCreatures({...creatures});\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-end mb-2\">\r\n                <CreatureInfoButton creature={creature} resultDamage={resultDamage} />\r\n            </div>\r\n            <div className=\"text-center mb-3\">\r\n                <CreatureChooser creatureNamesRef={creatureNamesRef} creature={creature} creatures={creatures} setCreatures={setCreatures} />\r\n                <div className=\"m-2\" />\r\n                <Row>\r\n                    {col(ballistic, creatures, setCreatures, creature, \"b\", \"bg-ballistic\", false)}\r\n                    {col(energy, creatures, setCreatures, creature, \"e\", \"bg-energy\", false)}\r\n                </Row>\r\n                <Row>\r\n                    {col(fire, creatures, setCreatures, creature, \"f\", \"bg-fire\", false)}\r\n                    {col(poison, creatures, setCreatures, creature, \"p\", \"bg-poison\", true)}\r\n                </Row>\r\n                <Row>\r\n                    {col(cold, creatures, setCreatures, creature, \"c\", \"bg-cold\", false)}\r\n                    {col(rad, creatures, setCreatures, creature, \"r\", \"bg-rad\", true)}\r\n                </Row>\r\n                <Row>\r\n                    {col(health, creatures, setCreatures, creature, \"h\", \"bg-health\", false, 1, 999999)}\r\n                    {col(reduction, creatures, setCreatures, creature, \"damageReduction\", \"bg-reduction\", false, 0, 0.9)}\r\n                </Row>\r\n                <Row>\r\n                    {col(headShot, creatures, setCreatures, creature, \"headShot\", \"bg-head-shot\", false, 1, 2)}\r\n                    {col(bodyShot, creatures, setCreatures, creature, \"bodyShot\", \"bg-body-shot\", false, 0.1, 2)}\r\n                </Row>\r\n                <CreatureTagsView creature={creature} />\r\n                <CreatureBodyView creature={creature} creatures={creatures} setCreatures={setCreatures} />\r\n                <CreatureReductionView creature={creature} creatures={creatures} setCreatures={setCreatures} />\r\n                <Divider className=\"p-0 mt-1 mb-3\">Body</Divider>\r\n                <div className=\"pt-1 pb-1 d-flex justify-content-center\">\r\n                    <BSRadio pairs={creatureTypes} selectedValue={creature.curBody} onClick={onRadioTypeClick} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreatureStats;","import { Collapse } from 'antd';\r\nimport CreatureStats from \"../creature/CreatureStats\";\r\n\r\n\r\nfunction getLabel(creature) {\r\n    return (\r\n        <>\r\n            <div style={{float: \"left\", width: \"auto\"}}>\r\n                <b className=\"creature-label-text\">{creature.capName}</b>\r\n            </div>\r\n            <div style={{float: \"right\", width: \"auto\"}}>\r\n                <b style={{color: '#091503'}}>Lvl:</b> <b style={{fontSize: '0.9rem', color: '#bb0000'}}>{creature.level}</b>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nfunction getItems(creatureNamesRef, creatures, setCreatures, resultDamage) {\r\n    const items = [];\r\n    let i = 0;\r\n    for (const name in creatures) {\r\n        const creature = creatures[name];\r\n        const item = {\r\n            key: i,\r\n            label: getLabel(creature),\r\n            children: <CreatureStats creatureNamesRef={creatureNamesRef} creatures={creatures} setCreatures={setCreatures} creature={creature} resultDamage={resultDamage} />,\r\n        };\r\n        i++;\r\n        items.push(item);\r\n    }\r\n    return items;\r\n}\r\n\r\nexport default function CreaturesStats(props) {\r\n    const items = getItems(props.creatureNamesRef, props.creatures, props.setCreatures, props.resultDamage);\r\n    return (\r\n        <div className=\"mt-1 mb-3\">\r\n            <Collapse accordion key={\"Creatures\"} items={items} />\r\n        </div>\r\n    );\r\n}","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport CreaturesStats from \"./CreaturesStats\";\r\nimport CreatureDataView from \"./CreatureDataView\";\r\nimport { memo, useState } from 'react';\r\nimport { defaultCreatures, defaultCreaturesAlt } from '../entities/ECreatures';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport StaticPopoverRenderer from '../viewComponents/popover/StaticPopoverRenderer';\r\nimport Global from '../helpers/Global';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { buildExtraDamageView, buildExtraDamageButtons } from '../main/SummaryView';\r\nimport { Divider } from 'antd';\r\n\r\n\r\nconst questionPopoverHeader = (<b>Creatures</b>);\r\n\r\nconst questionPopoverBody = (\r\n    <>\r\n        <div className=\"mb-2\"><b>Parsed from:</b></div>\r\n        <div><i>{Global.creatureParseVersion}</i></div>\r\n        <div><i>{Global.creatureParseVersionName}</i></div>\r\n    </>\r\n);\r\n\r\nconst questionPopover = new StaticPopoverRenderer(questionPopoverHeader, questionPopoverBody, 'CreatureViewQuestionPopoverPlace');\r\n\r\nconst CreaturesView = memo(function CreaturesView({creatureNamesRef, creatures, setCreatures, resultDamage, extraDamage, setExtraDamage, boostDamageRef, setBoostDamage}) {\r\n    console.log(\"CreaturesView\")\r\n    const [alt, setAlt] = useState(false);\r\n    function resetCreatures(e) {\r\n        if (alt) {\r\n            setCreatures(defaultCreaturesAlt());\r\n        } else {\r\n            setCreatures(defaultCreatures());\r\n        }\r\n    }\r\n    function checkAlt(e) {\r\n        setAlt(!alt);\r\n    }\r\n    function onQClick(e) {\r\n        questionPopover.renderToggle(e.target);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"4\">\r\n                <Accordion.Header>\r\n                    <div id=\"CreatureViewQuestionPopoverPlace\"></div>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '12rem'}}>\r\n                            <span className=\"ac-text\">Creatures</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '2rem'}} onClick={onQClick}>?</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <div >\r\n                        <InputGroup className=\"d-flex justify-content-center mt-1 mb-1\">\r\n                            <InputGroup.Text>\r\n                                <UCheckbox onChange={checkAlt} checked={alt}><small><b className=\"ps-1\">Alt</b></small></UCheckbox>\r\n                            </InputGroup.Text>\r\n                            <Button size=\"sm\" variant=\"warning\" onClick={resetCreatures}><b>Reset to Bosses</b></Button>\r\n                        </InputGroup>\r\n                    </div>\r\n                    <Divider className=\"mb-2\">Extra Damage</Divider>\r\n                    {buildExtraDamageView(extraDamage, setExtraDamage, boostDamageRef, setBoostDamage, false)}\r\n                    <div className=\"m-2\" />\r\n                    {buildExtraDamageButtons(extraDamage, setExtraDamage)}\r\n                    <Divider className=\"mt-3 mb-3\"></Divider>\r\n                    <CreaturesStats creatureNamesRef={creatureNamesRef} creatures={creatures} setCreatures={setCreatures} resultDamage={resultDamage} />\r\n                    <CreatureDataView />\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default CreaturesView;","import Col from 'react-bootstrap/Col';\r\nimport { keyValueBadge } from '../helpers/RowBuilder';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { memo } from 'react';\r\nimport { Divider } from 'antd';\r\n\r\n\r\nfunction resultBadges(style, left1, right1, left2, right2) {\r\n    return (\r\n        <div className=\"col d-flex justify-content-center\">\r\n            <Stack className='pb-2' direction=\"horizontal\" gap={1}>\r\n                {keyValueBadge(style, '9rem', left1,  right1)}\r\n                {keyValueBadge(style, '9rem', left2,  right2)}\r\n            </Stack>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AAView = memo(function AAView({resultDamage}) {\r\n    if (!resultDamage.antiArmor) {\r\n        return (<></>);\r\n    }\r\n    const antiArmor = resultDamage.antiArmor;\r\n    let aab = antiArmor.b.toFixed(1) + \"%\";\r\n    let aae = antiArmor.e.toFixed(1) + \"%\";\r\n    let aaf = antiArmor.f.toFixed(1) + \"%\";\r\n    let aac = antiArmor.c.toFixed(1) + \"%\";\r\n    let aap = antiArmor.p.toFixed(1) + \"%\";\r\n    let aar = antiArmor.r.toFixed(1) + \"%\";\r\n    function getAATail(aa, aai) {\r\n        let aav = (1 - ((1 - aa / 100.0) * aai)) * 100.0;\r\n        return \" (\" + aav.toFixed(1) + \"%)\";\r\n    }\r\n    if (antiArmor.insect > 0) {\r\n        let aai = 1 - antiArmor.insect / 100.0;\r\n        aab += getAATail(antiArmor.b, aai);\r\n        aae += getAATail(antiArmor.e, aai);\r\n        aaf += getAATail(antiArmor.f, aai);\r\n        aac += getAATail(antiArmor.c, aai);\r\n        aap += getAATail(antiArmor.p, aai);\r\n        aar += getAATail(antiArmor.r, aai);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className='mt-1 mb-2'>🛡️ Anti Armor</Divider>\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        {resultBadges(\"badge bg-light-cream-outline ms-1 me-1 mb-1\", \"💥\", aab, \"⚡\", aae)}\r\n                        {resultBadges(\"badge bg-light-cream-outline ms-1 me-1 mb-1\", \"🔥\", aaf, \"❄️\", aac)}\r\n                        {resultBadges(\"badge bg-light-cream-outline ms-1 me-1\", \"☢️\", aar, \"☣️\", aap)}\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default AAView;","import { memo } from 'react';\r\nimport { Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nimport DamageDetailsCard from './DamageDetailsCard';\r\nimport AAView from './AAView';\r\n\r\n\r\nfunction getDamageViews(resultDamage) {\r\n    let damageViews = [];\r\n    if (!resultDamage.damageDetails) {\r\n        return (<></>);\r\n    }\r\n    for (let i = 0; i < resultDamage.damageDetails.length; i++) {\r\n        damageViews.push(<DamageDetailsCard key={i} resultDamage={resultDamage} damageData={resultDamage.damageDetails[i]} />);\r\n    }\r\n    if (damageViews.length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className='mt-3 mb-2'>💢 Damage</Divider>\r\n            <Row>\r\n                {damageViews}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst DamageDetails = memo(function DamageDetails({resultDamage}) {\r\n    console.log(\"DamageDetails\");\r\n    if (!resultDamage) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <AAView resultDamage={resultDamage} />\r\n            {getDamageViews(resultDamage)}\r\n        </>\r\n    );\r\n});\r\n\r\nexport default DamageDetails;","import Card from 'react-bootstrap/Card';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport { memo, useState } from 'react';\r\nimport { getSymbolStyle } from '../helpers/AdditionalDView';\r\nimport { getNumberEmoji } from '../helpers/Emoji.js';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\n\r\nfunction getRow(leftValue, rightValue, leftColor, rightColor, show=true) {\r\n    return (show) ? keyValueRow((<span className=\"pt-0 pb-0\">{leftValue}</span>), (<span className=\"pt-0 pb-0\"><strong>{rightValue}</strong></span>), leftColor, rightColor) : (<></>);\r\n}\r\n\r\nfunction showExplosive(damageData, resultDamage) {\r\n    return damageData.type === \"dtPhysical\" && damageData.kind === \"physical\" && damageData.time === 0 && resultDamage.explosive > 0;\r\n}\r\n\r\nfunction getAnyCreatureBonus(resultDamage) {\r\n    for (let [, bonus] of resultDamage.creatureBonus) {\r\n        if (bonus.name === \"any\") {\r\n            return bonus.value / 100.0;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getCreatureNames(resultDamage) {\r\n    let result = [\"general\"];\r\n    for (let [key,] of resultDamage.creatureBonus) {\r\n        result.push(key);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getResult(resultDamage, damageData, additionalBonus=0) {\r\n    const damageValue = damageData.damage * ((damageData.time > 0) ? damageData.time : 1);\r\n    let bonusMult = resultDamage.bonusMult[damageData.type] - 1 + getAnyCreatureBonus(resultDamage) + additionalBonus;\r\n    if (damageData.kind === \"explosive\") {\r\n        bonusMult += resultDamage.expDTypeBonus;\r\n    }\r\n    const bonusDamage = damageValue * bonusMult;\r\n    const bonusText = \"+\" + (bonusMult * 100).toFixed(1) + \"% (+\" + bonusDamage.toFixed(1) + \")\";\r\n    const crit = resultDamage.displayedCrit / 100.0;\r\n    const critValue = damageValue * crit;\r\n    const critText = \"+\" + resultDamage.displayedCrit.toFixed(1) + \"%  (+\" + critValue.toFixed(1) + \")\";\r\n    const sneak = (resultDamage.isSneak) ? resultDamage.displayedSneak / 100.0 : 0;\r\n    const totalSneakValue = sneak * damageValue;\r\n    const totalDamageBonusMin = resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer;\r\n    const totalDamageBonusMinValue = (damageValue + bonusDamage + totalSneakValue) * (totalDamageBonusMin - 1);\r\n    const totalDamageBonusMinPercent = (totalDamageBonusMin - 1) * 100;\r\n    const totalDamageBonusMax = resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer * resultDamage.totalBonus.executioner;\r\n    const totalDamageBonusMaxValue = (damageValue + bonusDamage + totalSneakValue) * (totalDamageBonusMax - 1);\r\n    const totalDamageBonusMaxPercent = (resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer * resultDamage.totalBonus.executioner - 1) * 100;\r\n    let totalDamageBonusText = \"\";\r\n    if (totalDamageBonusMin === totalDamageBonusMax) {\r\n        totalDamageBonusText = \"+\" + totalDamageBonusMinPercent.toFixed(1) + \"% (+\" + totalDamageBonusMinValue.toFixed(1) + \")\";\r\n    } else {\r\n        totalDamageBonusText = \"+\" + totalDamageBonusMinPercent.toFixed(1) + \"% / +\" + totalDamageBonusMaxPercent.toFixed(1) + \"%\"\r\n        + \" (+\" + totalDamageBonusMinValue.toFixed(1) + \" / +\" + totalDamageBonusMaxValue.toFixed(1) + \")\";\r\n    }\r\n    const sneakText = \"+\" + resultDamage.displayedSneak.toFixed(1) + \"% (+\" + totalSneakValue.toFixed(1) + \")\";\r\n    const resultSneakValue = (resultDamage.isSneak) ? totalSneakValue : 0;\r\n    const resultCritValue = (resultDamage.isCrit) ? critValue : 0;\r\n    const totalDamageMin = (damageValue + bonusDamage + resultSneakValue) * totalDamageBonusMin + resultCritValue;\r\n    const totalDamageMax = (damageValue + bonusDamage + resultSneakValue) * totalDamageBonusMax + resultCritValue;\r\n    const explosiveValueMin = (damageValue + bonusDamage) * totalDamageBonusMin * resultDamage.explosive / 100.0;\r\n    const explosiveValueMax = (damageValue + bonusDamage) * totalDamageBonusMax * resultDamage.explosive / 100.0;\r\n    let explosiveText = explosiveValueMin.toFixed(1);\r\n    const explosiveCritValueMin = critValue * resultDamage.explosive / 100.0 + explosiveValueMin;\r\n    const explosiveCritValueMax = critValue * resultDamage.explosive / 100.0 + explosiveValueMax;\r\n    let explosiveCritText = explosiveCritValueMin.toFixed(1);\r\n    let totalDamageText = totalDamageMin.toFixed(1);\r\n    if (totalDamageMin < totalDamageMax) {\r\n        totalDamageText += \" (\" + totalDamageMax.toFixed(1) + \")\";\r\n        explosiveText += \" (\" + explosiveValueMax.toFixed(1) + \")\";\r\n        explosiveCritText += \" (\" + explosiveCritValueMax.toFixed(1) + \")\";\r\n    }\r\n    if (damageData.time > 0) {\r\n        const tail = \" / \" + damageData.time.toFixed(0) + \" sec.\";\r\n        totalDamageText += tail;\r\n        explosiveText += tail;\r\n        explosiveCritText += tail;\r\n    }\r\n    return {\r\n        base: damageData.damage.toFixed(1),\r\n        bonus: bonusText,\r\n        totalBonus: totalDamageBonusText,\r\n        explosive: resultDamage.explosive.toFixed(1),\r\n        sneak: sneakText,\r\n        crit: critText,\r\n        total: totalDamageText,\r\n        totalExp: explosiveText,\r\n        totalExpCrit: explosiveCritText,\r\n    };\r\n}\r\n\r\nconst DamageDetailsCard = memo(function DamageDetailsCard({resultDamage, damageData}) {\r\n    const [creature, setCreature] = useState(\"general\");\r\n    if (creature !== \"general\" && !resultDamage.creatureBonus.get(creature)) {\r\n        setCreature(\"general\");\r\n    }\r\n    const numberEmoji = getNumberEmoji(damageData.index + 1);\r\n    const onDropdownSelect = (e) => {\r\n        setCreature(e);\r\n    };\r\n    const currentCreature = resultDamage.creatureBonus.get(creature);\r\n    let additionalBonus = 0;\r\n    if (currentCreature) {\r\n        additionalBonus = currentCreature.value / 100.0;\r\n    }\r\n    const result = getResult(resultDamage, damageData, additionalBonus);\r\n    const creatureNames = getCreatureNames(resultDamage);\r\n    let dropdownItems = [];\r\n    for (let i = 0; i < creatureNames.length; i++) {\r\n        const creatureName = creatureNames[i];\r\n        dropdownItems.push(<Dropdown.Item key={i} eventKey={creatureName}>{creatureName}</Dropdown.Item>);\r\n    }\r\n    return (\r\n        <div className=\"col d-flex justify-content-center mb-2\">\r\n            <Card className=\"main-display-adjustable shadow-outline-unselected\">\r\n                <Card.Header className=\"ps-3 p-1\">\r\n                    <div className=\"d-flex\">\r\n                        <div style={{width: '33%'}} className=\"d-flex justify-content-start center-text\">\r\n                            {getSymbolStyle(damageData.type, damageData.kind)[0]}\r\n                        </div>\r\n                        <div style={{width: '34%'}} className=\"d-flex justify-content-center\">\r\n                            <DropdownButton variant='default' size=\"sm\" onSelect={onDropdownSelect} title={<strong><small>{creature}</small></strong>}>\r\n                                {dropdownItems}\r\n                            </DropdownButton>\r\n                        </div>\r\n                        <div style={{width: '33%'}} className=\"d-flex justify-content-end me-2 center-text\">\r\n                            {numberEmoji}\r\n                        </div>\r\n                    </div>\r\n\r\n                </Card.Header>\r\n                <Card.Body className=\"pt-0 pb-0 ps-2 pe-2\">\r\n                    {getRow(\"Base Damage:\", result.base, \"default\", \"purple\")}\r\n                    {getRow(\"Bonus:\", result.bonus, \"default\", \"purple\")}\r\n                    {getRow(\"Sneak:\", result.sneak, \"default\", \"purple\", resultDamage.isSneak)}\r\n                    {getRow(\"Total Bonus:\", result.totalBonus, \"default\", \"purple\")}\r\n                    {getRow(\"Explosive:\", result.explosive + \"%\", \"default\", \"purple\", showExplosive(damageData, resultDamage))}\r\n                    {getRow(\"Crit:\", result.crit, \"default\", \"purple\", resultDamage.isCrit)}\r\n                </Card.Body>\r\n                <Card.Footer className=\"ps-2 pe-2 text-muted\">\r\n                    {getRow(\"Total Damage:\", result.total, \"default\", \"red\")}\r\n                    {getRow(\"Explosive:\", result.totalExp, \"default\", \"red\", showExplosive(damageData, resultDamage))}\r\n                    {getRow(\"Explosive Crit:\", result.totalExpCrit, \"default\", \"red\", showExplosive(damageData, resultDamage) && resultDamage.isCrit)}\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default DamageDetailsCard;\r\n","import CreaturesProduction from '../creature/CreaturesProduction';\r\n\r\n\r\nexport default class DamageEmulator {\r\n    constructor(weapon, creatureInfos) {\r\n        this.weapon = weapon;\r\n        this.creatureInfos = creatureInfos;\r\n    }\r\n\r\n    needToStopByTime(timeLimit, creatures) {\r\n        if (!timeLimit) {\r\n            return false;\r\n        }\r\n        const name = timeLimit[0];\r\n        const time = timeLimit[1];\r\n        if (name === \"average\") {\r\n            let totalTime = 0;\r\n            for (let i = 0; i < creatures.length; i++) {\r\n                const creature = creatures[i];\r\n                totalTime += creature.totalTime();\r\n            }\r\n            totalTime = Math.floor(totalTime / 4);\r\n            return totalTime > time;\r\n        }\r\n        for (let i = 0; i < creatures.length; i++) {\r\n            const creature = creatures[i];\r\n            if (creature.name === name) {\r\n                return (creature.totalTime() > time);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // timeLimit = [\"Average\", time], [\"creaturename\", time]\r\n    emulate(steps=10000, timeLimit=null) {\r\n        const creatures = CreaturesProduction.produce(this.creatureInfos, this.weapon.getAntiArmor());\r\n        let step = 0;\r\n        for (; step < steps; step++) {\r\n            let deadCount = 0;\r\n            const hit = this.weapon.hit();\r\n            for (let i = 0; i < creatures.length; i++) {\r\n                const creature = creatures[i];\r\n                if (creature.takeDamage(hit)) {\r\n                    creature.formDeadReport(this.weapon.getReloadsCount(), this.weapon.getReloadsTime());\r\n                    deadCount += 1;\r\n                }\r\n            }\r\n            if (deadCount === creatures.length || this.needToStopByTime(timeLimit, creatures)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Check death and form a report\r\n        const resultArmor = new Map();\r\n        for (let i = 0; i < creatures.length; i++) {\r\n            const creature = creatures[i];\r\n            if (!creature.isDead()) {\r\n                creature.formDeadReport(this.weapon.getReloadsCount(), this.weapon.getReloadsTime());\r\n            }\r\n            resultArmor.set(creature.getName(), creature.getArmor());\r\n        }\r\n\r\n        return  {\r\n            weaponName: this.weapon.getName(),\r\n            weaponType: this.weapon.getType(),\r\n            defaultWeaponName: this.weapon.getDefaultName(),\r\n            damageDetails: this.weapon.getDamages(),\r\n            expDTypeBonus: this.weapon.getExplosiveDamageTypeBonus(),\r\n            bonusMult: this.weapon.getBonusMult(),\r\n            totalBonus: this.weapon.getTotalBonus(),\r\n            tDamage: this.weapon.getDisplayedDamage(),\r\n            antiArmor: this.weapon.getAntiArmor(),\r\n            displayedCrit: this.weapon.getCritBonus(),\r\n            displayedSneak: this.weapon.getSneakBonus(),\r\n            isCrit: this.weapon.isCrit(),\r\n            isSneak: this.weapon.isSneak(),\r\n            creatureBonus: this.weapon.getCreatureBonus(),\r\n            strengthBonus: this.weapon.getStrengthBonus(),\r\n            explosive: this.weapon.getExplosiveBonus(),\r\n            shotSize: this.weapon.getShotSize(),\r\n            reloadTime: this.weapon.getReloadTime(),\r\n            fireRate: this.weapon.getFireRate(),\r\n            ammoCapacity: this.weapon.getAmmoCapacity(),\r\n            strength: this.weapon.getStrength(),\r\n            resultArmor: resultArmor,\r\n        };\r\n    }\r\n}","export default class Weapon {\r\n\r\n    constructor(weaponSpecsAssembler) {\r\n        this.damages = weaponSpecsAssembler.getDamages();\r\n        this.name = weaponSpecsAssembler.getWeaponName();\r\n        this.defaultName = weaponSpecsAssembler.getDefaultWeaponName();\r\n        this.critDamages = weaponSpecsAssembler.getCritDamages();\r\n        this.shotSize = weaponSpecsAssembler.getShotSize();\r\n        this.reloadTime = weaponSpecsAssembler.getReloadTime();\r\n        this.fireRate = weaponSpecsAssembler.getFireRate();\r\n        this.ammoCapacity = weaponSpecsAssembler.getAmmoCapacity();\r\n        this.antiArmor = weaponSpecsAssembler.getAntiArmor();\r\n        this.strengthBoost = weaponSpecsAssembler.getStrengthBoost();\r\n        this.strength = weaponSpecsAssembler.getStrength();\r\n        this.bonusMult = weaponSpecsAssembler.getBaseDamageMult();\r\n        this.critBoost = weaponSpecsAssembler.getCritBoost();\r\n        this.explosiveBonus = weaponSpecsAssembler.getExplosiveBonus();\r\n        this.explosiveDamageTypeBonus = weaponSpecsAssembler.getExplosivePhysicalBonus();\r\n        this.weaponType = weaponSpecsAssembler.getWeaponType();\r\n        this.headShotFrequency = weaponSpecsAssembler.getHeadShotFrequency();\r\n        this.critShotFrequency = weaponSpecsAssembler.getCritShotFrequency();\r\n        this.sneakShotFrequency = weaponSpecsAssembler.getSneakShotFrequency();\r\n        this.creatureDamageBonuses = weaponSpecsAssembler.getCreatureDamageBonuses();\r\n        this.firstBloodBonus = weaponSpecsAssembler.getFirstBloodBonus();\r\n        this.lastShotBonus = weaponSpecsAssembler.getLastShotBonus();\r\n        this.cripple = weaponSpecsAssembler.getCripple();\r\n        this.bash = weaponSpecsAssembler.getBash();\r\n        this.powerAttack = weaponSpecsAssembler.getPowerAttack();\r\n        this.chargeTime = weaponSpecsAssembler.getChargeTime();\r\n        this.chargePenalty = weaponSpecsAssembler.getChargePenalty();\r\n        this.sneak = weaponSpecsAssembler.getSneak();\r\n        this.totalDamageBonus = weaponSpecsAssembler.getTotalDamageBonus();\r\n        this.magazine = this.ammoCapacity;\r\n        this.enableCrit = true;\r\n        this.enableHeadShot = true;\r\n        this.resultDamage = {bulletCount: this.shotSize, expDTypeBonus: this.explosiveDamageTypeBonus, lastShotBonus: 0, firstBloodBonus: this.firstBloodBonus, creatureDamageBonuses: this.creatureDamageBonuses, headShot: false, critShot: false, sneakShot: false, weaponType: this.weaponType,\r\n            deltaTime: 0, powerAttack: this.powerAttack, bash: this.bash, cripple: 0, bonusMult: this.bonusMult,\r\n            expBonus: this.explosiveBonus, sneak: this.sneak, totalDamageBonus: this.totalDamageBonus.value, critBoost: this.critBoost,\r\n            tenderizer: this.totalDamageBonus.tenderizer, executionerBonus: this.totalDamageBonus.executioner, damages: [],\r\n            critDamages: this.critDamages};\r\n        this.reloadsCount = 0;\r\n        this.reloadTimeCounting = true;\r\n        this.alwaysMaxHit = false;\r\n        this.reloadsTotalTime = 0;\r\n        this.hitCount = 0;\r\n        this.hit();\r\n    }\r\n\r\n    setEnableCrit(flag) {\r\n        this.enableCrit = flag;\r\n    }\r\n\r\n    setEnableHeadShot(flag) {\r\n        this.enableHeadShot = flag;\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getDefaultName() {\r\n        return this.defaultName;\r\n    }\r\n\r\n    getType() {\r\n        return this.weaponType;\r\n    }\r\n\r\n    setLastShotBonus(value) {\r\n        this.lastShotBonus = value;\r\n    }\r\n\r\n    getHeadShotFrequency() {\r\n        return this.headShotFrequency;\r\n    }\r\n\r\n    setFirstBloodBonus(value) {\r\n        this.firstBloodBonus = value;\r\n        this.resultDamage.firstBloodBonus = value;\r\n    }\r\n\r\n    getChargeTime() {\r\n        return this.chargeTime;\r\n    }\r\n\r\n    setChargeTime(value) {\r\n        this.chargeTime = value;\r\n    }\r\n\r\n    getDamages() {\r\n        return this.damages;\r\n    }\r\n\r\n    getCreatureBonus() {\r\n        return this.creatureDamageBonuses;\r\n    }\r\n\r\n    getExplosiveDamageTypeBonus() {\r\n        return this.explosiveDamageTypeBonus;\r\n    }\r\n\r\n    getBonusMult() {\r\n        return this.bonusMult;\r\n    }\r\n\r\n    getTotalBonus() {\r\n        return this.totalDamageBonus;\r\n    }\r\n\r\n    setFireRate(fireRate) {\r\n        this.fireRate = fireRate;\r\n    }\r\n\r\n    setAlwaysMaxHit(flag) {\r\n        this.alwaysMaxHit = flag;\r\n    }\r\n\r\n    disableReloadTimeCounting() {\r\n        this.reloadTimeCounting = false;\r\n    }\r\n\r\n    getMaxHit() {\r\n        return this.hit();\r\n    }\r\n\r\n    getShotSize() {\r\n        return this.shotSize;\r\n    }\r\n\r\n    getStrength() {\r\n        return this.strength;\r\n    }\r\n\r\n    getStrengthBonus() {\r\n        return this.strengthBoost;\r\n    }\r\n\r\n    getCritBonus() {\r\n        return parseInt(this.critBoost * 100.0);\r\n    }\r\n\r\n    getSneakBonus() {\r\n        return parseInt(this.sneak * 100.0);\r\n    }\r\n\r\n    getExplosiveBonus() {\r\n        return this.explosiveBonus * 100.0;\r\n    }\r\n\r\n    getFireRate() {\r\n        return this.fireRate;\r\n    }\r\n\r\n    getAmmoCapacity() {\r\n        return this.ammoCapacity;\r\n    }\r\n\r\n    getReloadTime() {\r\n        return this.reloadTime;\r\n    }\r\n\r\n    getAntiArmor() {\r\n        return this.antiArmor;\r\n    }\r\n\r\n    // Just to display total value as in pip boy (no time)\r\n    getDisplayedDamage() {\r\n        let result = 0;\r\n        let hitCount = (this.shotSize === 0) ? 1 : this.shotSize;\r\n        for (let i = 0; i < this.damages.length; i++) {\r\n            const damage = this.damages[i];\r\n            if (!damage.isUsed || damage.time > 0) {\r\n                continue;\r\n            }\r\n            let curDamage = damage.damage * this.bonusMult[damage.type];\r\n            let expDamage = 0;\r\n            if (damage.type === 'dtPhysical' && damage.kind === 'physical') {\r\n                expDamage = curDamage * this.explosiveBonus;\r\n            }\r\n            curDamage /= hitCount;\r\n            curDamage += expDamage;\r\n            result += curDamage;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getReloadsCount() {\r\n        return this.reloadsCount;\r\n    }\r\n\r\n    getReloadsTime() {\r\n        return this.reloadsTotalTime;\r\n    }\r\n\r\n    isSneak() {\r\n        return this.sneakShotFrequency !== 0;\r\n    }\r\n\r\n    getCritShotFrequency() {\r\n        return this.critShotFrequency;\r\n    }\r\n\r\n    isCrit() {\r\n        return this.critShotFrequency !== 0 && this.enableCrit;\r\n    }\r\n\r\n    // Result array is reused every hit, editing is prohibited as it contains ref data\r\n    hit() {\r\n        this.resultDamage.damages.length = 0;\r\n        let dTime = 10 / this.fireRate;\r\n\r\n        // Charge\r\n        dTime += this.chargeTime;\r\n\r\n        // Reload\r\n        if (this.magazine === 0) {\r\n            this.magazine = this.ammoCapacity;\r\n            this.reloadsCount += 1;\r\n            this.reloadsTotalTime += this.reloadTime;\r\n            if (this.reloadTimeCounting) {\r\n                dTime += this.reloadTime;\r\n            }\r\n        }\r\n\r\n        // Last shot\r\n        if (this.magazine === 1 && this.chanceTriggered(25)) {\r\n            this.resultDamage.lastShotBonus = this.lastShotBonus;\r\n        } else {\r\n            this.resultDamage.lastShotBonus = 0;\r\n        }\r\n        this.magazine -= 1;\r\n        this.hitCount += 1;\r\n        this.resultDamage.deltaTime = dTime;\r\n\r\n        // Head shot\r\n        if (this.headShotFrequency === 0 || !this.enableHeadShot) {\r\n            this.resultDamage.headShot = false;\r\n        } else {\r\n            this.resultDamage.headShot = this.chanceTriggered(this.headShotFrequency);\r\n        }\r\n\r\n        // Crit shot\r\n        if (this.critShotFrequency === 0 || !this.enableCrit) {\r\n            this.resultDamage.critShot = false;\r\n        } else {\r\n            this.resultDamage.critShot = this.hitIfFrequency(this.critShotFrequency);\r\n        }\r\n\r\n        // Sneak\r\n        if (this.sneakShotFrequency === 0) {\r\n            this.resultDamage.sneakShot = false;\r\n        } else {\r\n            this.resultDamage.sneakShot = this.hitIfFrequency(this.sneakShotFrequency);\r\n        }\r\n\r\n        // Cripple\r\n        if (this.chanceTriggered(this.cripple.chance) || this.resultDamage.headShot) {\r\n            this.resultDamage.cripple = this.cripple.value;\r\n        } else {\r\n            this.resultDamage.cripple = 0;\r\n        }\r\n\r\n        // Damages\r\n        for (let i = 0; i < this.damages.length; i++) {\r\n            const damage = this.damages[i];\r\n            if (damage.damage > 0 && damage.isUsed && this.chanceTriggered(damage.finalAccuracy) && this.chanceTriggered(damage.chance)) {\r\n                damage.damage = damage.defDamage * this.chargePenalty;\r\n                this.resultDamage.damages.push(damage);\r\n            }\r\n        }\r\n        return this.resultDamage;\r\n    }\r\n\r\n    hitIfFrequency(frequency) {\r\n        if (this.alwaysMaxHit) {\r\n            return true;\r\n        }\r\n        return this.hitCount % frequency === 0;\r\n    }\r\n\r\n    // between 0 - 100\r\n    chanceTriggered(chance) {\r\n        if (this.alwaysMaxHit) {\r\n            return true;\r\n        }\r\n        return Math.random() < (chance / 100.0);\r\n    }\r\n}","import { intersects } from \"../helpers/Array\";\r\n\r\n\r\nexport default class StuffBoostsCollector {\r\n\r\n    static collectAllItems(stuffBoosts, property, collector) {\r\n        stuffBoosts.forEach((value, key) => {\r\n            const maxItem = StuffBoostsCollector.getMaxItem(value);\r\n            if (maxItem.property === property) {\r\n                collector(maxItem);\r\n            }\r\n        });\r\n    }\r\n\r\n    static weaponNameOrTypeSatisfied(weaponName, weaponType, maxItem) {\r\n        if (maxItem.name) {\r\n            return maxItem.name.split(\",\").includes(weaponName);\r\n        } else if (maxItem.type) {\r\n            let types = maxItem.type.split(\",\");\r\n            if (types.length === 0) {\r\n                return true;\r\n            }\r\n            const lastType = types[0];\r\n            let satisfyNameOrType;\r\n            if (lastType === \"!\") { // Not include\r\n                types = types.slice(1);\r\n                satisfyNameOrType = true;\r\n            } else {\r\n                satisfyNameOrType = false;\r\n            }\r\n            if (types.includes(weaponType)) {\r\n                satisfyNameOrType = !satisfyNameOrType;\r\n            }\r\n            return satisfyNameOrType;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static collect(weaponName, weaponType, weaponTags, stuffBoosts, property, customStacker=null) {\r\n        let result = 0.0;\r\n        stuffBoosts.forEach((value, key) => {\r\n            const maxItem = StuffBoostsCollector.getMaxItem(value);\r\n            const satisfyNameOrType = StuffBoostsCollector.weaponNameOrTypeSatisfied(weaponName, weaponType, maxItem);\r\n            let additional = [];\r\n            if (maxItem.tag) {\r\n                additional = maxItem.tag.split(\",\");\r\n            }\r\n            let satisfyTags = (additional.length > 0) ? intersects(additional, weaponTags) : true;\r\n            if (maxItem.property === property && satisfyTags && satisfyNameOrType) {\r\n                if (customStacker) {\r\n                    customStacker(maxItem.value);\r\n                } else {\r\n                    result += maxItem.value;\r\n                }\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    static getMaxItem(items) {\r\n        if (items.length === 1) {\r\n            return items[0];\r\n        }\r\n        let max = null;\r\n        let maxItem = null;\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n            if (max === null || item.value > max) {\r\n                maxItem = item;\r\n                max = item.value;\r\n            }\r\n        }\r\n        return maxItem;\r\n    }\r\n}","export function intersects(array1, array2) {\r\n    if (!array1 || array1 === null || array1.length === 0 || !array2 || array2 === null || array2.length === 0) {\r\n        return false;\r\n    }\r\n    let arrayLess = array1;\r\n    let arrayMore = array2;\r\n    if (array1.length > array2.length) {\r\n        arrayLess = array2;\r\n        arrayMore = array1;\r\n    }\r\n    for (let i = 0; i < arrayLess.length; i++) {\r\n        const value = arrayLess[i];\r\n        if (arrayMore.includes(value)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function deleteItemFromArray(array, index) {\r\n    array.splice(index, 1);\r\n}","\r\n// TODO: adjust accuracy by using default accuracy and possible effects from legendary, perks, consumables\r\n// Currently 100\r\nexport default class AccuracyAdjuster {\r\n\r\n    static adjustByLegendary(damages, legendary) {\r\n\r\n    }\r\n\r\n    static adjustByPerks(damages, legendary) {\r\n\r\n    }\r\n\r\n    static adjustByConsumables(damages, consumables) {\r\n\r\n    }\r\n}","import StuffBoostsCollector from '../../boostStuff/StuffBoostsCollector';\r\nimport { makeDamageItemCopy, buildBleedDamage } from '../../helpers/mods/DamageSetter';\r\nimport AccuracyAdjuster from '../../helpers/AccuracyAdjuster';\r\n\r\n\r\nexport default class WeaponSpecsAssembler {\r\n    \r\n    constructor(wSpec, perks, extraDamageSettings, additionalDamages, stuffBoost, playerStats) {\r\n        this.wSpec = wSpec;\r\n        this.perks = perks;\r\n        this.extraDamageSettings = extraDamageSettings;\r\n        this.additionalDamages = additionalDamages;\r\n        this.stuffBoost = stuffBoost;\r\n        this.playerStats = playerStats;\r\n    }\r\n    \r\n    getDamages() {\r\n        let result = [];\r\n        for (let i = 0; i < this.wSpec.damages.length; i++) {\r\n            const damage = makeDamageItemCopy(this.wSpec.damages[i]);\r\n            damage.defDamage = damage.damage;\r\n            result.push(damage);\r\n        }\r\n        result = result.concat(this.getDamageFromStuff());\r\n        this.setFinalAccuracy(result);\r\n        return result;\r\n    }\r\n\r\n    getCritBoost() {\r\n        let crit = this.perks.better_criticals.displayed_value + 100 + this.wSpec.crit + StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Crit\");\r\n        return crit / 100.0;\r\n    }\r\n\r\n    getCritDamages() {\r\n        let result = [];\r\n        for (let i = 0; i < this.wSpec.critDamages.length; i++) {\r\n            result.push(makeDamageItemCopy(this.wSpec.critDamages[i]));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    collectTags() {\r\n        let tags = [...this.wSpec.tags];\r\n        if (this.wSpec.ammoType.codeName !== \"\") {\r\n            tags.push(this.wSpec.ammoType.codeName);\r\n        }\r\n        return tags;\r\n    }\r\n\r\n    getStrengthBoost() {\r\n        return this.wSpec.strengthBoost * this.getStrength();\r\n    }\r\n\r\n    getStrength() {\r\n        let strength = this.wSpec.strPoints + this.playerStats.strength.value;\r\n        strength += StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Strength\");\r\n        if (strength < 0) {\r\n            strength = 0;\r\n        }\r\n        return strength;\r\n    }\r\n\r\n    collectFromLegendary(property) {\r\n        let result = 0;\r\n        for (let i = 0; i < this.wSpec.legendary.length; i++) {\r\n            const leg = this.wSpec.legendary[i];\r\n            if (leg[2] === property) {\r\n                result += leg[1];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getExplosiveBonus() {\r\n        return (this.wSpec.exp + this.wSpec.exp * this.perks.demolition_expert.displayed_value / 100.0) / 100.0;\r\n    }\r\n\r\n    getCreatureDamageBonuses() {\r\n        let result = new Map();\r\n\r\n        // User\r\n        if (this.additionalDamages.damageToCreature.is_used) {\r\n            result.set(\"any\", {name: \"any\", value: this.additionalDamages.damageToCreature.value});\r\n        }\r\n\r\n        // Perks\r\n        if (this.perks.glow_sight.displayed_value > 0) {\r\n            result.set(\"glowing\", {name: \"glowing\", value: this.perks.glow_sight.displayed_value});\r\n        }\r\n\r\n        // Weapon Effects\r\n        for (let i = 0; i < this.wSpec.creature.length; i++) {\r\n            const creature = this.wSpec.creature[i];\r\n            const name = creature.name.toLowerCase();\r\n            const item = result.get(name);\r\n            if (item) {\r\n                item.value += creature.value;\r\n            } else {\r\n                result.set(name, {name: name, value: creature.value});\r\n            }\r\n        }\r\n\r\n        // Consumables\r\n        function collector(item) {\r\n            let types = [];\r\n            if (item.name) {\r\n                types = item.name.split(\",\");\r\n            } else {\r\n                types = item.type.split(\",\");\r\n            }\r\n            for (let i = 0; i < types.length; i++) {\r\n                const type = types[i];\r\n                const exist = result.get(type);\r\n                if (exist) {\r\n                    exist.value += item.value;\r\n                } else {\r\n                    result.set(type, {name: type, value: item.value});\r\n                }\r\n            }\r\n        }\r\n        StuffBoostsCollector.collectAllItems(this.stuffBoost.creature, \"BDB\", collector);\r\n        return result;\r\n    }\r\n\r\n    getWeaponType() {\r\n        return this.wSpec.type;\r\n    }\r\n\r\n    getHeadShotFrequency() {\r\n        if (this.extraDamageSettings.useHead) {\r\n            return this.extraDamageSettings.headFreq;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getCritShotFrequency() {\r\n        if (this.extraDamageSettings.useCrit) {\r\n            return this.extraDamageSettings.critFreq;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getSneakShotFrequency() {\r\n        if (this.extraDamageSettings.useSneak) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getFirstBloodBonus() {\r\n        if (this.wSpec.legendary[0][0] === '004f6aa5') {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getLastShotBonus() {\r\n        if (this.wSpec.legendary[1][0] === '006069ec') {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getTotalDamageBonus() {\r\n        let tenderizer = this.perks.tenderizer.displayed_value > 0 ? (1 + this.perks.tenderizer.displayed_value / 100.0) : 1;\r\n        let result = 1.0;\r\n        result *= this.perks.toft.displayed_value > 0 ? (1 + this.perks.toft.displayed_value / 100.0) : 1.0;\r\n\r\n        // Seems that follow through works as TOFT only in sneak mode\r\n        if (this.wSpec.type === \"Heavy\" || this.wSpec.type === \"Thrown\") {\r\n            result *= this.perks.follow_through.displayed_value > 0 ? (1 + this.perks.follow_through.displayed_value / 100.0) : 1.0;\r\n        }\r\n        result *= (this.additionalDamages.tdb.is_used) ? (1 + this.additionalDamages.tdb.value / 100.0) : 1.0;\r\n        let exec = 1 + this.wSpec.totalD / 100.0;\r\n        return {value: result, tenderizer: tenderizer, executioner: exec};\r\n    }\r\n\r\n    getChargeTime() {\r\n        return this.wSpec.chargeTime;\r\n    }\r\n\r\n    getChargePenalty() {\r\n        if (this.wSpec.maxChargeTime === 0) {\r\n            return 1;\r\n        }\r\n        let part = this.wSpec.chargeTime / this.wSpec.maxChargeTime;\r\n        part = (part > 1) ? 1 : part;\r\n        part = part * 0.5;\r\n        return 0.5 + part;\r\n    }\r\n\r\n    getCripple() {\r\n        return {value: this.wSpec.cripple / 100.0, chance: this.wSpec.crippleChance};\r\n    }\r\n\r\n    getBash() {\r\n        return this.wSpec.bash / 100.0;\r\n    }\r\n\r\n    getPowerAttack() {\r\n        return this.wSpec.powerAttack / 100.0;\r\n    }\r\n\r\n    getWeaponName() {\r\n        return this.wSpec.weaponName;\r\n    }\r\n\r\n    getDefaultWeaponName() {\r\n        return this.wSpec.defaultName;\r\n    }\r\n\r\n    getSneak() {\r\n        let sneak = (this.perks.covert_operative.displayed_value > 0) ? (this.perks.covert_operative.displayed_value - 1.0) : 1.0;\r\n        let sandman = this.perks.mister_sandman.displayed_value / 100.0;\r\n        sandman = (this.wSpec.tags.includes(\"HasSilencer\")) ? sandman : 0;\r\n\r\n        // TODO: MeleeGeneral? (means including Unarmed) or just Melee type\r\n        const ninja = (this.wSpec.tags.includes(\"MeleeGeneral\")) ? this.perks.ninja.displayed_value / 100.0 : 0.0;\r\n        const weaponSneak = this.wSpec.sneak / 100.0;\r\n        const stuffSneak = (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Sneak\") / 100.0);\r\n        return sneak + sandman + ninja + weaponSneak + stuffSneak;\r\n    }\r\n\r\n    // This bonus increase physical explosive damage (bobble head explosive), not an explosive part from total damage (Legendary explosive)\r\n    getExplosivePhysicalBonus() {\r\n        return StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"EXP\") / 100.0;\r\n    }\r\n\r\n    getBaseDamageMult() {\r\n        let result = 100 + this.getBonusMultFromPerks() + this.getStrengthBoost() + this.wSpec.bonus + this.collectFromLegendary(\"BDB\");\r\n\r\n        result += StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"BDB\");\r\n        let bResult = result + ((this.additionalDamages.ballisticBDB.is_used) ? (this.additionalDamages.ballisticBDB.value) : 0.0);\r\n        let eResult = result + ((this.additionalDamages.energyBDB.is_used) ? (this.additionalDamages.energyBDB.value) : 0.0);\r\n        let fResult = result + ((this.additionalDamages.fireBDB.is_used) ? (this.additionalDamages.fireBDB.value) : 0.0);\r\n        let pResult = result + ((this.additionalDamages.poisonBDB.is_used) ? (this.additionalDamages.poisonBDB.value) : 0.0);\r\n        let cResult = result + ((this.additionalDamages.coldBDB.is_used) ? (this.additionalDamages.coldBDB.value) : 0.0);\r\n        let rResult = result + ((this.additionalDamages.radBDB.is_used) ? (this.additionalDamages.radBDB.value) : 0.0);\r\n        bResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"BBDB\"));\r\n        eResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"EBDB\"));\r\n        fResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"FBDB\"));\r\n        pResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"PBDB\"));\r\n        cResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"CBDB\"));\r\n        rResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"RBDB\"));\r\n        return {dtPhysical: bResult / 100.0, dtEnergy: eResult / 100.0, dtFire: fResult / 100.0, dtPoison: pResult / 100.0, dtCryo: cResult / 100.0, dtRadiationExposure: rResult / 100.0};\r\n    }\r\n\r\n    getDamageFromStuff() {\r\n        const damages = [];\r\n        function stacker(value) {\r\n            const values = value.split(\" - \");\r\n            const damageValue = parseFloat(values[0]);\r\n            const time = parseFloat(values[1].slice(0, values[1].length - 1));\r\n            const damage = buildBleedDamage(damageValue, time);\r\n            damage.defDamage = damageValue;\r\n            damages.push(damage);\r\n        }\r\n        StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Bleed\", stacker);\r\n        return damages;\r\n    }\r\n\r\n    getBonusMultFromPerks() {\r\n        let result = 0.0;\r\n        result += this.perks.nerd_rage.displayed_value\r\n        result += this.perks.bloody_mess.displayed_value;\r\n        result += this.perks.adrenaline.displayed_value;\r\n        result += this.perks.gun_fu.displayed_value;\r\n        if (this.perks.gladiator.displayed_value > 0 && this.wSpec.type === \"Melee\" && this.wSpec.hand === 1) {\r\n            result += this.perks.gladiator.displayed_value;\r\n        }\r\n        if (this.perks.heavy_gunner.displayed_value > 0 && this.wSpec.type === \"Heavy\" && !this.wSpec.tags.includes(\"Explosive\")) {\r\n            result += this.perks.heavy_gunner.displayed_value;\r\n        }\r\n        if (this.perks.shotgunner.displayed_value > 0 && (this.wSpec.type === \"Shotgun\" || this.wSpec.tags.includes(\"Shotgun\"))) {\r\n            result += this.perks.shotgunner.displayed_value;\r\n        }\r\n        if (this.perks.slugger.displayed_value > 0 && this.wSpec.type === \"Melee\" && this.wSpec.hand === 2) {\r\n            result += this.perks.slugger.displayed_value;\r\n        }\r\n        if (this.perks.iron_fist.displayed_value > 0 && this.wSpec.type === \"Unarmed\") {\r\n            result += this.perks.iron_fist.displayed_value;\r\n        }\r\n        if (this.perks.archer.displayed_value > 0 && this.wSpec.type === \"Bow\") {\r\n            result += this.perks.archer.displayed_value;\r\n        }\r\n        if (this.perks.commando.displayed_value > 0 && this.wSpec.type === \"Rifle\" && this.wSpec.is_auto === 1) {\r\n            result += this.perks.commando.displayed_value;\r\n        }\r\n        if (this.perks.rifleman.displayed_value > 0 && this.wSpec.type === \"Rifle\" && this.wSpec.is_auto === 0) {\r\n            result += this.perks.rifleman.displayed_value;\r\n        }\r\n        if (this.perks.guerrilla.displayed_value > 0 && this.wSpec.type === \"Pistol\" && this.wSpec.is_auto === 1) {\r\n            result += this.perks.guerrilla.displayed_value;\r\n        }\r\n        if (this.perks.gunslinger.displayed_value > 0 && this.wSpec.type === \"Pistol\" && this.wSpec.is_auto === 0) {\r\n            result += this.perks.gunslinger.displayed_value;\r\n        }\r\n        if (this.perks.science.displayed_value > 0 && this.wSpec.type !== \"Heavy\" && this.wSpec.tags.includes(\"Energy\")) {\r\n            result += this.perks.science.displayed_value;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getAntiArmor() {\r\n        let aa = 1 - this.wSpec.aa / 100.0;\r\n        let incisor = 1.0;\r\n        let weaponType = this.wSpec.type;\r\n        if (weaponType === \"All\" || weaponType === \"Melee\" || weaponType === \"Unarmed\") {\r\n            incisor = 1 - this.perks.incisor.displayed_value / 100.0;\r\n        }\r\n        let bow_before_me = 1.0;\r\n        if (weaponType === \"All\" || weaponType === \"Bow\") {\r\n            bow_before_me = 1 - this.perks.bow_before_me.displayed_value / 100.0;\r\n        }\r\n        let tank_killer = 1.0;\r\n        if (weaponType === \"All\" || weaponType === \"Pistol\" || weaponType === \"Rifle\") {\r\n            tank_killer = 1 - this.perks.tank_killer.displayed_value / 100.0;\r\n        }\r\n        let stabilized = 1.0;\r\n        if (weaponType === \"All\" || weaponType === \"Heavy\") {\r\n            stabilized = 1 - this.perks.stabilized.displayed_value / 100.0;\r\n        }\r\n        let bMult = 1;\r\n        StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"BAA\", (value) => bMult *= (1 - value / 100.0));\r\n        const result1 = (100 * (1 - bMult * incisor * bow_before_me * tank_killer * stabilized * aa));\r\n        const result2 = (100 * (1 - incisor * bow_before_me * tank_killer * stabilized * aa));\r\n        const resultAll = {b: result1, e: result2, f: result2, p: result2, c: result2, r: result2, insect: this.perks.exterminator.displayed_value};\r\n        return resultAll;\r\n    }\r\n\r\n    getAmmoCapacity() {\r\n        let ammoCapacity = this.wSpec.ammoCapacity;\r\n        let tags = this.collectTags(this.wSpec);\r\n        ammoCapacity += (ammoCapacity * (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, tags, this.stuffBoost.weapon, \"Ammo\") / 100.0));\r\n        if (this.perks.power_user.is_used) {\r\n            const mult = this.perks.power_user.displayed_value / 100.0 - 1;\r\n            if (this.wSpec.ammoType.codeName === \"FusionCore\" || tags.includes(\"FusionCore\")) {\r\n                ammoCapacity += (this.wSpec.ammoCapacity * mult);\r\n            }\r\n        }\r\n        return parseInt(ammoCapacity);\r\n    }\r\n\r\n    getShotSize() {\r\n        return this.wSpec.shot_size;\r\n    }\r\n\r\n    getFireRate() {\r\n        let fireRate = this.wSpec.fireRate;\r\n        let weaponSpeed = this.wSpec.speed;\r\n        if ((this.wSpec.type === \"Melee\" || this.wSpec.type === \"Unarmed\") && this.wSpec.is_auto === 0) {\r\n            weaponSpeed += (this.perks.martial_artist.displayed_value / 100.0);\r\n        }\r\n        fireRate = fireRate * weaponSpeed;\r\n        if (fireRate < 0.1) {\r\n            fireRate = 0.1;\r\n        }\r\n        return fireRate;\r\n    }\r\n\r\n    getReloadTime() {\r\n        let reloadSpeed = this.wSpec.reloadSpeed;\r\n        if (this.wSpec.type === \"Heavy\") {\r\n            reloadSpeed += (this.perks.lock_and_load.displayed_value / 100.0);\r\n        } else if (this.wSpec.type === \"Melee\" && this.wSpec.is_auto === 0) {\r\n            reloadSpeed += (this.perks.martial_artist.displayed_value / 100.0);\r\n        } else if (this.wSpec.type === \"Shotgun\") {\r\n            reloadSpeed += (this.perks.scattershot.displayed_value / 100.0);\r\n        } else if (this.wSpec.type === \"Rifle\" && this.wSpec.is_auto) {\r\n            reloadSpeed += (this.perks.ground_pounder.displayed_value / 100.0);\r\n        }\r\n        reloadSpeed += StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Reload\") / 100.0;\r\n        return this.wSpec.defReloadTime / reloadSpeed;\r\n    }\r\n\r\n    // TODO: Intended to adjust accuracy by consumables and perks (accuracy from legendary and mods is adjusted in wSPec or by user)\r\n    setFinalAccuracy(damages) {\r\n        const consumables = null; // StuffBoostCollector.collect()\r\n        AccuracyAdjuster.adjustByLegendary(damages, this.wSpec.legendary);\r\n        AccuracyAdjuster.adjustByPerks(damages, this.perks);\r\n        AccuracyAdjuster.adjustByConsumables(damages, consumables);\r\n    }\r\n}","import Weapon from './Weapon';\r\nimport WeaponSpecsAssembler from './WeaponSpecsAssembler';\r\n\r\n\r\nexport default class WeaponFactory {\r\n\r\n    DEFAULT = 0;\r\n    NO_CRIT = 1;\r\n    constructor(wSpec, perks, extraDamage, additionalDamages, stuffBoost, playerStats) {\r\n        this.wSpec = wSpec;\r\n        this.perks = perks;\r\n        this.extraDamage = extraDamage;\r\n        this.additionalDamages = additionalDamages;\r\n        this.stuffBoost = stuffBoost;\r\n        this.playerStats = playerStats;\r\n    }\r\n\r\n    build(type) {\r\n        switch(type) {\r\n            case 0:\r\n                return new Weapon(new WeaponSpecsAssembler(this.wSpec, this.perks, this.extraDamage, this.additionalDamages,\r\n                    this.stuffBoost, this.playerStats));\r\n            case 1:\r\n                const extraDamage = { ...this.extraDamage };\r\n                extraDamage.useCrit = false;\r\n                return new Weapon(new WeaponSpecsAssembler(this.wSpec, this.perks, extraDamage, this.additionalDamages,\r\n                    this.stuffBoost, this.playerStats));\r\n            default:\r\n                return new Weapon(new WeaponSpecsAssembler(this.wSpec, this.perks, this.extraDamage, this.additionalDamages,\r\n                    this.stuffBoost, this.playerStats));\r\n        }\r\n    }\r\n}","export function defaultAdds() {\r\n    return {\r\n        tdb: {\r\n            name: \"TDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        ballisticBDB: {\r\n            name: \"Ballistic BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        energyBDB: {\r\n            name: \"Energy BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        fireBDB: {\r\n            name: \"Fire BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        poisonBDB: {\r\n            name: \"Poison BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        coldBDB: {\r\n            name: \"Cold BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        radBDB: {\r\n            name: \"Rad BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        damageToCreature: {\r\n            name: \"Damage To Creature\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n    };\r\n}","export function defaultBoosts() {\r\n    return {\r\n        bloody_mess: {\r\n            id: [\"00073680\"],\r\n            name: \"Bloody Mess\",\r\n            value: 5.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [5.0, 10.0, 15.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Luck\",\r\n            info: \"{1}% bonus damage means enemies may explode into a gory red paste.\",\r\n            cost: [1, 2, 3],\r\n            im_name: \"bloody_mess\",\r\n        },\r\n\r\n        adrenaline: {\r\n            id: [\"00397cc5\"],\r\n            name: \"Adrenaline\",\r\n            value: 6.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [6.0, 7.0, 8.0, 9.0, 10.0],\r\n            x: 1,\r\n            max_x: 6,\r\n            category: \"Agility\",\r\n            info: \"Gain {1}% damage for 30s per kill. Duration refreshes with kills.\",\r\n            cost: [1, 2, 3, 4, 5],\r\n            im_name: \"adrenaline\",\r\n        },\r\n\r\n        toft: {\r\n            id: [\"005a59c6\"],\r\n            name: \"TOFT\",\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10.0, 20.0, 30.0, 40.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Legendary\",\r\n            info: \"Enemies take {1}% more damage when they attack you, if you're on a team.\",\r\n            cost: [1, 2, 3, 4],\r\n            im_name: \"toft\",\r\n        },\r\n\r\n        tenderizer: {\r\n            name: \"Tenderizer\",\r\n            id: [\"003e2202\"],\r\n            value: 5.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [5.0, 7.0, 10.0],\r\n            x: 1,\r\n            max_x: 4,\r\n            category: \"Charisma\",\r\n            info: \"Make your target receive {1}% more damage for {1} seconds after you attack.\",\r\n            cost: [1, 2, 3],\r\n            im_name: \"tenderizer\",\r\n        },\r\n\r\n        glow_sight: {\r\n            name: \"Glow Sight\",\r\n            id: [\"00393f65\"],\r\n            value: 20.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [20.0, 40.0, 60.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Deal +{1}% damage to glowing enemies.\",\r\n            im_name: \"glow_sight\",\r\n        },\r\n\r\n        gun_fu: {\r\n            name: \"Gun Fu\",\r\n            id: [\"003701bf\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10.0, 30.0, 60.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 3],\r\n            info: \"V.A.T.S. swaps targets on kill with +{1}% damage to your next target.\",\r\n            im_name: \"gun_fu\",\r\n        },\r\n\r\n        incisor: {\r\n            name: \"Incisor\",\r\n            id: [\"003de58e\"],\r\n            value: 25.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [25.0, 50.0, 75.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your melee weapons ignore {1}% of your target's armor.\",\r\n            im_name: \"incisor\",\r\n        },\r\n\r\n        bow_before_me: {\r\n            name: \"Bow Before Me\",\r\n            id: [\"00563b9b\"],\r\n            value: 12.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [12.0, 24.0, 36.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your bows and crossbows ignore {1}% armor and have a {2}% chance to stagger.\",\r\n            im_name: \"bow_before_me\",\r\n        },\r\n\r\n        exterminator: {\r\n            name: \"Exterminator\",\r\n            id: [\"0032da6e\"],\r\n            value: 25.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [25.0, 50.0, 75.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your attacks ignore {1}% armor of any insect.\",\r\n            im_name: \"exterminator\",\r\n        },\r\n\r\n        tank_killer: {\r\n            name: \"Tank Killer\",\r\n            id: [\"001d6251\"],\r\n            value: 12.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [12.0, 24.0, 36.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your rifles and pistols ignore {1}% armor and have a {2}% chance to stagger.\",\r\n            im_name: \"tank_killer\",\r\n        },\r\n\r\n        stabilized: {\r\n            name: \"Stabilized\",\r\n            id: [\"00320167\"],\r\n            value: 15.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [15.0, 30.0, 45.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3],\r\n            info: \"In Power Armor, heavy guns gain more accuracy and ignore {1}% armor.\",\r\n            im_name: \"stabilized\",\r\n        },\r\n\r\n        covert_operative: {\r\n            name: \"Covert Operative\",\r\n            id: [\"002ebd26\"],\r\n            value: 2.15,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [2.15, 2.3, 2.5],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your ranged sneak attacks do {1}x normal damage.\",\r\n            im_name: \"covert_operative\",\r\n        },\r\n\r\n        mister_sandman: {\r\n            name: \"Mister Sandman\",\r\n            id: [\"0032992f\"],\r\n            value: 50.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [50.0, 100.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2],\r\n            info: \"At night your silenced weapons do an additional {1}% sneak attack damage.\",\r\n            im_name: \"mister_sandman\",\r\n        },\r\n\r\n        ninja: {\r\n            name: \"Ninja\",\r\n            id: [\"0025a7f9\"],\r\n            value: 30.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [30.0, 60.0, 90.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 3],\r\n            info: \"Sneak attacks with melee weapons do an additional {1}% sneak attack damage.\",\r\n            im_name: \"ninja\",\r\n        },\r\n\r\n        follow_through: {\r\n            name: \"Follow Through\",\r\n            id: [\"005a5d68\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10.0, 20.0, 30.0, 40.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Legendary\",\r\n            cost: [1, 2, 3, 4],\r\n            info: \"Ranged sneak damage increases damage to target by {1}% for 10 seconds.\",\r\n            im_name: \"follow_through\",\r\n        },\r\n\r\n        demolition_expert: {\r\n            name: \"Demolition Expert\",\r\n            id: [\"003440b9\"],\r\n            value: 20.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [20.0, 30.0, 40.0, 50.0, 60.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3, 4, 5],\r\n            info: \"Your explosives do +{1}% damage\",\r\n            im_name: \"demolition_expert\",\r\n        },\r\n\r\n        science: {\r\n            name: \"Science\",\r\n            id: [\"003440c4\", \"003440c5\", \"003440c6\"],\r\n            value: 5.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [5.0, 10.0, 15.0, 20.0, 25.0, 30.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3, 4, 5, 6],\r\n            info: \"Energy damage gains +{1}% bonus.\",\r\n            im_name: \"science\",\r\n        },\r\n\r\n        better_criticals: {\r\n            name: \"Better Criticals\",\r\n            id: [\"00287cd5\"],\r\n            value: 50.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [50.0, 75.0, 100.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Luck\",\r\n            cost: [1, 2, 3],\r\n            info: \"V.A.T.S. criticals now do +{1}% damage.\",\r\n            im_name: \"better_criticals\",\r\n        },\r\n\r\n        nerd_rage: {\r\n            name: \"Nerd Rage\",\r\n            id: [\"0025a22f\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10.0, 15.0, 20.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3],\r\n            info: \"While below 20% Health, gain {3} Damage Resist, {1}% damage and 15% AP regen.\",\r\n            im_name: \"nerd_rage\",\r\n        },\r\n\r\n        lock_and_load: {\r\n            name: \"Lock And Load\",\r\n            id: [\"0032016b\"],\r\n            value: 20.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [20, 40, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Heavy guns reload +{1}% faster.\",\r\n            im_name: \"lock_and_load\",\r\n        },\r\n\r\n        martial_artist: {\r\n            name: \"Martial Artist\",\r\n            id: [\"003e996d\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 20, 30],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your melee weapons weight {3}% less, and you can swing them {1}% faster.\",\r\n            im_name: \"martial_artist\",\r\n        },\r\n\r\n        scattershot: {\r\n            name: \"Scattershot\",\r\n            id: [\"0032235e\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 20, 30],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Shotguns now weight {4}% less and you reload them {1}% faster.\",\r\n            im_name: \"scattershot\",\r\n        },\r\n\r\n        ground_pounder: {\r\n            name: \"Ground Pounder\",\r\n            id: [\"000907e5\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 20, 30],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Automatic rifles now reload {1}% faster and have better hip fire accuracy.\",\r\n            im_name: \"ground_pounder\",\r\n        },\r\n\r\n        party_girl_boy: {\r\n            name: \"Party Girl / Boy\",\r\n            id: [\"000525df\"],\r\n            value: 2.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [2, 3],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Charisma\",\r\n            cost: [2, 3],\r\n            info: \"The effects of alcohol are {1}x.\",\r\n            im_name: \"party_girl_boy\",\r\n        },\r\n\r\n        power_user: {\r\n            name: \"Power User\",\r\n            id: [\"0027a876\"],\r\n            value: 130,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [130, 160, 200],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3],\r\n            info: \"Fusion Cores now last {1}% longer.\",\r\n            im_name: \"power_user\",\r\n        },\r\n\r\n        strange_in_numbers: {\r\n            name: \"Strange In Nums\",\r\n            id: [\"003860b7\"],\r\n            value: 25,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [25],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Charisma\",\r\n            cost: [1],\r\n            info: \"Positive mutation effects are {1}% stronger if teammates are mutated too.\",\r\n            im_name: \"strange_in_numbers\",\r\n        },\r\n\r\n        class_freak: {\r\n            name: \"Class Freak\",\r\n            id: [\"00391f13\"],\r\n            value: 25,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [25, 50, 75],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Luck\",\r\n            cost: [1, 2, 3],\r\n            info: \"The negative effects of your mutations are reduced by {1}%.\",\r\n            im_name: \"class_freak\",\r\n        },\r\n\r\n        gladiator: {\r\n            name: \"Gladiator\",\r\n            id: [\"003440ad\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your one-handed melee weapons now do +{1}% damage.\",\r\n            im_name: \"gladiator\",\r\n        },\r\n\r\n        heavy_gunner: {\r\n            name: \"Heavy Gunner\",\r\n            id: [\"0031af17\", \"0031af18\", \"001c9d2e\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your non-explosive heavy guns now do +{1}% damage.\",\r\n            im_name: \"heavy_gunner\",\r\n        },\r\n\r\n        shotgunner: {\r\n            name: \"Shotgunner\",\r\n            id: [\"00202049\", \"00223bab\", \"00202047\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your shotguns now do +{1}% damage.\",\r\n            im_name: \"shotgunner\",\r\n        },\r\n\r\n        slugger: {\r\n            name: \"Slugger\",\r\n            id: [\"0025a233\", \"00520bd8\", \"00520bd9\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your two-handed melee weapons now do +{1}% damage.\",\r\n            im_name: \"slugger\",\r\n        },\r\n\r\n        iron_fist: {\r\n            name: \"Iron Fist\",\r\n            id: [\"0035206d\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your punching attacks now do +{1}% damage.\",\r\n            im_name: \"iron_fist\",\r\n        },\r\n\r\n        archer: {\r\n            name: \"Archer\",\r\n            id: [\"00563b8f\", \"00563b93\", \"00563b97\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your bows and crossbows now do +{1}% damage.\",\r\n            im_name: \"archer\",\r\n        },\r\n\r\n        commando: {\r\n            name: \"Commando\",\r\n            id: [\"0031aef6\", \"0031aef7\", \"00005272\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Basic combat training means automatic rifles do +{1}% damage.\",\r\n            im_name: \"commando\",\r\n        },\r\n\r\n        rifleman: {\r\n            name: \"Rifleman\",\r\n            id: [\"000907c9\", \"002ebd2b\", \"002ebd31\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your non-automatic rifles now do +{1}% damage.\",\r\n            im_name: \"rifleman\",\r\n        },\r\n\r\n        guerrilla: {\r\n            name: \"Guerrilla\",\r\n            id: [\"0031af0d\", \"0031af0e\", \"0031af0f\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your automatic pistols now do +{1}% damage\",\r\n            im_name: \"guerrilla\",\r\n        },\r\n\r\n        gunslinger: {\r\n            name: \"Gunslinger\",\r\n            id: [\"0031aef8\", \"0031aef9\", \"0025a792\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your non-automatic pistols now do +{1}% damage.\",\r\n            im_name: \"gunslinger\",\r\n        },\r\n\r\n        special: {\r\n            strength: 0,\r\n            perception: 0,\r\n            endurance: 0,\r\n            charisma: 0,\r\n            intelligence: 0,\r\n            agility: 0,\r\n            luck: 0,\r\n        }\r\n    };\r\n}","import { millisToTime } from '../helpers/Time';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\n\r\n\r\nexport function getAverageTimeMillis(creatures) {\r\n    const sum = parseInt(creatures.creature1.lifeTime) + parseInt(creatures.creature2.lifeTime)\r\n     + parseInt(creatures.creature3.lifeTime) + parseInt(creatures.creature4.lifeTime);\r\n    if (sum === 0) {\r\n        return 0;\r\n    }\r\n    const result = parseInt(sum / 4.0);\r\n    return (result) ? result : Infinity;\r\n}\r\n\r\nexport function getAverageTime(creatures) {\r\n    return millisToTime(getAverageTimeMillis(creatures));\r\n}\r\n\r\nexport function getCreatureTime(creature) {\r\n    return millisToTime(creature.lifeTime);\r\n}\r\n\r\n/*\r\nsbq: {\r\n    gameId: \"003e2720\", // ? 00043c6f, 003e2720, 00043c75\r\n    radImmunePerk: \"000a2775\",\r\n    reductionSpell: \"004869f8\",\r\n    reductionPerk: \"00470daa\",\r\n    race: \"00019d95\",\r\n    bodyData: \"00017dd5\",\r\n},\r\n\r\nearle: {\r\n    gameId: \"0059e02f\", // ?\r\n    radImmunePerk: \"000a2775\",\r\n    reductionPerk: \"0057a663\",\r\n    race: \"00547992\",\r\n    bodyData: \"0055aec9\",\r\n},\r\n\r\ntitan: {\r\n    gameId: \"00661ebf\", // ?\r\n    radImmunePerk: \"000a2775\",\r\n    reductionPerk: \"0067d4be\",\r\n    reductionSpell: \"0066dbcd\",\r\n    race: \"00656cd6\",\r\n    bodyData: \"00656cd4\",\r\n}\r\n*/\r\n\r\nexport function getDummy(creature) {\r\n    const dummy = buildCreature(creature.name, creature.level, creature.fieldName);\r\n    dummy.h = 1000000000000;\r\n    dummy.curBody = creature.curBody;\r\n    dummy.headShot = creature.headShot;\r\n    dummy.bodyShot = creature.bodyShot;\r\n    dummy.averageShot = creature.averageShot;\r\n    dummy.damageReduction = creature.damageReduction;\r\n    dummy.damageReductionOnlyNotBleeding = creature.damageReductionOnlyNotBleeding;\r\n    return dummy;\r\n}\r\n\r\nfunction buildDefCreature(name, fieldName) {\r\n    return {\r\n        name: name,\r\n        fieldName: fieldName,\r\n        capName: \"\",\r\n        b: 1.0,\r\n        e: 1.0,\r\n        f: 1.0,\r\n        p: 1.0,\r\n        c: 1.0,\r\n        r: 1.0,\r\n        h: 100,\r\n        damageReduction: 0.0,\r\n        damageReductionOnlyNotBleeding: false,\r\n        headShot: 1,\r\n        bodyShot: 1,\r\n        averageShot: 1,\r\n        curBody: \"\",\r\n        defBody: \"\", // \"normal\", \"scorched\", \"glowing\"\r\n        bodyParts: {},\r\n        tags: [],\r\n        level: 1,\r\n        immuneToPoison: false,\r\n        immuneToRadiation: false,\r\n\r\n        damageToCreature: 0,\r\n        totalDamage: 0.0,\r\n        normalDamage: 0.0,\r\n        headShotDamage: 0.0,\r\n        headExpShotDamage: 0.0,\r\n        critNormalDamage: 0.0,\r\n        critHeadNormalDamage: 0.0,\r\n        explosiveDamage: 0.0,\r\n        critExplosiveDamage: 0.0,\r\n        critExplosiveHeadDamage: 0.0,\r\n        averageHit: 0.0,\r\n        maxHit: 0.0,\r\n        sneak: 0,\r\n        crit: 0,\r\n        dps: 0.0,\r\n        ammo: Infinity,\r\n        reloads: 0.0,\r\n        reloadsTime: 0.0,\r\n        lifeTime: Infinity,\r\n    };\r\n}\r\n\r\nexport function getCreatureByName(creatures, name) {\r\n    for(const fieldName in creatures) {\r\n        const creature = creatures[fieldName];\r\n        if (creature.name === name) {\r\n            return creature;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function defaultCreatures() {\r\n    return {\r\n        creature1: buildCreature(\"scorchbeastqueen\", \"Max\", \"creature1\"),\r\n        creature2: buildCreature(\"wendigocolossus\", \"Max\", \"creature2\"),\r\n        creature3: buildCreature(\"ultraciteabomination\", \"Max\", \"creature3\"),\r\n        creature4: buildCreature(\"stormboss\", \"Max\", \"creature4\"),\r\n    };\r\n}\r\n\r\nexport function defaultCreaturesAlt() {\r\n    return {\r\n        creature1: buildCreature(\"scorchbeastqueen(alt)\", \"Max\", \"creature1\"),\r\n        creature2: buildCreature(\"wendigocolossus(alt)\", \"Max\", \"creature2\"),\r\n        creature3: buildCreature(\"ultraciteabomination(alt)\", \"Max\", \"creature3\"),\r\n        creature4: buildCreature(\"stormboss\", \"Max\", \"creature4\"),\r\n    };\r\n}\r\n\r\nexport function buildCreatureNames(creatures) {\r\n    return {\r\n        creature1: [creatures.creature1.name, creatures.creature1.level, creatures.creature1.tags, creatures.creature1.curBody],\r\n        creature2: [creatures.creature2.name, creatures.creature2.level, creatures.creature2.tags, creatures.creature2.curBody],\r\n        creature3: [creatures.creature3.name, creatures.creature3.level, creatures.creature3.tags, creatures.creature3.curBody],\r\n        creature4: [creatures.creature4.name, creatures.creature4.level, creatures.creature4.tags, creatures.creature4.curBody],\r\n    }\r\n}\r\n\r\nexport function buildCreature(name, level, fieldName) {\r\n    const creature = buildDefCreature(name, fieldName);\r\n    if (level === 'Max') {\r\n        level = CreatureDataProvider.getMaxLevel(name);\r\n    } else {\r\n        level = parseInt(level);\r\n    }\r\n    const result = CreatureDataProvider.getCreatureParametersByName(name, level);\r\n    creature.name = name;\r\n    creature.capName = CreatureDataProvider.capitalizeCreatureName(name);\r\n    if (creature.name.includes(\"scorch\")) {\r\n        creature.defBody = \"scorched\";\r\n    } else if (creature.name.includes(\"glow\")) {\r\n        creature.defBody = \"glowing\";\r\n    } else {\r\n        creature.defBody = \"normal\";\r\n    }\r\n    creature.curBody = creature.defBody;\r\n    creature.level = level;\r\n    creature.tags = result.tags;\r\n    creature.headShot = result.headMult;\r\n    creature.bodyShot = result.normalMult;\r\n    creature.averageShot = parseFloat(result.averageMult.toFixed(2));\r\n    creature.damageReduction = result.reduction;\r\n    creature.immuneToPoison = result.immuneToPoison;\r\n    creature.immuneToRadiation = result.immuneToRad;\r\n    creature.damageReductions = result.reductions;\r\n    creature.damageReductionOnlyNotBleeding = result.reductionOnlyNotBleeding;\r\n    creature.bodyParts = result.body;\r\n    creature.bodyParts.average = {name: 'Average', damage_mult: creature.averageShot};\r\n    if (result.physical) {\r\n        creature.b = result.physical;\r\n        creature.e = result.energy;\r\n        creature.f = result.fire;\r\n        creature.p = result.poison;\r\n        creature.c = result.cold;\r\n        creature.r = result.radiation;\r\n        creature.h = result.health;\r\n    }\r\n    return creature;\r\n}","export function defaultPlayer() {\r\n    return {\r\n        team: false,\r\n        strange: 0.0,\r\n        freak: 0.0,\r\n        alcoholEffects: 1.0,\r\n        health: {\r\n            name: \"Health\",\r\n            value: 100.0,\r\n        }\r\n    };\r\n}","export function defaultPlayerStats() {\r\n    return {\r\n        strength: {\r\n            name: \"Strength\",\r\n            value: 5.0,\r\n        },\r\n        luck: {\r\n            name: \"Luck\",\r\n            value: 1.0,\r\n        },\r\n    };\r\n}","function getStrangeMult(player) {\r\n    return (player.team) ? (1 + player.strange / 100.0) : 1.0;\r\n}\r\n\r\nfunction getFreakReduction(player) {\r\n    return (1 - player.freak / 100.0);\r\n}\r\n\r\nexport const functions = {\r\n    nukeTheMan: (player) => {\r\n        return (player.team) ? 5 : 0;\r\n    },\r\n\r\n    partyGirlBoy: (player, defValue) => {\r\n        return parseInt(player.alcoholEffects * defValue);\r\n    },\r\n\r\n    adrenalineReaction: (player) => {\r\n        const health = player.health.value;\r\n        const mult = getStrangeMult(player);\r\n        let ar = 0.0;\r\n\r\n        // The data is hardcoded into a perk\r\n        if (mult > 1) {\r\n            if (health <= 20) {\r\n                ar = 63.0;\r\n            } else if (health <= 30) {\r\n                ar = 55.0;\r\n            } else if (health <= 40) {\r\n                ar = 48.0;\r\n            } else if (health <= 50) {\r\n                ar = 39.0;\r\n            } else if (health <= 60) {\r\n                ar = 31.0;\r\n            } else if (health <= 70) {\r\n                ar = 24.0;\r\n            } else if (health <= 80) {\r\n                ar = 16.0;\r\n            } else if (health <= 90) {\r\n                ar = 8.0;\r\n            }\r\n        } else {\r\n            if (health <= 20) {\r\n                ar = 50.0;\r\n            } else if (health <= 30) {\r\n                ar = 44.0;\r\n            } else if (health <= 40) {\r\n                ar = 38.0;\r\n            } else if (health <= 50) {\r\n                ar = 31.0;\r\n            } else if (health <= 60) {\r\n                ar = 25.0;\r\n            } else if (health <= 70) {\r\n                ar = 19.0;\r\n            } else if (health <= 80) {\r\n                ar = 13.0;\r\n            } else if (health <= 90) {\r\n                ar = 6.0;\r\n            }\r\n        }\r\n        return ar;\r\n    },\r\n\r\n    eagleEyes: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 003c4037\r\n        if (mult > 1) {\r\n            return 62.5\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    eagleEyesNegative: (player, defValue) => {\r\n        const mult = getFreakReduction(player);\r\n        return defValue * mult;\r\n    },\r\n\r\n    empathSerum: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n        if (mult > 1) {\r\n            return 2;\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    carnivoreSerum: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n        return mult * defValue;\r\n    },\r\n\r\n    herbivoreSerum: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n        return mult * defValue;\r\n    },\r\n\r\n    foodCalc: (player, defValue, foodPref, foodType) => {\r\n        if ((foodType === \"Meet\" && foodPref.herbivore) || (foodType === \"Plant\" && foodPref.carnivore)) {\r\n            return 0;\r\n        }\r\n        let mult = 1;\r\n        let strange = getStrangeMult(player);\r\n        if (foodType === \"Meet\" && foodPref.carnivore && !foodPref.herbivore) {\r\n            mult = 2 * strange;\r\n        } else if (foodType === \"Plant\" && foodPref.herbivore && !foodPref.carnivore) {\r\n            mult = 2 * strange;\r\n        }\r\n        return mult * defValue;\r\n    },\r\n\r\n    herdMentality: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n        const red = getFreakReduction(player);\r\n\r\n        // Positives is hardcoded inside 004e1f1e\r\n        let posValue = defValue;\r\n        if (mult > 1) {\r\n            posValue = 3;\r\n        }\r\n        return (player.team) ? posValue : -defValue * red;\r\n    },\r\n\r\n    speedDemonMove: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 004df1e0\r\n        if (mult > 1) {\r\n            return 25;\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    speedDemonReload: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 004df1e0\r\n        if (mult > 1) {\r\n            return 40;\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    talons1: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 0028d3bc\r\n        if (mult > 1) {\r\n            return 35;\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    talons2: (player, defValue) => {\r\n        return defValue;\r\n    },\r\n\r\n    twistedMuscles: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 00386acd\r\n        if (mult > 1) {\r\n            return 35;\r\n        }\r\n        return defValue;\r\n    }\r\n}","import { functions } from '../boostStuff/BoostFunctions';\r\n\r\n\r\nexport function convertStuffBoost(stuffBoost) {\r\n    const result = new Set();\r\n    collectBoosts(result, stuffBoost.creature);\r\n    collectBoosts(result, stuffBoost.weapon);\r\n    return Array.from(result);\r\n}\r\n\r\nfunction collectBoosts(result, boosts) {\r\n    boosts.forEach((value, key) => {\r\n        for (let i = 0; i < value.length; i++) {\r\n            result.add(value[i].parentId);\r\n        }\r\n    });\r\n}\r\n\r\nexport function prepareItems(items, loadedStuff=null) {\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        item.index = i;\r\n        if (loadedStuff && loadedStuff.has(item.id)) {\r\n            item.used = true;\r\n        } else {\r\n            item.used = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function applyBoost(foodPref, item, stuffBoost, player, anyway) {\r\n    let result = false;\r\n    for (let i = 0; i < item.boosts.length; i++) {\r\n        let boost = item.boosts[i];\r\n        const funcUsed = boost.func && boost.func.length > 0;\r\n        if (anyway || funcUsed) {\r\n            let id = item.id + \"_\" + i;\r\n            if (boost.id) {\r\n                id = boost.id;\r\n            }\r\n            result = true;\r\n            if (funcUsed) {\r\n                if (item.type === \"Meet\" || item.type === \"Plant\") {\r\n                    boost.value = functions[boost.func](player, boost.defValue, foodPref, item.type);\r\n                } else if (boost.defValue) {\r\n                    boost.value = functions[boost.func](player, boost.defValue);\r\n                } else {\r\n                    boost.value = functions[boost.func](player);\r\n                }\r\n            }\r\n            boost.parentId = item.id;\r\n            const stuff = stuffBoost[boost.category];\r\n            const things = stuff.get(id);\r\n\r\n            // Add things from the same category to apply the best (between Whiskey and Vodka the first will be applied)\r\n            if (things) {\r\n                things.push(boost);\r\n                stuff.set(id, things);\r\n            } else {\r\n                stuff.set(id, [boost]);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function loadBoosts(magazines, bobbles, food, drink, psycho, serums, others, foodPref, player) {\r\n    const stuffBoost = {\r\n        creature: new Map(),\r\n        weapon: new Map(),\r\n    }\r\n    applyAllStuff(foodPref, magazines, stuffBoost, player);\r\n    applyAllStuff(foodPref, bobbles, stuffBoost, player);\r\n    applyAllStuff(foodPref, food, stuffBoost, player);\r\n    applyAllStuff(foodPref, drink, stuffBoost, player);\r\n    applyAllStuff(foodPref, psycho, stuffBoost, player);\r\n    applyAllStuff(foodPref, serums, stuffBoost, player);\r\n    applyAllStuff(foodPref, others, stuffBoost, player);\r\n    return stuffBoost;\r\n}\r\n\r\nfunction applyAllStuff(foodPref, items, stuffBoost, player) {\r\n    for (let i = 0; i < items.length; i++) {\r\n        applyStuff(foodPref, items[i], stuffBoost, player);\r\n    }\r\n}\r\n\r\nfunction deleteBoost(item, stuffBoost) {\r\n    for (let i = 0; i < item.boosts.length; i++) {\r\n        let boost = item.boosts[i];\r\n        let id = item.id + \"_\" + i;\r\n        if (boost.id) {\r\n            id = boost.id;\r\n        }\r\n        let stuff = stuffBoost[boost.category].get(id);\r\n        if (!stuff) {\r\n            return;\r\n        }\r\n        const remainStuff = stuff.filter(b => b.parentId !== item.id);\r\n        if (!remainStuff || remainStuff.length === 0) {\r\n            stuffBoost[boost.category].delete(id);\r\n        } else {\r\n            stuffBoost[boost.category].set(id, remainStuff);\r\n        }\r\n    }\r\n}\r\n\r\nexport function applyStuff(foodPref, item, stuffBoost, player) {\r\n    if (item.used) {\r\n        applyBoost(foodPref, item, stuffBoost, player, true);\r\n    } else {\r\n        deleteBoost(item, stuffBoost);\r\n    }\r\n}\r\n","import getMods from '../helpers/Mods';\r\nimport { currentLegendaryIds } from '../helpers/Global';\r\nimport { getCritDamages } from '../helpers/CritView';\r\nimport { collectAllDamages, convertDamageDataToDamageItem } from '../helpers/mods/DamageSetter';\r\nimport { ModParser } from '../helpers/mods/ModParser';\r\n\r\n\r\nconst modParser = new ModParser();\r\n\r\n// Id, value, type (BDB, TDB...)\r\nexport function getDefaultLegs(legIds=null) {\r\n    if (legIds) {\r\n        return [[legIds[0], 0, \"\"], [legIds[1], 0, \"\"], [legIds[2], 0, \"\"], [legIds[3], 0, \"\"], [legIds[4], 0, \"\"]];\r\n    }\r\n    return [[\"\", 0, \"\"], [\"\", 0, \"\"], [\"\", 0, \"\"], [\"\", 0, \"\"], [\"\", 0, \"\"]];\r\n\r\n}\r\n\r\nexport function convertTemplateToSpecs(template, assignCurrentlyActiveUserLegendary=true) {\r\n    let fireRate = (template.isAuto[1]) ? template.defRate : ((10 / template.manualRate[1]) / template.speed[1]);\r\n    fireRate = parseFloat(fireRate.toFixed(3));\r\n    const defReloadTime = template.reloadTime[1] * template.reloadSpeed[1];\r\n    let mods = [];\r\n    for (const modCategoryName in template.allMods) {\r\n        if (modCategoryName.includes(\"Legendary\")) {\r\n            continue;\r\n        }\r\n        const categoryMods = template.allMods[modCategoryName];\r\n        for (let j = 0; j < categoryMods.length; j++) {\r\n            if (categoryMods[j][1]) {\r\n                let mod = getMods().get(categoryMods[j][0]);\r\n                mods.push({group: modCategoryName, id: mod.id, name: mod.name});\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    const leg1 = template.legendary1.id ? template.legendary1.id : \"\";\r\n    const leg2 = template.legendary2.id ? template.legendary2.id : \"\";\r\n    const leg3 = template.legendary3.id ? template.legendary3.id : \"\";\r\n    const leg4 = template.legendary4.id ? template.legendary4.id : \"\";\r\n    const leg5 = template.legendary5.id ? template.legendary5.id : \"\";\r\n    const legs = getDefaultLegs([leg1, leg2, leg3, leg4, leg5]);\r\n\r\n\r\n    let bonusMult = template.bonusMult[1] * 100;\r\n\r\n    // As damage bonus multiplier can be adjusted by legendary it will be calculated separately, so we need to remove\r\n    // this value from bonus multiplier\r\n    bonusMult = replaceAdjustableLegs(legs, bonusMult);\r\n\r\n    let creatures = [];\r\n    for (let i = 0; i < template.creature.length; i++) {\r\n        const creature = template.creature[i];\r\n        creatures.push({\"name\": creature.name, \"value\": creature.value})\r\n    }\r\n    const damages = collectAllDamages(template);\r\n\r\n    // Remove ignored (it can be useful later though (for now they are useless)\r\n    const sortedDamages = [];\r\n    let k = 0;\r\n    for (let i = 0; i < damages.length; i++) {\r\n        const d = damages[i];\r\n        if (!d.ignore) {\r\n            d.index = k++;\r\n            sortedDamages.push(d);\r\n        }\r\n    }\r\n\r\n    const critDamagesData = getCritDamages(template.crSpellId[1], template.id);\r\n    let critDamages = [];\r\n    for (let i = 0; i < critDamagesData.length; i++) {\r\n        const critDamageData = critDamagesData[i];\r\n        for (let j = 0; j < critDamageData.length; j++) {\r\n            const critItem = critDamageData[j];\r\n            critDamages.push(convertDamageDataToDamageItem(critItem));\r\n        }\r\n    }\r\n    let wSpec = {\r\n        weaponId: template.id,\r\n        shot_size: template.shotSize[1],\r\n        defReloadTime: defReloadTime,\r\n        reloadSpeed: template.reloadSpeed[1],\r\n        fireRate: fireRate,\r\n        is_auto: template.isAuto[1],\r\n        hand: template.hand[1],\r\n        ammoCapacity: template.capacity[1],\r\n        speed: template.speed[1],\r\n        totalD: template.totalD[1],\r\n        aa: template.antiArmor[1],\r\n        strengthBoost: template.strengthBoost[1],\r\n        crit: template.crit[1],\r\n        sneak: template.sneak[1],\r\n        cripple: template.cripple[1],\r\n        exp: template.exp[1],\r\n        bonus: bonusMult,\r\n        crippleChance: 50,\r\n        creature: creatures,\r\n        strPoints: template.strPoints[1],\r\n        powerAttack: template.powerAttack[1],\r\n        bash: template.bash[1],\r\n        type: template.type[1],\r\n        ammoType: {name: template.ammoType.name, type: template.ammoType.type, codeName: template.ammoType.codeName},\r\n        level: template.level,\r\n        defaultName: template.name,\r\n        weaponName: template.name,\r\n        chargeTime: template.chargeTime[1],\r\n        maxChargeTime: template.chargeTime[1],\r\n        iconName: template.iconName[template.type[1]],\r\n        tags: template.tags,\r\n        mods: mods,\r\n        legendary: legs,\r\n        damages: sortedDamages,\r\n        critDamages: critDamages,\r\n        legendaryHealthUpdated: false,\r\n    };\r\n\r\n    if (assignCurrentlyActiveUserLegendary) {\r\n\r\n        // Assign previous legs to not reset them if a weapon does not have legendary\r\n        for (let i = 0; i < currentLegendaryIds.length; i++) {\r\n            if (legs[i][0] === \"\") {\r\n                const current = currentLegendaryIds[i];\r\n                if (current[0] !== \"\") {\r\n                    modParser.applyLegendaryModToWSpec(current[0], wSpec, i, 100, false, true);\r\n                    legs[i] = [current[0], current[1], current[2]];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return wSpec;\r\n}\r\n\r\nexport function defaultWeaponSpecs() {\r\n    return {\r\n        shot_size: 1,\r\n        defReloadTime: 0,\r\n        reloadSpeed: 1,\r\n        fireRate: 20,\r\n        is_auto: 1,\r\n        hand: 1,\r\n        ammoCapacity: 1,\r\n        aa: 0,\r\n        strengthBoost: 0,\r\n        bonus: 0,\r\n        crit: 0,\r\n        speed: 1,\r\n        sneak: 0,\r\n        totalD: 0,\r\n        chargeTime: 0,\r\n        maxChargeTime: 0,\r\n        cripple: 0,\r\n        crippleChance: 50,\r\n        bash: 0,\r\n        strPoints: 0,\r\n        powerAttack: 0,\r\n        exp: 0,\r\n        creature: [],\r\n        level: 1,\r\n        ammoType: {name: \"\", type: \"\", codeName: \"\"},\r\n        defaultName: \"Weapon\",\r\n        weaponName: \"Weapon\",\r\n        imageName: \"Weapon\",\r\n        weaponId: \"\",\r\n        type: \"All\",\r\n        tags: [],\r\n        mods: [],\r\n        legendary: getDefaultLegs(),\r\n        damages: [],\r\n        critDamages: [],\r\n        legendaryHealthUpdated: true,\r\n    };\r\n}\r\n\r\n// TODO: get rid of hardcore values\r\n// This workaround is acceptable only for 'Damage Bonus' as it has\r\n// the special cell to be placed (only for legendary) because it can be adjusted by a user\r\nfunction replaceAdjustableLegs(legs, bonusMult) {\r\n    for (let i = 0; i < legs.length; i++) {\r\n        const leg = legs[i];\r\n        switch (leg[0]) {\r\n            case '004f6aab':\r\n            case '00606b71':\r\n            case '004f6aae':\r\n            case '004f6aa7':\r\n                bonusMult -= 50;\r\n                leg[1] = 50;\r\n                leg[2] = \"BDB\";\r\n                break;\r\n            case '004f6aa0':\r\n                bonusMult -= 95;\r\n                leg[1] = 95;\r\n                leg[2] = \"BDB\";\r\n                break;\r\n            case '0072a8c1':\r\n            case '006069f2':\r\n                bonusMult -= 24;\r\n                leg[1] = 24;\r\n                leg[2] = \"BDB\";\r\n                break;\r\n            case '00606b73':\r\n            case '005299f5':\r\n            case '004f6d76':\r\n            case '00606c8d':\r\n            case '0052414e':\r\n                bonusMult -= 25;\r\n                leg[1] = 25;\r\n                leg[2] = \"BDB\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return bonusMult;\r\n}","export function defaultExtraDamage() {\r\n    return {\r\n        useCrit: false,\r\n        useSneak: false,\r\n        useHead: false,\r\n        critFreq: 4.0,\r\n        headFreq: 80,\r\n    };\r\n}\r\n","import { keyValueBadge } from './RowBuilder';\r\nimport {  Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { collectAllDamages } from './mods/DamageSetter';\r\n\r\n\r\nexport function getSymbolStyle(dType, kind) {\r\n    switch(dType) {\r\n        case \"dtPhysical\":\r\n            if (kind === 'bleed') {\r\n                return [\"🩸\", \"badge bg-lite-shadow m-1\"];\r\n            } else if (kind === 'explosive') {\r\n                return [\"🧨\", \"badge bg-lite-shadow m-1\"];\r\n            }\r\n            return [\"💥\", \"badge bg-ballistic-shadow m-1\"];\r\n        case \"dtEnergy\":\r\n            return [\"⚡\", \"badge bg-energy-shadow m-1\"];\r\n        case \"dtFire\":\r\n            return [\"🔥\", \"badge bg-fire-shadow m-1\"];\r\n        case \"dtCryo\":\r\n            return [\"❄️\", \"badge bg-cold-shadow m-1\"];\r\n        case \"dtPoison\":\r\n            return [\"☣️\", \"badge bg-poison-shadow m-1\"];\r\n        case \"dtRadiationExposure\":\r\n            return [\"☢️\", \"badge bg-rad-shadow m-1\"];\r\n        default:\r\n            return [\"\", \"\"];\r\n    }\r\n}\r\n\r\nfunction getItems(adDamage, bonusMult, creatures) {\r\n    let result = [];\r\n    let k = 0;\r\n    for (let i = 0; i < adDamage.length; i++) {\r\n        const damage = adDamage[i];\r\n        if (damage.ignore) {\r\n            continue;\r\n        }\r\n        const [symbol, style] = getSymbolStyle(damage.type, damage.kind);\r\n        let value = damage.damage.toFixed(1);\r\n        if (bonusMult > 0) {\r\n            const bMult = (value * bonusMult).toFixed(1);\r\n            value += \" (+\" + bMult + \") \";\r\n        } else if (bonusMult < 0) {\r\n            const bMult = (value * bonusMult).toFixed(1);\r\n            value += \" (\" + bMult + \") \";\r\n        }\r\n        if (damage.time > 0) {\r\n            value += \" - \" + damage.time + \"s\";\r\n        }\r\n        if (damage.interval > 0) {\r\n            value += \" (\" + damage.interval.toFixed(1) + \")\";\r\n        }\r\n        if (damage.area > 0) {\r\n            value += \" (\" + damage.area.toFixed(0) + \" area)\";\r\n        }\r\n        result.push(keyValueBadge(style, '10rem', symbol, value, k++));\r\n    }\r\n    for (let i = 0; i < creatures.length; i++) {\r\n        const creature = creatures[i];\r\n        const value = \"+\" + creature.value + \"%\";\r\n        const name = \"🐵 \" + creature.name;\r\n        result.push(keyValueBadge(\"badge bg-lite-shadow m-1\", '10rem', name, value, k++));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function AdditionalDView({template}) {\r\n    const adDamage = collectAllDamages(template);\r\n\r\n    if (!adDamage || adDamage.length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className='m-1 p-1'>Damage</Divider>\r\n            <Row className=\"m-1 d-flex justify-content-center\">\r\n                {getItems(adDamage, template.bonusMult[1], template.creature)}\r\n            </Row>\r\n        </>\r\n    );\r\n}","import items from '../resources/ammo.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getAmmo() {\r\n    return iMap;\r\n}","const magazines = require.context('../resources/boostStuff/magazines', true, /\\.webp/);\r\nconst magazinesList = magazines.keys().map(magazine => magazines(magazine));\r\n\r\nconst bobbleHeads = require.context('../resources/boostStuff/bobbleHeads', true, /\\.webp/);\r\nconst bobbleHeadsList = bobbleHeads.keys().map(bobbleHead => bobbleHeads(bobbleHead));\r\n\r\nconst foods = require.context('../resources/boostStuff/food', true, /\\.webp/);\r\nconst foodsList = foods.keys().map(food => foods(food));\r\n\r\nconst drinks = require.context('../resources/boostStuff/drink', true, /\\.webp/);\r\nconst drinksList = drinks.keys().map(drink => drinks(drink));\r\n\r\nconst psychos = require.context('../resources/boostStuff/psycho', true, /\\.webp/);\r\nconst psychoList = psychos.keys().map(psycho => psychos(psycho));\r\n\r\nconst serums = require.context('../resources/boostStuff/serums', true, /\\.webp/);\r\nconst serumList = serums.keys().map(serum => serums(serum));\r\n\r\nconst others = require.context('../resources/boostStuff/others', true, /\\.webp/);\r\nconst othersList = others.keys().map(other => others(other));\r\n\r\n\r\nexport function getOther(name) {\r\n    return getItem(name, othersList);\r\n}\r\n\r\nexport function getBobbleHead(name) {\r\n    return getItem(name, bobbleHeadsList);\r\n}\r\n\r\nexport function getMagazine(name) {\r\n    return getItem(name, magazinesList);\r\n}\r\n\r\nexport function getFood(name) {\r\n    return getItem(name, foodsList);\r\n}\r\n\r\nexport function getDrink(name) {\r\n    return getItem(name, drinksList);\r\n}\r\n\r\nexport function getPsycho(name) {\r\n    return getItem(name, psychoList);\r\n}\r\n\r\nexport function getSerum(name) {\r\n    return getItem(name, serumList);\r\n}\r\n\r\nfunction getItem(name, nameList) {\r\n    for (let i = 0; i < nameList.length; i++) {\r\n        const item = nameList[i];\r\n        const firstIndex = item.lastIndexOf(\"/\") + 1;\r\n        const lastIndex = item.indexOf(\".\");\r\n        const mName = item.substring(firstIndex, lastIndex);\r\n        if (mName === name) {\r\n            return item;\r\n        }\r\n    }\r\n    return null;\r\n}","import WeaponFactory from '../damage/weapon/WeaponFactory';\r\nimport CreaturesProduction from '../creature/CreaturesProduction';\r\nimport DamageEmulator from '../damage/DamageEmulator';\r\nimport Global from './Global';\r\n\r\n\r\nexport function calcDamage(weaponFactory, creaturesInfo) {\r\n    return new DamageEmulator(weaponFactory.build(WeaponFactory.DEFAULT), creaturesInfo).emulate();\r\n}\r\n\r\nfunction buildGraphValues(xValues, yValues, creaturesInfo, weapon, shotsPerSecond, crit=true) {\r\n    weapon.setEnableCrit(crit);\r\n    for (let i = 0; i < xValues.length; i++) {\r\n        const xValue = xValues[i];\r\n        const armor = [xValue, xValue, xValue, xValue, xValue, xValue];\r\n        const creature = CreaturesProduction.produceByArmor(creaturesInfo, armor);\r\n        creature.reduceArmor(weapon.getAntiArmor());\r\n        creature.takeDamage(weapon.getMaxHit());\r\n        yValues.push(creature.getLastTotalDamage() * shotsPerSecond);\r\n    }\r\n}\r\n\r\nexport function graphDamage(creaturesInfo, weaponFactory, accuracy=100) {\r\n    const weapon = weaponFactory.build(WeaponFactory.DEFAULT, creaturesInfo);\r\n    weapon.setAlwaysMaxHit(true);\r\n\r\n    // We multiply result by headShot frequency later, to calc correct dps\r\n    weapon.setEnableHeadShot(false);\r\n    const headShotPercent = weapon.getHeadShotFrequency() / 100.0;\r\n    const normalShotPercent = 1 - headShotPercent;\r\n    const headShotMult = creaturesInfo.headShot;\r\n    const critFreq = weapon.getCritShotFrequency()\r\n    const normalShotCount = (critFreq > 0) ? critFreq - 1 : 1;\r\n    const critShotCount = (critFreq > 0) ? 1 : 0;\r\n    const shotSum = normalShotCount + critShotCount;\r\n    accuracy = accuracy / 100.0;\r\n\r\n    // In case we have only 1 ammo to not count reloading\r\n    weapon.disableReloadTimeCounting();\r\n\r\n    // Actual shot per second + we need to care about reloading time\r\n    let fireRate = weapon.getFireRate() / 10.0;\r\n    fireRate = 1 / fireRate + weapon.getChargeTime();\r\n    fireRate = 1 / fireRate;\r\n    let ammoCapacity = weapon.getAmmoCapacity();\r\n    if (ammoCapacity === 0) { // Melee\r\n        ammoCapacity = 1;\r\n    }\r\n    const totalTime = ammoCapacity / fireRate + weapon.getReloadTime();\r\n    const shotTime = totalTime / ammoCapacity;\r\n    const shotsPerSecond = 1 / shotTime;\r\n\r\n    // 1 Hit per second which later will be multiplied by actual fire rate to get correct DPS\r\n    weapon.setFireRate(10);\r\n    weapon.setChargeTime(0);\r\n    weapon.setFirstBloodBonus(0);\r\n    weapon.setLastShotBonus(0);\r\n    let yValues = [];\r\n    let yValuesNoCrit = [];\r\n    let xValues = [];\r\n    const r = (creaturesInfo.immuneToRadiation) ? 0 : creaturesInfo.r;\r\n    const p = (creaturesInfo.immuneToPoison) ? 0 : creaturesInfo.p;\r\n\r\n    // Max resistance with armor penetration\r\n    let maxRes = Math.max(...[creaturesInfo.b, creaturesInfo.e, creaturesInfo.f, p, creaturesInfo.c, r]);\r\n    if (maxRes > 0) {\r\n        const creature = CreaturesProduction.produceByArmor(creaturesInfo, [maxRes, maxRes, maxRes, maxRes, maxRes, maxRes]);\r\n        const cArmor = creature.reduceArmor(weapon.getAntiArmor()).getArmor();\r\n        maxRes = Math.max(...cArmor);\r\n    }\r\n\r\n    let points = Global.graphPoints;\r\n    if (maxRes < 0) {\r\n        maxRes = 0;\r\n    }\r\n    if (maxRes < points) {\r\n        points = maxRes;\r\n    }\r\n    const coef = (points === 0) ? 0 : maxRes / points;\r\n    for (let i = 0; i <= points; i++) {\r\n        xValues.push(Math.ceil(coef * i));\r\n    }\r\n    buildGraphValues(xValues, yValues, creaturesInfo, weapon, shotsPerSecond);\r\n    buildGraphValues(xValues, yValuesNoCrit, creaturesInfo, weapon, shotsPerSecond, false);\r\n    for (let i = 0; i < yValues.length; i++) {\r\n        const yVal = yValues[i];\r\n        const yValNoCrit = yValuesNoCrit[i];\r\n        let result = (yVal * critShotCount + yValNoCrit * normalShotCount) / shotSum;\r\n        result = result * headShotMult * headShotPercent + result * normalShotPercent;\r\n        result = result * accuracy;\r\n        yValues[i] = result;\r\n    }\r\n\r\n    return {\r\n        xValues: xValues,\r\n        yValues: yValues,\r\n    }\r\n}\r\n\r\n\r\n","export function getColorsForHotMeter() {\r\n    let colors = []\r\n    let r = 64;\r\n    let g = 255;\r\n    let b = 255;\r\n    let s = 12;\r\n    for (let i = 0; i < 50; i++) {\r\n        if (b > 64) {\r\n            b = b - s;\r\n            b = (b < 64) ? 64 : b;\r\n        } else if (r < 255) {\r\n            r = r + s;\r\n            r = (r > 255) ? 255 : r;\r\n        } else if (g > 64) {\r\n            g = g - s;\r\n            g = (g < 64) ? 64 : g;\r\n        }\r\n        colors.push(\"rgb(\" + r + \", \" + g + \", \" + b + \")\");\r\n    }\r\n    return colors;\r\n}\r\n","import { keyValueBadge } from './RowBuilder';\r\nimport {  Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\nimport DamageExtractor from './mods/DamageExtractor';\r\nimport { getSymbolStyle } from './AdditionalDView';\r\n\r\n\r\nconst damageExtractor = new DamageExtractor();\r\n\r\n\r\n// It does not handle possible crit damages from enchantments (seems we do not have them)\r\nexport default function CritView({crits, weapId}) {\r\n    if (!crits || crits.length === 0) {\r\n        return (<></>);\r\n    }\r\n    let allItems = getCritDamages(crits, weapId, true);\r\n    if (allItems.length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className='m-1 p-1'>Critical Hit</Divider>\r\n            <Row className=\"m-1 d-flex justify-content-center\">\r\n                {allItems}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function getCritDamages(crits, weapId, visual=false) {\r\n    let allItems = [];\r\n    if (!crits) {\r\n        return allItems;\r\n    }\r\n    for (let i = 0; i < crits.length; i++) {\r\n        let result = {};\r\n        const ench = crits[i];\r\n        damageExtractor.extractEnch(ench, result, \"Base Crit\", false, weapId);\r\n        for (const property in result) {\r\n            const spells = result[property];\r\n            if (visual) {\r\n                allItems.push(getItems(spells));\r\n\r\n            } else {\r\n                allItems.push(spells);\r\n            }\r\n        }\r\n    }\r\n    return allItems;\r\n}\r\n\r\nfunction getItems(crits) {\r\n    let result = [];\r\n    for (let i = 0; i < crits.length; i++) {\r\n        const damage = crits[i];\r\n        const [symbol, style] = getSymbolStyle(damage.type_name);\r\n        let value = damage.curv;\r\n        if (value === 0) {\r\n            value = damage.value;\r\n            if (value === 0) {\r\n                value = damage.magnitude;\r\n            }\r\n        }\r\n        if (damage.time > 0) {\r\n            value += \" - \" + damage.time + \"s\";\r\n        }\r\n        if (damage.interval > 0) {\r\n            value += \" (\" + damage.interval.toFixed(1) + \")\";\r\n        }\r\n        result.push(keyValueBadge(style, '10rem', symbol,  value, i));\r\n    }\r\n    return result;\r\n}","import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n\r\nexport function getUniqueDropdownItemsByNames(names) {\r\n    const result = [];\r\n    for (let i = 0; i < names.length; i++) {\r\n        const name = names[i];\r\n        result.push(<Dropdown.Item key={name + i} eventKey={name}>{name}</Dropdown.Item>)\r\n    }\r\n    return result;\r\n}","import effects from '../resources/effects.json';\r\n\r\n\r\nconst vmadObjects = new Map();\r\n\r\n// PERK, SPEL, MGEF\r\nexport function getEffect(id) {\r\n    return effects[0][id];\r\n}\r\n\r\nexport function setVMADObject(id, object) {\r\n    vmadObjects.set(id, object);\r\n}\r\n\r\nexport function getVMADObject(id) {\r\n    return vmadObjects.get(id);\r\n}\r\n\r\nexport function clearVMADObjects() {\r\n    vmadObjects.clear();\r\n}\r\n\r\nexport function printVMADS() {\r\n    console.log(vmadObjects);\r\n}","import iBullet from '../resources/icons/bullet3.webp';\r\nimport iAmmo from '../resources/icons/ammo5.webp';\r\nimport iFireRate from '../resources/icons/fireRate.webp';\r\nimport iTAmmo from '../resources/icons/tAmmo.webp';\r\nimport iGun from '../resources/icons/gun.webp';\r\nimport iRifle from '../resources/icons/rifle.webp';\r\nimport iShotgun from '../resources/icons/shotgun.webp';\r\nimport iBow from '../resources/icons/bow.webp';\r\nimport iMelee from '../resources/icons/melee.webp';\r\nimport iHeavy from '../resources/icons/heavy.webp';\r\nimport iUnarmed from '../resources/icons/unarmed.webp';\r\nimport iThrown from '../resources/icons/thrown.webp';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\n\r\nexport function getNumberEmoji(number) {\r\n    switch(number) {\r\n        case 0:\r\n            return \"0️⃣\";\r\n        case 1:\r\n            return \"1️⃣\";\r\n        case 2:\r\n            return \"2️⃣\";\r\n        case 3:\r\n            return \"3️⃣\";\r\n        case 4:\r\n            return \"4️⃣\";\r\n        case 5:\r\n            return \"5️⃣\";\r\n        case 6:\r\n            return \"6️⃣\";\r\n        case 7:\r\n            return \"7️⃣\";\r\n        case 8:\r\n            return \"8️⃣\";\r\n        case 9:\r\n            return \"9️⃣\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nexport function getSymbolText(symbol, text) {\r\n    switch (symbol) {\r\n        case \"B\":\r\n            return <>💥 {text}</>\r\n        case \"E\":\r\n            return <>⚡ {text}</>\r\n        case \"F\":\r\n            return <>🔥 {text}</>;\r\n        case \"P\":\r\n            return <>☣️ {text}</>;\r\n        case \"C\":\r\n            return <>❄️ {text}</>;\r\n        case \"R\":\r\n            return <>☢️ {text}</>;\r\n        default:\r\n            return <> {text}</>\r\n    }\r\n}\r\n\r\nfunction image(maxHeight, src, text) {\r\n    return (<Image className=\"mt-auto mb-auto m-0\" style={{ maxHeight: maxHeight }} src={src} fluid />);\r\n}\r\n\r\nexport function bullet(maxHeight) {\r\n    return image(maxHeight, iBullet);\r\n}\r\n\r\nexport function ammo(maxHeight) {\r\n    return image(maxHeight, iAmmo);\r\n}\r\n\r\nexport function fireRate(maxHeight) {\r\n    return image(maxHeight, iFireRate);\r\n}\r\n\r\nexport function tAmmo(maxHeight) {\r\n    return image(maxHeight, iTAmmo);\r\n}\r\n\r\nexport function gun(maxHeight) {\r\n    return image(maxHeight, iGun);\r\n}\r\n\r\nexport function rifle(maxHeight) {\r\n    return image(maxHeight, iRifle);\r\n}\r\n\r\nexport function shotgun(maxHeight) {\r\n    return image(maxHeight, iShotgun);\r\n}\r\n\r\nexport function bow(maxHeight) {\r\n    return image(maxHeight, iBow);\r\n}\r\n\r\nexport function melee(maxHeight) {\r\n    return image(maxHeight, iMelee);\r\n}\r\n\r\nexport function heavy(maxHeight) {\r\n    return image(maxHeight, iHeavy);\r\n}\r\n\r\nexport function unarmed(maxHeight) {\r\n    return image(maxHeight, iUnarmed);\r\n}\r\n\r\nexport function thrown(maxHeight) {\r\n    return image(maxHeight, iThrown);\r\n}\r\n\r\nexport function addText(imageF, maxHeight, marginLeft, text) {\r\n    return (<>{imageF(maxHeight)} <span style={{marginLeft: marginLeft}}>{text}</span></>)\r\n}","export function checkLength(e) {\r\n    if (e.target.value === \"\" || e.target.value === null) {\r\n        e.currentTarget.value = 0;\r\n        return true;\r\n    }\r\n    const val = parseFloat(e.currentTarget.value);\r\n    if (val < 0) {\r\n         e.currentTarget.value = 0;\r\n    } else if (e.currentTarget.value.length > e.currentTarget.maxLength) {\r\n         e.currentTarget.value = e.currentTarget.value.slice(0, e.currentTarget.maxLength);\r\n    } else if (val > e.currentTarget.max) {\r\n        e.currentTarget.value = e.currentTarget.max;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function truncate(str, maxLength) {\r\n    if (!str || str.length <= maxLength) {\r\n        return str;\r\n    }\r\n    return str.slice(0, maxLength) + \"…\";\r\n}\r\n\r\nexport function truncateLongWords(str, maxLength) {\r\n    if (!str || str.length <= maxLength) {\r\n        return str;\r\n    }\r\n    const words = str.split(' ');\r\n    for (let i = 0; i < words.length; i++) {\r\n        let word = words[i];\r\n        if (word.length > maxLength) {\r\n            words[i] = truncate(word, maxLength);\r\n        }\r\n    }\r\n    return words.join(' ');\r\n}","import { convertStuffBoost } from \"../entities/EStuffBoost\";\r\nimport {getAverageTimeMillis } from \"../entities/ECreatures\";\r\n\r\n\r\nexport function getHotPercentage(creatures) {\r\n    const time = getAverageTimeMillis(creatures);\r\n    return timeToPercent(time);\r\n}\r\n\r\nexport function timeToPercent(time) {\r\n    let percent = 0;\r\n    if (time <= 30000) {\r\n        percent = 100;\r\n    } else {\r\n        percent = (3000000 / time).toFixed(0);\r\n    }\r\n    return percent;\r\n}\r\n\r\nexport function buildItem(id, name, player, playerStats, creatures, boostDamage, wSpec, extraDamage, additionalDamages, resultDamage, stuffBoost) {\r\n    const stuff = convertStuffBoost(stuffBoost);\r\n    const wSpecCopy = JSON.parse(JSON.stringify(wSpec));\r\n    wSpecCopy.weaponName = name;\r\n    return {\r\n        id: id,\r\n        name: name,\r\n        averageTime: getAverageTimeMillis(creatures),\r\n        player: JSON.parse(JSON.stringify(player)),\r\n        playerStats: JSON.parse(JSON.stringify(playerStats)),\r\n        boostDamage: JSON.parse(JSON.stringify(boostDamage)),\r\n        wSpec: wSpecCopy,\r\n        extraDamage: JSON.parse(JSON.stringify(extraDamage)),\r\n        additionalDamages: JSON.parse(JSON.stringify(additionalDamages)),\r\n        creatures: JSON.parse(JSON.stringify(creatures)),\r\n        resultDamage: JSON.parse(JSON.stringify(resultDamage)),\r\n        stuff: JSON.parse(JSON.stringify(stuff)),\r\n    }\r\n};","import items from '../resources/legendary.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    let legendary = [[{name: \"None\", id: \"1\"}], [{name: \"None\", id: \"2\"}], [{name: \"None\", id: \"3\"}], [{name: \"None\", id: \"4\"}], [{name: \"None\", id: \"5\"}]];\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item.id, item);\r\n        legendary[item.star - 1].push(item);\r\n    }\r\n    return [map, legendary];\r\n}\r\n\r\nconst [iMap, legendary] = createMap();\r\n\r\nexport function getLegendary(id) {\r\n    return iMap.get(id);\r\n}\r\n\r\nexport function getLegendaryByStar() {\r\n    return legendary;\r\n}\r\n\r\nexport function getLegendaryNameFromSpec(wSpec, star) {\r\n    if (wSpec && wSpec.legendary) {\r\n        const leg = wSpec.legendary[star - 1][0];\r\n        if (leg && leg !== \"\") {\r\n            const legObj = getLegendary(leg);\r\n            if (legObj) {\r\n                return legObj.name;\r\n            }\r\n            return \"\";\r\n        }\r\n    }\r\n    return \"\";\r\n}","import items from '../resources/mods.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getMods() {\r\n    return iMap;\r\n}","import items from '../resources/perk.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getPerks() {\r\n    return iMap;\r\n}\r\n\r\nexport function getPerk(id) {\r\n    return getPerks().get(id);\r\n}","import items from '../resources/proj.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getProj() {\r\n    return iMap;\r\n}","import getProj from '../helpers/Proj';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Collapse } from 'antd';\r\nimport { getField, getResolvedField } from './ViewHelper';\r\nimport { getCardSpell } from './SpellView';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { WeaponPopoverOverlay, renderWeaponPopover } from './WeaponPopoverOverlay';\r\n\r\n\r\nfunction getProjectileOverlay(proj) {\r\n    const overlayButton = (<Button className=\"d-flex justify-content-center mb-1 m-auto\" size='sm' style={{width: '15rem'}}>Projectile: {proj['id']}</Button>);\r\n    return (\r\n        <WeaponPopoverOverlay popoverHeader={\"Projectile\"} popoverContent={buildProjView(proj)} itemToOverly={overlayButton}></WeaponPopoverOverlay>\r\n    );\r\n}\r\n\r\nfunction getHazardOverlay(hazard) {\r\n    const overlayButton = (<Button className=\"d-flex justify-content-center mt-1 mb-1 m-auto\" variant=\"success\" size='sm' style={{width: '15rem'}}>Hazard: {hazard['id']}</Button>);\r\n    return (\r\n        <WeaponPopoverOverlay popoverHeader={\"Hazard\"} popoverContent={buildHazardView(hazard)} itemToOverly={overlayButton}></WeaponPopoverOverlay>\r\n    );\r\n}\r\n\r\nfunction getProjButton(proj) {\r\n    function onClick(e) {\r\n        renderWeaponPopover(buildProjView(proj, true));\r\n    }\r\n    return (\r\n        <Button className=\"d-flex justify-content-center mb-1 m-auto\" size='sm' onClick={onClick} style={{width: '15rem'}}>Projectile: {proj['id']}</Button>\r\n    );\r\n}\r\n\r\nexport function getExpView(expl, header=\"Explosive\", popover=false) {\r\n    let projectile = (<></>);\r\n    let hazard = (<></>);\r\n    let objectExplosion = (<></>);\r\n    let placedWeapon = '';\r\n    let combined = (<></>);\r\n    if (expl && expl !== '' && expl !== '00000000') {\r\n        if (expl.projectile !== '00000000') {\r\n            if (expl.projectile === 'Same') {\r\n                projectile = getResolvedField('Projectile:', 'Same', 'default', '20rem');\r\n            } else {\r\n                const proj = getProj().get(expl.projectile);\r\n\r\n                // If it is not a popover we need to create a button to open a pover, otherwise we need to create a content for an opened popover\r\n                if (!popover) {\r\n                    projectile = getProjectileOverlay(proj);\r\n                } else {\r\n                    projectile = getProjButton(proj);\r\n                }\r\n            }\r\n        }\r\n        if (expl.object !== '') {\r\n            if (expl.object.type === 'HAZD') {\r\n                hazard = getHazardOverlay(expl.object.value);\r\n            } else if (expl.object.type === 'WEAP') {\r\n                placedWeapon = expl.object.value.id + \" / \" + expl.object.value.name;\r\n            } else if (expl.object.type === 'EXPL') {\r\n                objectExplosion = getExpView(expl.object.value, \"Explosive\", true);\r\n            } else if (expl.object.type === 'MSTT') {\r\n                combined = (\r\n                    <>\r\n                        {getExpView(expl.object.value.expl, \"Explosive\", true)}\r\n                        <div className='pb-2'></div>\r\n                        {getHazardOverlay(expl.object.value.hazd)}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        let dType = expl.d_type;\r\n        if (dType && dType !== '' && dType !== '00000000') {\r\n            dType = dType.id + \" - \" + dType.name + \" / \" + dType.full;\r\n        }\r\n        return (\r\n            <Card className=\"m-0 mt-2 p-0\">\r\n                <Card.Header className='m-0 p-1 ps-2 bg-proj-header'><small>{header}</small></Card.Header>\r\n                <Card.Body className=\"p-1\">\r\n                    <Row>\r\n                        {getField(expl, 'Id:', 'id', 'default', '20rem')}\r\n                        {getField(expl, 'Name:', 'name', 'purple', '20rem')}\r\n                        {getField(expl, 'Damage:', 'damage', 'blue', '20rem', false)}\r\n                        {getField(expl, 'Force:', 'force', 'blue', '20rem', false)}\r\n                        {getField(expl, 'ExpCurv:', 'exp_curv', 'blue', '20rem', false)}\r\n                        {getField(expl, 'DMult:', 'damage_mult', 'blue', '20rem', false, 3)}\r\n                        {getResolvedField('DType:', dType, 'blue', '20rem')}\r\n                        {getResolvedField('Placed Weapon:', placedWeapon, 'blue', '20rem')}\r\n                        {getField(expl, 'DValue:', 'd_value', 'blue', '20rem', false)}\r\n                        {getField(expl, 'DCurv:', 'd_curv', 'blue', '20rem', false)}\r\n                    </Row>\r\n                    <div className=\"m-1\" />\r\n                    {projectile}\r\n                    {getCardSpell(expl.enchantment)}\r\n                    {hazard}\r\n                    {objectExplosion}\r\n                    {combined}\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\n// It should have resolved data object already or '' / '00000000' for empty\r\nexport function getExplosiveForPopover(expl, header=\"Explosive\") {\r\n    return getExpView(expl, header, true);\r\n}\r\n\r\nexport function buildProjViewById(projId) {\r\n    const proj = getProj().get(projId);\r\n    if (!proj || proj === '' || proj === '00000000') {\r\n        return (<></>);\r\n    }\r\n    return buildProjView(proj)\r\n}\r\n\r\nfunction buildProjView(proj, popover=false) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                {getField(proj, 'Id:', 'id', 'default', '20rem')}\r\n                {getField(proj, 'Code Name:', 'name', 'pink', '20rem')}\r\n                {getField(proj, 'Full Name:', 'full', 'pink', '20rem')}\r\n                {getField(proj, 'Gravity:', 'gravity', 'blue', '20rem', true, 3)}\r\n                {getField(proj, 'Range:', 'range', 'blue', '20rem')}\r\n                {getField(proj, 'Relaunch:', 'relaunch', 'blue', '20rem', true, 3)}\r\n                {getField(proj, 'Speed:', 'speed', 'blue', '20rem')}\r\n            </Row>\r\n            {getExpView(proj.expl, \"Explosive\", popover)}\r\n            {getExpView(proj.destructible, \"Destructible\", popover)}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction buildHazardView(hazard) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                {getField(hazard, 'Id:', 'id', 'default', '20rem')}\r\n                {getField(hazard, 'Code Name:', 'name', 'pink', '20rem')}\r\n                {getField(hazard, 'Full Name:', 'full', 'pink', '20rem')}\r\n                {getField(hazard, 'Radius:', 'radius', 'blue', '20rem')}\r\n                {getField(hazard, 'Life Time:', 'lifeTime', 'blue', '20rem')}\r\n                {getField(hazard, 'Interval:', 'interval', 'blue', '20rem', true, 3)}\r\n            </Row>\r\n            {getCardSpell(hazard.effect)}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction buildProjViewByIds(ids) {\r\n    const result = [];\r\n    for (let i = 0; i < ids.length; i++) {\r\n        const proj = getProj().get(ids[i]);\r\n        result.push(<Card key={ids[i]} className=\"p-1 mb-1\">{buildProjView(proj)}</Card>);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction projInfo(className, ids) {\r\n    if (!ids || ids.length === 0) {\r\n        return (<></>);\r\n    }\r\n\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>Additional Projectile</strong>,\r\n            children: <>{buildProjViewByIds(ids)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Collapse size='small' items={items} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function ProjView({className, projId}) {\r\n    return projInfo(className, projId);\r\n}","import items from '../resources/spel.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getSpell() {\r\n    return iMap;\r\n}","import { getField, getResolvedField } from './ViewHelper';\r\nimport getPerks from './PerkProvider';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { getSpellHeader, getEffectsForPopover } from './SpellView';\r\nimport { getActorData } from '../templates/EffectPopover';\r\nimport getSpell from './Spell';\r\n\r\n// TODO: Deprecated. Must be deleted in the future.\r\n\r\nconst kind = {1: \"Float\", 3: \"List\", 4: \"Activate\", 5: \"Spell\", 8: \"Actor\", 9: \"Item\"};\r\n\r\nexport default function perkPopover(perk) {\r\n    return (\r\n        <div>Perk</div>\r\n    );\r\n}\r\n\r\nexport function getEffects(effects, width) {\r\n    const result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        const vType = effect.v_type;\r\n        if (vType === 8) {\r\n            result.push(buildEightEffect(effect, width, kind[vType]));\r\n        } else if (vType === 5 || vType === 0) {\r\n            result.push(buildFifthEffect(effect, width, kind[vType]));\r\n        } else if (vType === 1) {\r\n            result.push(buildFirstEffect(effect, width, kind[vType]));\r\n        } else {\r\n            throw new Error(\"Unsupported vType: \" + vType);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction buildFirstEffect(effect, width, kind) {\r\n    return (\r\n        <Card border=\"secondary\" className=\"mt-1 mb-1 p-0 m-0\">\r\n            <Row className=\"pt-1 pb-2\">\r\n                {getResolvedField('Kind:', kind, 'pink', width)}\r\n                {getField(effect, 'Type:', 'e_type', 'pink', width)}\r\n                {getField(effect, 'Entry:', 'entry', 'pink', width)}\r\n                {getField(effect, 'Operation:', 'op', 'pink', width)}\r\n                {getField(effect, 'Value:', 'value', 'pink', width, false)}\r\n            </Row>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction buildFifthEffect(effect, width, kind) {\r\n    let spell = effect.value;\r\n    if (typeof spell === typeof '') {\r\n        spell = getSpell().get(spell);\r\n    }\r\n    return (\r\n        <Card border=\"secondary\" className=\"mt-1 mb-1 p-0 m-0\">\r\n            <Row className=\"pt-1 pb-2\">\r\n                {getResolvedField('Kind:', kind, 'purple', width)}\r\n                {getField(effect, 'Type:', 'e_type', 'purple', width)}\r\n                {getField(effect, 'Entry:', 'entry', 'purple', width)}\r\n                {getField(effect, 'Operation:', 'op', 'purple', width)}\r\n            </Row>\r\n            {getSpellHeader(spell)}\r\n            <div className=\"pt-1\" />\r\n            {getEffectsForPopover(spell.mag_effects)}\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction buildEightEffect(effect, width, kind) {\r\n    const actor1 = getActorData(effect.value.actor1);\r\n    const actor2 = getActorData(effect.value.actor2);\r\n    return (\r\n        <Card border=\"secondary\" className='mt-1 mb-1 p-0 m-0'>\r\n            <Row className=\"pt-1 pb-2\">\r\n                {getResolvedField('Kind:', kind, 'blue', width)}\r\n                {getField(effect, 'Type:', 'e_type', 'blue', width)}\r\n                {getField(effect, 'Entry:', 'entry', 'blue', width)}\r\n                {getField(effect, 'Operation:', 'op', 'blue', width)}\r\n                {getField(effect.value, 'Value:', 'value', 'blue', width, false, 3)}\r\n                {getResolvedField(\"Actor1:\", actor1, 'blue', width)}\r\n                {getResolvedField(\"Actor2:\", actor2, 'blue', width)}\r\n            </Row>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport function getPerkContent(perkId, width='20rem') {\r\n    const perk = getPerks().get(perkId);\r\n    return (\r\n        <Row>\r\n            {getField(perk, 'Id:', 'id', 'default', width)}\r\n            {getField(perk, 'Code Name:', 'name', 'purple', width)}\r\n            {getField(perk, 'Name:', 'full', 'purple', width)}\r\n            {getEffects(perk.effects, width)}\r\n        </Row>\r\n    );\r\n}\r\n","import Card from 'react-bootstrap/Card';\r\nimport { keyValueTag } from '../helpers/RowBuilder';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { getPerkContent } from '../helpers/PerkPopover';\r\nimport { renderWeaponPopover } from '../helpers/WeaponPopoverOverlay';\r\nimport { getNameValueField } from '../helpers/ViewHelper';\r\nimport { getExplosiveForPopover } from '../helpers/ProjView';\r\nimport { truncate } from '../helpers/Input';\r\n\r\n\r\nfunction getField(lValue, rValue, color) {\r\n    if (rValue && typeof rValue === typeof '') {\r\n        rValue = rValue.toString();\r\n        rValue = truncate(rValue, 30);\r\n    }\r\n    return (\r\n        <Row className=\"d-flex justify-content-center ps-1 pe-1\">\r\n            {keyValueTag(lValue, rValue, color)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport function getActorData(actor) {\r\n    if (actor === \"\" || actor === '00000000' || actor === '00000392') {\r\n        return '';\r\n    }\r\n    return actor.id + \" / \" + actor.name;\r\n}\r\n\r\nexport function getActor(name, actor, color, width, under_row=true) {\r\n    const actorData = getActorData(actor);\r\n    if (actorData === '') {\r\n        return (<></>);\r\n    }\r\n    if (under_row) {\r\n        return getField(name, actorData, color);\r\n    }\r\n    return getNameValueField(name, actorData, color);\r\n}\r\n\r\nexport function getPerkButton(perkId) {\r\n    if (!perkId || perkId === '00000000') {\r\n        return (<></>)\r\n    }\r\n    function onClick(e) {\r\n        renderWeaponPopover(getPerkContent(perkId));\r\n    }\r\n    return (\r\n        <Row className=\"d-flex justify-content-center ps-1 pe-1\">\r\n            <Button size='sm' onClick={onClick} style={{width: '15rem'}}>Perk: {perkId}</Button>\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction getGlobDuration(effect) {\r\n    const dur = effect.glob_duration;\r\n    if (dur !== '') {\r\n        return (\r\n            <Card className='mt-1 mb-1'>\r\n                <Card.Header className=\"bg-spell-header p-0 ps-2\">Glob Duration</Card.Header>\r\n                <Card.Body>\r\n                    {getField(\"Id:\", dur.id, \"purple\")}\r\n                    {getField(\"Name:\", dur.name, \"purple\")}\r\n                    {getField(\"Value:\", dur.value, \"purple\")}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return getField(\"GlobDuration:\", \"0\", \"purple\")\r\n}\r\n\r\nfunction getGlobMagnitude(effect) {\r\n    const mag = effect.glob_magnitude;\r\n    if (mag !== '') {\r\n        return (\r\n            <Card className='mt-1 mb-1'>\r\n                <Card.Header className=\"bg-spell-header p-0 ps-2\">Glob Magnitude</Card.Header>\r\n                <Card.Body>\r\n                    {getField(\"Id:\", mag.id, \"purple\")}\r\n                    {getField(\"Name:\", mag.name, \"purple\")}\r\n                    {getField(\"Value:\", mag.value, \"purple\")}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return getField(\"GlobMagnitude:\", \"0\", \"purple\");\r\n}\r\n\r\nexport function getEffectContent(effect) {\r\n    const mEffect = effect['m_effect'];\r\n    const id = mEffect.id;\r\n    if (mEffect.projectile !== '00000000')\r\n        throw new Error('Projectile Found in spell: ' + id);\r\n    if (mEffect.ability !== '00000000')\r\n        throw new Error('Ability Found in spell: ' + id);\r\n    const resist = (mEffect.resist === '00000000') ? mEffect.resist : mEffect.resist.full;\r\n    return (\r\n        <>\r\n            {getField(\"Id:\", mEffect.id, 'indigo')}\r\n            {getField(\"Name:\", mEffect.full, \"purple\")}\r\n            {getField(\"CodeName:\", mEffect.name, \"purple\")}\r\n            {getActor(\"SpellActor:\", effect.actor, \"purple\")}\r\n            {getField(\"Type:\", mEffect.a_type, \"purple\")}\r\n            {getField(\"Ability:\", mEffect.ability, \"purple\")}\r\n            {getField(\"Resistance:\", resist, \"purple\")}\r\n            {getField(\"Target:\", mEffect.target, \"purple\")}\r\n            {getField(\"Activity:\", mEffect.e_type, \"purple\")}\r\n            {getField(\"Magnitude:\", effect.magnitude, \"purple\")}\r\n            {getField(\"Area:\", effect.area, \"purple\")}\r\n            {getField(\"OnlyForPlayer:\", effect.only_player, \"purple\")}\r\n            {getField(\"Duration:\", effect.duration, \"purple\")}\r\n            {getField(\"DCurv:\", effect.d_curv, \"purple\")}\r\n            {getExplosiveForPopover(mEffect.explosion)}\r\n            {getField(\"Projectile:\", mEffect.projectile, \"purple\")}\r\n            {getActor(\"Actor1:\", mEffect.actor_value1, \"purple\")}\r\n            {getActor(\"Actor2:\", mEffect.actor_value2, \"purple\")}\r\n            {getGlobDuration(effect)}\r\n            {getGlobMagnitude(effect)}\r\n            {getPerkButton(mEffect.perk)}\r\n        </>\r\n    );\r\n}\r\n","import Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Divider } from 'antd';\r\nimport { getField } from './ViewHelper';\r\nimport getSpell from '../helpers/Spell';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { getPerkButton, getEffectContent } from '../templates/EffectPopover';\r\nimport { WeaponPopoverOverlay, renderWeaponPopover } from '../helpers/WeaponPopoverOverlay';\r\n\r\n// TODO: This class is Deprecated\r\nfunction getOverlay(effect, buttonStyle, key) {\r\n    const mEffect = effect['m_effect'];\r\n    const overlayButton = (<Button className=\"d-flex justify-content-center m-1\" size='sm' style={buttonStyle}>Effect: {mEffect['id']}</Button>);\r\n    return (\r\n        <WeaponPopoverOverlay key={key} popoverHeader={mEffect.full} popoverContent={getEffectContent(effect)} itemToOverly={overlayButton}></WeaponPopoverOverlay>\r\n    );\r\n}\r\n\r\nfunction getEffectButton(effect, key) {\r\n    function onClick(e) {\r\n        renderWeaponPopover(getEffectContent(effect));\r\n    }\r\n    const mEffect = effect['m_effect'];\r\n    return (\r\n        <Button key={key} className=\"d-flex justify-content-center mb-1 m-auto\" size='sm' onClick={onClick} style={{width: '15rem'}}>Effect: {mEffect['id']}</Button>\r\n    );\r\n}\r\n\r\nexport function getEffectsForPopover(effects) {\r\n    let result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        result.push(getEffectButton(effect, i));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getEffects(effects, buttonStyle={width: '15rem'}) {\r\n    let result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        result.push(getOverlay(effect, buttonStyle, i));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getSpellHeader(spell, width='20rem') {\r\n    return (\r\n        <>\r\n            {getField(spell, 'Id:', 'id', 'default', width)}\r\n            {getField(spell, 'Code Name:', 'name', 'purple', width)}\r\n            {getField(spell, 'Name:', 'full', 'purple', width)}\r\n            {getField(spell, 'Type:', 'type', 'blue', width)}\r\n            {getField(spell, 'Activity:', 'e_type', 'blue', width)}\r\n            {getField(spell, 'Target:', 'target', 'blue', width)}\r\n            {getPerkButton(spell.perk)}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction buildSpellView(spell) {\r\n    const effects = spell['mag_effects'];\r\n    return (\r\n        <>\r\n            <Row>\r\n                {getSpellHeader(spell)}\r\n            </Row>\r\n            <Divider className='m-0 pt-2 pb-1 ps-4 pe-4'>Effects</Divider>\r\n            <Row className='d-flex justify-content-center ps-1 pe-1'>\r\n                {getEffects(effects)}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function getCardSpell(spellId, header) {\r\n    const spell = getSpell().get(spellId);\r\n    if (!spell) {\r\n        return (<></>);\r\n    }\r\n    if (!header) {\r\n        header = \"Spell\"\r\n    }\r\n    return (\r\n        <Card className=\"bg-spell-body\">\r\n            <Card.Header className=\"bg-spell-header m-0 ps-2 p-1\">\r\n                <small>{header}</small>\r\n            </Card.Header>\r\n            <Card.Body className=\"p-0 ms-1 me-1\">\r\n                {buildSpellView(spell)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function SpellView({spellId, header}) {\r\n    return getCardSpell(spellId, header);\r\n}","export function numberToString(number, round=0) {\r\n    if (round > 0) {\r\n        return (+number.toFixed(round)).toString();\r\n    }\r\n    return number.toString();\r\n}\r\n\r\nconst emojis = ['🍦', '🍧', '🍨', '🍩', '🍪', '🎂', '🍰', '🧁', '🥧', '🍫', '🍬', '🍭', '🥨', '🥯',\r\n                '🥞', '🧇', '🧀', '🍖', '🍗', '🥩', '🥓', '🍔', '🍮', '🍯'];\r\n\r\nexport function getRandomNumber(max) {\r\n    return Math.floor(Math.random() * max);\r\n}\r\n\r\nexport function getRandomEmoji() {\r\n    return emojis[getRandomNumber(emojis.length)];\r\n}\r\n\r\nexport function buildRandomEmojiString(length, space=1) {\r\n    const spaceChar = '\\xa0';\r\n    let spaceChars = \"\";\r\n    if (space > 0) {\r\n        spaceChars = spaceChar.repeat(space);\r\n    }\r\n    let result = \"\";\r\n    const eSize = emojis.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += emojis[getRandomNumber(eSize)];\r\n        if (i < (length - 1)) {\r\n            result += spaceChars;\r\n        }\r\n    }\r\n    return result;\r\n}","export default class Strings {\r\n    static Melee = \"Melee\";\r\n    static Unarmed = \"Unarmed\";\r\n\r\n    static getFireRate(wType=null) {\r\n        return (wType && (wType === Strings.Melee || wType === Strings.Unarmed)) ? \"Hit Rate\" : \"Fire Rate\";\r\n    }\r\n}","const templates = require.context('../resources/weaponTemplates', true, /\\.json$/);\r\nconst templateList = templates.keys().map(template => templates(template)[0]);\r\n\r\n\r\nexport default function getTemplates() {\r\n    return templateList;\r\n}\r\n\r\n// Returns a copy of a template with specified id.\r\nexport function getTemplateCopyById(id) {\r\n\r\n    // The amount of templates will never exceed several hundreds, so it is ok.\r\n    for (let i = 0; i < templateList.length; i++) {\r\n        const template = templateList[i];\r\n        if (template.id === id) {\r\n            return JSON.parse(JSON.stringify(template));\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n// Only for reading purposes\r\nexport function getTemplateById(id) {\r\n    for (let i = 0; i < templateList.length; i++) {\r\n        const template = templateList[i];\r\n        if (template.id === id) {\r\n            return template;\r\n        }\r\n    }\r\n    return null;\r\n}","export function millisToTime(value) {\r\n    if ((!value && value !== 0) || value === Infinity) {\r\n        return \"Infinity\";\r\n    } else if (value > 3599999999) {\r\n        return \"+999:59:59:999\";\r\n    }\r\n    const t = [3600000, 60000, 1000];\r\n    let time = [];\r\n    for (let i = 0; i < t.length; i++) {\r\n        let r = value % t[i];\r\n        let q = (value - r) / t[i];\r\n        time.push(q);\r\n        value = r;\r\n    }\r\n    let strTime = \"\";\r\n    strTime += (time[0] < 10) ? (\"00\" + time[0] + \":\") : ((time[0] < 100) ? (\"0\" + time[0] + \":\") : time[0] + \":\");\r\n    strTime += (time[1] < 10) ? (\"0\" + time[1] + \":\") : time[1] + \":\";\r\n    strTime += (time[2] < 10) ? (\"0\" + time[2] + \":\") : time[2] + \":\";\r\n    if (value < 10) {\r\n        strTime += ( \"00\" + value);\r\n    } else if (value < 100) {\r\n        strTime += (\"0\" + value);\r\n    } else {\r\n        strTime += value;\r\n    }\r\n    return strTime;\r\n}","import Col from 'react-bootstrap/Col';\r\nimport { keyValueTag } from '../helpers/RowBuilder';\r\nimport { truncate } from '../helpers/Input';\r\n\r\n// TODO: DEPRECATED, HAS TO BE DELETED\r\nexport function getField(data, name, id, color, width, hideEmpty=true, round=0, cell=-1, css=\"\") {\r\n    let value = data[id];\r\n    return getResolvedField(name, value, color, width, hideEmpty, round, cell, css);\r\n}\r\n\r\nexport function getResolvedField(name, value, color, width, hideEmpty=true, round=0, cell=-1, css=\"\") {\r\n    if (cell > -1) {\r\n        value = value[cell];\r\n    }\r\n    if (round > 0) {\r\n        value = value.toFixed(round);\r\n    }\r\n    if (hideEmpty) {\r\n        if (!value || value === 0 || value === '00000000' || value === '') {\r\n            return <></>;\r\n        }\r\n    }\r\n    return getNameValueField(name, value, color, width, css);\r\n}\r\n\r\nexport function getNameValueField(value1, value2, color, width, css=\"\") {\r\n    if (value2 && typeof value2 === typeof '') {\r\n        value2 = truncate(value2, 30);\r\n    }\r\n    return (\r\n        <Col className={'d-flex justify-content-center ' + css} >\r\n            {keyValueTag(value1,  value2, color, {width: width})}\r\n        </Col>\r\n    );\r\n}\r\n\r\n\r\n","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport { memo } from 'react';\r\nimport { addText, gun, rifle, shotgun, bow, melee, heavy, unarmed, thrown } from '../helpers/Emoji';\r\n\r\n\r\nconst WTypeDropdown = memo(function WTypeDropdown({weaponType, setWeaponType, resetPage=null, onSelect=null, title=null}) {\r\n    function onSelectCustom(e) {\r\n        setWeaponType(e);\r\n        if (resetPage) {\r\n            resetPage();\r\n        }\r\n        if (onSelect) {\r\n            onSelect(e);\r\n        }\r\n    }\r\n    const customTitle = (title) ? title : weaponType;\r\n    return (\r\n        <DropdownButton onSelect={onSelectCustom} id=\"dropdown-basic-button\" title={customTitle}>\r\n            <Dropdown.Item eventKey=\"All\">All</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Heavy\">{addText(heavy, '1.1rem', '0.27rem', \"Heavy\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Shotgun\">{addText(shotgun, '1.1rem', '0.27rem', \"Shotgun\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Rifle\">{addText(rifle, '1.1rem', '0.27rem', \"Rifle\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Pistol\">{addText(gun, '1.1rem', '0.27rem', \"Pistol\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Bow\">{addText(bow, '1.1rem', '0.27rem', \"Bow\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Melee\">{addText(melee, '1.1rem', '0.27rem', \"Melee\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Unarmed\">{addText(unarmed, '1.1rem', '0.27rem', \"Unarmed\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Thrown\">{addText(thrown, '1.1rem', '0.27rem', \"Thrown\")}</Dropdown.Item>\r\n        </DropdownButton>\r\n    );\r\n});\r\n\r\nexport default WTypeDropdown;\r\n\r\nexport function getRowWithImage(name, customName=null, maxHeight='1.1rem', space='0.27rem') {\r\n    if (!customName) {\r\n        customName = name;\r\n    }\r\n    switch(name) {\r\n        case \"Heavy\":\r\n            return addText(heavy, maxHeight, space, customName);\r\n        case \"Shotgun\":\r\n            return addText(shotgun, maxHeight, space, customName);\r\n        case \"Rifle\":\r\n            return addText(rifle, maxHeight, space, customName);\r\n        case \"Pistol\":\r\n            return addText(gun, maxHeight, space, customName);\r\n        case \"Bow\":\r\n            return addText(bow, maxHeight, space, customName);\r\n        case \"Melee\":\r\n            return addText(melee, maxHeight, space, customName);\r\n        case \"Unarmed\":\r\n            return addText(unarmed, maxHeight, space, customName);\r\n        case \"Thrown\":\r\n            return addText(thrown, maxHeight, space, customName);\r\n        default:\r\n            return customName;\r\n    }\r\n};\r\n\r\nexport function getImage(name, maxHeight='1.3rem') {\r\n    switch(name) {\r\n        case \"Heavy\":\r\n            return heavy(maxHeight);\r\n        case \"Shotgun\":\r\n            return shotgun(maxHeight);\r\n        case \"Rifle\":\r\n            return rifle(maxHeight);\r\n        case \"Pistol\":\r\n            return gun(maxHeight);\r\n        case \"Bow\":\r\n            return bow(maxHeight);\r\n        case \"Melee\":\r\n            return melee(maxHeight);\r\n        case \"Unarmed\":\r\n            return unarmed(maxHeight);\r\n        case \"Thrown\":\r\n            return thrown(maxHeight);\r\n        default:\r\n            return \"\";\r\n    }\r\n}","import React from 'react';\r\nimport Image from 'react-bootstrap/Image';\r\nconst images = require.context('../resources/weapon_icons', true, /\\.webp$/);\r\nconst imageList = images.keys().map(image => images(image));\r\n\r\n\r\nexport function getImageElement(name, maxHeight='1.5rem', className=\"\") {\r\n    for (let i = 0; i < imageList.length; i++) {\r\n        const firstIndex = imageList[i].lastIndexOf(\"/\") + 1;\r\n        const lastIndex = imageList[i].indexOf(\".\");\r\n        const wName = imageList[i].substring(firstIndex, lastIndex);\r\n        if (wName === name) {\r\n            return (<Image className={\"p-0 m-0 \" + className} style={{ maxHeight: maxHeight }} src={imageList[i]} fluid />)\r\n        }\r\n    }\r\n    return (\r\n        <></>\r\n    );\r\n}","import OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ReactDOM from 'react-dom/client';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nlet number = 0;\r\nlet popoverContent = [];\r\n\r\nexport function WeaponPopoverOverlay({popoverHeader, popoverContent, itemToOverly}) {\r\n    const popover = weaponPopover(popoverHeader, popoverContent);\r\n    function openPopover(e) {\r\n        if (e) {\r\n            initWeaponPopover(popoverContent);\r\n        }\r\n    }\r\n    return (\r\n        <OverlayTrigger onToggle={openPopover} trigger=\"click\" placement=\"top\" rootClose='true' overlay={popover}>\r\n            {itemToOverly}\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nfunction weaponPopover(header, content) {\r\n    return (\r\n        <Popover className=\"popover-adjustable2\">\r\n            <Popover.Header>\r\n                <Row style={{minHeight: '2rem'}}>\r\n                    <Col className=\"col-10 d-flex justify-content-start\">\r\n                        <strong className=\"m-auto ms-2\">{header}</strong>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button className=\"\" style={{display: 'none', borderRadius: '1rem', height: '2.0rem', paddingTop: '0.22rem', paddingLeft: '0.4rem'}} variant=\"blue-white-border\" id=\"WeaponDetailsPopoverBackButton\" onClick={popoverBack}>\r\n                            <h6>⇜</h6>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Popover.Header>\r\n            <Popover.Body className=\"popover-body2\">\r\n                <div id=\"WeaponDetailsPopover\">\r\n                    {content}\r\n                </div>\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nfunction initWeaponPopover(content) {\r\n    number = 0;\r\n    popoverContent = [content];\r\n}\r\n\r\n// Use this method if you want to render specific content in the popover (after tap on button for example)\r\n// content - a batch of html tags which will be rendered by ReactDom.render\r\nexport function renderWeaponPopover(content) {\r\n    number += 1;\r\n    popoverContent[number] = content;\r\n    document.getElementById(\"WeaponDetailsPopoverBackButton\").style.display = 'inline';\r\n    ReactDOM.createRoot(document.getElementById(\"WeaponDetailsPopover\")).render(content);\r\n}\r\n\r\nfunction popoverBack(e) {\r\n    number -= 1;\r\n    if (number < 1) {\r\n        document.getElementById(\"WeaponDetailsPopoverBackButton\").style.display = 'none';\r\n    }\r\n    ReactDOM.createRoot(document.getElementById(\"WeaponDetailsPopover\")).render(popoverContent[number]);\r\n}","import getAmmo from '../Ammo';\r\nimport getProj from '../Proj';\r\nimport getSpell from '../Spell';\r\nimport getPerks from '../PerkProvider';\r\nimport { getTemplateCopyById } from '../TemplatesRegister';\r\n\r\nexport default class DamageExtractor {\r\n\r\n    damageTypes = {\r\n        \"electrical\": {\r\n            \"id\": \"00060a80\",\r\n            \"name\": \"dtElectrical\",\r\n            \"full\": \"Electrical Damage\"\r\n        },\r\n        \"energy\": {\r\n            \"id\": \"00060a81\",\r\n            \"name\": \"dtEnergy\",\r\n            \"full\": \"Energy Damage\"\r\n        },\r\n        \"radiation\": {\r\n            \"id\": \"00060a85\",\r\n            \"name\": \"dtRadiationExposure\",\r\n            \"full\": \"Radiation Damage\"\r\n        },\r\n        \"fire\": {\r\n            \"id\": \"00060a82\",\r\n            \"name\": \"dtFire\",\r\n            \"full\": \"Fire Damage\"\r\n        },\r\n        \"cryo\": {\r\n            \"id\": \"00060a83\",\r\n            \"name\": \"dtCryo\",\r\n            \"full\": \"Cryo Damage\"\r\n        },\r\n        \"poison\": {\r\n            \"id\": \"00060a84\",\r\n            \"name\": \"dtPoison\",\r\n            \"full\": \"Poison Damage\"\r\n        },\r\n        \"physical\": {\r\n            \"id\": \"00060a87\",\r\n            \"name\": \"dtPhysical\",\r\n            \"full\": \"Physical Damage\"\r\n        },\r\n        \"pure\": {\r\n            \"id\": \"00060a8d\",\r\n            \"name\": \"dtPureDamage\",\r\n            \"full\": \"Pure Damage\"\r\n        },\r\n    };\r\n\r\n    // Based on resistance\r\n    resTypes = {\r\n        '000002ea': this.damageTypes['radiation'],\r\n        '000002eb': this.damageTypes['energy'],\r\n        '000002e7': this.damageTypes['cryo'],\r\n        '000002e4': this.damageTypes['poison'],\r\n        '000002e5': this.damageTypes['fire'],\r\n        '000002e6': this.damageTypes['electrical'],\r\n        '000002e3': 'DamageResistance',\r\n    };\r\n\r\n    constructor(extractPlacedObjects=true) {\r\n\r\n        // Some of the weapon's projectiles contain weapons inside\r\n        if (extractPlacedObjects) {\r\n            this.tomahawk = getTemplateCopyById('000042f2');\r\n            this.throwingKnife = getTemplateCopyById('003879a3');\r\n            this.extractFromTemplate(this.tomahawk);\r\n            this.extractFromTemplate(this.throwingKnife);\r\n        }\r\n    }\r\n\r\n    extract(templates) {\r\n        for (let i = 0; i < templates.length; i++) {\r\n            this.extractFromTemplate(templates[i]);\r\n        }\r\n    }\r\n\r\n    extractFromTemplate(template) {\r\n\r\n        // Ammo\r\n        const ammoId = template.ammoId[1];\r\n        const curWeapId = template.id;\r\n        if (!curWeapId) {\r\n            throw new Error(\"Weapon has no id\");\r\n        }\r\n        if (ammoId && ammoId !== '00000000' && ammoId !== '') {\r\n            const ammoData = getAmmo().get(ammoId);\r\n            this.extractAmmo(ammoData, template.damageData, \"Ammo: \" + ammoId, curWeapId);\r\n        }\r\n\r\n        // Additional Proj\r\n        const projIds = template.projId[1];\r\n        for (let i = 0; i < projIds.length; i++) {\r\n            const projId = projIds[i];\r\n            if (projId !== '00000000' && projId !== '') {\r\n                if (typeof projId !== typeof '') {\r\n                    throw new Error(\"ProjId is not an Id\");\r\n                }\r\n                const projData = getProj().get(projId);\r\n                this.extractProj(projData, template.damageData, \"Projectile: \" + projId, false, curWeapId);\r\n            }\r\n        }\r\n\r\n        // Additional Mod Effects\r\n        const effectIds = template.adEffects[1];\r\n        for (let i = 0; i < effectIds.length; i++) {\r\n            const effectId = effectIds[i];\r\n            if (effectId !== '00000000' && effectId !== '') {\r\n                if (typeof effectId !== typeof '') {\r\n                    throw new Error(\"EffectId is not an Id\");\r\n                }\r\n                this.extractEnch(effectId, template.damageData, \"Spell: \" + effectId, false, curWeapId, 0, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    extractAmmo(ammo, result, parent, curWeapId) {\r\n        const ammoDamage = ammo.damage;\r\n        const ammoId = ammo.id;\r\n        if (!parent) {\r\n            parent = \"Ammo: \" + ammoId;\r\n        }\r\n        if (ammoDamage > 0) {\r\n            if (ammo.ammo_type !== 'Ballistic') {\r\n                throw new Error(\"Ammo type is not 'Ballistic'\");\r\n            }\r\n            const dTypes = this.damageTypes.physical;\r\n            this.addDamageNode(result, \"Ammo\", false, \"Ammo Damage\", dTypes.name, dTypes.id, dTypes.full, 0,\r\n                                 ammoDamage, 0, 0, 0, 0, parent, ammoId, curWeapId, \"No\", false, false, false);\r\n        }\r\n        const projId = ammo.projectile;\r\n        if (projId && projId !== '' && projId !== '00000000') {\r\n            const projData = getProj().get(projId);\r\n            this.extractProj(projData, result, parent, false, curWeapId);\r\n        }\r\n    }\r\n\r\n    extractProj(proj, result, parent, destructible, curWeapId) {\r\n        this.extractExp(proj.destructible, result, parent, true, curWeapId);\r\n        this.extractExp(proj.expl, result, parent, destructible, curWeapId); // In case if some inner proj comes from destructible parent\r\n    }\r\n\r\n    resolveAndExtractProj(projId, result, parent, destructible, curWeapId) {\r\n        if (projId !== '' && projId !== '00000000') {\r\n            if (typeof projId !== typeof '') {\r\n                throw new Error(\"Proj id is not an id\");\r\n            }\r\n            const projData = getProj().get(projId);\r\n            this.extractProj(projData, result, parent, destructible, curWeapId);\r\n        }\r\n    }\r\n\r\n    extractEnch(ench, result, parent, destructible, curWeapId, time = 0, interval = 0) {\r\n        if (ench && typeof ench !== typeof '') {\r\n            throw new Error(\"Enchantment is not an id\");\r\n        }\r\n        ench = getSpell().get(ench);\r\n        let perk = ench.perk;\r\n        this.extractPerk(perk, result, parent, destructible, curWeapId);\r\n        let duration = ench.duration;\r\n        if (duration && duration > 0) {\r\n            throw new Error(\"Enchantment has duration\");\r\n        }\r\n        let enchTime = ench.time;\r\n        if (!enchTime) {\r\n            enchTime = 0;\r\n        }\r\n        if (enchTime === 0) {\r\n            enchTime = time;\r\n        }\r\n        this.extractEffects(ench.mag_effects, ench.id, result, parent, destructible, curWeapId, enchTime, interval);\r\n    }\r\n\r\n    extractEffects(effects, enchId, result, parent, destructible, curWeapId, time, interval) {\r\n        if (!effects) {\r\n            return;\r\n        }\r\n        let existedEffects = new Set();\r\n        for (let e = 0; e < effects.length; e++) {\r\n            const effect = effects[e];\r\n\r\n            // Effect part\r\n            let magnitude = effect.magnitude;\r\n            let curv = effect.d_curv;\r\n            let area = effect.area;\r\n            let duration = effect.duration;\r\n            let globMagnitude = effect.glob_magnitude;\r\n            let globDuration = effect.glob_duration;\r\n            let onlyPlayer = effect.only_player;\r\n            if (!onlyPlayer) {\r\n                onlyPlayer = 'No';\r\n            }\r\n\r\n            // MEffect\r\n            const mEffect = effect.m_effect;\r\n            if (existedEffects.has(mEffect.id)) {\r\n                continue;\r\n            }\r\n            // Crit check\r\n            const name = mEffect.name;\r\n            const full = mEffect.full;\r\n            let crit = false;\r\n            if (name.toLowerCase().includes(\"crit\") || full.toLowerCase().includes(\"crit\")) {\r\n                crit = true;\r\n            }\r\n\r\n            // Blood check\r\n            let blood = false;\r\n            if (name.toLowerCase().includes(\"bleed\") || full.toLowerCase().includes(\"bleed\")) {\r\n                blood = true;\r\n            }\r\n            existedEffects.add(mEffect.id);\r\n            this.extractPerk(mEffect.perk, result, parent, destructible, curWeapId);\r\n            this.extractExp(mEffect.explosion, result, parent, destructible, curWeapId);\r\n            const proj = mEffect.projectile;\r\n            if (proj !== '00000000') {\r\n                throw new Error(\"Proj / Expl found in mag effects\");\r\n            }\r\n            if (magnitude !== 0 || (curv !== '' && curv !== 0) || globMagnitude !== '') {\r\n                if (globDuration && globDuration !== '' && globDuration !== '00000000') {\r\n                    globDuration = globDuration.value;\r\n                } else {\r\n                    globDuration = 0\r\n                }\r\n                if (globDuration > 0) {\r\n                    duration = globDuration;\r\n                }\r\n                if (duration > 0) {\r\n                    time = duration;\r\n                }\r\n                if (globMagnitude && globMagnitude !== '' && globMagnitude !== '00000000') {\r\n                    globMagnitude = globMagnitude.value;\r\n                } else {\r\n                    globMagnitude = 0;\r\n                }\r\n                if (globMagnitude > 0) { // Override magnitude by glob\r\n                    magnitude = globMagnitude;\r\n                }\r\n                curv = this.resolveCurv(curv);\r\n                if (curv === 0 && magnitude === 0) {\r\n                    continue;\r\n                }\r\n                let dType = this.findEffectDamageType(mEffect, enchId, curWeapId);\r\n                if (dType && onlyPlayer === 'No') {\r\n                    let name = '';\r\n                    if (destructible) {\r\n                        name = \"Destructible Spell\";\r\n                    } else {\r\n                        name = \"Spell\";\r\n                    }\r\n\r\n                    // Armor penetration\r\n                    if (dType.id === '00097341') {\r\n                        name = \"Armor Penetration\";\r\n                    } else if (dType.id === '0018eee1' || dType.id === '00312d66') {\r\n                        name = \"Damage Bonus\";\r\n                    }\r\n                    let source = '';\r\n                    if (crit) {\r\n                        source = \"Crit Spell\";\r\n                    } else {\r\n                        source = \"Spell\";\r\n                    }\r\n                    this.addDamageNode(result, source, destructible, name, dType['name'], dType['id'],\r\n                                         dType['full'], curv, 0, magnitude, time, interval, area, parent, mEffect.id, curWeapId, onlyPlayer, false, crit, blood);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findEffectDamageType(mEffect, enchId, curWeapId) {\r\n        if (mEffect['id'] === '00239552' || mEffect['id'] === '00239550') { // Radiation healing damage\r\n            return null;\r\n        }\r\n        let result = mEffect['d_type']['id'];\r\n        if (result) {\r\n            return mEffect['d_type'];\r\n        }\r\n        let resId = mEffect['resist']['id'];\r\n        if (resId) {\r\n            return this.resTypes[resId];\r\n        }\r\n        let actor1 = mEffect['actor_value1']['id'];\r\n        if (actor1 === '000002e3') { // Damage resistance\r\n            return null;\r\n        } else if (actor1 === '00097341') { // Armor Penetration\r\n            return mEffect['actor_value1'];\r\n        } else if (actor1 === '0018eee1') { // STAT_DmgAll this is bonus mult\r\n            return mEffect['actor_value1'];\r\n        } else if (actor1 === '00312d66') { // STAT_DmgMelee this is bonus mult\r\n            return mEffect['actor_value1'];\r\n        } else if (actor1 === '000002d4') { // Health\r\n            console.log(\"Actor: \" + mEffect.actor_value1.name + \" WId: \" + curWeapId + \" AId: \" + mEffect.actor_value1.id + \" EId: \" + enchId);\r\n        }\r\n        let actor2 = mEffect['actor_value2']['name'];\r\n        if (actor2) {\r\n            throw new Error(\"Actor2 Exists\");\r\n        }\r\n        return null;\r\n    }\r\n\r\n    extractObject(obj, result, parent, destructible, curWeapId) {\r\n        if (!obj || obj === '' || obj === '00000000' || obj === '0017a580') {\r\n            return;\r\n        }\r\n\r\n        if (obj['type'] === 'WEAP') {\r\n            const wId = obj['value']['id'];\r\n            let damageData = null;\r\n            if (curWeapId === wId) {\r\n                return;\r\n            } else if (wId === '000042f2') {\r\n                damageData = this.tomahawk.damageData;\r\n            } else if (wId === '003879a3') {\r\n                damageData = this.throwingKnife.damageData;\r\n            } else {\r\n                throw new Error(\"Unknown weapon id: \" + wId);\r\n            }\r\n            for (const property in damageData) {\r\n                const damages = damageData[property];\r\n                for (let i = 0; i < damages.length; i++) {\r\n                    const damage = damages[i];\r\n                    this.addDamageNode(result, damage['source'], damage['destructible'], damage['view_name'],\r\n                                             damage['type_name'],\r\n                                             damage['type_id'], damage['type_full_name'], damage['curv'], damage['value'],\r\n                                             damage['magnitude'], damage['time'], damage['interval'], 0, parent, wId, curWeapId, \"No\", false, false, false);\r\n                }\r\n            }\r\n        } else if (obj['type'] === 'HAZD') {\r\n            const hazd = obj['value'];\r\n            this.extractEnch(hazd['effect'], result, parent, destructible, curWeapId, hazd['lifeTime'], hazd['interval']);\r\n        } else if (obj['type'] === 'MSTT') {\r\n            const value = obj['value'];\r\n            const spell = value['spell'];\r\n            if (spell && spell !== '' && spell !== '00000000') {\r\n                throw new Error(\"Spell in explosive object\");\r\n            }\r\n            this.extractExp(value['expl'], result, parent, destructible, curWeapId);\r\n            const hazd = value['hazd'];\r\n            this.extractEnch(hazd['effect'], result, parent, destructible, curWeapId, hazd['lifeTime'], hazd['interval']);\r\n        } else if (obj['type'] === 'EXPL') {\r\n            this.extractExp(obj['value'], result, parent, destructible, curWeapId);\r\n        } else {\r\n            throw new Error(\"Unknown object type\");\r\n        }\r\n    }\r\n\r\n    e_type_name = {256: \"Ability\", 512: \"Function\"}\r\n\r\n    v_type_name = {1: \"Float\", 3: \"List\", 4: \"Activate\", 5: \"Spell\", 8: \"Actor\", 9: \"Item\"}\r\n\r\n    operation = {\r\n        1: \"SetValue\", 2: \"AddValue\", 3: \"MulValue\", 5: \"MulAddValue\", 6: \"Abs\", 8: \"AddItem\",\r\n        9: \"AddActivate\", 10: \"SetSpell\", 12: \"AddValueToActor\", 13: \"MultiplyActorValueMultiply\",\r\n        14: \"MulAddValueToActor\", 16: \"SetItem\"\r\n    }\r\n\r\n    // TODO: LimbBash and WeaponAttackDamage for v_type 1 - 'Float'\r\n    // 3 - 'List' is not presented, 4 - 'Activate' is not presented, 9 - 'Item' is not presented\r\n    // 5 - 'Spell' is solved, 8 - 'Actor' is solved.\r\n    // Check this - 00621a92 0077176b 198 1 (Zeta's Revenge)\r\n    skipFunctions = [\"198\", \"OutgoingLimbBashDamage\", \"OutgoingLimbDamage\", \"MaxConsecutiveHits\",\r\n        \"SetDamageOnConsecutiveHits\", \"LossCondition\", \"WeaponAttackDamage\"];\r\n\r\n    extractPerk(perkId, result, parent, destructible, curWeapId) {\r\n        if (perkId && perkId !== '00000000' && perkId !== '') {\r\n            const perk = getPerks().get(perkId);\r\n            const effects = perk.effects;\r\n            for (let i = 0; i < effects.length; i++) {\r\n                const effect = effects[i];\r\n\r\n                if (effect.v_type === 1) {\r\n                    // if (this.skipFunctions.includes(effect.entry)) {\r\n                    //     continue;\r\n                    // }\r\n                } else if (effect.v_type === 3) {\r\n                    throw new Error(\"Found v_type 3\");\r\n                } else if (effect.v_type === 4) {\r\n                    throw new Error(\"Found v_type 4\");\r\n                } else if (effect.v_type === 5) {\r\n                    this.extractEnch(effect.value, result, parent, destructible, curWeapId)\r\n                } else if (effect.v_type === 8) { // Do we really need this 1% what is the purpose of it?\r\n                    // console.log(\"Perk8: \" + curWeapId + \" \" + perkId + \" \" + effect.entry + \" \" + effect.value.value);\r\n                } else if (effect.v_type === 9) {\r\n                    throw new Error(\"Found v_type 9\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    extractExp(exp, result, parent, destructible, curWeapId) {\r\n        if (!exp || exp === '' || exp === '00000000') {\r\n            return;\r\n        }\r\n        if (typeof exp !== typeof {}) {\r\n            throw new Error(\"Explosive is not an object but id: \" + exp);\r\n        }\r\n        const ench = exp.enchantment;\r\n        if (ench && ench !== '' && ench !== '00000000') {\r\n            this.extractEnch(ench, result, parent, destructible, curWeapId);\r\n        }  \r\n        this.resolveAndExtractProj(exp.projectile, result, parent, destructible, curWeapId);\r\n        this.extractObject(exp.object, result, parent, destructible, curWeapId);\r\n        this.dDamage(exp, result, destructible, parent, curWeapId);\r\n        const damageType = this.damageTypes.physical;\r\n        const damage = exp.damage;\r\n        const expCurv = exp.exp_curv;\r\n        let curv = 0;\r\n        if (expCurv !== '' && expCurv !== '00000000') {\r\n            curv = this.resolveCurv(expCurv);\r\n        }\r\n        let name = '';\r\n        if (destructible) {\r\n            name = \"Destructible Explosive Damage\";\r\n        } else {\r\n            name = \"Explosive Damage\";\r\n        }\r\n        this.addDamageNode(result, \"Projectile\", destructible, name, damageType.name, damageType.id, damageType.full, curv,\r\n            damage, 0, 0, 0, 0, parent, exp.id, curWeapId, \"No\", true, false, false);\r\n\r\n        if (exp.damage_mult > 0) {\r\n            this.addDamageNode(result, \"Projectile\", destructible, \"Explosive Damage Multiplier\", \"ExpDamageMult\", \"\", \"\", 0,\r\n                exp.damage_mult, 0, 0, 0, 0, parent, exp.id, curWeapId, \"No\", true, false, false);\r\n        }\r\n    }\r\n\r\n    addDamageNode(result, source, destructible, view_name, type_name, type_id, type_full_name, curv, value,\r\n                    magnitude, time, interval, area, parent, directParent, weapId, only_player, exp, crit, blood) {\r\n        if (curv === 0 && magnitude === 0 && value === 0) {\r\n            return;\r\n        }\r\n        if (crit && parent !== \"Base Crit\") {\r\n            console.log(\"Spell Crit is found\");\r\n        }\r\n        const obj = {\r\n            \"destructible\": destructible,\r\n            \"source\": source,\r\n            \"view_name\": view_name,\r\n            \"type_name\": type_name,\r\n            \"type_id\": type_id,\r\n            \"weaponId\": weapId,\r\n            \"type_full_name\": type_full_name,\r\n            \"curv\": curv,\r\n            \"value\": value,\r\n            \"magnitude\": magnitude,\r\n            \"time\": time,\r\n            \"area\": area,\r\n            \"interval\": interval,\r\n            \"parent\": parent,\r\n            \"directParent\": directParent,\r\n            \"only_player\": only_player,\r\n            \"exp\": exp,\r\n            \"crit\": crit,\r\n            \"blood\": blood,\r\n        };\r\n        const entries = result[source];\r\n        if (!entries) {\r\n            result[source] = [obj];\r\n        } else {\r\n            entries.push(obj);\r\n        }\r\n    }\r\n\r\n    resolveCurv(expCurv) {\r\n        if (expCurv !== '' && expCurv !== '00000000') {\r\n            if (typeof expCurv === typeof '') {\r\n                console.log(\"ExpCurv: \" + expCurv);\r\n                throw new Error(\"expCurv must be already evaluated: \" + expCurv);\r\n                /*\r\n                let curv = expCurv.split(\"\\n\");\r\n                try {\r\n                    curv = eval(curv[1])[\"curve\"];\r\n                    return curv[curv.length - 1]['y'];\r\n                } catch(error) {\r\n                    return 0;\r\n                }\r\n                */\r\n            } else {\r\n                return expCurv; // Consider it is a number.\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    dDamage(explosive, result, destructible, parent, weaponId) {\r\n        let value = explosive['d_value'];\r\n        if (Math.abs(value) < 0.01) {\r\n            value = 0;\r\n        }\r\n        let curv = explosive['d_curv'];\r\n        if (value > 0 || (curv !== '' && curv !== '00000000')) {\r\n            curv = this.resolveCurv(curv);\r\n            let dType = explosive.d_type;\r\n            if (dType === '' || dType === '00000000') {\r\n                dType = this.damageTypes.physical;\r\n            }\r\n            let name = '';\r\n            if (destructible) {\r\n                name = \"Destructible Damage\";\r\n            } else {\r\n                name = \"Damage\";\r\n            }\r\n            this.addDamageNode(result, \"Projectile\", destructible, name, dType.name, dType.id, dType.full, curv, value,\r\n                                 0, 0, 0, 0, parent, explosive.id, weaponId, \"No\", true, false, false);\r\n        }\r\n    }\r\n}","export default class DamageBlackList {\r\n    static ignoreMap = {\r\n        \"0055c152\": [\"005894a9\", \"005894a7\"],\r\n        \"0060e0ef\": [\"000fd3aa\"],\r\n        \"0055c166\": [\"000fd3aa\"],\r\n        \"0042b0cc\": [\"001b5edc\"],\r\n        \"0001ec47\": [\"000fd3aa\"],\r\n        \"00646880\": [\"001b5edc\"],\r\n        \"0001f669\": [\"001b5edc\"],\r\n        \"00011bf6\": [\"001b5edc\"],\r\n        \"001109cf\": [\"00215e08\"],\r\n        \"0042b0d0\": [\"00215e08\"],\r\n        \"000fe268\": [\"00215e08\"],\r\n        \"002fd97a\": [\"000fd3aa\"],\r\n        \"00100ae9\": [\"000fd3aa\"],\r\n        \"005a366e\": [\"000fd3aa\"],\r\n        \"005ea441\": [\"000fd3aa\"],\r\n    }\r\n\r\n    static check(weaponId, damageId) {\r\n        const list = DamageBlackList.ignoreMap[weaponId];\r\n        if (list) {\r\n            return list.includes(damageId);\r\n        }\r\n        return false;\r\n    }\r\n}","import DamageBlackList from \"../../damage/DamageBlackList\";\r\n\r\n\r\nexport function buildDamageItem(weaponId, damageId, type, kind, name, damage, time, interval, area, chance, accuracy, stack, index=0, isUsed=true) {\r\n    const ignore = DamageBlackList.check(weaponId, damageId);\r\n    return {\r\n        \"isUsed\": isUsed,\r\n        \"type\": type,\r\n        \"kind\": kind,\r\n        \"name\": name,\r\n        \"damage\": damage,\r\n        \"time\": time,\r\n        \"interval\": interval,\r\n        \"area\": area,\r\n        \"chance\": chance,\r\n        \"accuracy\": accuracy, // Accuracy from weapon and mods or from user\r\n        \"finalAccuracy\": accuracy, // Final accuracy with perks, consumables, legendary\r\n        \"stack\": stack,\r\n        \"index\": index,\r\n        \"weaponId\": weaponId,\r\n        \"damageId\": damageId,\r\n        \"ignore\": ignore,\r\n    };\r\n}\r\n\r\nexport function buildBleedDamage(damage, time, chance=100, accuracy=100, stack=false) {\r\n    return buildDamageItem(\"\", \"\", \"dtPhysical\", \"bleed\", \"Bleed\", damage, time, 0, 0, chance, accuracy, stack, -1, true);\r\n}\r\n\r\nexport function convertDamageDataToDamageItem(damageData) {\r\n    const type = getDamageTypeFromCellName(damageData.type_name);\r\n    const damage = getDamageValue(damageData);\r\n    return buildDamageItem(damageData.weaponId, damageData.directParent, type[0], type[1], type[2], damage, damageData.time, damageData.interval, damageData.area, 100, 100, false);\r\n}\r\n\r\nexport function makeDamageItemCopy(damageItem) {\r\n    return buildDamageItem(damageItem.weaponId, damageItem.damageId, damageItem.type, damageItem.kind, damageItem.name, damageItem.damage, damageItem.time,\r\n        damageItem.interval, damageItem.area, damageItem.chance, damageItem.accuracy, damageItem.stack, damageItem.index, damageItem.isUsed);\r\n}\r\n\r\nfunction getDamageValue(damage) {\r\n    if (damage.curv > 0) {\r\n        return damage.curv;\r\n    } else if (damage.value > 0) {\r\n        return damage.value;\r\n    }\r\n    return damage.magnitude;\r\n}\r\n\r\nconst cellNames = ['bbDamage', 'ebDamage', 'fbDamage', 'pbDamage', 'cbDamage', 'rbDamage', 'projExp', 'bleed'];\r\n\r\nexport function collectAllDamages(template) {\r\n    let result = [];\r\n    for (let i = 0; i < template.adDamage.length; i++) {\r\n        result.push(makeDamageItemCopy(template.adDamage[i]));\r\n    }\r\n\r\n    for (let i = 0; i < cellNames.length; i++) {\r\n        const name = cellNames[i];\r\n        let damage = template[name][1];\r\n        let damageId = template[name][2];\r\n        if (typeof damage === typeof '') {\r\n            const split = damage.split(\" / \");\r\n            damage = parseFloat(split[0]);\r\n            const time = parseFloat(split[1].slice(0, -1));\r\n            const type = getDamageTypeFromCellName(name);\r\n            const obj = buildDamageItem(template.id, damageId, type[0], type[1], type[2], damage, time, 0, 0, 100, 100, false);\r\n            result.push(obj);\r\n        } else if (damage > 0) {\r\n            const type = getDamageTypeFromCellName(name);\r\n            const obj = buildDamageItem(template.id, damageId, type[0], type[1], type[2], damage, 0, 0, 0, 100, 100, false);\r\n            result.push(obj);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getDamageTypeFromCellName(cellName) {\r\n    switch(cellName) {\r\n        case 'bleed':\r\n            return ['dtPhysical', 'bleed', \"Bleed\"];\r\n        case 'projExp':\r\n            return ['dtPhysical', 'explosive', \"Explosive\"];\r\n        case 'bbDamage':\r\n        case 'dtPhysical':\r\n            return ['dtPhysical', 'physical', \"Physical\"];\r\n        case 'ebDamage':\r\n        case 'dtEnergy':\r\n        case 'dtElectrical':\r\n            return ['dtEnergy', 'energy', \"Energy\"];\r\n        case 'fbDamage':\r\n        case 'dtFire':\r\n            return ['dtFire', 'fire', \"Fire\"];\r\n        case 'pbDamage':\r\n        case 'dtPoison':\r\n            return ['dtPoison', 'poison', \"Poison\"];\r\n        case 'cbDamage':\r\n        case 'dtCryo':\r\n            return ['dtCryo', 'cryo', \"Cryo\"];\r\n        case 'rbDamage':\r\n        case 'dtRadiationExposure':\r\n            return ['dtRadiationExposure', 'radiation', \"Radiation\"];\r\n        default:\r\n            console.log(\"Can't determine appropriate damate type by cell name: \" + cellName);\r\n            return ['dtPhysical', 'ballistic', \"Physical\"];\r\n    }\r\n}\r\n\r\nexport default class DamageSetter {\r\n\r\n    setDamages(templates) {\r\n        for (let i = 0; i < templates.length; i++) {\r\n            this.setDamage(templates[i]);\r\n        }\r\n    }\r\n\r\n    setDamage(template) {\r\n        template.adDamage = []; // Additional damages\r\n        this.setDamageForCategory(template, \"Base\");\r\n        this.setDamageForCategory(template, \"Ammo\");\r\n        this.setDamageForCategory(template, \"Projectile\");\r\n        this.setDamageForCategory(template, \"Base Spell\");\r\n        this.setDamageForCategory(template, \"Spell\");\r\n    }\r\n\r\n    setDamageForCategory(template, category) {\r\n        const damageData = template.damageData;\r\n        for (const property in damageData) {\r\n            if (property !== category) {\r\n                continue;\r\n            }\r\n            const damages = damageData[property];\r\n            for (let i = 0; i < damages.length; i++) {\r\n                const damage = damages[i];\r\n                this.setCurrent(template, damage);\r\n            }\r\n        }\r\n    }\r\n\r\n    setCurrent(template, damage) {\r\n        if (damage.destructible === false && damage.only_player === \"No\") {\r\n            const damageValue = getDamageValue(damage);\r\n            if (damageValue === 0) {\r\n                return;\r\n            }\r\n            this.placeValueByType(template, damage, damageValue);\r\n        }\r\n    }\r\n\r\n    placeValueByType(template, damageData, damageValue) {\r\n        const damage = [damageValue, damageValue];\r\n        const exp = damageData.exp;\r\n        const blood = damageData.blood;\r\n        switch(damageData.type_name) {\r\n            case \"ArmorPenetration\":\r\n                template.antiArmor = damage;\r\n                break;\r\n            case \"ExpDamageMult\":\r\n                template.exp[1] = damage[1] * 100;\r\n                break;\r\n            case \"STAT_DmgAll\":\r\n            case \"STAT_DmgMelee\":\r\n                template.bonusMult[1] += damage[1] / 100;\r\n                break;\r\n            case \"dtPhysical\":\r\n                if (exp) {\r\n                    this.putDamage(template, \"projExp\", damage, damageData);\r\n                } else if (blood) {\r\n                    const type = getDamageTypeFromCellName(\"bleed\");\r\n                    template.adDamage.push(buildDamageItem(template.id, damageData.directParent, type[0], type[1], type[2], damageValue, damageData.time, 0, 0, 100, 100, false));\r\n                } else {\r\n                    this.putDamage(template, \"bbDamage\", damage, damageData);\r\n                }\r\n                break;\r\n            case \"dtEnergy\":\r\n            case \"dtElectrical\":\r\n                this.putDamage(template, \"ebDamage\", damage, damageData);\r\n                break;\r\n            case \"dtFire\":\r\n                this.putDamage(template, \"fbDamage\", damage, damageData);\r\n                break;\r\n            case \"dtPoison\":\r\n                this.putDamage(template, \"pbDamage\", damage, damageData);\r\n                break;\r\n            case \"dtCryo\":\r\n                this.putDamage(template, \"cbDamage\", damage, damageData);\r\n                break;\r\n            case \"dtRadiationExposure\":\r\n                this.putDamage(template, \"rbDamage\", damage, damageData);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    putDamage(template, field, damage, damageData) {\r\n        const type = getDamageTypeFromCellName(field);\r\n        if (template[field][0] > 0 || damageData.time > 0 || damageData.interval > 0) { // We already have this type of damage, add it as additional\r\n\r\n            // Will be modified only by boost multiplier independently\r\n            template.adDamage.push(buildDamageItem(template.id, damageData.directParent, type[0], type[1], type[2], damage[1], damageData.time, damageData.interval, damageData.area, 100, 100, false));\r\n        } else {\r\n\r\n            // Later can be modified by boosts (current architecture does not allow to push it to adDamage\r\n            const newDamage = [damage[0], damage[1], damageData.directParent];\r\n            template[field] = newDamage;\r\n        }\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class DamageBonusMult extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const mult = super.getValue(mod);\r\n        super.addSetMullAdd(template.bonusMult, mult, mod.op, apply, true);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        super.checkOp(mod, \"legendary\", \"Add\");\r\n        const value = super.getValue(mod);\r\n        if (update) {\r\n            return false;\r\n        }\r\n\r\n        // Expected that every particular legendary has only one damage bonus multiplier\r\n        wSpec.legendary[starIndex][1] = (apply) ? value * 100 : 0;\r\n        wSpec.legendary[starIndex][2] = (apply) ? \"BDB\" : \"\";\r\n    }\r\n}","import { Apply } from './Apply';\r\nimport getAmmo from '../../Ammo';\r\n\r\n\r\nexport class Ammo extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Set\");\r\n        if (apply) {\r\n            template.ammoId[1] = mod.val1.split(\" / \")[0];\r\n        } else {\r\n            template.ammoId[1] = template.ammoId[0];\r\n        }\r\n        const ammoData = getAmmo().get(template.ammoId[1]);\r\n        template.ammoType = {name: ammoData.full, type: ammoData.ammo_type, codeName: ammoData.name};\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return true;\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n        // Expected we do not have legendary which changes ammo type\r\n        throw new Error(\"Legendary changes ammo type\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class IsAutomatic extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Set\");\r\n        if (apply) {\r\n            template.isAuto[1] = parseInt(mod.val1);\r\n        } else {\r\n            template.isAuto[1] = template.isAuto[0];\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        throw new Error(\"Legendary changes auto fire\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class Speed extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.speed, value, mod.op, apply);\r\n        template.autoRate[1] = template.defRate * template.speed[1];\r\n        template.manualRate[1] = template.manualRate[1] / template.speed[1];\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        super.checkOp(mod, \"Legendary\", \"MullAdd\");\r\n        const value = super.getValue(mod);\r\n        super.mullAddToProperty(wSpec, \"speed\", value, apply);\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class APCost extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.ap, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        // Currently there is no reason to change ap\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class Weight extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.weight, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        // Currently there is no reason to change weight\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class AttackDelay extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.manualRate, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n        // Expected we do not have legendary which changes attack delay\r\n        throw new Error(\"Legendary changes attack delay\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class CriticalDamageMult extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Add\");\r\n        const value = super.getValue(mod) * 100.0;\r\n        if (apply) {\r\n            template.crit[1] += value;\r\n        } else {\r\n            template.crit[1] -= value;\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        super.checkOp(mod, \"Legendary\", \"Add\");\r\n        const value = super.getValue(mod) * 100;\r\n        super.addToProperty(wSpec, \"crit\", value, apply);\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class AmmoCapacity extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.capacity, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        super.checkOp(mod, \"Legendary\", \"MullAdd\");\r\n        const value = super.getValue(mod);\r\n        super.mullAddToProperty(wSpec, \"ammoCapacity\", value, apply);\r\n\r\n        // Protect if a user change the number\r\n        wSpec.ammoCapacity = parseInt(wSpec.ammoCapacity);\r\n        if (wSpec.ammoCapacity < 1) {\r\n            wSpec.ammoCapacity = 1;\r\n        }\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class ReloadSpeed extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.reloadSpeed, value, mod.op, apply);\r\n        template.reloadTime[1] = template.reloadTime[0] / template.reloadSpeed[1];\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        super.checkOp(mod, \"Legendary\", \"MullAdd\");\r\n        const value = super.getValue(mod);\r\n        super.mullAddToProperty(wSpec, \"reloadSpeed\", value, apply);\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class OverrideProjectile extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const field = template.projId;\r\n        const value = mod.val1.split(\" / \")[0];\r\n        if (mod.op === \"Set\") {\r\n            if (apply) {\r\n                field[1] = [value];\r\n            } else {\r\n                field[1] = [...field[0]];\r\n            }\r\n        } else if (mod.op === \"MullAdd\" || mod.op === \"Add\") {\r\n            if (apply) {\r\n                field[1].push(value);\r\n            } else {\r\n\r\n                // Avoid removing default one if it is previously was overridden by 'set'\r\n                if (field[1].toString() === field[0].toString()) {\r\n                    return;\r\n                }\r\n                const index = field[1].indexOf(value);\r\n                if (index > -1) {\r\n                    field[1].splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return true;\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        throw new Error(\"Legendary changes projectile\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class HasRepeatableSingleFire extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Set\");\r\n        if (apply) {\r\n            template.isAuto[1] = 1;\r\n        } else {\r\n            template.isAuto[1] = template.isAuto[0];\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        throw new Error(\"Legendary changes auto fire\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class ActorValues extends Apply {\r\n\r\n    getValue(mod, weapId) {\r\n        super.checkOp(mod, weapId, \"Add\");\r\n        let value = super.getCurvValue(mod);\r\n        if (value === 0) {\r\n            value = parseFloat(mod.val2);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    applyValue(mod, obj, name, value, apply, isLegendary=false) {\r\n        switch(mod.val1) {\r\n            case '00058d36 / STAT_DmgVsScorched':\r\n                this.damageToCreature(obj, name, value, apply, \"Scorched\");\r\n                break;\r\n            case '0018eeee / STAT_DmgVsGhouls':\r\n                this.damageToCreature(obj, name, value, apply, \"Ghoul\");\r\n                break;\r\n            case '00674c85 / STAT_DmgVsMoleMiners':\r\n                this.damageToCreature(obj, name, value, apply, \"MoleMiner\");\r\n                break;\r\n            case '0018eef2 / STAT_DmgVsHumans':\r\n                this.damageToCreature(obj, name, value, apply, \"Human\");\r\n                break;\r\n            case '004f5775 / STAT_DmgVsBugs':\r\n                this.damageToCreature(obj, name, value, apply, \"Bug\");\r\n                break;\r\n            case '0018eeed / STAT_DmgVsSuperMutants':\r\n                this.damageToCreature(obj, name, value, apply, \"SuperMutant\");\r\n                break;\r\n            case '0018eeef / STAT_DmgVsRobots':\r\n                this.damageToCreature(obj, name, value, apply, \"Robot\");\r\n                break;\r\n            case '00674c84 / STAT_DmgVsMolerats':\r\n                this.damageToCreature(obj, name, value, apply, \"Molerat\");\r\n                break;\r\n            case '00690c78 / STAT_DmgVsCryptids':\r\n                this.damageToCreature(obj, name, value, apply, \"Cryptid\");\r\n                break;\r\n            case '0018eeec / STAT_DmgVsMirelurks':\r\n                this.damageToCreature(obj, name, value, apply, \"Mirelurk\");\r\n                break;\r\n            case '0018eeeb / STAT_DmgVsAnimals':\r\n                this.damageToCreature(obj, name, value, apply, \"Animal\");\r\n                break;\r\n            case '00097341 / ArmorPenetration':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"aa\", value, apply);\r\n                } else {\r\n                    super.add(obj.antiArmor, value, apply);\r\n                }\r\n                break;\r\n            case '006e1052 / STAT_SneakAttackBonus':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"sneak\", value, apply);\r\n                } else {\r\n                    super.add(obj.sneak, value, apply);\r\n                }\r\n                break;\r\n            case '007a6c35 / LGND_ExplosivePayload':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"exp\", value, apply);\r\n                } else {\r\n                    this.checkZero(obj.exp, obj.id);\r\n                    obj.exp[1] = (apply) ? value : obj.exp[0];\r\n                }\r\n                break;\r\n            case '001ef5d9 / STAT_DmgLimbs':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"cripple\", value, apply);\r\n                } else {\r\n                    super.add(obj.cripple, value, apply);\r\n                }\r\n                break;\r\n\r\n            case '006c1fa9 / STAT_DmgPowerAttack':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"powerAttack\", value, apply);\r\n                } else {\r\n                    super.add(obj.powerAttack, value, apply);\r\n                }\r\n                break;\r\n            case '006c2221 / STAT_DmgBash':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"bash\", value, apply);\r\n                } else {\r\n                    super.add(obj.bash, value, apply);\r\n                }\r\n                break;\r\n            case '00527f83 / LGND_ExecuteDmg':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"totalD\", value, apply);\r\n                } else {\r\n                    super.add(obj.totalD, value, apply);\r\n                }\r\n                break;\r\n            case '000002c2 / Strength':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"strPoints\", value, apply);\r\n                } else {\r\n                    super.add(obj.strPoints, value, apply);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    apply(template, mod, apply) {\r\n        const value = this.getValue(mod, template.id);\r\n        this.applyValue(mod, template, \"creature\", value, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        const value = this.getValue(mod, \"Legendary\");\r\n        this.applyValue(mod, wSpec, \"creature\", value, apply, true);\r\n    }\r\n\r\n    damageToCreature(obj, property, value, apply, name) {\r\n        const creatures = obj[property];\r\n        let applied = false;\r\n        let needToRemove = -1;\r\n\r\n        // Apply to existing one\r\n        for (let i = 0; i < creatures.length; i++) {\r\n            const creature = creatures[i];\r\n            if (creature.name === name) {\r\n                applied = true;\r\n                if (apply) {\r\n                    creature.value += value;\r\n                } else {\r\n                    creature.value -= value;\r\n                }\r\n                if (creature.value <= 0) {\r\n                    needToRemove = i;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Remove existed because the value of it less than or equal to zero\r\n        if (needToRemove > -1) {\r\n            creatures.splice(needToRemove, 1);\r\n        }\r\n\r\n        // Add new one\r\n        if (apply && !applied) {\r\n            creatures.push({ \"name\": name, \"value\": value });\r\n        }\r\n    }\r\n\r\n    checkZero(field, weaponId) {\r\n        if (field[1] > 0) {\r\n            console.log(\"ActorValues already has a value: \" + weaponId);\r\n        }\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class Keywords extends Apply {\r\n\r\n    addTag(template, tag, apply) {\r\n        if (apply) {\r\n            template.tags.push(tag);\r\n        } else {\r\n            let k = -1;\r\n            for (let i = 0; i < template.tags.length; i++) {\r\n                if (template.tags[i] === tag) {\r\n                    k = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (k > -1) {\r\n                template.tags.splice(k, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    print(name) {\r\n        if (!name.includes(\"IsAmmoType\") && !name.includes(\"dn_Has\") && !name.includes(\"HasS\") && !name.includes(\"legendary\")\r\n            && !name.includes(\"s_30\") && !name.includes(\"Anims\") && !name.includes(\"remapNode\") && !name.includes(\"CustomItem\")\r\n            && !name.includes(\"Legendary\") && !name.includes(\"ATX\") && !name.includes(\"UI_\") && !name.includes(\"s_35\")\r\n            && !name.includes(\"ma_\") && !name.includes(\"s_20\") && !name.includes(\"FeaturedItem\") && !name.includes(\"00000000\")\r\n            && !name.includes(\"WeaponTypePistol\") && !name.includes(\"WeaponTypeRifle\") && !name.includes(\"VATSWeaponLongBurst\")\r\n            && !name.includes(\"DamageType\") && !name.includes(\"s_00\")) {\r\n            console.log(\"Keywords: \" + name);\r\n        }\r\n    }\r\n\r\n    apply(template, mod, apply) {\r\n        const name = mod.val1;\r\n        switch(name) {\r\n            case '005c3874 / IsAmmoType_FusionCore':\r\n            case '005dc32d / IsAmmoType_FusionCore_AntiScorchBeast':\r\n                this.addTag(template, \"FusionCore\", apply);\r\n                return;\r\n            case '00060a81 / dtEnergy':\r\n            case '0033a7c9 / WeaponTypeEnergy':\r\n                this.addTag(template, \"Energy\", apply);\r\n                return;\r\n            case '001e05d6 / HasSilencer':\r\n                this.addTag(template, \"HasSilencer\", apply);\r\n                return;\r\n            case '0004a0a2 / WeaponTypeAutomatic':\r\n            case '0034087a / WeaponTypeAutomaticRifle':\r\n                this.addTag(template, \"Automatic\", apply);\r\n                if (apply) {\r\n                    template.isAuto[1] = 1;\r\n                } else {\r\n                    template.isAuto[1] = template.isAuto[0];\r\n                }\r\n                return;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // Some weapons like MG-42 can have 'Rifle' keyword we skip it to not change its type\r\n        if (template.type[0] !== 'Rifle' && template.type[0] !== 'Pistol') {\r\n            return;\r\n        }\r\n        switch(name) {\r\n            case '0004a0a1 / WeaponTypeRifle':\r\n                template.type[1] = (apply) ? \"Rifle\" : template.type[0];\r\n                break;\r\n            case '0004a0a0 / WeaponTypePistol':\r\n                template.type[1] = (apply) ? \"Pistol\" : template.type[0];\r\n                break;\r\n             default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        const name = mod.val1;\r\n        if (name.includes(\"dt\") || name.includes(\"WeaponType\")) {\r\n            throw new Error(\"Legendary changes weapon or damage type\");\r\n        }\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class CritEffect extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const field = template.crSpellId;\r\n        const value = mod.val1.split(\" / \")[0];\r\n        if (mod.op === \"Set\") {\r\n            if (apply) {\r\n                field[1] = [value];\r\n            } else {\r\n                field[1] = [...field[0]];\r\n            }\r\n        } else if (mod.op === \"Add\" || mod.op === \"MullAdd\") {\r\n            if (apply) {\r\n                field[1].push(value);\r\n            } else {\r\n\r\n                // Avoid removing default one if it is previously was overridden by 'set'\r\n                if (field[1].toString() === field[0].toString()) {\r\n                    return;\r\n                }\r\n                const index = field[1].indexOf(value);\r\n                if (index > -1) {\r\n                    field[1].splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return true;\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n        // Expected we do not have legendary which changes crit effect\r\n        throw new Error(\"Legendary changes crit effect\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class AttackDamage extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.bbDamage, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n        // Expected we do not have legendary which changes attack damage\r\n        throw new Error(\"Legendary changes attack damage\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class DamageTypeValues extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        let value = super.getCurvValue(mod);\r\n        if (value === 0) {\r\n            value = parseFloat(mod.val2);\r\n        }\r\n        let from = null;\r\n        switch (mod.val1) {\r\n            case '00060a81 / dtEnergy':\r\n                from = template.ebDamage[0] === 0 ? template.bbDamage : template.ebDamage;\r\n                this.setDamage(template.ebDamage, from, value, mod.op, apply);\r\n                break;\r\n            case '00060a82 / dtFire':\r\n                from = template.fbDamage[0] === 0 ? template.bbDamage : template.fbDamage;\r\n                this.setDamage(template.fbDamage, from, value, mod.op, apply);\r\n                break;\r\n            case '00060a84 / dtPoison':\r\n                from = template.pbDamage[0] === 0 ? template.bbDamage : template.pbDamage;\r\n                this.setDamage(template.pbDamage, from, value, mod.op, apply);\r\n                break;\r\n            case '00060a83 / dtCryo':\r\n                from = template.cbDamage[0] === 0 ? template.bbDamage : template.cbDamage;\r\n                this.setDamage(template.cbDamage, from, value, mod.op, apply);\r\n                break;\r\n            case '00060a85 / dtRadiationExposure':\r\n                from = template.rbDamage[0] === 0 ? template.bbDamage : template.rbDamage;\r\n                this.setDamage(template.rbDamage, from, value, mod.op, apply);\r\n                break;\r\n            default:\r\n                throw new Error(\"New damage type values: \" + mod.val1);\r\n        }\r\n    }\r\n\r\n    setDamage(to, from, value, op, apply) {\r\n        if (op === 'MullAdd') {\r\n            super.mullAddFromTo(from, to, value, apply);\r\n        } else if (op === 'Set') {\r\n            super.set(to, value, apply);\r\n        } else if (op === 'Add') {\r\n            super.add(to, value, apply);\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        throw new Error(\"Legendary changes damage type values\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class WeightReduction extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Add\");\r\n        const value = super.getValue(mod);\r\n        super.mullAdd(template.weight, value, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        // Currently there is no reason to change weight\r\n    }\r\n}","import { Apply } from './Apply';\r\nimport DamageExtractor from '../DamageExtractor';\r\n\r\n\r\nexport class Enchantments extends Apply {\r\n\r\n    constructor() {\r\n        super();\r\n        this.damageExtractor = new DamageExtractor();\r\n    }\r\n    apply(template, mod, apply) {\r\n        const field = template.adEffects;\r\n        const value = mod.val1.split(\" / \")[0];\r\n        if (mod.op === \"Set\") {\r\n            if (apply) {\r\n                field[1] = [value];\r\n            } else {\r\n                field[1] = [...field[0]];\r\n            }\r\n        } else if (mod.op === \"MullAdd\" || mod.op === \"Add\") {\r\n            if (apply) {\r\n                field[1].push(value);\r\n            } else {\r\n                // Possibly useless cause now any changes lead to full recalculation.\r\n                // Avoid removing default one if it is previously was overridden by 'set'\r\n                if (field[1].toString() === field[0].toString()) {\r\n                    return;\r\n                }\r\n                const index = field[1].indexOf(value);\r\n                if (index > -1) {\r\n                    field[1].splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return true;\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        let result = [];\r\n        const ench = mod.val1.split(\" / \")[0];\r\n        this.damageExtractor.extractEnch(ench, result, \"Legendary\", false, \"\");\r\n        for (const property in result) {\r\n            const effects = result[property];\r\n            for (let i = 0; i < effects.length; i++) {\r\n                const effect = effects[i];\r\n                if (effect.type_name === 'STAT_DmgAll' || effect.type_name === \"STAT_DmgMelee\") {\r\n                    let value = effect.curv;\r\n                    if (value === 0) {\r\n                        value = effect.magnitude;\r\n                        if (value === 0) {\r\n                            throw new Error(\"Effect damage for legendary is 0\");\r\n                        }\r\n                    }\r\n                    const [newValue, depend] = this.adjustValueByHealth(modId, value, health);\r\n\r\n                    // We do not want to update values which do not depend on health\r\n                    // because they can be adjusted by user and updating just reset them to default.\r\n                    if (!depend && update) {\r\n                        continue;\r\n                    }\r\n\r\n                    wSpec.legendary[starIndex][1] = (apply) ? newValue : 0;\r\n                    wSpec.legendary[starIndex][2] = (apply) ? \"BDB\" : \"\";\r\n                } else {\r\n                    // throw new Error(\"Not known effect type for legendary: \" + effect.type_name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    adjustValueByHealth(modId, value, health) {\r\n        switch(modId) {\r\n            case '00606b73': // Juggernaut's\r\n                if (health > 95) {\r\n                    health = 95;\r\n                }\r\n                health -= 5;\r\n                return [parseInt(24 / 90 * health + 1), true];\r\n            case '004f6aa0': // Bloodied\r\n                return [100 - health, true];\r\n            default:\r\n                return [value, false];\r\n        }\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class NumProjectiles extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.shotSize, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        const value = super.getValue(mod);\r\n        super.checkOp(mod, \"legendary\", \"Add\");\r\n        super.addToProperty(wSpec, \"shot_size\", value, apply);\r\n\r\n        // Protect projectile if a user change the value\r\n        if (wSpec.shot_size === 0) {\r\n            wSpec.shot_size = 1;\r\n        }\r\n    }\r\n}","import { DamageBonusMult } from './DamageBonusMult';\r\nimport { Ammo } from './Ammo';\r\nimport { IsAutomatic } from './IsAutomatic';\r\nimport { Speed } from './Speed';\r\nimport { APCost } from './APCost';\r\nimport { Weight } from './Weight';\r\nimport { AttackDelay } from './AttackDelay';\r\nimport { CriticalDamageMult } from './CriticalDamageMult';\r\nimport { AmmoCapacity } from './AmmoCapacity';\r\nimport { ReloadSpeed } from './ReloadSpeed';\r\nimport { OverrideProjectile } from './OverrideProjectile';\r\nimport { HasRepeatableSingleFire } from './HasRepeatableSingleFire';\r\nimport { ActorValues } from './ActorValues';\r\nimport { Keywords } from './Keywords';\r\nimport { CritEffect } from './CritEffect';\r\nimport { AttackDamage } from './AttackDamage';\r\nimport { DamageTypeValues } from './DamageTypeValues';\r\nimport { WeightReduction } from './WeightReduction';\r\nimport { Enchantments } from './Enchantments';\r\nimport { NumProjectiles } from './NumProjectiles';\r\nimport { ConIronSight } from './ConIronSight';\r\nimport { SightedTransition } from './SightedTransition';\r\nimport { MaxConDegree } from './MaxConDegree';\r\nimport { MinConDegree } from './MinConDegree';\r\nimport { RecoilMaxDegree } from './RecoilMaxDegree';\r\nimport { RecoilMinDegree } from './RecoilMinDegree';\r\n\r\n\r\nexport default class Appliers {\r\n    \r\n    constructor() {\r\n        \r\n        // TODO: Has to be generated and set automatically via names instead of manual setting\r\n        this.appliers = new Map();\r\n        this.appliers.set(\"DamageBonusMult\", new DamageBonusMult());\r\n        this.appliers.set(\"Ammo\", new Ammo());\r\n        this.appliers.set(\"IsAutomatic\", new IsAutomatic());\r\n        this.appliers.set(\"Speed\", new Speed());\r\n        this.appliers.set(\"APCost\", new APCost());\r\n        this.appliers.set(\"Weight\", new Weight());\r\n        this.appliers.set(\"AttackDelay\", new AttackDelay());\r\n        this.appliers.set(\"CriticalDamageMult\", new CriticalDamageMult());\r\n        this.appliers.set(\"AmmoCapacity\", new AmmoCapacity());\r\n        this.appliers.set(\"ReloadSpeed\", new ReloadSpeed());\r\n        this.appliers.set(\"OverrideProjectile\", new OverrideProjectile());\r\n        this.appliers.set(\"HasRepeatableSingleFire\", new HasRepeatableSingleFire());\r\n        this.appliers.set(\"ActorValues\", new ActorValues());\r\n        this.appliers.set(\"Keywords\", new Keywords());\r\n        this.appliers.set(\"CritEffect\", new CritEffect());\r\n        this.appliers.set(\"AttackDamage\", new AttackDamage());\r\n        this.appliers.set(\"DamageTypeValues\", new DamageTypeValues());\r\n        this.appliers.set(\"WeightReduction\", new WeightReduction());\r\n        this.appliers.set(\"Enchantments\", new Enchantments());\r\n        this.appliers.set(\"NumProjectiles\", new NumProjectiles());\r\n        this.appliers.set(\"ConIronSight\", new ConIronSight());\r\n        this.appliers.set(\"SightedTransition\", new SightedTransition());\r\n        this.appliers.set(\"MaxConDegree\", new MaxConDegree());\r\n        this.appliers.set(\"MinConDegree\", new MinConDegree());\r\n        this.appliers.set(\"RecoilMaxDegree\", new RecoilMaxDegree());\r\n        this.appliers.set(\"RecoilMinDegree\", new RecoilMinDegree());\r\n    }\r\n}","import Appliers from './appliers/Appliers';\r\nimport getMods from '../Mods';\r\n\r\n\r\nexport class ModParser {\r\n\r\n    constructor() {\r\n        this.appliers = new Appliers().appliers;\r\n        this.skip_legendary = [\"0040bd7c\", \"004f577d\", \"004f5776\", \"004f5778\", \"004ed02f\", \"004e89af\", \"00529a02\"];\r\n    }\r\n\r\n    // mutatingDamage is used when default damages like (ammo, projectile) must be overridden\r\n    // this types of modes must be applied separately to correctly multiply buffs.\r\n    applyOrRevoke(modData, template, apply, mutatingDamage=false) {\r\n        for (let i = 0; i < modData.modifiers.length; i++) {\r\n            const mod = modData.modifiers[i];\r\n            const applier = this.appliers.get(mod.prop);\r\n            if (applier) {\r\n                const changeDefault = applier.isChangingDefaultDamage();\r\n                if ((mutatingDamage && changeDefault) || (!mutatingDamage && !changeDefault)) {\r\n                    applier.apply(template, mod, apply);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static applySpecific(template, modData, modEffects) {\r\n        for (let i = 0; i < modData.modifiers.length; i++) {\r\n            const mod = modData.modifiers[i];\r\n            const applier = modEffects.get(mod.prop);\r\n            if (applier) {\r\n                applier.apply(template, mod, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Update means that it can be applied to legendary which reset their value according to health\r\n    // Effects which add and remove their static values can not be updated (otherwise they will stack values up every time)\r\n    applyLegendaryModToWSpec(modId, wSpec, starIndex, health, update, apply) {\r\n        if (this.skip_legendary.includes(modId)) {\r\n            return;\r\n        }\r\n        const modData = getMods().get(modId);\r\n        if (modData) {\r\n            for (let i = 0; i < modData.modifiers.length; i++) {\r\n                const mod = modData.modifiers[i];\r\n                const applier = this.appliers.get(mod.prop);\r\n                if (applier) {\r\n                    applier.applyLegendary(wSpec, mod, modId, starIndex, health, update, apply);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import getMods from '../Mods';\r\n\r\n\r\nexport class ModTools {\r\n\r\n    static hasSilencerById(modId) {\r\n        return ModTools.hasSilencer(getMods().get(modId));\r\n    }\r\n\r\n    static hasSilencer(modData) {\r\n        for (let i = 0; i < modData.modifiers.length; i++) {\r\n            const val = modData.modifiers[i].val1;\r\n            if (val === '001e05d6 / HasSilencer') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","export class Apply {\r\n\r\n    checkOp(mod, weaponId, expected) {\r\n        if (mod.op !== expected) {\r\n            throw new Error(\"Mult must have '\" + expected + \"' op, but not '\" + mod.op + \"', \" +\r\n            \"WeaponId: \" + weaponId + \" Prop: \" + mod.prop);\r\n        }\r\n    }\r\n\r\n    getCurvValue(mod) {\r\n        if (!mod.curv || mod.curv === '') {\r\n            return 0;\r\n        } else {\r\n            const val1 = parseFloat(mod.curv);\r\n            if (!val1) {\r\n                return 0;\r\n            }\r\n            return val1;\r\n        }\r\n    }\r\n\r\n    getValue(mod) {\r\n        const val1 = this.getCurvValue(mod);\r\n        const val2 = parseFloat(mod.val1);\r\n        const val3 = parseFloat(mod.val2);\r\n        if (val1 !== 0) {\r\n            return val1;\r\n        } else if (val2 !== 0) {\r\n            return val2;\r\n        } else {\r\n            return val3;\r\n        }\r\n    }\r\n\r\n    mullAddFromTo(from, to, value, apply, allowNegative=false) {\r\n        if (apply) {\r\n            to[1] += (from[0] * value);\r\n        } else {\r\n            to[1] -= (from[0] * value);\r\n        }\r\n        if (to[1] < 0 && !allowNegative) {\r\n            to[1] = 0;\r\n        }\r\n    }\r\n\r\n    mullAdd(field, value, apply, allowNegative=false) {\r\n        this.mullAddFromTo(field, field, value, apply, allowNegative);\r\n    }\r\n\r\n    add(field, value, apply, allowNegative=false, index=1) {\r\n        if (apply) {\r\n            field[index] += value;\r\n        } else {\r\n            field[index] -= value;\r\n        }\r\n        if (field[index] < 0 && !allowNegative) {\r\n            field[index] = 0;\r\n        }\r\n    }\r\n\r\n    addToProperty(obj, property, value, apply, allowNegative=false) {\r\n        if (apply) {\r\n            obj[property] += value;\r\n        } else {\r\n            obj[property] -= value;\r\n        }\r\n        if (obj[property] < 0 && !allowNegative) {\r\n            obj[property] = 0;\r\n        }\r\n    }\r\n\r\n    mullAddToProperty(obj, property, value, apply) {\r\n        if (apply) {\r\n            obj[property] += (obj[property] * value);\r\n        } else {\r\n            obj[property] /= (value + 1);\r\n        }\r\n    }\r\n\r\n    setToProperty(obj, property, value) {\r\n        obj[property] = value;\r\n    }\r\n\r\n    set(field, value, apply, allowNegative=false) {\r\n        if (apply) {\r\n            field[1] = value;\r\n            if (field[1] < 0 && !allowNegative) {\r\n                field[1] = 0;\r\n            }\r\n        } else {\r\n            field[1] = field[0];\r\n        }\r\n    }\r\n\r\n    mullSet(field, value, apply, allowNegative=false) {\r\n        if (apply) {\r\n            field[1] = field[0] * value;\r\n            if (field[1] < 0 && !allowNegative) {\r\n                field[1] = 0;\r\n            }\r\n        } else {\r\n            field[1] = field[0];\r\n        }\r\n    }\r\n\r\n    addSetMullAdd(field, value, op, apply, allowNegative=false) {\r\n        if (op === 'Add') {\r\n            this.add(field, value, apply, allowNegative);\r\n        } else if (op === 'MullAdd') {\r\n            this.mullAdd(field, value, apply, allowNegative);\r\n        } else if (op === 'Set') {\r\n            this.set(field, value, apply, allowNegative);\r\n        }\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return false;\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class ConIronSight extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.conIronSight, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class MaxConDegree extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.maxConDegree, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class MinConDegree extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.minConDegree, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class RecoilMaxDegree extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.recoilMaxDegree, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class RecoilMinDegree extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.recoilMinDegree, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class SightedTransition extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.sightedTransition, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","function getButtons(pairs, selectedValue, onClick, small) {\r\n    const result = [];\r\n    let style = null;\r\n    for(const name in pairs) {\r\n        const value = pairs[name];\r\n        if (selectedValue === value) {\r\n            style = {color: '#0068ae', borderColor: '#0098ff', marginRight: '1px'};\r\n        } else {\r\n            style = {marginRight: '1px'};\r\n        }\r\n        let tail = \"\";\r\n        if (small) {\r\n            tail = \"-small\";\r\n        }\r\n        result.push(<button key={name} type=\"button\" value={value} style={style} onClick={onClick} className={\"btn btn-blue-white\" + tail}>{name}</button>);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n    pairs={{Name1: value1, Name2: value2, ...}}\r\n    selectedValue={currentValue}\r\n    setSelectedValue={setSelectedValue} can be null if onClick is set\r\n    onClick, if null then setSelectedValue is used\r\n*/\r\nexport default function BSRadio(props) {\r\n    let onClick = null;\r\n    if (!props.onClick) {\r\n        onClick = onClick = (e) => {\r\n            if (props.setSelectedValue) {\r\n                if (props.parseValueInt) {\r\n                    props.setSelectedValue(parseInt(e.target.value));\r\n                } else {\r\n                    props.setSelectedValue(e.target.value);\r\n                }\r\n            }\r\n        };\r\n    } else {\r\n        onClick = props.onClick;\r\n    }\r\n    return (\r\n        <div className={props.className}>\r\n            <div className=\"btn-group\" role=\"group\">\r\n                {getButtons(props.pairs, props.selectedValue, onClick, props.small)}\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default function GroupView(props) {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div>\r\n                <div className={props.className} style={{width: 'max-content', borderRadius: '6px'}}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { getUniqueDropdownItemsByNames } from '../DropdownHelpers';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\n\r\nexport default function SimpleNameDropdown(props) {\r\n    return (\r\n        <DropdownButton variant={props.variant} size={props.size} onSelect={props.onSelect} title={props.title}>\r\n            {getUniqueDropdownItemsByNames(props.names)}\r\n        </DropdownButton>\r\n    );\r\n}\r\n","import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { leftRightTag, leftRight2 } from './RowBuilder';\r\nimport { getEffect, setVMADObject } from './EffectProvider';\r\nimport { getItem } from '../consumables/view/ConsumableItems';\r\n\r\n\r\nexport const blue = {\r\n    backgroundColor: '#f7fbff',\r\n    borderColor: '#0072a3',\r\n    color: '#005691',\r\n}\r\n\r\nexport const orange = {\r\n    backgroundColor: '#fffaf0',\r\n    borderColor: '#ffa800',\r\n    color: '#b77100',\r\n}\r\n\r\nexport const magenta = {\r\n    backgroundColor: '#fff1fa',\r\n    borderColor: '#ca007c',\r\n    color: '#830f57',\r\n}\r\n\r\nexport const darkBlue = {\r\n    backgroundColor: '#e6f7ff',\r\n    borderColor: '#0085c6',\r\n    color: '#003e5d',\r\n}\r\n\r\nexport const indigo = {\r\n    backgroundColor: '#fdfaff',\r\n    borderColor: '#5a008a',\r\n    color: '#430067',\r\n}\r\n\r\nexport const redRounded = {\r\n    backgroundColor: '#fff4f4',\r\n    borderColor: '#890000',\r\n    color: '#c90000',\r\n    borderRadius: '0.5rem',\r\n}\r\n\r\nexport function getNameByLabel(label) {\r\n    switch(label) {\r\n        case 'SPEL':\r\n            return \"Spell\";\r\n        case 'PERK':\r\n            return \"Perk\";\r\n        case 'PCRD':\r\n            return \"Card\";\r\n        case 'ENCH':\r\n            return \"Enchantment\";\r\n        case 'MGEF':\r\n            return \"Effect\";\r\n        case 'ALCH':\r\n            return \"Alchemy\";\r\n        case 'HZRD':\r\n            return \"Hazard\";\r\n        case 'QUST':\r\n            return \"Quest\";\r\n        case 'KYWD':\r\n            return \"Tag\";\r\n        case 'RACE':\r\n            return \"Race\";\r\n        default:\r\n            return label;\r\n    }\r\n}\r\n\r\nexport function resolveEffectOrNull(effectId) {\r\n    if (typeof(effectId) === typeof({})) {\r\n        return effectId;\r\n    }\r\n    if (isEffectIdEmpty(effectId)) {\r\n        return null;\r\n    }\r\n    return getEffect(effectId);\r\n}\r\n\r\nexport function isEffectIdEmpty(effectId) {\r\n    return (!effectId || effectId === \"\" || effectId === \"00000000\");\r\n}\r\n\r\nexport function getVMADButton(effectId, vmad, onEffectClick, buttonName='VMAD') {\r\n    const id = \"vmad\" + effectId;\r\n    const vmadObject = {label: \"VMAD\", vmad: vmad, id: id};\r\n    setVMADObject(id, vmadObject);\r\n    return (\r\n        <Button className=\"w-100 p-1 mt-1\" name={id} variant=\"blue-border\" onClick={onEffectClick}>\r\n            {buttonName}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport function getEffectButton(effectId, onEffectClick) {\r\n    if (isEffectIdEmpty(effectId)) {\r\n        return (<></>);\r\n    }\r\n    let effect = getEffect(effectId);\r\n    if (!effect) {\r\n        effect = getItem(effectId);\r\n        if (!effect) {\r\n            return (<>Can not resolve effect: {effectId}</>);\r\n        }\r\n    }\r\n    const name = (effect.full === \"\") ? effect.name : effect.full;\r\n    return (\r\n        <Button className=\"w-100 p-0 mt-1\" name={effectId} variant=\"blue-border\" onClick={onEffectClick}>\r\n            <div><b><small>{name}</small></b></div>\r\n            {leftRight2(<div className=\"mt-0\" style={{fontSize: '.6rem'}}><b>{getNameByLabel(effect.label)}</b></div>,\r\n            <div className=\"mt-0\" style={{fontSize: '.6rem'}}>{effectId}</div>, -1, \"w-100 ps-1 pe-1 p-0\")}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport function vmadView(id, vmad, onEffectClick) {\r\n    if (!vmad || vmad.length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <div className=\"m-2\">\r\n            {getVMADButton(id, vmad, onEffectClick)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function buildRow(left, right, color, border=true, skipZero=false, skipEmpty=true) {\r\n    if (skipEmpty && (right === null || right === \"\")) {\r\n        return (<></>);\r\n    }\r\n    if (skipZero && right === 0) {\r\n        return (<></>);\r\n    }\r\n    return leftRightTag(<b className=\"ps-1\">{left}</b>, <b className=\"pe-1\">{right}</b>, color, border, -1, \"w-100 p-0 mt-1 mb-1\")\r\n}\r\n\r\nexport function buildConditionStrings(conditions, className=\"mt-1\", color='#332500', bgColor='#fffdf6') {\r\n    const conditionStrings = [];\r\n    if (!conditions) {\r\n        return conditionStrings;\r\n    }\r\n    for (let i = 0; i < conditions.length; i++) {\r\n        const cond = conditions[i];\r\n        conditionStrings.push(<div className={className} style={{fontSize: '0.7rem', textAlign: 'center', textWrap: 'balance', backgroundColor: bgColor, color: color}} key={i}><b>{cond}</b></div>);\r\n    }\r\n    return conditionStrings;\r\n}\r\n\r\nexport function buildTextBlock(text, header=null, footer=null, className=\"mt-2\", color=\"#003112\", borderColor=\"#effff5\", backgroundColor=\"#effff5\") {\r\n    if (!text || text === \"\") {\r\n        return (<></>);\r\n    }\r\n    if (typeof text === typeof \"\" && text.trim() === \"\") {\r\n        return (<></>);\r\n    }\r\n    const headerView = (header) ? (<div className=\"mb-1\"><b>{header}</b></div>) : (<></>);\r\n    const footerView = (footer) ? (<div className=\"mt-1\">{footer}</div>) : (<></>);\r\n    return (\r\n        <div className={className} style={{fontSize: '0.7rem', borderWidth: '1px', borderStyle: 'solid', borderColor: borderColor, textAlign: 'center', textWrap: 'balance', backgroundColor: backgroundColor, color: color}}>\r\n            {headerView}\r\n            <div><b>{text}</b></div>\r\n            {footerView}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function buildActor(actor, header=\"Actor\", footer=null) {\r\n    if (!actor || actor === \"\" || actor === \"00000000\") {\r\n        return (<></>);\r\n    }\r\n    const label = actor.label;\r\n    if (label === \"AVIF\") {\r\n        return (\r\n            <Card className=\"mt-1 mb-1 m-0\">\r\n                <Card.Header className='pt-0 pb-0'>\r\n                    <b><small>{header}</small></b>\r\n                </Card.Header>\r\n                <Card.Body className=\"p-1\">\r\n                    {buildTextBlock(actor.desc, null, null, \"p-1\")}\r\n                    {buildRow(\"Id:\", actor.id, 'purple')}\r\n                    {buildRow(\"Name:\", actor.name, 'purple')}\r\n                    {buildRow(\"Full:\", actor.full, 'purple')}\r\n                    {buildRow(\"Default value:\", actor.def, 'purple')}\r\n                    {buildRow(\"Min value:\", actor.min, 'purple')}\r\n                    {buildRow(\"Max value:\", actor.max, 'purple')}\r\n                    {footer}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    } else if (label === \"DMGT\") {\r\n        return (\r\n            <Card className=\"mt-1 mb-1 m-0\">\r\n                <Card.Header className='pt-0 pb-0'>\r\n                    <b><small>{header}</small></b>\r\n                </Card.Header>\r\n                <Card.Body className=\"p-1\">\r\n                    {buildRow(\"Id:\", actor.id, 'purple')}\r\n                    {buildRow(\"Name:\", actor.name, 'purple')}\r\n                    {buildRow(\"Full:\", actor.full, 'purple')}\r\n                    {footer}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    } else {\r\n        return (<>Unsupported label for actor: {label}</>);\r\n    }\r\n}\r\n\r\nexport function idNameRow(id, name) {\r\n    return (\r\n        <div className=\"d-flex flex-nowrap\" style={{width: '100%'}}>\r\n            <span className=\"pe-0 d-flex justify-content-start\" style={{width: 'auto'}}>\r\n                <b className=\"tag\">{id}</b>\r\n            </span>\r\n            <div className=\"d-flex justify-content-end ms-2\" style={{width: '100%', textWrap: 'nowrap', overflow: 'hidden'}}>\r\n                <b className=\"tag\" style={darkBlue}>{name}</b>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function getGlobDuration(effect) {\r\n    return getGlob(effect.glob_duration, \"duration\");\r\n}\r\n\r\nfunction getGlob(glob, name, footerView=null) {\r\n    const footer = (footerView) ? <Card.Footer className=\"bg-spell-header p-0 ps-2\">{footerView}</Card.Footer> : <></>;\r\n    if (glob !== '') {\r\n        return (\r\n            <Card className='mt-1 mb-1'>\r\n                <Card.Header className=\"bg-spell-header p-0 ps-2\"><small>Glob {name}</small></Card.Header>\r\n                <Card.Body className=\"p-1\">\r\n                    {buildRow(\"Id:\", glob.id, \"purple\")}\r\n                    {buildRow(\"Name:\", glob.name, \"purple\")}\r\n                    {buildRow(\"Value:\", glob.value, \"purple\")}\r\n                </Card.Body>\r\n                {footer}\r\n            </Card>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\nexport function getGlobMagnitude(effect) {\r\n    return getGlob(effect.glob_magnitude, \"magnitude\");\r\n}\r\n\r\nexport function getGlobValue(obj, name=\"value\", footerView=null) {\r\n    return getGlob(obj, name, footerView);\r\n}\r\n\r\nexport function buildEffect(index, body) {\r\n    return (\r\n        <Card key={index} className=\"mt-1 mb-1 m-0\">\r\n            <Card.Header className='pt-0 pb-0'>\r\n                <b><small>E{index + 1}</small></b>\r\n            </Card.Header>\r\n            <Card.Body className='p-1'>\r\n                {body}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport function buildCurve(curve, maxValue, className=\"mt-1\") {\r\n    if (!curve || curve === \"\") {\r\n        return (<></>);\r\n    }\r\n\r\n    const pathCurve = curve.split(\"\\n\");\r\n    return (\r\n        <>\r\n            {buildTextBlock(\r\n                <>\r\n                    <div className=\"pb-1\">\r\n                        Curve magnitude\r\n                    </div>\r\n                    <div className=\"pb-1\">\r\n                        {pathCurve[0]}\r\n                    </div>\r\n                    <div>\r\n                        {pathCurve[1]}\r\n                    </div>\r\n                    <div className=\"pt-1\">\r\n                        Curve magnitude max: {maxValue}\r\n                    </div>\r\n                </>, null, null, className, \"#7b3b00\", \"#fff9f3\", \"#fff9f3\"\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport function buildBadge(name, color=\"#000\", backgroundColor=\"#fff\") {\r\n    return (<div className=\"badge p-1 ps-2 pe-2 bg-lite-shadow2\" style={{backgroundColor: backgroundColor, color: color}}>{name}</div>)\r\n}\r\n\r\nexport function buildBadge2(name, color=\"#000\", backgroundColor=\"#fff\") {\r\n    return (<div className=\"badge p-1 ps-2 pe-2\" style={{borderStyle: 'solid', borderColor: backgroundColor, borderWidth: '0.5px', backgroundColor: backgroundColor, color: color}}>{name}</div>)\r\n}","import { idNameRow, buildTextBlock } from '../../helpers/EffectViewHelper';\r\nimport { getPerkCard } from '../PerkCardProvider';\r\nimport PerkCardTools from '../PerkCardTools';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Divider } from 'antd';\r\nimport { getEffect } from '../../helpers/EffectProvider';\r\n\r\n\r\nfunction perkButtons(perk, onPerkClick) {\r\n    const result = [];\r\n    const perkData = [];\r\n    const costs = [];\r\n    for (const fieldName in perk) {\r\n        if (fieldName.startsWith(\"rankCost\")) {\r\n            costs.push(fieldName);\r\n        }\r\n    }\r\n    for (let i = 0; i < costs.length; i++) {\r\n        const fieldName = costs[i];\r\n        const number = fieldName.slice(8, 9);\r\n        const cost = perk[fieldName];\r\n        const mPerkId = perk['mPerk' + number];\r\n        const fPerkId = perk['fPerk' + number];\r\n        const mPerk = getEffect(mPerkId);\r\n        const fPerk = getEffect(fPerkId);\r\n        if (mPerk) {\r\n            perkData.push({name: mPerk.name, id: mPerk.id, cost: cost});\r\n        }\r\n        if (fPerk) {\r\n            perkData.push({name: fPerk.name, id: fPerk.id, cost: cost});\r\n        }\r\n    }\r\n    function getCostView(cost, legendary) {\r\n        if (legendary) {\r\n            return (<></>);\r\n        }\r\n        return (\r\n            <div className=\"ps-1 pe-1 pt-0 pb-0\" style={{color: '#fff', backgroundColor: '#ffb000', borderColor: '#ffb000', borderWidth: '1px', borderRadius: '2px', borderStyle: 'solid'}}>\r\n                <b>{cost}</b>\r\n            </div>\r\n        );\r\n    }\r\n    for (let i = 0; i < perkData.length; i++) {\r\n        const data = perkData[i];\r\n        result.push(\r\n            <div key={data.id} className=\"d-flex justify-content-center m-1\">\r\n                <Button className=\"w-100\" name={data.id} variant=\"blue-white-border\" onClick={onPerkClick}>\r\n                    <div className=\"mt-1\"><b>{data.name}</b></div>\r\n                    <div className=\"mt-0 mb-0\" style={{display: 'flex', flexDirection: 'row'}}>\r\n                        <div className=\"w-100 d-flex justify-content-start mb-1\">\r\n                            {getCostView(data.cost, perk.legendary)}\r\n                        </div>\r\n                        <div className=\"w-100 d-flex justify-content-end mt-2\">\r\n                            <small><b style={{color: '#520021'}}>{data.id}</b></small>\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function PerkCardCompactView(props) {\r\n    let perkCard = props.perkCard;\r\n    if (!perkCard) {\r\n        perkCard = getPerkCard(props.perkCardId);\r\n    }\r\n    const desc = (perkCard.desc && perkCard.desc !== \"\") ? perkCard.desc : \"-\";\r\n    const bgColor = PerkCardTools.getColor(perkCard.type);\r\n    const legBadge = (perkCard.legendary) ? <div className=\"badge p-1 ps-2 pe-2 bg-lite-shadow2\" style={{backgroundColor: '#ffc700', color: '#513f00'}}>Legendary</div> : <></>;\r\n    return (\r\n        <div>\r\n            {idNameRow(perkCard.id, perkCard.name)}\r\n            {buildTextBlock(desc, null, null, \"mt-2 p-1\")}\r\n            <div className=\"mt-3 mb-3 ms-1 me-1\" style={{display: 'flex', flexDirection: 'row'}}>\r\n                <div className=\"w-100 d-flex justify-content-start\">\r\n                    {legBadge}\r\n                </div>\r\n                <div className=\"w-100 d-flex justify-content-center\">\r\n                    <div className=\"badge p-1 ps-2 pe-2 bg-lite-shadow2\" style={{backgroundColor: bgColor, color: '#fff'}}>{perkCard.type}</div>\r\n                </div>\r\n                <div className=\"w-100 d-flex justify-content-end\">\r\n                    <div className=\"badge p-1 ps-2 pe-2 bg-lite-shadow2\">Lvl {perkCard.level}</div>\r\n                </div>\r\n            </div>\r\n            <Divider>Perks</Divider>\r\n            {perkButtons(perkCard, props.onEffectClick)}\r\n        </div>\r\n    );\r\n}","import { idNameRow, buildConditionStrings, buildRow, getEffectButton, buildActor, buildTextBlock, buildEffect, vmadView } from '../../helpers/EffectViewHelper';\r\nimport { Divider } from 'antd';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nfunction buildPerkEffect(effect, key, onEffectClick) {\r\n    const rows = getRows(effect, onEffectClick);\r\n    const conditions = buildConditionStrings(effect.conditions, \"mt-1 p-1\");\r\n    const indent = (conditions.length > 0) ? (<div className=\"m-1\" />) : null;\r\n    const body = (\r\n        <>\r\n            {conditions}\r\n            {indent}\r\n            {buildRow(\"Type:\", effect.e_type, 'blue')}\r\n            {rows}\r\n        </>\r\n    );\r\n    return buildEffect(key, body);\r\n}\r\n\r\nfunction getRows(effect, onEffectClick) {\r\n    const vType = effect.v_type;\r\n    if (vType === 0 && effect.e_type === \"Ability\") {\r\n        return (\r\n            <>\r\n                {getEffectButton(effect.spell, onEffectClick)}\r\n            </>\r\n        );\r\n    } else if (vType === 1) {\r\n        return (\r\n            <>\r\n                {buildRow(\"Name:\", effect.entry, 'blue')}\r\n                {buildRow(\"Operation:\", effect.op, 'blue')}\r\n                {buildRow(\"Value:\", effect.value, 'blue')}\r\n            </>\r\n        );\r\n    } else if (vType === 4) {\r\n        return (\r\n            <>\r\n                {buildRow(\"Name:\", effect.entry, 'blue')}\r\n                {buildRow(\"Operation:\", effect.op, 'blue')}\r\n            </>\r\n        )\r\n    } else if (vType === 5) {\r\n        return (\r\n            <>\r\n                {buildRow(\"Name:\", effect.entry, 'blue')}\r\n                {buildRow(\"Operation:\", effect.op, 'blue')}\r\n                {getEffectButton(effect.value, onEffectClick)}\r\n            </>\r\n        );\r\n    } else if (vType === 8) {\r\n        return (\r\n            <>\r\n                {buildRow(\"Name:\", effect.entry, 'blue')}\r\n                {buildRow(\"Operation:\", effect.op, 'blue')}\r\n                {buildActors(effect.value)}\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"d-flex justify-content-center\">\r\n                <b><small>Does not have a view for type: {vType}</small></b>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction buildActors(value) {\r\n    const actor1 = value.actor1;\r\n    const actor2 = value.actor2;\r\n    const val = value.value;\r\n    return (\r\n        <Card className=\"mt-1 mb-1 p-1 m-0\">\r\n            {buildActor(actor1)}\r\n            {buildActor(actor2)}\r\n            {buildRow(\"Value:\", val, 'blue')}\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction getEffects(effects, onEffectClick) {\r\n    const result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        result.push(buildPerkEffect(effect, i, onEffectClick));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function PerkCompactView(props) {\r\n    const perk = props.perk;\r\n    return (\r\n        <>\r\n            {idNameRow(perk.id, perk.name)}\r\n            {buildTextBlock(perk.desc, null, null, \"mt-2 p-1\")}\r\n            {buildConditionStrings(perk.conditions, \"mt-2 p-1\")}\r\n            {vmadView(perk.id, perk.vmad, props.onEffectClick)}\r\n            <Divider className=\"pt-0 mt-2 mb-2\">Effects</Divider>\r\n            {getEffects(perk.effects, props.onEffectClick)}\r\n        </>\r\n    );\r\n}","import { idNameRow, buildRow, buildActor, buildConditionStrings, buildCurve, buildEffect, getGlobDuration, getGlobMagnitude, getEffectButton, vmadView } from '../../helpers/EffectViewHelper';\r\nimport { Divider } from 'antd';\r\n\r\n\r\nexport function getEffects(effects, onEffectClick) {\r\n    const result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        const body = (\r\n            <>\r\n                {getEffectButton(effect.m_effect, onEffectClick)}\r\n                <div className=\"m-1\" />\r\n                {buildConditionStrings(effect.conditions, \"mt-1 p-1\")}\r\n                {buildCurve(effect.d_curv, effect.curve_max_value)}\r\n                {buildRow(\"Magnitude:\", effect.magnitude, 'magenta', true, true)}\r\n                {getGlobMagnitude(effect)}\r\n                {buildRow(\"Duration:\", effect.duration, 'purple', true, true)}\r\n                {getGlobDuration(effect)}\r\n                {buildRow(\"Area:\", effect.area, 'blue', true, true)}\r\n                {buildActor(effect.actor)}\r\n            </>\r\n        );\r\n        result.push(buildEffect(i, body));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getPerk(perkId, onEffectClick) {\r\n    if (!perkId || perkId === \"\" || perkId === \"00000000\") {\r\n        return (<></>);\r\n    }\r\n    return getEffectButton(perkId, onEffectClick);\r\n}\r\n\r\nexport default function SpellCompactView(props) {\r\n    const spell = props.spell;\r\n    return (\r\n        <>\r\n            {idNameRow(spell.id, spell.name)}\r\n            <Divider className=\"pt-0 mt-2 mb-2\">Properties</Divider>\r\n            {buildRow(\"Name:\", spell.full, 'purple', false)}\r\n            {buildRow(\"Type:\", spell.type, 'blue', false)}\r\n            {buildRow(\"Target:\", spell.target, 'purple', false)}\r\n            {buildRow(\"Charge Time:\", spell.time, 'blue', false)}\r\n            {buildRow(\"Range:\", spell.range, 'purple', false)}\r\n            {buildRow(\"Duration:\", spell.duration, 'blue', false)}\r\n            {buildRow(\"Duration type:\", spell.e_type, 'purple', false)}\r\n            {vmadView(spell.id, spell.vmad, props.onEffectClick)}\r\n            {getPerk(spell.perk, props.onEffectClick)}\r\n            <Divider className=\"pt-0 mt-2 mb-2\">Effects</Divider>\r\n            {getEffects(spell.mag_effects, props.onEffectClick)}\r\n        </>\r\n    );\r\n}","import { idNameRow, buildRow, buildActor, buildConditionStrings, buildTextBlock, getEffectButton, vmadView } from '../../helpers/EffectViewHelper';\r\nimport { Divider } from 'antd';\r\nimport { getExpView } from '../../helpers/ProjView';\r\n\r\n\r\nfunction checkEmpty(obj) {\r\n    return (!obj || obj === \"\" || obj === \"00000000\");\r\n}\r\n\r\nfunction getPerk(perkId, onEffectClick) {\r\n    if (checkEmpty(perkId)) {\r\n        return (<></>);\r\n    }\r\n    return getEffectButton(perkId, onEffectClick);\r\n}\r\n\r\nfunction getAbility(spellId, onEffectClick) {\r\n    if (checkEmpty(spellId)) {\r\n        return (<></>);\r\n    }\r\n    return getEffectButton(spellId, onEffectClick);\r\n}\r\n\r\nfunction getDamageType(damageType) {\r\n    if (checkEmpty(damageType)) {\r\n        return (<></>);\r\n    }\r\n    if (typeof damageType === typeof \"\") {\r\n        return buildRow(\"Value:\", damageType, 'purple', false);\r\n    }\r\n    return buildActor(damageType, \"Damage type\");\r\n}\r\n\r\nfunction getExplosion(explosion) {\r\n    if (checkEmpty(explosion)) {\r\n        return (<></>);\r\n    }\r\n    return getExpView(explosion);\r\n}\r\n\r\nfunction getProjectile(projectile) {\r\n    if (checkEmpty(projectile)) {\r\n        return (<></>);\r\n    }\r\n    return (<>View for projectile is not implemented</>);\r\n}\r\n\r\nfunction getResistance(resistance) {\r\n    return buildActor(resistance, \"Resistance\");\r\n}\r\n\r\nexport default function EffectCompactView(props) {\r\n    const effect = props.effect;\r\n    return (\r\n        <>\r\n            {idNameRow(effect.id, effect.name)}\r\n            {vmadView(effect.id, effect.vmad, props.onEffectClick)}\r\n            <Divider className=\"pt-0 mt-2 mb-2\">Properties</Divider>\r\n            {buildTextBlock(effect.desc, null, null, \"mt-1 p-1\")}\r\n            {buildConditionStrings(effect.conditions, \"mt-1 p-1\")}\r\n            {buildRow(\"Name:\", effect.full, 'purple', false)}\r\n            {buildRow(\"Type:\", effect.a_type, 'blue', false)}\r\n            {buildRow(\"Duration type:\", effect.e_type, 'purple', false)}\r\n            {buildRow(\"Target:\", effect.target, \"blue\", false)}\r\n            {buildActor(effect.actor_value1)}\r\n            {buildActor(effect.actor_value2)}\r\n            {getAbility(effect.ability, props.onEffectClick)}\r\n            {getPerk(effect.perk, props.onEffectClick)}\r\n            {getDamageType(effect.d_type)}\r\n            {getExplosion(effect.explosion)}\r\n            {getProjectile(effect.projectile)}\r\n            {getResistance(effect.resist)}\r\n        </>\r\n    );\r\n}","import { Tag, Divider } from 'antd';\r\nimport ConsumableTools from '../ConsumableTools';\r\n\r\n\r\nfunction getTagView(tag, color) {\r\n    const tagName = ConsumableTools.getTagName(tag);\r\n    return (\r\n        <Tag key={tagName} className=\"mt-1 m-auto d-flex\" bordered={true} color={color}>\r\n            <b><small>{ConsumableTools.removePrefixSuffix(tagName)}</small></b>\r\n        </Tag>\r\n    );\r\n}\r\n\r\nexport default function ConsumableTagsView(props) {\r\n    if (props.tags && props.tags.length > 0) {\r\n        const result = [];\r\n        for (let i = 0; i < props.tags.length; i++) {\r\n            result.push(getTagView(props.tags[i], props.color));\r\n        }\r\n        return (\r\n            <div className={props.className}>\r\n                 <Divider className=\"p-0 m-0\"><small>{props.title}</small></Divider>\r\n                 <div style={{flexWrap: \"wrap\"}} className=\"d-flex justify-content-center\">\r\n                    {result}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import ConsumableTagsView from './ConsumableTagsView';\r\nimport { idNameRow, getEffectButton, indigo, redRounded } from '../../helpers/EffectViewHelper';\r\nimport { numberToString } from '../../helpers/StringHelpers';\r\nimport { Divider, Tag } from 'antd';\r\nimport { getEffects } from '../../spell/view/SpellCompactView';\r\n// import { useState } from 'react';\r\n\r\n\r\nfunction getItemDescription(desc) {\r\n    if (!desc || desc === \"\") {\r\n        return (<></>);\r\n    }\r\n    const mt = 2;\r\n    const mb = 2;\r\n    return (\r\n        <div style={{width: '100%', backgroundColor: '#fffaf0'}} className={\"mt-\" + mt + \" mb-\" + mb + \" d-flex justify-content-center\"}>\r\n            <div style={{textAlign: 'center', padding: '0.3rem'}}>\r\n                <small><b style={{color: '#bf6400'}}>{desc}</b></small>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getTag3(value, style, mt, mb) {\r\n    return (\r\n        <div style={{width: '100%'}} className={\"mt-\" + mt + \" mb-\" + mb + \" d-flex justify-content-center\"}>\r\n            <div className=\"tag\" style={style}>\r\n                <div style={{textWrap: 'nowrap', overflow: \"hidden\", textOverflow: 'ellipsis'}}>\r\n                    {value}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getWeight(item) {\r\n    const weight = \"Weight: \" + numberToString(item.weight, 3);\r\n    return getTag3(weight, indigo, 2, 0)\r\n}\r\n\r\nfunction getAddictionView(item, onEffectClick) {\r\n    let addictionChance = \"\";\r\n    if (item.addiction_chance > 0) {\r\n        addictionChance = \"Addiction chance: \" + (item.addiction_chance * 100).toFixed(1) + \"%\";\r\n    }\r\n    if (addictionChance === \"\") {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className=\"mt-2 mb-0\"><small>Addiction</small></Divider>\r\n            {getTag3(addictionChance, redRounded, 1, 1)}\r\n            {getEffectButton(item.addiction_spell, onEffectClick)}\r\n        </>\r\n    )\r\n}\r\n/*\r\nfunction viewButton(isMain, setIsMain) {\r\n    function onClick(e) {\r\n        setIsMain(!isMain);\r\n    }\r\n    const name = (isMain) ? \"Details\" : \"Main\";\r\n    return (\r\n        <Button className=\"w-100 p-1 mt-2 mb-2\" variant=\"blue-border\" onClick={onClick}>\r\n            {name}\r\n        </Button>\r\n    );\r\n}*/\r\n\r\nexport function mainView(item, onEffectClick) {\r\n    return (\r\n        <>\r\n            {idNameRow(item.id, item.name)}\r\n            {getItemDescription(item.dnam_desc)}\r\n            {getItemDescription(item.desc)}\r\n            {getWeight(item)}\r\n            <ConsumableTagsView className=\"pt-2\" tags={item.tags} color='blue' title=\"Tags\" />\r\n            <ConsumableTagsView className=\"pt-2\" color='magenta' tags={item.effectTags} title=\"Effect Tags\" />\r\n            {getAddictionView(item, onEffectClick)}\r\n            <Divider className=\"mt-2 mb-0\"><small>Effects</small></Divider>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction detailsView(alchemy, onEffectClick) {\r\n    return (\r\n        <>\r\n            {getEffects(alchemy.effects, onEffectClick)}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function AlchemyCompactView(props) {\r\n    // const [isMain, setIsMain] = useState(true);\r\n    const alchemy = props.alchemy;\r\n    // const view = (isMain) ? mainView(alchemy, props.onEffectClick, isMain, setIsMain) : detailsView(alchemy, props.onEffectClick, isMain, setIsMain);\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-center mb-3\">\r\n                <Tag bordered={false} color=\"volcano\"><b>{alchemy.full}</b></Tag>\r\n            </div>\r\n            {mainView(alchemy, props.onEffectClick)}\r\n            {detailsView(alchemy, props.onEffectClick)}\r\n        </>\r\n    );\r\n}","import { buildTextBlock, getEffectButton, getNameByLabel, buildActor, getVMADButton, getGlobValue } from '../../helpers/EffectViewHelper';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n// float, bool, int, string, object, array_obj, array_int, struct, struct_array\r\nfunction buildBody(vmad, id, onEffectClick) {\r\n    const result = [];\r\n    for (let i = 0; i < vmad.length; i++) {\r\n        const obj = vmad[i];\r\n        const type = obj.type;\r\n        const vmadId = obj.name + i + id;\r\n        if (type === \"float\" || type === \"bool\" || type === \"int\" || type === \"string\") {\r\n            result.push(<div key={i}>{textBlock(obj.name, obj.value, obj.script_name)}</div>);\r\n        } else if (type === \"obj\") {\r\n            result.push(<div key={i}>{objView(obj.value, obj.name, obj.script_name, onEffectClick)}</div>);\r\n        } else if (type === \"array_obj\") {\r\n            result.push(<div key={i}>{objArrayView(obj, onEffectClick)}</div>);\r\n        } else if (type === \"struct\") {\r\n            result.push(<div key={i}><b>{obj.name} {obj.type}</b></div>);\r\n        } else if (type === \"struct_array\") {\r\n            result.push(<div key={i}>{structArrayView(obj, vmadId, onEffectClick)}</div>);\r\n        } else {\r\n            result.push(<div key={i}><b>{obj.name} {obj.type}</b></div>);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction textBlock(header, text, footer) {\r\n    return buildTextBlock(text, header, <div className=\"d-flex justify-content-end pe-1\">{footer}</div>, \"mt-1 mb-1\", \"#003112\", \"#c8ffdc\");\r\n}\r\n\r\n/* TODO: Integrate Struct View\r\nfunction vmadStruct(obj, vmad, id, onEffectClick) {\r\n    return (\r\n        <div key={id} className=\"mt-1 mb-1 p-1\" style={{borderWidth: '1px', borderStyle: 'solid', borderColor: '#ffd560', backgroundColor: '#fff4d7'}}>\r\n            <div className=\"d-flex justify-content-center\"><small><b style={{color: '#5e4500'}}>{obj.name}</b></small></div>\r\n            {getVMADButton(id, vmad, onEffectClick)}\r\n        </div>\r\n    )\r\n}*/\r\n\r\nfunction objArrayView(objArray, onEffectClick) {\r\n    const result = [];\r\n    const objs = objArray.value;\r\n    for (let i = 0; i < objs.length; i++) {\r\n        const obj = objs[i];\r\n        result.push(<div key={i}>{objView(obj, objArray.name, objArray.script_name, onEffectClick)}</div>);\r\n    }\r\n    return (\r\n        <div className=\"mt-1 mb-1 p-1 pb-0\" style={{borderWidth: '1px', borderStyle: 'solid', borderColor: '#61faff', backgroundColor: '#eafdff'}}>\r\n            {result}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction structArrayView(obj, id, onEffectClick) {\r\n    const result = [];\r\n    const vmads = obj.value;\r\n    for (let i = 0; i < vmads.length; i++) {\r\n        const vmad = vmads[i];\r\n        const key = id + i;\r\n        result.push(<div key={key}>{getVMADButton(key, vmad, onEffectClick, \"VMAD \" + (i + 1))}</div>);\r\n    }\r\n    return (\r\n        <div className=\"mt-1 mb-1 p-1 pb-0\" style={{borderWidth: '1px', borderStyle: 'solid', borderColor: '#61faff', backgroundColor: '#eafdff'}}>\r\n            <div className=\"d-flex justify-content-center\"><small><b style={{color: '#003e3e'}}>{obj.name}</b></small></div>\r\n            {result}\r\n            <div style={{fontSize: '0.7rem'}} className=\"d-flex justify-content-end pt-1\">{obj.script_name}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction effectButtonView(obj, name, scriptName, onEffectClick) {\r\n    return (\r\n        <div className=\"mt-1 mb-1 p-1 pb-0\" style={{borderWidth: '1px', borderStyle: 'solid', borderColor: '#ffd560', backgroundColor: '#fff4d7'}}>\r\n            <div className=\"d-flex justify-content-center\"><small><b style={{color: '#5e4500'}}>{name}</b></small></div>\r\n            {getEffectButton(obj.id, onEffectClick)}\r\n            {getScriptNameView(scriptName)}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getScriptNameView(scriptName) {\r\n    if (!scriptName) {\r\n        return (<></>);\r\n    }\r\n    return (<div style={{fontSize: '0.7rem'}} className=\"d-flex justify-content-end pt-1\">{scriptName}</div>);\r\n}\r\n\r\nfunction objView(obj, name, scriptName, onEffectClick) {\r\n    if (obj.label === 'SPEL' || obj.label === 'MGEF' || obj.label === 'PERK' || obj.label === 'ALCH') {\r\n        return effectButtonView(obj, name, scriptName, onEffectClick);\r\n    } else if (obj.label === 'AVIF') {\r\n        return buildActor(obj, name, getScriptNameView(scriptName));\r\n    } else if (obj.label === 'GLOB') {\r\n        return getGlobValue(obj, name, getScriptNameView(scriptName));\r\n    }\r\n    return textBlock(name, getNameByLabel(obj.label) + \" - (\" + name + \" / \" + obj.id + \")\", scriptName);\r\n}\r\n\r\nfunction buildView(vmad, id, onEffectClick) {\r\n    return (\r\n        <Card className=\"mt-1 mb-1 m-0\">\r\n            <Card.Header className='pt-0 pb-0'>\r\n                <b><small>VMAD</small></b>\r\n            </Card.Header>\r\n            <Card.Body className='p-1'>\r\n                {buildBody(vmad, id, onEffectClick)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function VMADCompactView(props) {\r\n    const vmad = props.vmad.vmad;\r\n    const id = props.vmad.id;\r\n    return (\r\n        <>\r\n            {buildView(vmad, id, props.onEffectClick)}\r\n        </>\r\n    );\r\n}","import { getEffect, getVMADObject, clearVMADObjects } from '../EffectProvider';\r\nimport { useState, useRef } from 'react';\r\nimport PerkCardCompactView from '../../perkCard/view/PerkCardCompactView';\r\nimport PerkCompactView from '../../perk/view/PerkCompactView';\r\nimport SpellCompactView from '../../spell/view/SpellCompactView';\r\nimport EffectCompactView from '../../effect/view/EffectCompactView';\r\nimport AlchemyCompactView from '../../consumables/view/AlchemyCompactView';\r\nimport VMADCompactView from '../../vmad/view/VMADCompactView';\r\nimport { getItem } from '../../consumables/view/ConsumableItems';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nfunction effectView(effect, onEffectClick, backButton) {\r\n    const label = effect['label'];\r\n    if (label === \"PCRD\") {\r\n        return (\r\n            <div>\r\n                <PerkCardCompactView perkCard={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </div>\r\n        );\r\n    } else if (label === \"PERK\") {\r\n        return (\r\n            <>\r\n                <PerkCompactView perk={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"SPEL\") {\r\n        return (\r\n            <>\r\n                <SpellCompactView spell={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"MGEF\") {\r\n        return (\r\n            <>\r\n                <EffectCompactView effect={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"VMAD\") {\r\n        return (\r\n             <>\r\n                <VMADCompactView vmad={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"ENCH\") {\r\n        return (\r\n            <>\r\n                ENCHANTMENT\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"ALCH\") {\r\n        return (\r\n            <>\r\n                <AlchemyCompactView alchemy={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        )\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getEffectItem(viewIdStackRef, startItem) {\r\n    const lastViewIdIndex = viewIdStackRef.current.length - 1;\r\n    if (lastViewIdIndex > -1) {\r\n        const id = viewIdStackRef.current[lastViewIdIndex];\r\n        if (id.startsWith(\"vmad\")) {\r\n            return getVMADObject(id);\r\n        }\r\n        const effect = getEffect(id);\r\n        if (!effect) {\r\n            return getItem(id);\r\n        }\r\n        return effect;\r\n    }\r\n    if (typeof startItem === typeof '') {\r\n        return getEffect(startItem);\r\n    }\r\n    return startItem;\r\n}\r\n\r\nfunction getBackButton(viewIdStackRef, onBackClick) {\r\n    if (viewIdStackRef.current.length > 0) {\r\n        return (<Button className=\"w-100 mt-2 mb-0 p-1\" variant=\"blue-white-border\" onClick={onBackClick}>Back</Button>);\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nexport default function StackEffectView(props) {\r\n    const [,setRedraw] = useState(null);\r\n    const viewIdStackRef = useRef([]);\r\n    const startItemIdRef = useRef(null);\r\n    if (!startItemIdRef.current) { // Was closed and opened\r\n        clearVMADObjects();\r\n        startItemIdRef.current = props.item.id;\r\n    } else if (startItemIdRef.current !== props.item.id) { // Re-Rendered but new item was chosen\r\n        startItemIdRef.current = props.item.id;\r\n        clearVMADObjects();\r\n        viewIdStackRef.current = [];\r\n    }\r\n    \r\n    function onBackClick(e) {\r\n        const newLength = viewIdStackRef.current.length - 1;\r\n        viewIdStackRef.current.length = (newLength < 0) ? 0 : newLength;\r\n        setRedraw({});\r\n    }\r\n    function onEffectClick(e) {\r\n        const id = e.currentTarget.name;\r\n        viewIdStackRef.current.push(id);\r\n        setRedraw({});\r\n    }\r\n    const effect = getEffectItem(viewIdStackRef, props.item);\r\n    const backButton = getBackButton(viewIdStackRef, onBackClick);\r\n    return effectView(effect, onEffectClick, backButton);\r\n}","import ADRow from \"./ADRow\";\r\nimport { memo } from 'react';\r\n\r\n\r\nconst marks100P = {\r\n    marks: {\r\n        0: '0%',\r\n        20: '20%',\r\n        40: '40%',\r\n        60: '60%',\r\n        80: '80%',\r\n        100: '100%'\r\n    },\r\n    min: 0,\r\n    max: 100,\r\n    step: 1,\r\n    defaultValue: 0,\r\n};\r\n\r\nconst marks200 = {\r\n    marks: {\r\n        0: '0%',\r\n        40: '40%',\r\n        80: '80%',\r\n        120: '120%',\r\n        160: '160%',\r\n        200: '200%',\r\n    },\r\n    min: 0,\r\n    max: 200,\r\n    step: 1,\r\n    defaultValue: 0,\r\n};\r\n\r\nconst qTDB = \"Effect that increases your total damage like (Executioner, Tenderizer, TOFT). For example: a weapon with 43 base damage \" +\r\n\" and 200 its total damage will be boosted by +50% BDB up to 221.5 whereas +50% TDB gives 300.\"\r\n\r\nconst AdditionalTable = memo(function AdditionalTable({additionalDamages, setAdditionalDamages}) {\r\n    console.log(\"AdditionalTable\");\r\n    function updateAdditionalDamages() {\r\n        setAdditionalDamages({\r\n            ...additionalDamages,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ADRow additionalDamage={additionalDamages.tdb} updateAdditionalDamages={updateAdditionalDamages} marks={marks100P} text={qTDB}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.ballisticBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.energyBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.fireBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.poisonBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.coldBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.radBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.damageToCreature} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default AdditionalTable;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport AdditionalTable from \"../additional/AdditionalTable\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst AdditionalDamage = memo(function AdditionalDamage({additionalDamages, setAdditionalDamages, showStatRef, setShowStat}) {\r\n    console.log(\"AdditionalDamage\");\r\n    const openStat = (e) => {\r\n        setShowStat(!showStatRef.current);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"3\">\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">Additional Damage</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"p-auto\">\r\n                    <AdditionalTable additionalDamages={additionalDamages} setAdditionalDamages={setAdditionalDamages}></AdditionalTable>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default AdditionalDamage;\r\n","import { useState } from 'react';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\n\r\nfunction buildOverlay(show, setShow, target, props) {\r\n    function onHide(e) {\r\n        setShow(false);\r\n    };\r\n    const body = (show) ? props.bodyBuilder(props.id) : (<></>);\r\n    const header = (show) ? props.headerBuilder(props.title) : (<></>);\r\n    return (\r\n        <Overlay\r\n            show={show}\r\n            target={target}\r\n            rootClose='true'\r\n            onHide={onHide}\r\n            placement={props.placement}>\r\n            <Popover id=\"info-popover\" className=\"popover-adjustable2\">\r\n                <Popover.Header>\r\n                    {header}\r\n                </Popover.Header>\r\n                <Popover.Body className=\"p-2\" style={props.popoverBodyStyle}>\r\n                    {body}\r\n                </Popover.Body>\r\n            </Popover>\r\n        </Overlay>\r\n    );\r\n\r\n}\r\n\r\nexport default function InfoPopover(props) {\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n    let sign = \"!\";\r\n    if (props.sign) {\r\n        sign = props.sign;\r\n    }\r\n    function handleClick(e) {\r\n        setShow(!show);\r\n        setTarget(e.target);\r\n    };\r\n    const overlay = (show) ? buildOverlay(show, setShow, target, props) : (<></>);\r\n    return (\r\n        <div className={props.className}>\r\n            <Badge bg=\"danger\" pill onClick={handleClick} style={{cursor: \"pointer\"}}>{sign}</Badge>\r\n            {overlay}\r\n        </div>\r\n    );\r\n}","import Card from 'react-bootstrap/Card';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport StackEffectView from '../helpers/views/StackEffectView';\r\nimport { useEffect, memo, useState } from 'react';\r\nimport { applyBoost, applyStuff } from '../entities/EStuffBoost';\r\nimport InfoPopover from '../viewComponents/popover/InfoPopover';\r\nimport { getItem } from '../consumables/view/ConsumableItems';\r\nimport { buildRandomEmojiString, getRandomEmoji } from '../helpers/StringHelpers';\r\n\r\n\r\n// Find dynamically used items to recalculate them\r\nfunction recalculateDynamicItems(foodPref, item, stuffBoost, setStuffBoost, player) {\r\n    if (item.used && applyBoost(foodPref, item, stuffBoost, player, false)) {\r\n        setStuffBoost({...stuffBoost});\r\n    }\r\n}\r\n\r\nfunction getPopoverInfoBody(popoverId) {\r\n    const item = getItem(popoverId);\r\n    if (item) {\r\n        return (\r\n            <StackEffectView item={item} />\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getPopoverInfoHeader(title) {\r\n    return (<b>{title}</b>);\r\n}\r\n\r\nconst EffectItem = memo(function EffectItem({categoryName, foodPref, setFoodPref, player, item, height, picHeight, imPadding, items, setItems, colorName, colorValue, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched}) {\r\n    const [, setUpdate] = useState([]);\r\n    useEffect(() => {\r\n        recalculateDynamicItems(foodPref, item, stuffBoost, setStuffBoost, player);\r\n    }, [player, foodPref]);\r\n    function cardClick(e) {\r\n        item.used = !item.used;\r\n        setUpdate([]);\r\n        if (item.id === \"carnivore_serum\") {\r\n            foodPref.carnivore = item.used;\r\n            setFoodPref({...foodPref});\r\n        } else if (item.id === \"herbivore_serum\") {\r\n            foodPref.herbivore = item.used;\r\n            setFoodPref({...foodPref});\r\n        }\r\n        applyStuff(foodPref, item, stuffBoost, player);\r\n\r\n        // Say to parent to recalculate\r\n        setConsumableTouched([]);\r\n\r\n        // Do not say to react to update view for every boost item\r\n        setItems(items);\r\n        setStuffBoost(stuffBoost);\r\n    }\r\n    const boosts = item.boosts.map((boost) => {\r\n        let tail = \"\";\r\n        if (boost.valueType === \"percent\") {\r\n            tail = \"%\"\r\n        } else if (boost.valueType === \"multiplier\") {\r\n            tail = \"x\"\r\n        }\r\n        let sign = \"\";\r\n        if (boost.value > 0 && boost.valueType !== \"multiplier\") {\r\n            sign = \"+\";\r\n        }\r\n        const value = (item.used) ? sign + boost.value + tail : \"-\";\r\n        return keyValueRow(boost.description, value, colorName, colorValue, 0);\r\n    });\r\n    const emptyRows = maxRows - boosts.length;\r\n    //if (!item.emojiStrings) {\r\n    const result = []\r\n    for (let i = 0; i < emptyRows; i++) {\r\n        result.push(buildRandomEmojiString(3, 3));\r\n    }\r\n    item.emojiStrings = result;\r\n    //}\r\n    const secondEmoji = (item.used) ? getRandomEmoji() : \"-\";\r\n    for (let i = 0; i < item.emojiStrings.length; i++) {\r\n        boosts.push(keyValueRow(item.emojiStrings[i], secondEmoji, colorName, colorValue, 0));\r\n    }\r\n    const filter = item.used ? \"grayscale(0%)\" : \"grayscale(90%)\";\r\n    const outline = item.used ? \"shadow-outline-gold\" : \"shadow-outline-unselected\";\r\n    const head = (useHeader) ? (<Card.Header className='d-flex justify-content-center p-0 m-0 pt-1 pb-1'><div style={{textWrap: 'nowrap', overflow: 'hidden', textAlign: 'center', width: '100%', fontSize: '0.75rem', backgroundColor: '#f2efe1', fontWeight: 'bold'}}>{item.name}</div></Card.Header>) : (<></>);\r\n    const maxPopoverHeight = document.documentElement.style.getPropertyValue('--screen-modal-body-height-60');\r\n    return (\r\n        <Card key={item.id} className={outline} style={{width: '10.5rem', height: height, filter: filter }}>\r\n            <Card.Img variant='top' style={{cursor: \"pointer\", height: picHeight, padding: imPadding}} src={getPicture(item.imName)} onClick={cardClick} />\r\n                {head}\r\n            <Card.Body onClick={cardClick} style={{cursor: \"pointer\"}} className=\"ps-1 pe-1 p-0 mb-1\">\r\n                {boosts}\r\n            </Card.Body>\r\n            <Card.Footer className=\"p-1\">\r\n                <InfoPopover id={item.gameId} title={item.name} sign='?' className=\"d-flex justify-content-end\" popoverBodyStyle={{maxHeight: maxPopoverHeight, overflow: 'auto'}} headerBuilder={getPopoverInfoHeader} bodyBuilder={getPopoverInfoBody} placement='top' />\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default EffectItem;\r\n","import Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport EffectItem from '../boostStuff/EffectItem';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { memo } from 'react';\r\n\r\n\r\nfunction couple(key, categoryName, foodPref, setFoodPref, player, first, second, items, setItems, colorName, colorValue, cardHeight, picHeight, imPadding, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched) {\r\n    if (first === null && second === null) {\r\n        return(<></>);\r\n    } else if (second === null) {\r\n        return (\r\n            <Col key={key} className='p-0 ms-1 me-1 m-0 d-flex justify-content-center'>\r\n                <Stack className='pb-2 m-auto' direction=\"horizontal\" gap={2}>\r\n                    <EffectItem key={first.id} categoryName={categoryName} foodPref={foodPref} setFoodPref={setFoodPref} player={player} item={first} height={cardHeight} picHeight={picHeight} imPadding={imPadding} items={items} setItems={setItems} colorName={colorName} colorValue={colorValue} getPicture={getPicture} useHeader={useHeader} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={maxRows} setConsumableTouched={setConsumableTouched} />\r\n                </Stack>\r\n            </Col>\r\n        );\r\n    }\r\n    return (\r\n        <Col key={key} className='p-0 ms-1 me-1 m-0 d-flex justify-content-center'>\r\n            <Stack className='pb-2 m-auto' direction=\"horizontal\" gap={2}>\r\n                <EffectItem key={first.id} categoryName={categoryName} foodPref={foodPref} setFoodPref={setFoodPref} player={player} item={first} height={cardHeight} picHeight={picHeight} imPadding={imPadding} items={items} setItems={setItems} colorName={colorName} colorValue={colorValue} getPicture={getPicture} useHeader={useHeader} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={maxRows} setConsumableTouched={setConsumableTouched} />\r\n                <EffectItem key={second.id} categoryName={categoryName} foodPref={foodPref} setFoodPref={setFoodPref} player={player} item={second} height={cardHeight} picHeight={picHeight} imPadding={imPadding} items={items} setItems={setItems} colorName={colorName} colorValue={colorValue} getPicture={getPicture} useHeader={useHeader} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={maxRows} setConsumableTouched={setConsumableTouched} />\r\n            </Stack>\r\n        </Col>\r\n    );\r\n}\r\n\r\nconst EffectItems = memo(function EffectItems({categoryName, foodPref, setFoodPref, player, items, setItems, colorName, colorValue, cardHeight, picHeight, imPadding, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched}) {\r\n    console.log(\"EffectItems \" + categoryName);\r\n    const size = items.length;\r\n    let k = 0;\r\n    let rItems = [];\r\n    let key = 0;\r\n    while (size > 0 && true) {\r\n        const item1 = items[k++];\r\n        let item2 = null;\r\n        if (k < size) {\r\n            item2 = items[k++];\r\n        }\r\n        rItems.push(couple(key++, categoryName, foodPref, setFoodPref, player, item1, item2, items, setItems, colorName, colorValue, cardHeight, picHeight, imPadding, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched));\r\n        if (k >= size) {\r\n            break;\r\n        }\r\n    }\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"pb-0 mb-0\">\r\n                {rItems}\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default EffectItems;","import Accordion from 'react-bootstrap/Accordion';\r\nimport EffectItems from \"./EffectItems\";\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nexport default function EffectView({foodPref, setFoodPref, player, showStat, setShowStat, eventKey, categoryName, items, setItems, colorName, colorValue, cardHeight, picHeight, imPadding, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched}) {\r\n    const openStat = (e) => {\r\n        setShowStat(!showStat);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey={eventKey}>\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">{categoryName}</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1 pb-1\">\r\n                    <EffectItems categoryName={categoryName} foodPref={foodPref} setFoodPref={setFoodPref} player={player} items={items} setItems={setItems} colorName={colorName} colorValue={colorValue} cardHeight={cardHeight} picHeight={picHeight} imPadding={imPadding} getPicture={getPicture} useHeader={useHeader} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={maxRows} setConsumableTouched={setConsumableTouched}></EffectItems>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\n\r\n\r\nfunction buildPopover() {\r\n    return (\r\n        <Popover className=\"popover-adjustable\">\r\n            <Popover.Header as=\"h3\"><strong>Team</strong></Popover.Header>\r\n            <Popover.Body>\r\n                <p>When 'Strange in numbers' is activated the calculator considers that you have at least one teammate and your teammates have mutations you have.</p>\r\n                <p>Not all effects are presented in consumables section, usually only those whose values are important for damage. More comprehensive list of consumables with details can be seen under 'Main' section.</p>\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nfunction qa() {\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={buildPopover()}>\r\n            <Button variant=\"danger\">?</Button>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nfunction ANRow({player, setPlayer, boostDamage, setBoostDamage}) {\r\n    function changeTeam(e) {\r\n        player.team = !player.team;\r\n        boostDamage.toft.displayed_value = (player.team) ? boostDamage.toft.value : 0.0;\r\n        setPlayer({...player});\r\n        setBoostDamage({...boostDamage});\r\n    }\r\n    const value = (player.team && boostDamage.strange_in_numbers.is_used) ? 25.0: 0;\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Card className=\"mb-2 pt-2 pb-2 ps-3 pe-3\">\r\n                <Col>\r\n                    <InputGroup className=\"mb-1\">\r\n                        <InputGroup.Text style={{ width: '2.5rem' }} >\r\n                            <UCheckbox onChange={changeTeam} checked={player.team}></UCheckbox>\r\n                        </InputGroup.Text>\r\n                        <InputGroup.Text style={{ width: '6.9rem' }}>\r\n                            <strong>👨‍👩‍👧‍👦 Team</strong>\r\n                        </InputGroup.Text>\r\n                        {qa()}\r\n                        <InputGroup.Text style={{width: '4.6rem'}}>\r\n                            <div className=\"badge bg-info\" style={{width: '3rem'}}>{value}</div>\r\n                        </InputGroup.Text>\r\n                    </InputGroup>\r\n                </Col>\r\n                </Card>\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ANRow;","import Accordion from 'react-bootstrap/Accordion';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { Button } from 'react-bootstrap';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ANRow from \"./ANRow\";\r\nimport ADRow from \"../additional/ADRow\";\r\n\r\n/*\r\nconst marks100 = {\r\n    marks: {\r\n        5: '5',\r\n        20: '20',\r\n        40: '40',\r\n        60: '60',\r\n        80: '80',\r\n        100: '100'\r\n    },\r\n    min: 5,\r\n    max: 100,\r\n    step: 0.25,\r\n    defaultValue: 5,\r\n};\r\n*/\r\n\r\nconst marks50 = {\r\n    marks: {\r\n        5: '5',\r\n        10: '10',\r\n        20: '20',\r\n        30: '30',\r\n        40: '40',\r\n        50: '50'\r\n    },\r\n    min: 5,\r\n    max: 50,\r\n    step: 0.25,\r\n    defaultValue: 5,\r\n};\r\n\r\nconst marksH = {\r\n    marks: {\r\n        5: '5%',\r\n        20: {\r\n            style: {\r\n                color: '#f50',\r\n            },\r\n            label: <strong>20%</strong>,\r\n        },\r\n        40: '40%',\r\n        60: '60%',\r\n        80: '80%',\r\n        100: '100%'\r\n    },\r\n    min: 5,\r\n    max: 100,\r\n    step: 1,\r\n    defaultValue: 100,\r\n};\r\n\r\nconst General = function General({eventKey, categoryName, showStat, setShowStat, player, setPlayer, boostDamage, setBoostDamage, playerStats, setPlayerStats}) {\r\n    const openStat = (e) => {\r\n        setShowStat(!showStat);\r\n        e.stopPropagation();\r\n    }\r\n    function updateAdditionalDamages() {\r\n        setPlayerStats({\r\n            ...playerStats,\r\n        });\r\n    };\r\n\r\n    function changeHealth() {\r\n        boostDamage.nerd_rage.displayed_value = (boostDamage.nerd_rage.is_used && player.health.value <= 20.0) ? boostDamage.nerd_rage.value : 0.0;\r\n        setPlayer({...player});\r\n        setBoostDamage({...boostDamage});\r\n    };\r\n\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey={eventKey}>\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">{categoryName}</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1 pb-1\">\r\n                    <Container fluid className=\"ps-0 pe-0\">\r\n                        <Card className=\"text-center mb-2\">\r\n                            <Card.Body className=\"pb-2\">\r\n                                <ANRow player={player} setPlayer={setPlayer} boostDamage={boostDamage} setBoostDamage={setBoostDamage}></ANRow>\r\n                                <ADRow additionalDamage={player.health} updateAdditionalDamages={changeHealth} marks={marksH}></ADRow>\r\n                                <ADRow additionalDamage={playerStats.strength} updateAdditionalDamages={updateAdditionalDamages} marks={marks50}></ADRow>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Container>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default General;","import { memo } from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport EffectView from '../boostStuff/EffectView';\r\nimport General from '../boostStuff/General';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { getMagazine, getBobbleHead, getFood, getDrink, getPsycho, getSerum, getOther } from '../helpers/BoostStuffProvider';\r\n\r\n\r\nfunction buildLicense() {\r\n    return (\r\n        <Popover className=\"popover-adjustable\">\r\n            <Popover.Header as=\"h3\"><strong>Licensing</strong></Popover.Header>\r\n            <Popover.Body>\r\n                Image files from 'Magazines' / 'Bobble Heads' / 'Chemicals' / 'Food' / 'Drink' / 'Serums' / 'Others' sections were taken from the video game Fallout 76 or from websites created and owned by Bethesda Softworks, the copyright of which is held by Bethesda Softworks, or were released to the press for promotional purposes by the same.\r\n                The use of images to illustrate items of the game concerning the subject of the images in question is believed to qualify as fair use under United States copyright law, as such display does not significantly impede the right of the copyright holder to sell the copyrighted material and is not being used to generate profit.\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nconst BoostStuff = memo(function BoostStuff({foodPref, setFoodPref, magazines, setMagazines, bobbleHeads, setBobbleHeads, food, setFood, drink, setDrink, psycho, setPsycho, serum, setSerum, others, setOthers, player, setPlayer, stuffBoost, setStuffBoost, showStat, setShowStat, boostDamage, setBoostDamage, playerStats, setPlayerStats, setConsumableTouched}) {\r\n    return (\r\n        <Accordion className=\"accordion\">\r\n            <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={buildLicense()}>\r\n                <Badge className=\"mb-3 ms-4\" variant=\"black\" pill>!</Badge>\r\n            </OverlayTrigger>\r\n            <General eventKey=\"0\" categoryName={\"General\"} showStat={showStat} setShowStat={setShowStat} player={player} setPlayer={setPlayer} boostDamage={boostDamage} setBoostDamage={setBoostDamage} playerStats={playerStats} setPlayerStats={setPlayerStats}></General>\r\n            <EffectView eventKey=\"1\" player={player} showStat={showStat} setShowStat={setShowStat} categoryName={\"Magazines\"} items={magazines} setItems={setMagazines} colorName={\"orange\"} colorValue={\"orange\"} cardHeight={'17.2rem'} picHeight={'12rem'} getPicture={getMagazine} useHeader={false} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={2} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"2\" showStat={showStat} setShowStat={setShowStat} categoryName={\"Bobble Heads\"} items={bobbleHeads} setItems={setBobbleHeads} colorName={\"blue\"} colorValue={\"blue\"} cardHeight={'13.4rem'} picHeight={'8rem'} getPicture={getBobbleHead} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={1} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"3\" showStat={showStat} setShowStat={setShowStat} categoryName={\"Chemicals\"} items={psycho} setItems={setPsycho} colorName={\"magenta\"} colorValue={\"magenta\"} cardHeight={'16.9rem'} picHeight={'8.5rem'} getPicture={getPsycho} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={3} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"4\" foodPref={foodPref} player={player} showStat={showStat} setShowStat={setShowStat} categoryName={\"Food\"} items={food} setItems={setFood} colorName={\"volcano\"} colorValue={\"volcano\"} cardHeight={'14.3rem'} picHeight={'9rem'} getPicture={getFood} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={1} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"5\" player={player} showStat={showStat} setShowStat={setShowStat} categoryName={\"Drink\"} items={drink} setItems={setDrink} colorName={\"volcano\"} colorValue={\"volcano\"} cardHeight={'15.9rem'} picHeight={'9rem'} getPicture={getDrink} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={2} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"6\" foodPref={foodPref} setFoodPref={setFoodPref} player={player} showStat={showStat} setShowStat={setShowStat} categoryName={\"Serums\"} items={serum} setItems={setSerum} colorName={\"green\"} colorValue={\"green\"} cardHeight={'14.7rem'} picHeight={'8rem'} imPadding='1rem 2.5rem' getPicture={getSerum} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={2} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"7\" showStat={showStat} setShowStat={setShowStat} categoryName={\"Others\"} items={others} setItems={setOthers} colorName={\"default\"} colorValue={\"indigo\"} cardHeight={'13.3rem'} picHeight={'8rem'} getPicture={getOther} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={1} setConsumableTouched={setConsumableTouched} />\r\n        </Accordion>\r\n    );\r\n});\r\n\r\nexport default BoostStuff;","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport '../css/style.css'\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { WarningPopover } from '../helpers/WarningPopover';\r\nimport GroupView from '../helpers/views/GroupView';\r\nimport { calculateSpecial } from './BoostHelpers';\r\nimport getPerkImage from './PerkImageProvider';\r\nimport { getMark } from '../templates/calc/view/EmblemCalcRowView';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport StackEffectView from '../helpers/views/StackEffectView';\r\nimport { getPerkCard } from '../perkCard/PerkCardProvider';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\n\r\n\r\nfunction getPerkColor(category) {\r\n    return \"bg-\" + category.toLowerCase() + \"-card\";\r\n}\r\n\r\nfunction getPerkOutline(category) {\r\n    return category.toLowerCase() + \"-outline-card\";\r\n}\r\n\r\nfunction badgeIf(value, condition, onClick) {\r\n    if (condition) {\r\n        return (<Button className={\"p-1\"} onClick={onClick} style={{width: '2.5rem'}} variant=\"warning\">{value}</Button>)\r\n    }\r\n    return (<></>)\r\n}\r\n\r\nfunction checkCardConditions(card, player, setPlayer, extraDamage) {\r\n    if (card.name === \"Nerd Rage\") {\r\n        card.displayed_value = (card.is_used && player.health.value <= 20.0) ? card.value : 0.0;\r\n    } else if (card.name === \"TOFT\") {\r\n        card.displayed_value = (card.is_used && player.team) ? card.value : 0.0;\r\n    } else if (card.name === \"Follow Through\") {\r\n        card.displayed_value = (card.is_used && extraDamage.useSneak) ? card.value : 0.0;\r\n    } else {\r\n        card.displayed_value = (card.is_used) ? card.value : 0.0;\r\n    }\r\n    if (card.name === \"Party Girl / Boy\") {\r\n        if (card.displayed_value === 0) {\r\n            player.alcoholEffects = 1.0;\r\n        } else {\r\n            player.alcoholEffects = card.displayed_value;\r\n        }\r\n        setPlayer({...player});\r\n    } else if (card.name === \"Strange In Nums\") {\r\n        player.strange = card.displayed_value;\r\n        setPlayer({...player});\r\n    } else if (card.name === \"Class Freak\") {\r\n        player.freak = card.displayed_value;\r\n        setPlayer({...player});\r\n    }\r\n}\r\n\r\nfunction getItem(card, setBoostDamage, boostDamage, cardType, setCardType, xBadge=false, symbol='%', player=null, setPlayer=null, extraDamage=null) {\r\n    function onClick(e) {\r\n        changeRank();\r\n        calculateSpecial(boostDamage);\r\n        setBoostDamage({\r\n            ...boostDamage,\r\n        });\r\n    }\r\n\r\n    function changeRank() {\r\n        const rank_len = card.rank_values.length;\r\n        card.rank = card.rank % rank_len + 1;\r\n        card.value = card.rank_values[card.rank - 1] * card.x;\r\n        checkCardConditions(card, player, setPlayer, extraDamage);\r\n    }\r\n\r\n    function onClickX(e) {\r\n        card.x = card.x % card.max_x + 1;\r\n        card.value = card.rank_values[card.rank - 1] * card.x;\r\n        card.displayed_value = (card.is_used) ? card.value : 0.0;\r\n        setBoostDamage({\r\n            ...boostDamage,\r\n        });\r\n    }\r\n\r\n    function isUsed(e) {\r\n        card.is_used = e.target.checked;\r\n        checkCardConditions(card, player, setPlayer, extraDamage);\r\n        calculateSpecial(boostDamage);\r\n        setBoostDamage({\r\n            ...boostDamage,\r\n        });\r\n    }\r\n    function getInfo() {\r\n        // let info = card.info.replaceAll(\"{1}\", number).replace(\"{2}\", parseInt(number / 4)).replace(\"{3}\", parseInt(number * 2));\r\n        // info = info.replaceAll(\"{4}\", number * 3);\r\n        function onRadioClick(e) {\r\n            console.log(e);\r\n            setCardType(parseInt(e.target.value));\r\n        }\r\n        function getTypeRadio() {\r\n            if (card.id.length > 1) {\r\n                return (\r\n                    <div className=\"pt-0 pb-2 d-flex justify-content-center\">\r\n                        <BSRadio small='true' pairs={{Basic: 0, Expert: 1, Master: 2}} selectedValue={cardType} onClick={onRadioClick} />\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (<></>);\r\n            }\r\n        }\r\n        const index = (card.id.length > 1) ? cardType : 0;\r\n        return (\r\n            <>\r\n                {getTypeRadio()}\r\n                <StackEffectView item={getPerkCard(card.id[index])} />\r\n            </>\r\n        );\r\n    }\r\n    const outline = card.is_used ?  getPerkOutline(card.category) : \"\";\r\n    const w = (xBadge) ? '9rem' : '11.5rem';\r\n    const perkColor = getPerkColor(card.category);\r\n    const cName = \"btn text-start \" + perkColor;\r\n    const filter = card.is_used ? \"grayscale(0%) contrast(1.1)\" : \"grayscale(80%) contrast(1.1)\";\r\n    const imagePath = getPerkImage(card.im_name);\r\n    const header = <div className=\"d-flex center-text\">{getMark(card.im_name, imagePath, \"mt-0 mb-0 ms-0 me-3 shadow-outline-gold2\", '2rem', '1.8rem', '4px')}{card.name}</div>\r\n    const bgCardColor = getComputedStyle(document.documentElement).getPropertyValue(\"--\" + perkColor + \"-color\");\r\n    return (\r\n        <Col className=\"ps-1 pe-1\">\r\n            <GroupView className={outline}>\r\n                <InputGroup className=\"justify-content-center mb-1 mt-1 flex-nowrap\" style={{filter: filter}}>\r\n                    <InputGroup.Text className={\"ps-2 pe-2\"} >\r\n                        <UCheckbox onChange={isUsed} checked={card.is_used} checkBorderColor={bgCardColor} checkBgColor={bgCardColor}></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <Button className={cName} style={{width: w}} onClick={onClick}>\r\n                        <Badge className=\"ms-0 me-2\" bg=\"warning\">{card.cost[card.rank - 1]}</Badge>\r\n                        {card.name}\r\n                    </Button>\r\n                    {badgeIf(\"x\" + card.x, xBadge, onClickX)}\r\n                    <InputGroup.Text className={\"justify-content-center p-0\"} style={{width: '3.5rem'}}>\r\n                        <div className={\"badge \" + perkColor} style={{width: '2.7rem'}}>{card.displayed_value}{symbol}</div>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text className={\"ps-1 pe-1 p-0\"}>\r\n                        <WarningPopover element={infoButton()} message={getInfo()} header={header} className=\"popover-adjustable2\" />\r\n                    </InputGroup.Text>\r\n                </InputGroup>\r\n            </GroupView>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction infoButton() {\r\n    return (\r\n        <Button className=\"p-1\" variant=\"white\">\r\n            <strong><small>❗</small></strong>\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction BRow1({setBoostDamage, boostDamage, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.incisor, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.lock_and_load, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.martial_artist, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.scattershot, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow2({setBoostDamage, boostDamage, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.gladiator, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.heavy_gunner, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.shotgunner, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.slugger, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow3({setBoostDamage, boostDamage, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.iron_fist, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.archer, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.commando, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.rifleman, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow4({setBoostDamage, boostDamage, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.glow_sight, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.bow_before_me, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.exterminator, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.tank_killer, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow5({setBoostDamage, boostDamage, player, setPlayer, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.ground_pounder, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.tenderizer, setBoostDamage, boostDamage, cardType, setCardType, true)}\r\n            {getItem(boostDamage.party_girl_boy, setBoostDamage, boostDamage, cardType, setCardType, false, \"x\", player, setPlayer)}\r\n            {getItem(boostDamage.strange_in_numbers, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", player, setPlayer)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow6({setBoostDamage, boostDamage, player, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.stabilized, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.demolition_expert, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.science, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.nerd_rage, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", player)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow7({setBoostDamage, boostDamage, player, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.power_user, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.adrenaline, setBoostDamage, boostDamage, cardType, setCardType, true)}\r\n            {getItem(boostDamage.gun_fu, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.covert_operative, setBoostDamage, boostDamage, cardType, setCardType, false, 'x')}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction BRow8({setBoostDamage, boostDamage, player, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.mister_sandman, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.ninja, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.guerrilla, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.gunslinger, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction BRow9({setBoostDamage, boostDamage, player, setPlayer, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.bloody_mess, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.better_criticals, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.class_freak, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", player, setPlayer)}\r\n            {getItem(boostDamage.toft, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", player, setPlayer)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction BRow10({setBoostDamage, boostDamage, cardType, setCardType, extraDamage}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.follow_through, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", null, null, extraDamage)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport {BRow1, BRow2, BRow3, BRow4, BRow5, BRow6, BRow7, BRow8, BRow9, BRow10};","import Container from 'react-bootstrap/Container';\r\nimport {BRow1, BRow2, BRow3, BRow4, BRow5, BRow6, BRow7, BRow8, BRow9, BRow10} from \"./BRows\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport { memo } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport { getRowWithImage } from '../helpers/WTypeDropdown';\r\nimport PerkCardBuilder from './PerkCardBuilder';\r\nimport { useState } from 'react';\r\n\r\nconst popover = (\r\n    <Popover className=\"popover-adjustable\">\r\n        <Popover.Header as=\"h3\">Perks</Popover.Header>\r\n        <Popover.Body>\r\n            'Incisor' is applied to 'All / Melee / Unarmed' weapon's type.\r\n            'Stabilized' is applied to 'All / Heavy' weapon's type.\r\n            'Tank Killer' is applied to 'All / Pistol / Rifle' weapon's type.\r\n            'TOFT' can reduce ballistic resistance of a creature when it hits back so you have to handle this manually\r\n            under the 'Creature' section if you want to see the exact damage number as in the game.\r\n        </Popover.Body>\r\n    </Popover>\r\n);\r\n\r\nfunction getStatBadge(name, value) {\r\n    const cParams = 'ms-1 me-1 mt-0 mb-0 pt-1 pb-1 bg-' + name + \"-card shadow-outline\";\r\n    const letter = name.charAt(0).toUpperCase();\r\n    const color = (value > 15) ? \"red\" : \"black\";\r\n    return (\r\n        <Badge className={cParams} style={{width: '2.5rem'}}><div style={{fontSize: '1rem' , fontWeight: 'bold'}}>{letter}</div>\r\n            <Badge className=\"mt-1 p-auto\" bg=\"white\" text=\"black\"><div style={{fontSize: '0.75rem' , fontWeight: 'bold', color: color}}>{value}</div></Badge>\r\n        </Badge>\r\n    );\r\n}\r\n\r\nfunction getDropdown(setBoostDamage, player, setPlayer) {\r\n    function onSelect(e) {\r\n        PerkCardBuilder.build(e, setBoostDamage, player, setPlayer);\r\n    }\r\n    return (\r\n        <DropdownButton className=\"d-flex justify-content-center mb-3\" onSelect={onSelect} title={<small><b>Choose a build</b></small>} variant=\"warning\">\r\n        <Dropdown.Item eventKey=\"Reset\">{getRowWithImage(\"Reset\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Heavy\">{getRowWithImage(\"Heavy\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Heavy Explosive\">{getRowWithImage(\"Heavy\", \"Heavy Explosive\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Heavy FullHouse\">{getRowWithImage(\"Heavy\", \"Heavy FullHouse\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Shotgun\">{getRowWithImage(\"Shotgun\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Automatic Rifle\">{getRowWithImage(\"Rifle\", \"Automatic Rifle\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Non-Automatic Rifle\">{getRowWithImage(\"Rifle\", \"Non-Automatic Rifle\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Automatic Pistol\">{getRowWithImage(\"Pistol\", \"Automatic Pistol\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Non-Automatic Pistol\">{getRowWithImage(\"Pistol\", \"Non-Automatic Pistol\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Bow\">{getRowWithImage(\"Bow\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Melee One-Handed\">{getRowWithImage(\"Melee\", \"Melee One-Handed\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Melee Two-Handed\">{getRowWithImage(\"Melee\", \"Melee Two-Handed\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Unarmed\">{getRowWithImage(\"Unarmed\")}</Dropdown.Item>\r\n        </DropdownButton>\r\n    );\r\n}\r\n\r\nconst BoostTable = memo(function BoostTable({player, setPlayer, setBoostDamage, boostDamage, extraDamage}) {\r\n    console.log(\"BoostTable\");\r\n    const [cardType, setCardType] = useState(0); // Basic Expert Master\r\n    return (\r\n        <Container className=\"ps-0 pe-0\">\r\n            {getDropdown(setBoostDamage, player, setPlayer)}\r\n            <Card className=\"mb-3\">\r\n                <Card.Header className='ps-3'>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        {getStatBadge(\"strength\", boostDamage.special.strength)}\r\n                        {getStatBadge(\"perception\", boostDamage.special.perception)}\r\n                        {getStatBadge(\"endurance\", boostDamage.special.endurance)}\r\n                        {getStatBadge(\"charisma\", boostDamage.special.charisma)}\r\n                        {getStatBadge(\"intelligence\", boostDamage.special.intelligence)}\r\n                        {getStatBadge(\"agility\", boostDamage.special.agility)}\r\n                        {getStatBadge(\"luck\", boostDamage.special.luck)}\r\n                    </div>\r\n                </Card.Header>\r\n\r\n                <Card.Body className=\"bg-lite p-1 m-0\">\r\n                    <Container className=\"p-0 m-0\">\r\n                        <BRow1 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow1>\r\n                        <BRow2 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow2>\r\n                        <BRow3 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow3>\r\n                        <BRow4 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow4>\r\n                        <BRow5 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow5>\r\n                        <BRow6 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow6>\r\n                        <BRow7 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow7>\r\n                        <BRow8 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow8>\r\n                        <BRow9 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow9>\r\n                        <BRow10 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType} extraDamage={extraDamage}></BRow10>\r\n                    </Container>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={popover}>\r\n                        <Badge className='ms-3 mt-0 mb-1 p-auto' bg=\"danger\" style={{cursor: 'pointer'}} pill>?</Badge>\r\n                    </OverlayTrigger>\r\n                </Card.Footer>\r\n            </Card>\r\n\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default BoostTable;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport BoostTable from \"../perkCardBoosts/BoostTable\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst DamageBoosts = memo(function DamageBoosts({player, setPlayer, boostDamage, extraDamage, setBoostDamage, showStatRef, setShowStat}) {\r\n    console.log(\"DamageBoosts\")\r\n    const openStat = (e) => {\r\n        setShowStat(!showStatRef.current);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"1\">\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">Card Boosts</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <BoostTable player={player} setPlayer={setPlayer} extraDamage={extraDamage} setBoostDamage={setBoostDamage} boostDamage={boostDamage}></BoostTable>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default DamageBoosts;\r\n","import Card from 'react-bootstrap/Card';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { Progress } from 'antd';\r\nimport ResistanceChart from './ResistanceChart';\r\nimport { timeToPercent } from '../helpers/Item';\r\n\r\n\r\nexport default function GraphInfoView(props) {\r\n    const creature = props.creatures[\"creature\" + props.creatureChartNumber];\r\n    const cPercent = timeToPercent(creature.lifeTime);\r\n    return (\r\n        <Card className={props.className}>\r\n            <Card.Header>\r\n                <span className=\"d-flex m-0 p-0 w-100\">\r\n                    <div className=\"m-auto p-0 w-100 d-flex justify-content-start\">\r\n                        <Badge className=\"bg-orange-outline\" bg=\"warning\" text=\"dark\">\r\n                            <strong>DPS: {props.graphValues.yValues[0].toFixed(1)}</strong>\r\n                        </Badge>\r\n                    </div>\r\n                    <div className=\"m-0 p-0 w-100\">\r\n                        <Progress\r\n                            type=\"dashboard\"\r\n                            steps={50}\r\n                            percent={cPercent}\r\n                            format={(percent) => percent}\r\n                            size={28}\r\n                            strokeColor={props.colors}\r\n                            trailColor=\"rgba(0, 0, 0, 0.06)\"\r\n                            strokeWidth={20} />\r\n                    </div>\r\n                    <div className=\"m-auto p-0 w-100 d-flex justify-content-end\">\r\n                        <Badge bg=\"warning\" className=\"bg-orange-outline\" text=\"dark\">\r\n                            <strong>DPS: {props.graphValues.yValues[props.graphValues.yValues.length - 1].toFixed(1)}</strong>\r\n                        </Badge>\r\n                    </div>\r\n                </span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center p-1 pt-0\">\r\n                <ResistanceChart graphValues={props.graphValues} chartId={\"mainResChart\"} creatures={props.creatures} creatureNumber={props.creatureChartNumber} setCreatureNumber={props.setCreatureChartNumber} />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","import { Progress } from 'antd';\r\nimport { getHotPercentage } from '../helpers/Item';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nexport default function HotMeter({creatures, steps, colors}) {\r\n    const [index, setIndex] = useState(0);\r\n    let copyColors = [...colors];\r\n    let shiftIndex = index + 20;\r\n    shiftIndex = (shiftIndex > 49) ? 49 : shiftIndex;\r\n    copyColors[index] = copyColors[shiftIndex];\r\n    const percent = getHotPercentage(creatures);\r\n    const limit = percent / 2;\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            let newIndex = index + 1;\r\n            if (newIndex > limit) {\r\n                newIndex = 0;\r\n            }\r\n            setIndex(newIndex);\r\n        }, 200);\r\n    }); // Depends on index automatically\r\n    return (\r\n        <div className='input-group d-flex justify-content-center p-0'>\r\n            <InputGroup.Text>\r\n                &#128293;\r\n            </InputGroup.Text>\r\n            <InputGroup.Text>\r\n                <Progress showInfo={false} percent={percent} steps={steps} type=\"line\" size=\"small\" strokeColor={copyColors} />\r\n            </InputGroup.Text>\r\n        </div>\r\n    );\r\n}","import { memo } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport HotMeter from './HotMeter';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport { getColorsForHotMeter } from '../helpers/Colors';\r\nimport { getHotPercentage } from '../helpers/Item';\r\nimport DamageDetails from '../damage/DamageDetails';\r\nimport { getImageElement } from '../helpers/WeaponImages';\r\nimport CreaturesCardView from '../creature/CreaturesCardView';\r\nimport GraphInfoView from './GraphInfoView';\r\nimport SummaryView from './SummaryView';\r\nimport Container from 'react-bootstrap/Container';\r\nimport StaticPopoverRenderer from '../viewComponents/popover/StaticPopoverRenderer';\r\n\r\n\r\nconst colors = getColorsForHotMeter();\r\n\r\nconst imagePopover = new StaticPopoverRenderer(<></>, <></>, \"mainWeaponImage\", \"right\");\r\n\r\nconst MainCardsDisplay = memo(function MainCardsDisplay(props) {\r\n    console.log(\"MainCardsDisplay\");\r\n    const wSpec = props.wSpecRef.current;\r\n    if (!wSpec) {\r\n        return (<></>);\r\n    }\r\n    let weaponIcon = wSpec.iconName;\r\n    if (!weaponIcon) {\r\n        weaponIcon = \"default\";\r\n    }\r\n    const mWidth = \"19rem\";\r\n    const percentC = getHotPercentage(props.creatures);\r\n    const weaponTitleName = truncateLongWords(wSpec.weaponName, 25);\r\n    function onImageClick(e) {\r\n        imagePopover.renderToggleNewContent(e.target, <b>{wSpec.defaultName}</b>, <div className=\"d-flex justify-content-center\">{getImageElement(weaponIcon, \"12rem\")}</div>);\r\n    }\r\n    return (\r\n        <Card style={{minWidth: mWidth}} className=\"d-flex justify-content-center text-center mb-0 ms-1 me-1\">\r\n            <div id=\"mainWeaponImage\"></div>\r\n            <Card.Header className='p-0 m-0'>\r\n                <Row className='p-0 m-0'>\r\n                    <Col className=\"col-2 d-flex justify-content-start p-0 m-0 ps-2\">\r\n                        <div style={{cursor: 'pointer'}} onClick={onImageClick}>\r\n                            {getImageElement(weaponIcon, \"4rem\", \"main-weapon-image\")}\r\n                        </div>\r\n                    </Col>\r\n                    <Col className=\"col-8 d-flex justify-content-center\">\r\n                       <div className=\"m-auto p-0 weapon-label-text\"> {weaponTitleName} </div>\r\n                    </Col>\r\n                    <Col className=\"col-2 d-flex justify-content-end p-0 m-0 pe-2\">\r\n                    </Col>\r\n                </Row>\r\n            </Card.Header>\r\n            <Card.Body className=\"pt-2 bg-lite ps-1 pe-1 pb-1\">\r\n                <Container className=\"p-1 pb-0 mb-0\">\r\n                    <Row>\r\n                        <div className=\"col d-flex justify-content-center mb-2\">\r\n                            <SummaryView className=\"main-display-adjustable\" resultDamage={props.resultDamage} extraDamage={props.extraDamage} boostDamageRef={props.boostDamageRef} setBoostDamage={props.setBoostDamage} setExtraDamage={props.setExtraDamage} />\r\n                        </div>\r\n                        <div className=\"col d-flex justify-content-center mb-2\">\r\n                            <GraphInfoView className=\"main-display-adjustable\" graphValues={props.graphValues} percent={percentC} creatures={props.creatures} creatureChartNumber={props.creatureChartNumber} setCreatureChartNumber={props.setCreatureChartNumber} colors={colors} />\r\n                        </div>\r\n                        <div className=\"col d-flex justify-content-center mb-2\">\r\n                            <CreaturesCardView className=\"main-display-adjustable\" creatureNamesRef={props.creatureNamesRef} creatures={props.creatures} setCreatures={props.setCreatures} resultDamage={props.resultDamage} weaponName={wSpec.weaponName} />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted p-1\">\r\n                <Accordion className=\"accordion p-0 m-0\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header className=\"m-0 p-0\">\r\n                            <HotMeter creatures={props.creatures} steps={50} colors={colors} />\r\n                        </Accordion.Header>\r\n                        <Accordion.Body>\r\n                            <DamageDetails resultDamage={props.resultDamage}></DamageDetails>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default MainCardsDisplay;\r\n","import { useEffect } from 'react';\r\nimport BaseDropdown from '../viewComponents/dropdown/BaseDropdown';\r\nimport Badge from 'react-bootstrap/Badge';\r\nconst { Chart } = await import('chart.js/auto');\r\n\r\n\r\nfunction getConfig(graphValues) {\r\n    return {\r\n        type: \"line\",\r\n        data: {\r\n            labels: graphValues.xValues,\r\n            datasets: [{\r\n                data: graphValues.yValues,\r\n                borderColor: \"red\",\r\n                borderWidth: \"2\",\r\n                pointRadius: \"1\",\r\n                fill: true\r\n            }]\r\n        },\r\n        options: {\r\n            plugins: {\r\n                legend: {\r\n                    display: false\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Resistance',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                },\r\n                y: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Damage / sec',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                }\r\n            },\r\n            animation: false,\r\n        }\r\n    };\r\n}\r\n\r\nfunction drawChart(graphValues, chartId) {\r\n    const curChart = Chart.getChart(chartId);\r\n    if (curChart) {\r\n        curChart.destroy();\r\n    }\r\n    new Chart(document.getElementById(chartId), getConfig(graphValues));\r\n}\r\n\r\nfunction getDPS(need, yValues) {\r\n    if (need) {\r\n        return (\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <div className=\"m-auto p-0 ps-2 pt-2 w-100 d-flex justify-content-start\">\r\n                    <Badge className=\"bg-orange-outline\" bg=\"warning\" text=\"dark\">\r\n                        <strong>DPS: {yValues[0].toFixed(1)}</strong>\r\n                    </Badge>\r\n                </div>\r\n                <div className=\"m-auto p-0 pt-2 pe-2 w-100 d-flex justify-content-end\">\r\n                    <Badge bg=\"warning\" className=\"bg-orange-outline\" text=\"dark\">\r\n                        <strong>DPS: {yValues[yValues.length - 1].toFixed(1)}</strong>\r\n                    </Badge>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\nexport default function ResistanceChart(props) {\r\n    useEffect(() => {\r\n        drawChart(props.graphValues, props.chartId);\r\n    });\r\n    const dict = {};\r\n    let number = 1;\r\n    for (const creatureField in props.creatures) {\r\n        const creature = props.creatures[creatureField];\r\n        dict[number++] = creature.capName;\r\n    }\r\n    const creature = props.creatures[\"creature\" + props.creatureNumber];\r\n    return (\r\n        <>\r\n            {getDPS(props.dps, props.graphValues.yValues)}\r\n            <div className=\"d-flex justify-content-center p-0 pt-2\">\r\n                <BaseDropdown variant='blue-label' size='sm' setValue={props.setCreatureNumber} dict={dict} title={<strong>{creature.capName}</strong>} />\r\n            </div>\r\n            <div className=\"ps-1 pe-1\">\r\n                <canvas id={props.chartId}></canvas>\r\n            </div>\r\n        </>\r\n    );\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { buildItem } from '../helpers/Item';\r\nimport { memo, useState } from 'react';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport { getLegendaryNameFromSpec } from '../helpers/LegendaryProvider';\r\n\r\n\r\nfunction getLegendaryPrefix(wSpec) {\r\n    let legendaryPrefix = \"\";\r\n    for (let i = 0; i < wSpec.legendary.length; i++) {\r\n        const curLegPrefix = getLegendaryNameFromSpec(wSpec, i + 1);\r\n        if (curLegPrefix !== \"\") {\r\n            legendaryPrefix += (curLegPrefix + \" \");\r\n        }\r\n    }\r\n    return legendaryPrefix;\r\n}\r\n\r\nconst ModalNewItem = memo(function ModalNewItem(props) {\r\n    console.log(\"ModalNewItem\");\r\n    const [legPrefixCheck, setLegPrefixCheck] = useState(false);\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n    let legendaryPrefix = \"\";\r\n    if (legPrefixCheck) {\r\n        legendaryPrefix = getLegendaryPrefix(props.wSpec);\r\n    }\r\n    const limit = props.items.map.size > 1000;\r\n    function createItem(e, name) {\r\n        if (name === '' || name === null) {\r\n            name = \"Weapon\";\r\n        }\r\n        const item = buildItem(props.id, name, props.player, props.playerStats, props.creatures, props.boostDamage, props.wSpec, props.extraDamage, props.additionalDamages, props.resultDamage, props.stuffBoost)\r\n        props.items.map.set(props.id, item);\r\n        const nextId = props.id + 1;\r\n        const newItems = {\r\n            map: props.items.map,\r\n        }\r\n        props.setItems(newItems);\r\n        props.setNextId(nextId);\r\n        props.setModalNewItemShow(false);\r\n    };\r\n    function onClick(e) {\r\n        createItem(e, document.getElementById(\"wName\").value);\r\n    };\r\n    function onHide(e) {\r\n        props.setModalNewItemShow(false);\r\n    };\r\n    function onPrefixChange(e) {\r\n        const useLegPrefix = e.target.checked\r\n        setLegPrefixCheck(useLegPrefix);\r\n        const element = document.getElementById(\"wName\");\r\n        let legendaryPrefix = getLegendaryPrefix(props.wSpec);\r\n        if (useLegPrefix) {\r\n            let name = legendaryPrefix + element.value;\r\n            name = name.slice(0, element.maxLength);\r\n            element.value = name;\r\n        } else if (legendaryPrefix !== \"\" && element.value.startsWith(legendaryPrefix)) {\r\n            let name = element.value.slice(legendaryPrefix.length);\r\n            element.value = name;\r\n        }\r\n    };\r\n    const message = (limit) ? \"Limit has been achieved\" : \"Weapon name\";\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    New Weapon\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap justify-content-center\">\r\n                    <InputGroup.Text style={{ minWidth: '9rem' }}>{message}</InputGroup.Text>\r\n                    {getInputText(limit, legendaryPrefix + props.wSpec.defaultName)}\r\n                </InputGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <div style={{width: '100%'}} className=\"d-flex\">\r\n                    <div style={{width: '50%'}} className=\"center-text\">\r\n                        <UCheckbox onChange={onPrefixChange} checked={legPrefixCheck}>Legendary Prefix</UCheckbox>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end\" style={{width: '50%'}}>\r\n                        <Button disabled={limit} onClick={onClick}>Add</Button>\r\n                    </div>\r\n                </div>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nfunction getInputText(limit, weaponName) {\r\n    if (limit) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <Form.Control id='wName' className='w-auto' defaultValue={weaponName} maxLength=\"70\" />\r\n    );\r\n}\r\n\r\nexport default ModalNewItem;","export function getTextFileRef(content) {\r\n    return URL.createObjectURL(new Blob([content], {type: 'text/plain'}));\r\n}\r\n\r\nexport function getFileRef(content) {\r\n    return URL.createObjectURL(new Blob([content], {type: 'application/json'}));\r\n}\r\n\r\nexport function getJsonFileRef(content) {\r\n    return getFileRef(JSON.stringify([...content]));\r\n}\r\n","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {getJsonFileRef} from '../helpers/Files';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalDownloadSnapshots = memo (function ModalDownloadSnapshots(props) {\r\n    console.log(\"ModalDownloadSnapshots\");\r\n    if (!props.modalDownloadSnapshots) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalDownloadSnapshots(false);\r\n    }\r\n    function downloadName() {\r\n        let name = \"snapshots\";\r\n        try {\r\n            name = document.getElementById(\"dName\").value;\r\n        } catch {\r\n            return name;\r\n        }\r\n        return (name === null || name === \"\") ? \"snapshots\" : name;\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.modalDownloadSnapshots}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Download Snapshots\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <InputGroup.Text style={{ width: '9rem' }}>File name</InputGroup.Text>\r\n                    <Form.Control id='dName' className='w-auto' defaultValue={\"snapshots\"} maxLength=\"70\" />\r\n                </InputGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <a href={getJsonFileRef(props.items.map.values())} download={downloadName()}>\r\n                <Button onClick={onHide}>Download</Button>\r\n            </a>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDownloadSnapshots;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {getJsonFileRef} from '../helpers/Files';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalDownloadSnapshot = memo (function ModalDownloadSnapshot(props) {\r\n    if (props.modalDownloadSnapshot.id < 0 || !props.modalDownloadSnapshot.show) {\r\n        return (<></>);\r\n    }\r\n    console.log(\"ModalDownloadSnapshot\");\r\n    function onHide(e) {\r\n        props.setModalDownloadSnapshot({id: -1, name: 'none', show: false});\r\n    }\r\n    function downloadName() {\r\n        const name = props.modalDownloadSnapshot.name;\r\n        return (name === null || name === \"\") ? \"snapshot.json\" : name + \".json\";\r\n    }\r\n    const item = [props.items.map.get(props.modalDownloadSnapshot.id)];\r\n    const fileName = props.modalDownloadSnapshot.name;\r\n    return (\r\n        <Modal\r\n            show = {props.modalDownloadSnapshot.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Download Weapon\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <InputGroup.Text style={{ width: '9rem' }}>File name</InputGroup.Text>\r\n                    <Form.Control id='snapshotName' className='w-auto' defaultValue={fileName} maxLength=\"70\" />\r\n                </InputGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <a href={getJsonFileRef(item)} download={downloadName()}>\r\n                <Button onClick={onHide}>Download</Button>\r\n            </a>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDownloadSnapshot;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { memo } from 'react';\r\nimport { truncateLongWords } from '../helpers/Input';\r\n\r\n\r\nconst ModalDeleteItem = memo(function ModalDeleteItem(props) {\r\n    console.log(\"ModalDeleteItem\");\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalDeleteItem({id: -1, name: 'none', show:  false});\r\n    }\r\n    function removeItem(e) {\r\n        try {\r\n            props.items.map.delete(parseInt(e.target.id));\r\n            const newItems = {\r\n                map: props.items.map,\r\n            }\r\n            props.setItems(newItems);\r\n        } catch {}\r\n        props.setModalDeleteItem({id: \"-1\", name: \"none\", show: false});\r\n    }\r\n    const name = truncateLongWords(props.name, 25);\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Delete Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to delete '{name}'?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={removeItem} id={props.itemId}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDeleteItem;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalDeleteAll = memo(function ModalDeleteAll(props) {\r\n    console.log(\"ModalDeleteAll\");\r\n    if (!props.modalDeleteAll) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalDeleteAll(false);\r\n    }\r\n\r\n    function removeAll(e) {\r\n        try {\r\n            props.items.map.clear();\r\n            const newItems = {\r\n                map: props.items.map,\r\n            }\r\n            props.setItems(newItems);\r\n            props.setNextId(0);\r\n        } catch {}\r\n        onHide();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show = {props.modalDeleteAll}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Delete All Snapshots\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to delete all snapshots?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={removeAll}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDeleteAll;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction modalView(loading, name, applyItem, onHide, itemId) {\r\n    if (loading) {\r\n        return (\r\n            <Modal.Body>\r\n                <b>Loading...</b>\r\n            </Modal.Body>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Apply Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to apply '{name}'? Current settings will be replaced.\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={applyItem} id={itemId}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function ModalApplyItem(props) {\r\n    console.log(\"ModalApplyItem\");\r\n    const [loading, setLoading] = useState(false);\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        setLoading(false);\r\n        props.setModalApplyItem({id: -1, name: 'none', show: false});\r\n    }\r\n    function applyItem(e) {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const item = props.items.map.get(parseInt(e.target.id));\r\n            const copy = JSON.parse(JSON.stringify(item));\r\n            props.applySnapshot(copy.boostDamage, copy.wSpec, copy.extraDamage, copy.additionalDamages, copy.creatures, copy.player, copy.playerStats, copy.stuff);\r\n            onHide(null);\r\n        }, 100);\r\n    }\r\n\r\n    const name = truncateLongWords(props.name, 25);\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            centered>\r\n           {modalView(loading, name, applyItem, onHide, props.itemId)}\r\n        </Modal>\r\n    );\r\n}","export function readSnapshotsFromInput(inputId, setIdCallback, setItemsCallback, oldItems=null, add=true, maxItems=1000) {\r\n\r\n    const file = document.getElementById(inputId).files[0];\r\n    readSnapshotsFrom(file, setIdCallback, setItemsCallback, oldItems, add, maxItems);\r\n};\r\n\r\nexport function readSnapshotsFromResources(file, setIdCallback, setItemsCallback, maxItems=1000) {\r\n    readSnapshotsJson(file, setIdCallback, setItemsCallback, null, true, maxItems=1000);\r\n};\r\n\r\nfunction readSnapshotsJson(items, setIdCallback, setItemsCallback, oldItems, add=true, maxItems=1000) {\r\n    let map = new Map();\r\n    let k = 0;\r\n    if (oldItems && add) {\r\n        for (const [, value] of oldItems.entries()) {\r\n            value.id = k;\r\n            map.set(k++, value);\r\n        }\r\n    }\r\n    let newMaxItems = maxItems - map.size;\r\n    newMaxItems = (newMaxItems < 0) ? 0 : newMaxItems;\r\n    const length = items.length > newMaxItems ? newMaxItems : items.length;\r\n    for (let i = 0; i < length; i++) {\r\n        items[i].id = i + k;\r\n        map.set(i + k, items[i]);\r\n    }\r\n    const newItems = {\r\n        map: map,\r\n    }\r\n    setIdCallback(map.size);\r\n    setItemsCallback(newItems);\r\n}\r\n\r\nfunction readSnapshotsFrom(file, setIdCallback, setItemsCallback, oldItems, add, maxItems=1000) {\r\n    try {\r\n        const reader = new FileReader();\r\n        reader.onload = e => {\r\n            let items = JSON.parse(e.target.result);\r\n            readSnapshotsJson(items, setIdCallback, setItemsCallback, oldItems, add, maxItems);\r\n        };\r\n        reader.readAsText(file);\r\n    } catch {\r\n        // Ok\r\n    }\r\n};","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { readSnapshotsFromInput } from '../helpers/FetchSnapshots';\r\nimport { memo, useState } from 'react';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\n\r\n\r\nconst radio = {Add: '0', Replace: '1'};\r\n\r\nconst ModalUploadSnapshots = memo(function ModalUploadSnapshots(props) {\r\n    console.log(\"ModalUploadSnapshots\")\r\n    const [addOld, setAddOld] = useState('0');\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide() {\r\n        props.setModalUploadSnapshots(false)\r\n    }\r\n    function readFile() {\r\n        const add = (addOld === '0');\r\n        readSnapshotsFromInput(\"snapshotsFile\", props.setNextId, props.setItems, props.items.map, add);\r\n        props.setModalUploadSnapshots(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Load Snapshots\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"formFile\" className=\"form-label\">\r\n                        <p className=\"mb-1\"> Choose a json file with snapshots.</p>\r\n                    </label>\r\n                    <input id=\"snapshotsFile\" className=\"form-control\" type=\"file\" readOnly accept=\".json\" />\r\n                    <BSRadio className=\"mt-4 d-flex justify-content-center\" pairs={radio} selectedValue={addOld} setSelectedValue={setAddOld} />\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={readFile} id={props.itemId}>Yes</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalUploadSnapshots;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalRenameItem = memo(function ModalRenameItem(props) {\r\n    console.log(\"ModalRenameItem\");\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n\r\n    function setItem(item) {\r\n        props.items.map.set(item.id, item);\r\n        const newItems = {\r\n            map: props.items.map,\r\n        }\r\n        props.setItems(newItems);\r\n    }\r\n\r\n    function onRename() {\r\n        let name = \"Weapon\";\r\n        try {\r\n            name = document.getElementById(\"weaponNameInput\").value;\r\n            name = (name === null || name === '') ? \"Weapon\" : name;\r\n            let item = props.items.map.get(props.id);\r\n            item.name = name;\r\n            item.wSpec.weaponName = name;\r\n            setItem(item);\r\n            onHide();\r\n        } catch {\r\n            // Ok (sometimes can happen on mobile devices if virtual keyboard is covering a dialog but somehow you managed\r\n            // tap Ok button).\r\n        }\r\n    };\r\n\r\n    let name = \"Weapon\";\r\n    try {\r\n        name = props.items.map.get(props.id).name;\r\n    } catch {\r\n        // Ok\r\n    }\r\n    function onHide(e) {\r\n        props.setModalRenameItem({id: -1, show: false});\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Rename Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InputGroup className=\"pb-2 flex-nowrap\">\r\n                    <InputGroup.Text>New name:</InputGroup.Text>\r\n                    <Form.Control id=\"weaponNameInput\" defaultValue={name} maxLength=\"70\" />\r\n                </InputGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={onRename}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalRenameItem;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { buildItem } from '../helpers/Item';\r\nimport { memo } from 'react';\r\nimport { truncateLongWords } from '../helpers/Input';\r\n\r\n\r\nconst ModalUpdateItem = memo (function ModalUpdateItem(props) {\r\n    console.log(\"ModalUpdateItem\");\r\n    if (!props.modalUpdateItem.show) {\r\n        return (<></>);\r\n    }\r\n    function onUpdateItem() {\r\n        const oldItem = props.items.map.get(props.modalUpdateItem.id);\r\n        const item = buildItem(oldItem.id, oldItem.name, props.player, props.playerStats, props.creatures, props.boostDamage, props.wSpec, props.extraDamage, props.additionalDamages, props.resultDamage, props.stuffBoost);\r\n        setItem(item);\r\n        props.setModalUpdateItem({id: -1, show: false});\r\n    }\r\n\r\n    function setItem(item) {\r\n        props.items.map.set(item.id, item);\r\n        const newItems = {\r\n            map: props.items.map,\r\n        }\r\n        props.setItems(newItems);\r\n    }\r\n    const name = truncateLongWords(props.name, 25);\r\n    const onHide = () => props.setModalUpdateItem({id: -1, show: false});\r\n    return (\r\n        <Modal\r\n            show = {props.modalUpdateItem.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Update Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to update '{name}'?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={onUpdateItem}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalUpdateItem;","import {UploadIcon, DownloadIcon} from '../icons/Icons';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst SnapshotsHeader = memo(function SnapshotsHeader({items, setModalDownloadSnapshots, setModalUploadSnapshots, uniqueCreatureNames, sortCreatureName, setSortCreatureName}) {\r\n    console.log(\"SnapshotsHeader\");\r\n    function downloadButton() {\r\n        return (\r\n            <Button onClick={()=>setModalDownloadSnapshots(true)}>\r\n                <UploadIcon />\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    function uploadButton(className) {\r\n        return (\r\n            <Button className={className} onClick={()=>setModalUploadSnapshots(true)}>\r\n                <DownloadIcon />\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    if (items.map.size === 0) {\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <div className='d-flex justify-content-end'>\r\n                        {uploadButton(\"ms-3\")}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else if (items.map.size === 1) {\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <div className='d-flex justify-content-end'>\r\n                        {downloadButton()}\r\n                        {uploadButton(\"ms-3\")}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    function onSelect(e) {\r\n        setSortCreatureName({name: e});\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"row d-flex justify-content-center mt-1 mb-3\">\r\n                <Col className=\"col\">\r\n                    <span>\r\n                        {downloadButton()}\r\n                        {uploadButton(\"ms-3\")}\r\n                    </span>\r\n                </Col>\r\n            </div>\r\n            <div className=\"row d-flex justify-content-center mb-1\">\r\n                <Col className=\"col\">\r\n                    <div>\r\n                        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelect} names={uniqueCreatureNames} title={<strong>{sortCreatureName.name}</strong>} />\r\n                    </div>\r\n                </Col>\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default SnapshotsHeader;","import { memo } from 'react';\r\nimport EmblemCalcRowView from '../templates/calc/view/EmblemCalcRowView';\r\nimport getPerkImage from '../perkCardBoosts/PerkImageProvider';\r\nimport ConsumablesBuilder from '../boostStuff/ConsumablesBuilder';\r\n\r\n\r\nconst BoostRowView = memo(function BoostRowView(props) {\r\n    const imNames = getUsedPerks(props.item);\r\n    return (\r\n        <>\r\n            <EmblemCalcRowView imNames={imNames} imageProvider={getPerkImage} iconSize='2.0rem' imageSize='1.864rem' borderRadius='5px' />\r\n            <EmblemCalcRowView imNames={props.item.stuff} imageProvider={ConsumablesBuilder.getImagePathById} iconSize='2.0rem' imageSize='1.864rem' />\r\n        </>\r\n    );\r\n});\r\n\r\nfunction getUsedPerks(item) {\r\n    const result = [];\r\n    for (const name in item.boostDamage) {\r\n        const perk = item.boostDamage[name];\r\n        if (perk.is_used) {\r\n            result.push(perk.im_name);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default BoostRowView;","import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Tag } from 'antd';\r\nimport { millisToTime } from '../helpers/Time';\r\nimport { TrashIcon, UpdateIcon, PlayIcon, RenameIcon, UploadIcon } from '../icons/Icons';\r\nimport '../css/style.css';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { getImage } from '../helpers/WTypeDropdown';\r\nimport { ammo, addText } from '../helpers/Emoji';\r\nimport { getImageElement } from '../helpers/WeaponImages';\r\nimport { getLegendaryNameFromSpec } from '../helpers/LegendaryProvider';\r\nimport { memo, useState, useEffect } from 'react';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport BoostRowView from './BoostRowView';\r\nimport { getFireRateLabel } from '../main/SummaryView';\r\n\r\n\r\nfunction row(name1, value1, colorName=\"default\", tagColor=\"default\", tagName=true) {\r\n    const line = (tagName) ? <Tag bordered={false} color={colorName}>{name1}</Tag> : name1;\r\n    return (\r\n       <Row className=\"flex-nowrap\">\r\n          <Col className=\"text-start text-nowrap\">\r\n            <strong>\r\n                 {line}\r\n            </strong>\r\n          </Col>\r\n\r\n          <Col className=\"text-end text-nowrap pb-1\">\r\n              <strong >\r\n                <Tag color={tagColor}>{value1}</Tag>\r\n              </strong>\r\n          </Col>\r\n       </Row>\r\n    );\r\n}\r\n\r\nfunction bodyContent(isOpen, index, size, item, setModalDownloadSnapshot, setModalUpdateItem, setModalRenameItem, setModalDeleteItem, setModalApplyItem) {\r\n    if (isOpen) {\r\n        const critUsed = (item.extraDamage.useCrit) ? \"(Yes 1/\" + item.extraDamage.critFreq + \")\" : \"(No)\";\r\n        const sneakUsed = (item.extraDamage.useSneak) ? \"(Yes)\" : \"(No)\";\r\n        const headUsed = (item.extraDamage.useHead) ? \"(Yes \" + item.extraDamage.headFreq + \"%)\" : \"(No)\";\r\n        const leg1Name = getLegendaryNameFromSpec(item.wSpec, 1);\r\n        const leg2Name = getLegendaryNameFromSpec(item.wSpec, 2);\r\n        const leg3Name = getLegendaryNameFromSpec(item.wSpec, 3);\r\n        const leg4Name = getLegendaryNameFromSpec(item.wSpec, 4);\r\n        const leg5Name = getLegendaryNameFromSpec(item.wSpec, 5);\r\n        let strength = (item.wSpec.strengthBoost > 0) ? item.playerStats.strength.value : \"-\";\r\n        const mods = item.wSpec.mods;\r\n        const modView = [];\r\n        for (let i = 0; i < mods.length; i++) {\r\n            const mod = mods[i];\r\n            modView.push(\r\n                <div key={mod.name} style={{width: 'auto'}} className=\"mod-item-shadow m-1 ps-1 pe-1\"><div style={{width: 'auto', textWrap: false, fontWeight: 'bold', textAlign: 'center', color: '#555555', fontSize: '0.7rem', overflow: 'hidden', textOverflow: 'ellipsis'}}>{mod.name}</div></div>\r\n            );\r\n        }\r\n        const creature1 = item.creatures.creature1;\r\n        const creature2 = item.creatures.creature2;\r\n        const creature3 = item.creatures.creature3;\r\n        const creature4 = item.creatures.creature4;\r\n        const fireRateLabel = getFireRateLabel(item.resultDamage.weaponType);\r\n        return (\r\n            <>\r\n                <Card.Body className=\"p-1 mt-1\">\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-center mb-1\">\r\n                            <Toast style={{ width: '34rem'}} show={true} className=\"bg-snapshot\">\r\n                                <Toast.Body className=\"m-0 p-2\">\r\n                                <Row>\r\n                                    <Col>\r\n                                        {row(\"💥 Damage:\", item.resultDamage.tDamage.toFixed(1) + \" x \" + item.resultDamage.shotSize)}\r\n                                        {row(\"☠️ Crit:\", critUsed + \" +\" + item.resultDamage.displayedCrit.toFixed(1) + \"%\")}\r\n                                        {row(\"🐍 Sneak:\", sneakUsed + \" +\" + item.resultDamage.displayedSneak.toFixed(1) + \"%\")}\r\n                                        {row(\"💣 Explosive:\", item.resultDamage.explosive.toFixed(1) + \"%\")}\r\n                                        {row(\"🤕 Head Shot:\", headUsed)}\r\n                                        {row(addText(ammo, '0.7rem', '0.27rem', \"Ammo:\"), item.resultDamage.ammoCapacity)}\r\n                                        {row(fireRateLabel, item.resultDamage.fireRate.toFixed(1))}\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {row(\"⌛ Reload:\", item.resultDamage.reloadTime.toFixed(2) + \" s\")}\r\n                                        {row(\"🎯 Accuracy:\", \"100%\")}\r\n                                        {row(\"⭐\", leg1Name, \"gold\")}\r\n                                        {row(\"⭐⭐\", leg2Name, \"gold\")}\r\n                                        {row(\"⭐⭐⭐\", leg3Name, \"gold\")}\r\n                                        {row(\"⭐⭐⭐⭐\", leg4Name, \"gold\")}\r\n                                        {row(\"⭐⭐⭐⭐⭐\", leg5Name, \"gold\")}\r\n                                    </Col>\r\n                                </Row>\r\n                                </Toast.Body>\r\n                            </Toast>\r\n                        </Col>\r\n                        <Col className=\"d-flex justify-content-center mb-1\">\r\n                            <Toast className=\"bg-snapshot\" style={{ width: '34rem' }} show={true}>\r\n                                <Toast.Body className=\"m-0 p-2\">\r\n                                <Row>\r\n                                    <Col>\r\n                                        {row(\"❤️ Health / 👨‍👩‍👧‍👦 Team:\", item.player.health.value.toFixed(0) + \"% / \" + ((item.player.team) ? \"Yes\" : \"No\"))}\r\n                                        {row(\"💪 Strength:\", strength, \"default\", \"default\")}\r\n                                        {row(creature1.capName + \" (\" + creature1.level + \"Lvl):\", millisToTime(creature1.lifeTime), \"red\", \"red\")}\r\n                                        {row(creature2.capName + \" (\" + creature2.level + \"Lvl):\", millisToTime(creature2.lifeTime), \"purple\", \"purple\")}\r\n                                        {row(creature3.capName + \" (\" + creature3.level + \"Lvl):\", millisToTime(creature3.lifeTime), \"pink\", \"pink\")}\r\n                                        {row(creature4.capName + \" (\" + creature4.level + \"Lvl):\", millisToTime(creature4.lifeTime), \"blue\", \"blue\")}\r\n                                        {row(\"Average:\", millisToTime(item.averageTime), \"default\", \"default\")}\r\n                                    </Col>\r\n                                </Row>\r\n                                </Toast.Body>\r\n                            </Toast>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row className=\"d-flex justify-content-center m-1\">\r\n                        {modView}\r\n                     </Row>\r\n                     <BoostRowView item={item} />\r\n                </Card.Body>\r\n                <div className='card-footer'>\r\n                    <Row>\r\n                        <div className=\"col d-flex justify-content-start\">\r\n                            <Badge className=\"mt-auto mb-auto\" pill='true' text='white' bg=\"secondary\">{index} / {size}</Badge>\r\n                            <Button variant=\"white\" className=\"m-auto ms-2 p-auto\" size='sm'>{getImage(item.wSpec.type)}</Button>\r\n                        </div>\r\n                        <div className=\"col d-flex justify-content-end\">\r\n                            <Button onClick={(e) => setModalDownloadSnapshot({id: item.id, name: item.name, show: true})} variant=\"outline-primary\" className=\"ms-1 me-2 pb-auto\" size=\"sm\">\r\n                                <UploadIcon />\r\n                            </Button>\r\n                            <Button onClick={(e) => setModalUpdateItem({id: item.id, name: item.name, show: true})} variant=\"outline-primary\" className=\"ms-1 me-2 pb-auto\" size=\"sm\">\r\n                                <UpdateIcon />\r\n                            </Button>\r\n                            <Button className=\"ms-1 me-2 pb-auto\" size=\"sm\" id={item.id} name={item.name} variant=\"outline-primary\" onClick={(e) => setModalApplyItem({id: e.currentTarget.id, name: e.currentTarget.name, show: true})}>\r\n                                <PlayIcon />\r\n                            </Button>\r\n                            <Button className=\"ms-1 pb-auto\" size=\"sm\" id={item.id} name={item.name} variant=\"outline-danger\" onClick={(e) => setModalDeleteItem({id: e.currentTarget.id, name: e.currentTarget.name, show: true})}>\r\n                                <TrashIcon />\r\n                            </Button>\r\n                        </div>\r\n                    </Row>\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nfunction headerBody(item, setModalRenameItem, isItemOpen, setIsItemOpen) {\r\n    let wName = item.wSpec.iconName;\r\n    if (!wName) {\r\n        wName = \"default\";\r\n    }\r\n    function onHeaderClick(e) {\r\n        setIsItemOpen(!isItemOpen);\r\n    }\r\n    function onRenameClick(e) {\r\n        setModalRenameItem({id: item.id, show: true});\r\n        e.stopPropagation();\r\n    }\r\n    const displayedWeaponName = truncateLongWords(item.name, 25);\r\n    return (\r\n        <Container className='ps-1 pe-1' style={{cursor: \"pointer\"}} onClick={onHeaderClick}>\r\n            <div className=\"row-12 d-flex\">\r\n                <div className='col-2 p-0 ps-2 d-flex m-auto justify-content-start'>\r\n                        {getImageElement(wName, '3rem')}\r\n                </div>\r\n                <div className=\"col-8 pt-1 pb-1 d-flex justify-content-center\">\r\n                    <h6 className='m-auto'>{displayedWeaponName}</h6>\r\n                </div>\r\n                <div className=\"col-2 d-flex pe-2 justify-content-end\">\r\n                    <div className=\"m-auto me-1\">\r\n                        <Button className=\"pb-1\" id={item.id} variant=\"outline-secondary\" onClick={onRenameClick} size=\"sm\">\r\n                            <RenameIcon />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nfunction header(item, setModalRenameItem, isOpen, setIsItemOpen) {\r\n    if (isOpen) {\r\n        return (\r\n            <div className='m-0 p-0 card-header'>\r\n                {headerBody(item, setModalRenameItem, isOpen, setIsItemOpen)}\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            headerBody(item, setModalRenameItem, isOpen, setIsItemOpen)\r\n        );\r\n    }\r\n}\r\n\r\nconst SnapshotItem = memo(function SnapshotItem({index, isOpen, size, item, setModalDownloadSnapshot, setModalUpdateItem, setModalRenameItem, setModalDeleteItem, setModalApplyItem}) {\r\n    console.log(\"SnapshotItem\");\r\n    const [isItemOpen, setIsItemOpen] = useState(isOpen);\r\n    useEffect(() => {\r\n        setIsItemOpen(isOpen);\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <Card className=\"mb-2\">\r\n            {header(item, setModalRenameItem, isItemOpen, setIsItemOpen)}\r\n            {bodyContent(isItemOpen, index, size, item, setModalDownloadSnapshot, setModalUpdateItem, setModalRenameItem, setModalDeleteItem, setModalApplyItem)}\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default SnapshotItem;","import { memo } from 'react';\r\nimport SnapshotItem from './SnapshotItem'\r\nimport { Pagination } from 'antd';\r\nimport { getCreatureByName } from '../entities/ECreatures';\r\n\r\n\r\nfunction compareCreatureGeneral(item1, item2, name) {\r\n    if (item1 == null || item2 == null) {\r\n        return 0;\r\n    }\r\n    const time1 = parseInt(getCreatureByName(item1.creatures, name).lifeTime);\r\n    const time2 = parseInt(getCreatureByName(item2.creatures, name).lifeTime);\r\n    if (time1 < time2) {\r\n        return -1;\r\n    } else if (time2 < time1) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction compareAverage(item1, item2) {\r\n    if (item1 == null || item2 == null) {\r\n        return 0;\r\n    }\r\n    const time1 = parseInt(item1.averageTime);\r\n    const time2 = parseInt(item2.averageTime);\r\n    if (time1 < time2) {\r\n        return -1;\r\n    } else if (time2 < time1) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst SnapshotItems = memo(function SnapshotItems({onPageChanged, startIndex, pageSize, page, items, isOpen, sortCreatureName, filterName, weaponType, setModalDownloadSnapshot, setModalUpdateItem, setModalRenameItem, setModalDeleteItem, setModalApplyItem}) {\r\n    console.log(\"SnapshotItems\");\r\n    function compareCreature(item1, item2) {\r\n        return compareCreatureGeneral(item1, item2, sortCreatureName.name);\r\n    }\r\n    const sortAlg = (!sortCreatureName || sortCreatureName.name === \"average\") ? compareAverage : compareCreature;\r\n    let index = 1;\r\n    const filterByName = (item) => {\r\n        if (filterName === \"\" || filterName === null) {\r\n            return true;\r\n        }\r\n        return item.name.includes(filterName);\r\n    };\r\n    const filterByType = (item) => {\r\n        if (weaponType === \"All\") {\r\n            return true;\r\n        }\r\n        return weaponType === item.wSpec.type;\r\n    };\r\n    const filterByCreature = (item) => {\r\n        if (!sortCreatureName || sortCreatureName.name === \"average\") {\r\n            return true;\r\n        }\r\n        return getCreatureByName(item.creatures, sortCreatureName.name) !== null;\r\n    }\r\n    const snapshots = [...items.map.values()].filter(filterByCreature).sort(sortAlg).filter(filterByType).filter(filterByName);\r\n    const size = snapshots.length;\r\n    function result(item) {\r\n        return (\r\n            <SnapshotItem key={item.id} title={item.name} index={index++} isOpen={isOpen} size={size} item={item} setModalDownloadSnapshot={setModalDownloadSnapshot} setModalUpdateItem={setModalUpdateItem} setModalRenameItem={setModalRenameItem} setModalDeleteItem={setModalDeleteItem} setModalApplyItem={setModalApplyItem}></SnapshotItem>\r\n        );\r\n    }\r\n    const values = snapshots.map((item) => (result(item)));\r\n    let paginated = [];\r\n    for (let i = startIndex; i < startIndex + pageSize; i++) {\r\n        const value = values[i];\r\n        if (!value) {\r\n            break;\r\n        }\r\n        paginated.push(values[i]);\r\n    }\r\n    return getPagination(page, pageSize, onPageChanged, paginated, values.length);\r\n});\r\n\r\nfunction getPagination(page, pageSize, onPageChanged, paginated, total) {\r\n    if (paginated.length > 0) {\r\n        return (\r\n            <>\r\n                {paginated}\r\n                <div className=\"p-1\" />\r\n                <Pagination align=\"center\" current={page} defaultPageSize={pageSize} onChange={onPageChanged} total={total} showSizeChanger={false} />\r\n            </>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\nexport default SnapshotItems;","import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ModalNewItem from '../snapshot/ModalNewItem';\r\nimport ModalDownloadSnapshots from '../snapshot/ModalDownloadSnapshots';\r\nimport ModalDownloadSnapshot from '../snapshot/ModalDownloadSnapshot';\r\nimport ModalDeleteItem from '../snapshot/ModalDeleteItem';\r\nimport ModalDeleteAll from '../snapshot/ModalDeleteAll';\r\nimport ModalApplyItem from '../snapshot/ModalApplyItem';\r\nimport ModalUploadSnapshots from '../snapshot/ModalUploadSnapshots';\r\nimport ModalRenameItem from '../snapshot/ModalRenameItem';\r\nimport ModalUpdateItem from '../snapshot/ModalUpdateItem';\r\nimport Form from 'react-bootstrap/Form';\r\nimport snapshotsFile from '../resources/snapshots.json';\r\nimport { readSnapshotsFromResources } from '../helpers/FetchSnapshots';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport SnapshotsHeader from '../snapshot/SnapshotsHeader';\r\nimport SnapshotItems from '../snapshot/SnapshotItems';\r\nimport '../css/style.css'\r\nimport { memo, useEffect, useState } from 'react';\r\nimport WTypeDropdown from '../helpers/WTypeDropdown';\r\nimport { TrashIcon, CollapseIcon, ExpandIcon } from '../icons/Icons';\r\nimport { FloatButton } from 'antd';\r\n\r\n\r\nlet id = 0;\r\n\r\nfunction setNextId(nextId) {\r\n    id = nextId;\r\n}\r\n\r\nconst Snapshots = memo(function Snapshots(props) {\r\n\r\n    console.log(\"Snapshots\");\r\n\r\n    const player = props.playerRef.current;\r\n\r\n    const playerStats = props.playerStatsRef.current;\r\n\r\n    const stuffBoost = props.stuffBoostRef.current;\r\n\r\n    const boostDamage = props.boostDamageRef.current;\r\n\r\n    const wSpec = props.wSpecRef.current;\r\n\r\n    const extraDamage = props.extraDamageRef.current;\r\n\r\n    const additionalDamages = props.additionalDamagesRef.current;\r\n\r\n    const creatures = props.creaturesRef.current;\r\n\r\n    const resultDamage = props.resultDamageRef.current;\r\n\r\n    const applySnapshot = props.applySnapshotRef.current;\r\n\r\n    const [items, setItems] = useState({map: new Map()});\r\n\r\n    const [modalNewItemShow, setModalNewItemShow] = useState(false);\r\n\r\n    const [modalDeleteAll, setModalDeleteAll] = useState(false);\r\n\r\n    const [modalDownloadSnapshots, setModalDownloadSnapshots] = useState(false);\r\n\r\n    const [modalDownloadSnapshot, setModalDownloadSnapshot] = useState({id: -1, name: 'none', show: false});\r\n\r\n    const [modalRenameItem, setModalRenameItem] = useState({id: -1, show: false});\r\n\r\n    const [modalUpdateItem, setModalUpdateItem] = useState({id: -1, name: '', show: false});\r\n\r\n    const [filterName, setFilterName] = useState(\"\");\r\n\r\n    const [modalUploadSnapshots, setModalUploadSnapshots] = useState(false);\r\n\r\n    const [modalDeleteItem, setModalDeleteItem] = useState({id: \"-1\", name: 'none', show: false});\r\n\r\n    const [modalApplyItem, setModalApplyItem] = useState({id: \"-1\", name: 'none', show: false});\r\n\r\n    const [weaponType, setWeaponType] = useState(\"All\");\r\n\r\n    const [isOpen, setIsOpen] = useState(true);\r\n\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [pageSize, setPageSize] = useState(10);\r\n\r\n    const [startIndex, setStartIndex] = useState(0);\r\n\r\n    const [sortCreatureName, setSortCreatureName] = useState({name: \"average\"});\r\n\r\n    useEffect(() => {\r\n        readSnapshotsFromResources(snapshotsFile, setNextId, setItems);\r\n    }, []);\r\n\r\n    function buildUniqueCreatureNames() {\r\n        const defaultItems = [\"average\"];\r\n        const uniqueNames = new Set(defaultItems);\r\n        if (!items || !items.map || items.map.size === 0) {\r\n            return defaultItems;\r\n        }\r\n        for (const [, item] of items.map) {\r\n            const creatures = item.creatures;\r\n            for (const fieldName in creatures) {\r\n                const creature = creatures[fieldName];\r\n                uniqueNames.add(creature.name);\r\n            }\r\n        }\r\n        return [...uniqueNames];\r\n    }\r\n\r\n    const uniqueCreatureNames = buildUniqueCreatureNames();\r\n\r\n    // Set silently, no need to re-render\r\n    if (!uniqueCreatureNames.includes(sortCreatureName.name)) {\r\n        sortCreatureName.name = \"average\";\r\n    }\r\n\r\n    function trashAllButton() {\r\n        if (items === null || items.map === null || items.map.size < 2) {\r\n            return (<></>);\r\n        }\r\n        return (\r\n            <Button variant=\"outline-danger\" className=\"mb-2 me-0\" onClick={() => setModalDeleteAll(true)}>\r\n                <TrashIcon/> All\r\n            </Button>\r\n        );\r\n    };\r\n    const onClickOpen = () => setIsOpen(!isOpen);\r\n\r\n    function expandButton() {\r\n        if (items === null || items.map === null || items.map.size === 0) {\r\n            return (<></>);\r\n        }\r\n        if (isOpen) {\r\n            return (\r\n                <Button variant=\"outline-primary\" className=\"ms-0 mb-2\" onClick={onClickOpen}>\r\n                    <><CollapseIcon /> All</>\r\n                </Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <Button variant=\"outline-primary\" className=\"ms-0 mb-2\" onClick={onClickOpen}>\r\n                    <><ExpandIcon /> All</>\r\n                </Button>\r\n            );\r\n        }\r\n    };\r\n    function search() {\r\n        if (items === null || items.map === null || items.map.size < 2) {\r\n            return (<></>);\r\n        }\r\n        return (\r\n            <InputGroup className=\"pb-2 flex-nowrap\">\r\n                <WTypeDropdown weaponType={weaponType} setWeaponType={setWeaponType}></WTypeDropdown>\r\n                <Form.Control maxLength=\"70\" onChange={(e) => setFilterName(e.target.value)} />\r\n            </InputGroup>\r\n        );\r\n    }\r\n    function onPageChanged(page, pageSize) {\r\n        setStartIndex(pageSize * (page - 1));\r\n        setPage(page);\r\n        setPageSize(pageSize);\r\n    }\r\n\r\n    // <div className=\"overflow-auto wrapper\"></div>\r\n    return (\r\n        <div className=\"p-0 m-1 mb-2\">\r\n            <Card className=\"text-center mb-0\">\r\n                <div className='card-header'>\r\n                    <SnapshotsHeader items={items} sortCreatureName={sortCreatureName} setSortCreatureName={setSortCreatureName} uniqueCreatureNames={uniqueCreatureNames} setModalDownloadSnapshots={setModalDownloadSnapshots} setModalUploadSnapshots={setModalUploadSnapshots} />\r\n                </div>\r\n                <ModalDownloadSnapshots items={items} modalDownloadSnapshots={modalDownloadSnapshots} setModalDownloadSnapshots={setModalDownloadSnapshots}></ModalDownloadSnapshots>\r\n                <ModalDownloadSnapshot items={items} modalDownloadSnapshot={modalDownloadSnapshot} setModalDownloadSnapshot={setModalDownloadSnapshot}></ModalDownloadSnapshot>\r\n                <ModalUploadSnapshots items={items} setItems={setItems} setNextId={setNextId} show={modalUploadSnapshots} setModalUploadSnapshots={setModalUploadSnapshots}></ModalUploadSnapshots>\r\n                <ModalNewItem player={player} playerStats={playerStats} stuffBoost={stuffBoost} id={id} creatures={creatures} boostDamage={boostDamage} wSpec={wSpec} extraDamage={extraDamage} additionalDamages={additionalDamages} resultDamage={resultDamage} items={items} setItems={setItems} setNextId={setNextId} show={modalNewItemShow} setModalNewItemShow={setModalNewItemShow} />\r\n                <ModalDeleteItem items={items} setItems={setItems} itemId={modalDeleteItem.id} show={modalDeleteItem.show} name={modalDeleteItem.name} setModalDeleteItem={setModalDeleteItem} />\r\n                <ModalDeleteAll items={items} setItems={setItems} modalDeleteAll={modalDeleteAll} setModalDeleteAll={setModalDeleteAll} setNextId={setNextId} />\r\n                <ModalApplyItem applySnapshot={applySnapshot} items={items} itemId={modalApplyItem.id} show={modalApplyItem.show} name={modalApplyItem.name} setModalApplyItem={setModalApplyItem} />\r\n                <ModalRenameItem id={modalRenameItem.id} items={items} setItems={setItems} show={modalRenameItem.show} setModalRenameItem={setModalRenameItem}></ModalRenameItem>\r\n                <ModalUpdateItem player={player} playerStats={playerStats} stuffBoost={stuffBoost} name={modalUpdateItem.name} items={items} setItems={setItems} creatures={creatures} boostDamage={boostDamage} wSpec={wSpec} extraDamage={extraDamage} additionalDamages={additionalDamages} resultDamage={resultDamage} modalUpdateItem={modalUpdateItem} setModalUpdateItem={setModalUpdateItem}></ModalUpdateItem>\r\n                <Card.Body className=\"pt-2 ps-1 pe-1\">\r\n                    {search()}\r\n                    <div className=\"d-flex flex-row mt-1 mb-2\">\r\n                        <div className=\"col w-100 d-flex justify-content-start\">\r\n                            {expandButton()}\r\n                        </div>\r\n                        <div className=\"col w-100\">\r\n                            <Button className=\"mb-2\" onClick={() => setModalNewItemShow(true)}>+</Button>\r\n                        </div>\r\n                        <div className=\"col w-100 d-flex justify-content-end\">\r\n                            {trashAllButton()}\r\n                        </div>\r\n                    </div>\r\n                    <SnapshotItems onPageChanged={onPageChanged} startIndex={startIndex} pageSize={pageSize} page={page} items={items} isOpen={isOpen} sortCreatureName={sortCreatureName} filterName={filterName} weaponType={weaponType} setModalDownloadSnapshot={setModalDownloadSnapshot} setModalUpdateItem={setModalUpdateItem} setModalRenameItem={setModalRenameItem} setModalDeleteItem={setModalDeleteItem} setModalApplyItem={setModalApplyItem} />\r\n                </Card.Body>\r\n            </Card>\r\n            <FloatButton.BackTop style={{ right: 120 }} duration={100} visibilityHeight={2000} />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Snapshots;","import Popover from 'react-bootstrap/Popover';\r\n\r\nexport const mainInfoPopover = (\r\n    <Popover className=\"popover-adjustable\">\r\n        <Popover.Header as=\"h3\">\r\n            <strong>Note</strong>\r\n        </Popover.Header>\r\n        <Popover.Body className=\"popover-body3\">\r\n            <p className=\"m-1\"><b>All data</b> presented in this calculator is parsed directly from .esm files. Be sure that the version of game you are playing corresponds to the version of data presented in this calculator that can be seen via '?' button for every particular data section.</p>\r\n            <p className=\"m-1\"><strong>CRIT</strong> calculates critical damage, <strong>☠️ Fr:</strong> means crit frequency (1 / 2 - every second shot is crit).</p>\r\n            <p className=\"m-1\"><strong>SNEAK</strong> calculates sneak damage (100% hits are sneak).</p>\r\n            <p className=\"m-1\"><strong>HEAD</strong> calculates head shot damage, <strong>🤕 Fr</strong> means head shot frequency (80% - 4 of 5 shots are head shots, kill time for each time can be slightly different due to randomness).</p>\r\n            <p className=\"m-1\"><strong>DPS</strong> (damage per second) is counting reload time also. If you have only 1 slot in a magazine, 1 shot per second, 10 damage per shot and 1 second to reload, then dps = 5 provided that resistances of creature = 0. Charts show <b>DPS</b> provided that <b>Sneak</b> triggers every hit and <b>Crit</b> / <b>HeadShot</b> trigger as specified, accuracy = 100%.</p>\r\n            <p className=\"m-1\"><strong>Creatures.</strong> Real NPC's can have equipment or perks which can affect resistance / damage which not presented in the calculator.</p>\r\n            <p className=\"m-1\"><strong>This calculator</strong> does not represent your real game experience, it has some limitations and it calculates creature's life time\r\n                provided that a creature is standing still under the fire until death. </p>\r\n            <p className=\"m-1\">However when all else being equal you can rely on this numbers to compare efficiency\r\n                of weapons with a pretty good accuracy. Go to GitHub page via burger menu for details.</p>\r\n            <p className=\"m-1\"><b>Usage.</b> At the beginning, go to '<b>Weapons</b>' tab, unfold a weapon's section you like, tap - '<b>Calculate</b>' - '<b>Start</b>' - '<b>Apply</b>', enjoy.</p>\r\n            <p className=\"m-1\"><b>To choose</b> creature and its level, tap on <b className=\"creature-label-text\">Creature</b> label and <b className=\"creature-label-text\">Level</b> in the <b>Creature Details View</b>. </p>\r\n        </Popover.Body>\r\n    </Popover>\r\n);\r\n","import { mainInfoPopover } from './MainInfoPopover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nexport default function MainInfoButton(props) {\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"left\" overlay={mainInfoPopover}>\r\n            <Button variant=\"white-blue-border\" style={{cursor: 'help'}}><small><b>?</b></small></Button>\r\n        </OverlayTrigger>\r\n    );\r\n}","import Card from 'react-bootstrap/Card';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport MainInfoButton from './MainInfoButton';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport { ammo, fireRate, addText } from '../helpers/Emoji';\r\nimport Strings from '../helpers/Strings';\r\nimport Button from 'react-bootstrap/Button';\r\nimport TemplateTools from '../templates/TemplateTools';\r\n\r\n\r\nexport function buildExtraDamageView(extraDamage, setExtraDamage, boostDamageRef, setBoostDamage, info=false) {\r\n    function useCrit(e) {\r\n        extraDamage.useCrit = e.target.checked;\r\n        setExtraDamage({...extraDamage});\r\n    }\r\n\r\n    function useSneak(e) {\r\n        extraDamage.useSneak = e.target.checked;\r\n        const card = boostDamageRef.current.follow_through;\r\n        card.displayed_value = (card.is_used && extraDamage.useSneak) ? card.value : 0.0;\r\n        setExtraDamage({...extraDamage});\r\n        setBoostDamage({...boostDamageRef.current});\r\n    }\r\n\r\n    function useHead(e) {\r\n        extraDamage.useHead = e.target.checked;\r\n        setExtraDamage({...extraDamage});\r\n    }\r\n    const infoButton = (info) ? (<MainInfoButton />) : (<></>);\r\n    return (\r\n        <Stack className='p-0 m-0 justify-content-evenly' direction=\"horizontal\" gap={1}>\r\n            <UCheckbox onChange={useCrit} checked={extraDamage.useCrit}><strong className=\"ps-1\"><small>☠️ CRIT</small></strong></UCheckbox>\r\n            <UCheckbox onChange={useSneak} checked={extraDamage.useSneak}><strong className=\"ps-1\"><small>🐍 SNEAK</small></strong></UCheckbox>\r\n            <UCheckbox onChange={useHead} checked={extraDamage.useHead}><strong className=\"ps-1\"><small>🤕 HEAD</small></strong></UCheckbox>\r\n            {infoButton}\r\n        </Stack>\r\n    );\r\n}\r\n\r\nexport function getFireRateLabel(weaponType) {\r\n    const isRanged = TemplateTools.isWeaponRangedByType(weaponType);\r\n    const fireRateLabel = Strings.getFireRate(weaponType) + \":\";\r\n    return (isRanged) ? (addText(fireRate, '0.7rem', '0.27rem', fireRateLabel)) : ('👊🏼 ' + fireRateLabel);\r\n}\r\n\r\nexport function buildExtraDamageButtons(extraDamage, setExtraDamage) {\r\n    function crf(e) {\r\n        extraDamage.critFreq -= 1;\r\n        if (extraDamage.critFreq === 0) {\r\n            extraDamage.critFreq = 7;\r\n        }\r\n        setExtraDamage({...extraDamage});\r\n    }\r\n    function hef(e) {\r\n        extraDamage.headFreq += 10;\r\n        if (extraDamage.headFreq > 100) {\r\n            extraDamage.headFreq = 20;\r\n        }\r\n        setExtraDamage({...extraDamage});\r\n    }\r\n    return (\r\n        <div className=\"text-muted d-flex justify-content-between\">\r\n            <Button variant=\"blue-white-border\" style={{ width: '6.5rem', height: '2rem'}} className=\"ms-2 me-2\" onClick={crf}><strong>☠️ Fr: 1 / {extraDamage.critFreq}</strong></Button>\r\n            <Button variant=\"blue-white-border\" style={{ width: '6.5rem', height: '2rem'}} className=\"ms-2 me-2\" onClick={hef}><strong>🤕 Fr: {extraDamage.headFreq}%</strong></Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SummaryView(props) {\r\n    let damageText = \"\";\r\n    let fireRateText = \"\";\r\n    let displayedCrit = 0;\r\n    let displayedSneak = 0;\r\n    let reloadTime = 0;\r\n    let ammoCapacity = 0;\r\n    let tDamage = 0;\r\n    let shotSize = 1;\r\n    let fRate = 10;\r\n    if (props.resultDamage && Object.keys(props.resultDamage).length > 0) {\r\n        reloadTime = props.resultDamage.reloadTime;\r\n        displayedCrit = props.resultDamage.displayedCrit;\r\n        displayedSneak = props.resultDamage.displayedSneak;\r\n        tDamage = props.resultDamage.tDamage;\r\n        shotSize = props.resultDamage.shotSize;\r\n        damageText = tDamage.toFixed(1) + \" x \" + shotSize;\r\n        fRate = props.resultDamage.fireRate;\r\n        fireRateText = fRate.toFixed(0) + \" - \" + (fRate / 10.0).toFixed(2) + \" shots / sec\";\r\n        ammoCapacity = props.resultDamage.ammoCapacity;\r\n    }\r\n    const fireRateLabel = getFireRateLabel(props.resultDamage.weaponType);\r\n    return (\r\n        <Card className={props.className}>\r\n            <Card.Header className=\"pe-0 ps-0\">\r\n                {buildExtraDamageView(props.extraDamage, props.setExtraDamage, props.boostDamageRef, props.setBoostDamage, true)}\r\n            </Card.Header>\r\n            <Card.Body className=\"pt-0 pb-0\">\r\n                {keyValueRow((<span className=\"pt-0 pb-0\"><strong>💥 Damage:</strong></span>), (<span className=\"pt-0 pb-0\"><strong>{damageText}</strong></span>), \"default\", \"red\")}\r\n                {keyValueRow((<span className=\"mt-0 mb-0\"><strong>☠️ Crit:</strong></span>), (<span className=\"mt-1 mb-1\"><strong>{\"+\" + displayedCrit + \"%\"}</strong></span>), \"default\", \"magenta\")}\r\n                {keyValueRow((<span className=\"mt-0 mb-0\"><strong>🐍 Sneak:</strong></span>), (<span className=\"mt-1 mb-1\"><strong>{\"+\" + displayedSneak + \"%\"}</strong></span>), \"default\", \"green\")}\r\n                {keyValueRow((<span className=\"mt-0 mb-0\"><strong>{fireRateLabel}</strong></span>), (<span className=\"mt-1 mb-1\"><strong>{fireRateText}</strong></span>), \"default\", \"purple\")}\r\n                {keyValueRow((<div className=\"mt-0 mb-0\"><strong>{addText(ammo, '0.7rem', '0.27rem', \"Ammo:\")}</strong></div>), (<span className=\"mt-1 mb-1\"><strong>{ammoCapacity}</strong></span>), \"default\", \"default\")}\r\n                {keyValueRow((<span className=\"mt-0 mb-0\"><strong>⌛ Reload:</strong></span>), (<span className=\"mt-1 mb-1\"><strong>{reloadTime.toFixed(1) + \" s\"}</strong></span>), \"default\", \"blue\")}\r\n            </Card.Body>\r\n            <Card.Footer className=\"ps-0 pe-0\">\r\n                {buildExtraDamageButtons(props.extraDamage, props.setExtraDamage)}\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n}","import Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport { getHotPercentage } from '../helpers/Item';\r\nimport { Progress } from 'antd';\r\nimport { memo, useState } from 'react';\r\nimport { ammo, addText } from '../helpers/Emoji';\r\nimport { getImageElement } from '../helpers/WeaponImages';\r\nimport { getAverageTime } from \"../entities/ECreatures\";\r\nimport { getLegendary } from '../helpers/LegendaryProvider';\r\nimport Button from 'react-bootstrap/Button';\r\nimport AAView from '../damage/AAView';\r\nimport DamageDetailsCard from '../damage/DamageDetailsCard';\r\nimport Row from 'react-bootstrap/Row';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\nimport { buildCreatureInfo2 } from '../creature/CreatureInfoPopover';\r\nimport ResistanceChart from '../main/ResistanceChart';\r\nimport { buildExtraDamageView, getFireRateLabel } from './SummaryView';\r\n\r\n\r\nfunction getLegendaryRow(legendaryId, star) {\r\n    if (!legendaryId || legendaryId === \"\" || star > 5) {\r\n        return (<></>);\r\n    } else {\r\n        let stars = \"⭐\";\r\n        stars = stars.repeat(star);\r\n        const legData = getLegendary(legendaryId);\r\n        if (!legData) {\r\n            return (<></>);\r\n        }\r\n        return (<>{keyValueRow(stars, legData.name, \"default\", \"gold\")}</>)\r\n    }\r\n}\r\n\r\nconst ToastSpecs = memo(function ToastSpecs({creatures, legendary, iconName, weaponName, graphValues, resultDamage, showStat, setShowStat, creatureChartNumber, setCreatureChartNumber, extraDamage, setExtraDamage, boostDamageRef, setBoostDamage}) {\r\n    console.log(\"ToastSpecs\");\r\n    const [showView, setShowView] = useState(\"Main\");\r\n    const [detailIndex, setDetailIndex] = useState(-1);\r\n    const [creatureNumber, setCreatureNumber] = useState(1);\r\n    const dropdownNames = [\"Main\", \"Damage Stats\", \"Creature\", \"Chart\"];\r\n    if (resultDamage.damageDetails && (resultDamage.damageDetails.length - 1) < detailIndex) {\r\n        setDetailIndex(-1);\r\n    }\r\n    if (!resultDamage || Object.keys(resultDamage).length === 0) {\r\n        return (<></>);\r\n    }\r\n    let strengthTail = (resultDamage.strengthBonus > 0) ? \" (+\" + resultDamage.strengthBonus + \"%)\" : \"\";\r\n    const strength = resultDamage.strength + strengthTail;\r\n    let bonuses = [];\r\n    for(let property in resultDamage.bonusMult) {\r\n        bonuses.push((resultDamage.bonusMult[property] - 1) * 100);\r\n    }\r\n    const minBonus = Math.min(...bonuses).toFixed(0);\r\n    const maxBonus = Math.max(...bonuses).toFixed(0);\r\n    const bonusText = minBonus + \"% - \" + maxBonus + \"%\";\r\n    const totalBonusTextMin = (((resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer) - 1) * 100).toFixed(0) + \"%\";\r\n    const totalBonusTextMax = (((resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer * resultDamage.totalBonus.executioner) - 1) * 100).toFixed(0) + \"%\";\r\n    const totalBonusText = totalBonusTextMin + \" - \" + totalBonusTextMax;\r\n    let toastBody = null;\r\n    if (showView === \"Main\") {\r\n        toastBody = getMainToast(creatures, resultDamage, legendary, bonusText, totalBonusText, strength)\r\n    } else if (showView === \"Damage Stats\") {\r\n        toastBody = getDetails(resultDamage, detailIndex, setDetailIndex);\r\n    } else if (showView === \"Creature\") {\r\n        toastBody = getCreatures(resultDamage, creatures, creatureNumber);\r\n    } else {\r\n        toastBody = getChart(graphValues, creatures, creatureChartNumber, setCreatureChartNumber);\r\n    }\r\n    function onDropdownSelect(e) {\r\n        setShowView(e);\r\n    }\r\n    return (\r\n        <ToastContainer\r\n            className=\"position-fixed p-1\"\r\n            position={\"top-center\"}\r\n            role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\r\n            style={{ zIndex: 10 }}>\r\n            <Toast bg=\"light\" onClose={(e) => setShowStat(false)} show={showStat} animation={false}>\r\n                <Toast.Header className=\"pe-3\">\r\n                    {getImageElement(iconName, \"1.5rem\")}\r\n                    <strong className=\"ms-2 mt-auto mb-auto p-auto me-auto\">{weaponName}</strong>\r\n                    <small className=\"me-2\">\r\n                        <Progress\r\n                            type=\"dashboard\"\r\n                            steps={50}\r\n                            percent={getHotPercentage(creatures)}\r\n                            format={(percent) => percent}\r\n                            size={28}\r\n                            strokeColor=\"rgb(64, 255, 255)\"\r\n                            trailColor=\"rgba(0, 0, 0, 0.06)\"\r\n                            strokeWidth={20} />\r\n                    </small>\r\n                </Toast.Header>\r\n                <div className=\"m-1\" />\r\n                {buildExtraDamageView(extraDamage, setExtraDamage, boostDamageRef, setBoostDamage)}\r\n                {toastBody}\r\n                <Row className=\"pb-2\">\r\n                    <div className=\"col d-flex justify-content-start\">\r\n                        {getPrevButtonDetails(showView, resultDamage.damageDetails.length, detailIndex, setDetailIndex)}\r\n                        {getPrevButtonCreature(showView, creatureNumber, setCreatureNumber)}\r\n                    </div>\r\n                    <div className=\"col d-flex justify-content-center\">\r\n                        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onDropdownSelect} names={dropdownNames} title={<strong>{showView}</strong>} />\r\n                    </div>\r\n                    <div className=\"col d-flex justify-content-end\">\r\n                        {getNextButtonDetails(showView, resultDamage.damageDetails.length, detailIndex, setDetailIndex)}\r\n                        {getNextButtonCreature(showView, creatureNumber, setCreatureNumber)}\r\n                    </div>\r\n                </Row>\r\n            </Toast>\r\n        </ToastContainer>\r\n    );\r\n});\r\n\r\nfunction getChart(graphValues, creatures, creatureNumber, setCreatureNumber) {\r\n    return (<ResistanceChart graphValues={graphValues} chartId={\"toastResChart\"} dps='true' creatures={creatures} creatureNumber={creatureNumber} setCreatureNumber={setCreatureNumber} />);\r\n}\r\n\r\nfunction getPrevButtonDetails(showView, detailsLength, detailIndex, setDetailIndex) {\r\n    function onClick(e) {\r\n        let index = detailIndex - 1;\r\n        if (index < -1) {\r\n            index = detailsLength - 1;\r\n        }\r\n        setDetailIndex(index);\r\n    }\r\n    const symbol = \"<<\";\r\n    if (showView !== \"Damage Stats\" || detailsLength === 0) {\r\n        return (<></>);\r\n    } else {\r\n        return (<Button size=\"sm\" variant=\"blue-white-border\" className=\"ms-2\" onClick={onClick}>{symbol}</Button>);\r\n    }\r\n}\r\n\r\nfunction getNextButtonDetails(showView, detailsLength, detailIndex, setDetailIndex) {\r\n    function onClick(e) {\r\n        let index = detailIndex + 1;\r\n        if (index > (detailsLength - 1)) {\r\n            index = -1;\r\n        }\r\n        setDetailIndex(index);\r\n    }\r\n    if (showView !== \"Damage Stats\" || detailsLength === 0) {\r\n        return (<></>);\r\n    } else {\r\n        return (<Button size=\"sm\" variant=\"blue-white-border\" className=\"me-2\" onClick={onClick}>>></Button>);\r\n    }\r\n}\r\n\r\nfunction getNextButtonCreature(showView, creatureNumber, setCreatureNumber) {\r\n    function onClick(e) {\r\n        let number = creatureNumber + 1;\r\n        if (number > 4) {\r\n            number = 1;\r\n        }\r\n        setCreatureNumber(number);\r\n    }\r\n    if (showView !== \"Creature\") {\r\n        return (<></>);\r\n    } else {\r\n        return (<Button size=\"sm\" variant=\"blue-white-border\" className=\"me-2\" onClick={onClick}>>></Button>);\r\n    }\r\n}\r\n\r\nfunction getPrevButtonCreature(showView, creatureNumber, setCreatureNumber) {\r\n    function onClick(e) {\r\n        let number = creatureNumber - 1;\r\n        if (number < 1) {\r\n            number = 4;\r\n        }\r\n        setCreatureNumber(number);\r\n    }\r\n    if (showView !== \"Creature\") {\r\n        return (<></>);\r\n    } else {\r\n        return (<Button size=\"sm\" variant=\"blue-white-border\" className=\"ms-2\" onClick={onClick}>{\"<<\"}</Button>);\r\n    }\r\n}\r\n\r\nfunction getCreatures(resultDamage, creatures, creatureNumber) {\r\n    const creature = creatures[\"creature\" + creatureNumber];\r\n    return (\r\n        <Toast.Body className=\"p-2\">\r\n            {buildCreatureInfo2(creature, resultDamage)}\r\n        </Toast.Body>\r\n    );\r\n}\r\n\r\nfunction getDetails(resultDamage, detailIndex, setDetailIndex) {\r\n    let view = null;\r\n    if (detailIndex === -1) {\r\n        view = (<AAView resultDamage={resultDamage}></AAView>);\r\n    } else {\r\n        view = (<DamageDetailsCard resultDamage={resultDamage} damageData={resultDamage.damageDetails[detailIndex]}></DamageDetailsCard>);\r\n    }\r\n    return (\r\n        <Toast.Body className=\"p-2\">\r\n            {view}\r\n        </Toast.Body>\r\n    );\r\n}\r\n\r\n/*\r\n            {keyValueRow('💣 Explosive:', \"+\" + resultDamage.explosive.toFixed(0) + \"%\", \"default\", \"pink\")}\r\n            {keyValueRow('🚀️ Bonus:', bonusText, \"default\", \"blue\")}\r\n            {keyValueRow('⏫ Total Bonus:', totalBonusText, \"default\", \"blue\")}\r\n            {keyValueRow('🐍 Sneak:', \"+\" + resultDamage.displayedSneak + \"%\", \"default\", \"darkGreen\")}\r\n            {keyValueRow('☠️ Crit:', \"+\" + resultDamage.displayedCrit + \"%\", \"default\", \"black\")}\r\n            {keyValueRow('💪 Strength:', strength, \"default\", \"brown\")}\r\n*/\r\nfunction getMainToast(creatures, resultDamage, legendary, bonusText, totalBonusText, strength) {\r\n    const fireRateLabel = getFireRateLabel(resultDamage.weaponType);\r\n    return (\r\n        <Toast.Body className=\"p-2\">\r\n            {keyValueRow('💥 Damage:', resultDamage.tDamage.toFixed(1) + ' x ' + resultDamage.shotSize, \"default\", \"indigo\")}\r\n            {keyValueRow(fireRateLabel, resultDamage.fireRate.toFixed(2) + \" - \" + (resultDamage.fireRate / 10.0).toFixed(1) + \" shots / sec\", \"default\", \"purple\")}\r\n            {keyValueRow(addText(ammo, '0.7rem', '0.27rem', \"Ammo / Hit:\"), resultDamage.ammoCapacity, \"default\", \"purple\")}\r\n            {keyValueRow('⌛ Reload:', resultDamage.reloadTime.toFixed(1) + ' s', \"default\", \"purple\")}\r\n            {keyValueRow('💪 Strength:', strength, \"default\", \"brown\")}\r\n            {keyValueRow('💀 Average Time:', getAverageTime(creatures), \"default\", \"red\")}\r\n            {getLegendaryRow(legendary[0][0], 1)}\r\n            {getLegendaryRow(legendary[1][0], 2)}\r\n            {getLegendaryRow(legendary[2][0], 3)}\r\n            {getLegendaryRow(legendary[3][0], 4)}\r\n            {getLegendaryRow(legendary[4][0], 5)}\r\n        </Toast.Body>\r\n    );\r\n}\r\nexport default ToastSpecs;","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport '../css/style.css'\r\nimport { checkLength } from '../helpers/Input';\r\nimport { bullet, ammo, fireRate } from '../helpers/Emoji';\r\nimport { memo } from 'react';\r\nimport { WarningPopover } from '../helpers/WarningPopover';\r\nimport Strings from '../helpers/Strings';\r\nimport TemplateTools from '../templates/TemplateTools';\r\n\r\n\r\nfunction column2(wSpec, onChange1, onChange2, icon, name, id1, id2, max1, max2, message) {\r\n    const value1 = wSpec[id1];\r\n    const value2 = wSpec[id2];\r\n    return (\r\n        <Col>\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                <WarningPopover message={message} header={name} element={<InputGroup.Text color='red' style={{ width: '2.58rem', backgroundColor: '#ff5795', cursor: 'pointer' }}>{icon}</InputGroup.Text>} />\r\n                <InputGroup.Text style={{ width: '6rem' }}>{name}</InputGroup.Text>\r\n                <Form.Control style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={value1} max={max1} maxLength=\"5\" onChange={onChange1} id={id1} />\r\n                <InputGroup.Text style={{ width: '2rem' }}>/</InputGroup.Text>\r\n                <Form.Control style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={value2} max={max2} maxLength=\"5\" onChange={onChange2} id={id2} />\r\n            </InputGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction column(wSpec, onChange, icon, name, id, max) {\r\n    let value = 0;\r\n    if (id.includes(\"creature\")) {\r\n        const index = parseInt(id.split(\"_\")[1]);\r\n        value = wSpec[\"creature\"][index].value;\r\n    } else {\r\n        value = wSpec[id];\r\n    }\r\n    return (\r\n        <Col key={id}>\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                <InputGroup.Text style={{ width: '2.58rem' }}>{icon}</InputGroup.Text>\r\n                <InputGroup.Text style={{ width: '10rem' }}>{name}</InputGroup.Text>\r\n                <Form.Control style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={value} max={max} maxLength=\"5\" onChange={onChange} id={id} />\r\n            </InputGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nconst WRow = memo(function WRow({wSpec, setWSpec}) {\r\n\r\n    function onChange(e) {\r\n        checkLength(e);\r\n        let creatureIndex = -1;\r\n        if (e.target.id.includes(\"creature\")) {\r\n            creatureIndex = parseInt(e.target.id.split(\"_\")[1]);\r\n        } else if ((e.target.id === 'shot_size' || e.target.id === 'fireRate' || e.target.id === 'ammoCapacity') && e.target.value < 1) {\r\n            e.target.value = 1;\r\n        } else if (e.target.id === 'accuracy' && e.target.value < 10) {\r\n            e.target.value = 10;\r\n        } else if ((e.target.id === 'speed' || e.target.id === 'reloadSpeed') && e.target.value < 0.1) {\r\n            e.target.value = 0.1;\r\n        }\r\n        const val = parseFloat(e.target.value);\r\n        if (creatureIndex > -1) {\r\n            wSpec[\"creature\"][creatureIndex].value = val;\r\n        } else {\r\n            wSpec[e.target.id] = val;\r\n        }\r\n        setWSpec({\r\n            ...wSpec,\r\n        });\r\n    }\r\n    // const shotSize = (<>{bullet(\"1.1rem\")} <div style={{marginLeft: '0.35rem'}}>Shot Size</div></>);\r\n    // const fRate = (<>{fireRate(\"1.1rem\")} <div style={{marginLeft: '0.45rem'}}>Fire Rate</div></>);\r\n    // const iAmmo = (<>{ammo(\"1.1rem\")} <div style={{marginLeft: '0.42rem'}}>Ammo Capacity</div></>);\r\n    let creatureViews = [];\r\n    for (let i = 0; i < wSpec.creature.length; i++) {\r\n        const creature = wSpec.creature[i];\r\n        creatureViews.push(column(wSpec, onChange, \"🐵\", creature.name, \"creature_\" + i, 500));\r\n    }\r\n    const isRanged = TemplateTools.isWeaponRangedByType(wSpec.type);\r\n    const fireRateIcon = (isRanged) ? (fireRate(\"1.1rem\")) : ('👊🏼');\r\n    const defFireRateLabel = \"Def \" + Strings.getFireRate(wSpec.type);\r\n    return (\r\n        <Row>\r\n            {column(wSpec, onChange, bullet(\"1.1rem\"), \"Shot Size\", \"shot_size\", 16)}\r\n            {column(wSpec, onChange, '⌛', \"Def Reload Time\", \"defReloadTime\", 60)}\r\n            {column(wSpec, onChange, fireRateIcon, defFireRateLabel, \"fireRate\", 199)}\r\n            {column(wSpec, onChange, ammo(\"1.1rem\"), \"Ammo Capacity\", \"ammoCapacity\", 9999)}\r\n            {column(wSpec, onChange, \"🛡️\", \"Anti Armor\", \"aa\", 40)}\r\n            {column(wSpec, onChange, \"💪\", \"Strength Boost\", \"strengthBoost\", 25)}\r\n            {column(wSpec, onChange, \"☠️\", \"Crit\", \"crit\", 200)}\r\n            {column(wSpec, onChange, \"🐍\", \"Sneak\", \"sneak\", 100)}\r\n            {column(wSpec, onChange, \"🌪️\", \"Bash\", \"bash\", 200)}\r\n            {column(wSpec, onChange, \"💣\", \"Explosive\", \"exp\", 100)}\r\n            {creatureViews}\r\n            {column(wSpec, onChange, \"🚀\", \"Damage Bonus\", \"bonus\", 500)}\r\n            {column(wSpec, onChange, \"☄️\", \"Weapon Speed\", \"speed\", 5)}\r\n            {column(wSpec, onChange, \"💨\", \"Reload Speed\", \"reloadSpeed\", 5)}\r\n            {column(wSpec, onChange, \"🪓\", \"Power Attack\", \"powerAttack\", 200)}\r\n            {column2(wSpec, onChange, onChange, \"🦵\", \"Cripple\", \"cripple\", \"crippleChance\", 100, 100, \"% Damage Boost / Chance (100% if headshot)\")}\r\n            {column2(wSpec, onChange, onChange, \"🔋\", \"Charge\", \"chargeTime\", \"maxChargeTime\", 5, 5, \"Charge Time / Max Charge Time\")}\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default WRow;","import { setCurrentLegendaryIds } from '../helpers/Global';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { useState } from 'react';\r\nimport { Slider } from 'antd';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nconst allMarks = {\r\n\r\n    marks3: {\r\n        0: '0',\r\n        1: '1',\r\n        2: '2',\r\n        3: '3',\r\n    },\r\n\r\n    marks25: {\r\n        0: '0%',\r\n        5: '5%',\r\n        10: '10%',\r\n        15: '15%',\r\n        20: '20%',\r\n        25: '25%',\r\n    },\r\n\r\n    marks40: {\r\n        0: '0%',\r\n        10: '10%',\r\n        20: '20%',\r\n        30: '30%',\r\n        40: '40%',\r\n    },\r\n\r\n    marks50: {\r\n        0: '0%',\r\n        10: '10%',\r\n        20: '20%',\r\n        30: '30%',\r\n        40: '40%',\r\n        50: '50%',\r\n    },\r\n\r\n    marks95: {\r\n        0: '0%',\r\n        20: '20%',\r\n        40: '40%',\r\n        60: '60%',\r\n        80: '80%',\r\n        95: '95%',\r\n    },\r\n\r\n    marks100: {\r\n        0: '0%',\r\n        20: '20%',\r\n        40: '40%',\r\n        60: '60%',\r\n        80: '80%',\r\n        100: '100%',\r\n    },\r\n\r\n    marks20: {\r\n        0: '0%',\r\n        5: '5%',\r\n        10: '10%',\r\n        15: '15%',\r\n        20: '20%',\r\n    },\r\n\r\n    marks24: {\r\n        0: '0%',\r\n        6: '6%',\r\n        12: '12%',\r\n        18: '18%',\r\n        24: '24%',\r\n    },\r\n\r\n    marks300: {\r\n        0: '0%',\r\n        50: '50%',\r\n        100: '100%',\r\n        150: '150%',\r\n        200: '200%',\r\n        250: '250%',\r\n        300: '300%',\r\n    },\r\n\r\n    marks15: {\r\n        0: '0%',\r\n        3: '3%',\r\n        6: '6%',\r\n        9: '9%',\r\n        12: '12%',\r\n        15: '15%',\r\n    },\r\n};\r\n\r\nfunction LegSlider({legendaryInfo, marksName, wSpec, setWSpec, disabled=false}) {\r\n    const marks = allMarks[marksName];\r\n    const wSpecLeg = wSpec.legendary[legendaryInfo.star - 1];\r\n    const [redraw, setRedraw] = useState(false);\r\n\r\n    let value = legendaryInfo.max;\r\n\r\n    // Use adjustable value instead of default max\r\n    if (wSpecLeg[2] && wSpecLeg[2] !== \"\") {\r\n        value = wSpecLeg[1];\r\n    }\r\n\r\n    function slideChanged(e) {\r\n        wSpecLeg[1] = e;\r\n        setRedraw(!redraw);\r\n        setCurrentLegendaryIds(wSpec);\r\n    }\r\n\r\n    function slideFinished(e) {\r\n        setWSpec({...wSpec});\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Card className=\"mt-3 mb-2 pt-2 pb-2 ps-3 pe-3\">\r\n            <Col className=\"pt-2\">\r\n                <Slider disabled={!legendaryInfo.adjustable} open={true} onAfterChange={slideFinished} onChange={slideChanged} marks={marks} min={legendaryInfo.min} max={legendaryInfo.max} step={legendaryInfo.step} value={value} />\r\n            </Col>\r\n            </Card>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default LegSlider;","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { useEffect } from 'react';\r\nimport LegSlider from './LegSlider';\r\nimport { Collapse } from 'antd';\r\nimport { getLegendaryByStar, getLegendary } from '../helpers/LegendaryProvider';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport getMods from '../helpers/Mods';\r\nimport { setCurrentLegendaryIds } from '../helpers/Global';\r\nimport { popoverContent } from '../templates/ModPropsPopover';\r\nimport { WeaponPopoverOverlay } from '../helpers/WeaponPopoverOverlay';\r\nimport { ModParser } from '../helpers/mods/ModParser';\r\nimport { Tag } from 'antd';\r\n\r\n\r\nconst legendaryItems = getLegendaryByStar();\r\n\r\nconst modParser = new ModParser();\r\n\r\nfunction getQuestionMark() {\r\n    return (\r\n        <Badge className=\"ps-2 pe-2 mb-auto mt-auto\" bg={\"danger\"} pill>?</Badge>\r\n    );\r\n}\r\n\r\nfunction updateLegendary(wSpec, setWSpec, health) {\r\n    for (let i = 0; i < wSpec.legendary.length; i++) {\r\n        const legendary = wSpec.legendary[i];\r\n        modParser.applyLegendaryModToWSpec(legendary[0], wSpec, i, health, true, true);\r\n    }\r\n    setWSpec({...wSpec});\r\n}\r\n\r\n// health, important if a value of a legendary effect depends on health\r\nfunction getLegendaryDropdown(legendaryInfo, wSpec, setWSpec, health, index) {\r\n    function onSelectCustom(e) {\r\n        modParser.applyLegendaryModToWSpec(wSpec.legendary[index][0], wSpec, index, health, false, false);\r\n        modParser.applyLegendaryModToWSpec(e, wSpec, index, health, false, true);\r\n        wSpec.legendary[index][0] = e;\r\n        setWSpec({...wSpec});\r\n    }\r\n    let result = [];\r\n    const legs = legendaryItems[index];\r\n    for (let i = 0; i < legs.length; i++) {\r\n        const legName = legs[i].name;\r\n        const legId = legs[i].id;\r\n        result.push(<Dropdown.Item key={i} eventKey={legId}>{legName}</Dropdown.Item>);\r\n    }\r\n    const title = (legendaryInfo) ? legendaryInfo.name : \"Legendary\";\r\n    const mod = (legendaryInfo) ? getMods().get(legendaryInfo.id) : null;\r\n    function getQM(mod) {\r\n        if (mod) {\r\n            return (\r\n                <Col className=\"d-flex justify-content-end\">\r\n                    <WeaponPopoverOverlay popoverHeader={mod.name} popoverContent={popoverContent(mod)} itemToOverly={getQuestionMark()}></WeaponPopoverOverlay>\r\n                </Col>\r\n            );\r\n        }\r\n        return (<></>);\r\n    };\r\n    return (\r\n        <Row>\r\n            <Col className=\"d-flex justify-content-start\">\r\n                <DropdownButton variant='warning' size=\"sm\" onSelect={onSelectCustom} title={<strong>{title}</strong>}>\r\n                    {result}\r\n                </DropdownButton>\r\n            </Col>\r\n            {getQM(mod)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction getEffectTag(effect) {\r\n    return (\r\n        <div className=\"mt-2 d-flex justify-content-end\">\r\n            <strong>\r\n                <Tag bordered={false} color={\"indigo\"}>{effect}</Tag>\r\n            </strong>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getLegendaryAdjust(legendaryInfo, wSpec, setWSpec) {\r\n    if (legendaryInfo && legendaryInfo.type !== \"Not affect\" && legendaryInfo.type !== \"Not affect (not tested)\") {\r\n        const marksName = \"marks\" + legendaryInfo.max;\r\n        const effect = legendaryInfo.type;\r\n        return (\r\n            <>\r\n                <LegSlider legendaryInfo={legendaryInfo} marksName={marksName} wSpec={wSpec} setWSpec={setWSpec}></LegSlider>\r\n                {getEffectTag(effect)}\r\n            </>\r\n        );\r\n    } else if (legendaryInfo) {\r\n        return (<>{getEffectTag(legendaryInfo.type)}</>);\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getLegendaryDetails(legendaryInfo) {\r\n    if (legendaryInfo) {\r\n        return (\r\n            <div className=\"pt-3 m-3\"><strong>{legendaryInfo.description}</strong></div>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction legBody(legendaryInfo, wSpec, setWSpec, health, index) {\r\n    return (\r\n        <>\r\n            {getLegendaryDropdown(legendaryInfo, wSpec, setWSpec, health, index)}\r\n            {getLegendaryDetails(legendaryInfo)}\r\n            {getLegendaryAdjust(legendaryInfo, wSpec, setWSpec)}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction getCollapse(header, legendaryInfo, wSpec, setWSpec, health, index) {\r\n    const legName = (legendaryInfo) ? legendaryInfo.name : \"\";\r\n    const headerName = header + \" \" + legName;\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>{headerName}</strong>,\r\n            children: <>{legBody(legendaryInfo, wSpec, setWSpec, health, index)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"mt-2 mb-2\">\r\n            <Collapse items={items} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function LegendarySelector({header, wSpec, setWSpec, health, index}) {\r\n    useEffect(() => {\r\n        setCurrentLegendaryIds(wSpec);\r\n        if (!wSpec.legendaryHealthUpdated) {\r\n            wSpec.legendaryHealthUpdated = true;\r\n            updateLegendary(wSpec, setWSpec, health);\r\n        }\r\n    }, [wSpec, health]);\r\n    useEffect(() => {\r\n        updateLegendary(wSpec, setWSpec, health);\r\n    }, [health]);\r\n    let legendaryInfo = null;\r\n    if (wSpec.legendary[index]) {\r\n        legendaryInfo = getLegendary(wSpec.legendary[index][0]);\r\n    }\r\n    return (\r\n        <>{getCollapse(header, legendaryInfo, wSpec, setWSpec, health, index)}</>\r\n    );\r\n}","import { memo } from 'react';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\n\r\n\r\nfunction empty() {\r\n    return (\r\n        <></>\r\n    );\r\n}\r\n\r\nconst autoW = {\"Non Automatic\": 0, \"Automatic\": 1};\r\nconst handW = {\"One Handed\": 0, \"TwoHanded\": 1};\r\n\r\nfunction auto(wSpec, setWSpec) {\r\n    const onClick = (e) => {\r\n        wSpec.is_auto = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    };\r\n    return (\r\n        <BSRadio className=\"pt-2 pb-2 d-flex justify-content-center\" pairs={autoW} selectedValue={wSpec.is_auto} onClick={onClick} />\r\n    );\r\n}\r\n\r\nfunction hand(wSpec, setWSpec) {\r\n    const onClick = (e) => {\r\n        wSpec.hand = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    };\r\n    return (\r\n        <BSRadio className=\"pt-2 pb-2 d-flex justify-content-center\" pairs={handW} selectedValue={wSpec.hand} onClick={onClick} />\r\n    );\r\n}\r\n\r\nfunction content(wSpec, setWSpec) {\r\n    if (wSpec.type === \"Melee\") {\r\n        return hand(wSpec, setWSpec);\r\n    } else if (wSpec.type === \"Heavy\" || wSpec.type === \"Rifle\" || wSpec.type ===\"Shotgun\" || wSpec.type === \"Pistol\") {\r\n        return auto(wSpec, setWSpec);\r\n    }\r\n    return empty();\r\n}\r\n\r\nconst AutoHandSelector = memo(function AutoHandSelector({wSpec, setWSpec}) {\r\n    return (\r\n       <>{content(wSpec, setWSpec)}</>\r\n    );\r\n});\r\n\r\nexport default AutoHandSelector;","import { memo } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport { TrashIcon } from '../icons/Icons';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { checkLength } from '../helpers/Input';\r\n\r\n\r\nfunction getSymbolStyle(dType) {\r\n    switch(dType) {\r\n        case \"physical\":\r\n            return [\"💥\", \"small p-1 bg-ballistic\"];\r\n        case \"bleed\":\r\n            return [\"🩸\", \"small p-1 bg-bleed\"];\r\n        case \"explosive\":\r\n            return [\"🧨\", \"small p-1 bg-exp\"];\r\n        case \"energy\":\r\n            return [\"⚡\", \"small p-1 bg-energy\"];\r\n        case \"fire\":\r\n            return [\"🔥\", \"small p-1 bg-fire\"];\r\n        case \"cryo\":\r\n            return [\"❄️\", \"small p-1 bg-cold\"];\r\n        case \"poison\":\r\n            return [\"☣️\", \"small p-1 bg-poison\"];\r\n        case \"radiation\":\r\n            return [\"☢️\", \"small p-1 bg-rad\"];\r\n        default:\r\n            return [\"\", \"\"];\r\n    }\r\n}\r\n\r\nfunction getInputItem(dItem, wSpec, setWSpec, style) {\r\n    function onCheck(e) {\r\n        dItem.isUsed = e.target.checked;\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onDamageChange(e) {\r\n        checkLength(e);\r\n        dItem.damage = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onAccuracyChange(e) {\r\n        checkLength(e);\r\n        dItem.accuracy = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onChanceChange(e) {\r\n        checkLength(e);\r\n        dItem.chance = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onStackCheck(e) {\r\n        dItem.stack = e.target.checked;\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onTimeChange(e) {\r\n        checkLength(e);\r\n        dItem.time = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    }\r\n    return (\r\n        <>\r\n            <Col>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <InputGroup.Text style={{ width: '2.8rem'}}>\r\n                        <UCheckbox onChange={onCheck} checked={dItem.isUsed}></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text style={{ width: 'auto' }} className={style}>{\"💢\"}</InputGroup.Text>\r\n                    <Form.Control className=\"pe-1\" style={{ minWidth: '4rem'}} type=\"number\" min=\"0\" value={dItem[\"damage\"]} max={\"999\"} maxLength=\"6\" onChange={onDamageChange} />\r\n                    <InputGroup.Text style={{ width: '2.8rem' }} className={style}>{\"🎯\"}</InputGroup.Text>\r\n                    <Form.Control className=\"pe-1\" style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={dItem[\"accuracy\"]} max={\"100\"} maxLength=\"5\" onChange={onAccuracyChange} />\r\n                </InputGroup>\r\n            </Col>\r\n            <Col>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <InputGroup.Text style={{ width: '2.8rem' }} className={style}>{\"🎲\"}</InputGroup.Text>\r\n                    <Form.Control className=\"pe-1\" style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={dItem[\"chance\"]} max={\"100\"} maxLength=\"5\" onChange={onChanceChange} />\r\n                    <InputGroup.Text>\r\n                        <UCheckbox className=\"me-1\" onChange={onStackCheck} checked={dItem.stack}><small>Stack</small></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text style={{ width: '2.8rem' }} className={style}>{\"⌛\"}</InputGroup.Text>\r\n                    <Form.Control className=\"pe-1\" style={{ width: '4rem' }} type=\"number\" min=\"0\" value={dItem[\"time\"]} max={\"60\"} maxLength=\"4\" onChange={onTimeChange} />\r\n                </InputGroup>\r\n            </Col>\r\n        </>\r\n    );\r\n}\r\nconst DamageItem = memo(function DamageItem({item, wSpec, setWSpec, modalDeleteDamage, setModalDeleteDamage}) {\r\n    const [symbol, style] = getSymbolStyle(item.kind);\r\n    function onTrashClick(e) {\r\n        setModalDeleteDamage({id: item.index, name: item.name, show: true});\r\n    }\r\n    return (\r\n        <Card className=\"mt-2 mb-2 shadow-outline4\">\r\n            <Card.Header size=\"small\" className={style}>\r\n                <Row>\r\n                    <Col className=\"ms-3 m-auto p-0 d-flex justify-content-start\">\r\n                        {symbol + \" \" + item.name}\r\n                    </Col>\r\n                    <Col className=\"me-3 mt-0 mb-0 p-0 d-flex justify-content-end\">\r\n                        <Button className=\"ms-1 pb-auto\" size=\"sm\" id={item.id} name={item.name} onClick={onTrashClick} variant=\"white\">\r\n                            <TrashIcon />\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Header>\r\n            <Card.Body className=\"p-1\">\r\n                <Row>\r\n                    {getInputItem(item, wSpec, setWSpec, \"bg-lite\")}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default DamageItem;","import { useState } from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\n\r\nexport default function NotificationToast({toastState}) {\r\n    const [show, setShow] = useState(toastState);\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={2000} autohide>\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">Limit</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>\r\n                        Damage limit has been achieved\r\n                    </Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport NotificationToast from '../helpers/NotificationToast';\r\nimport { getDamageTypeFromCellName, buildDamageItem } from '../helpers/mods/DamageSetter';\r\nimport { useState } from 'react';\r\nimport { notification } from 'antd';\r\n\r\n\r\nfunction getDropdown(wSpec, setWSpec, toastState, setToastState, openNotification) {\r\n    function onSelectCustom(e) {\r\n        if (wSpec.damages.length >= 6) {\r\n            openNotification();\r\n            return;\r\n        }\r\n        const type = getDamageTypeFromCellName(e);\r\n        const damageItem = buildDamageItem(wSpec.weaponId, \"custom\", type[0], type[1], type[2], 0, 0, 0, 0, 100, 100, false, wSpec.damages.length, true);\r\n        wSpec.damages.push(damageItem);\r\n\r\n        // Reindex\r\n        for (let i = 0; i < wSpec.damages.length; i++) {\r\n            wSpec.damages[i].index = i;\r\n        }\r\n        setWSpec({...wSpec});\r\n    }\r\n    return (\r\n        <Row className=\"p-2 mb-2 mt-1\">\r\n            <NotificationToast toastState={toastState}></NotificationToast>\r\n            <Col className=\"d-flex justify-content-center\">\r\n                <DropdownButton variant='warning' size=\"sm\" onSelect={onSelectCustom} title={<strong>Add Damage</strong>}>\r\n                    <Dropdown.Item eventKey=\"bbDamage\">💥 Physical</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"bleed\">🩸 Bleed</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"projExp\">🧨 Explosive</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"ebDamage\">⚡ Energy</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"fbDamage\">🔥 Fire</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"cbDamage\">❄️ Cryo</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"pbDamage\">☣️ Poison</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"rbDamage\">☢️ Radiation</Dropdown.Item>\r\n                </DropdownButton>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\n\r\nexport default function DamageAdd({wSpec, setWSpec}) {\r\n    const [toastState, setToastState] = useState(false);\r\n    const [api, contextHolder] = notification.useNotification();\r\n\r\n    const openNotification = () => {\r\n        api.open({\r\n            key: \"limit\",\r\n            message: 'Warning',\r\n            description: 'Damage limit has been achieved',\r\n            duration: 2,\r\n        });\r\n    };\r\n    return (\r\n        <>\r\n            {contextHolder}\r\n            {getDropdown(wSpec, setWSpec, toastState, setToastState, openNotification)}\r\n        </>\r\n    );\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalDeleteDamage = memo(function ModalDeleteDamage(props) {\r\n    console.log(\"ModalDeleteDamage\");\r\n    if (!props.modalDeleteDamage.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalDeleteDamage({id: -1, name: 'none', show:  false});\r\n    }\r\n    function removeItem(e) {\r\n        try {\r\n            const index = props.modalDeleteDamage.id;\r\n            props.wSpec.damages.splice(index, 1);\r\n\r\n            // Reindex\r\n            for (let i = 0; i < props.wSpec.damages.length; i++) {\r\n                props.wSpec.damages[i].index = i;\r\n            }\r\n            props.setWSpec({...props.wSpec});\r\n        } catch {}\r\n        props.setModalDeleteDamage({id: -1, name: \"none\", show: false});\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.modalDeleteDamage.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Delete Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to delete '{props.modalDeleteDamage.name}' damage?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={removeItem}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDeleteDamage;","import { Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n\r\n\r\nexport default function AmmoInfoView({wSpec}) {\r\n    const name = wSpec.ammoType.name;\r\n    const type = wSpec.ammoType.type;\r\n    const codeName = wSpec.ammoType.codeName;\r\n    if (name && name !== \"\") {\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-3 mb-0\">Ammo</Divider>\r\n                <Row className=\"mt-2 mb-3\">\r\n                     <Col>\r\n                         <InputGroup className=\"mb-1 mt-1 d-flex justify-content-center\">\r\n                             <InputGroup.Text className=\"p-1 justify-content-center shadow-outline-ammo\" style={{ minWidth: '18rem' }}><small>{type}</small></InputGroup.Text>\r\n                         </InputGroup>\r\n                     </Col>\r\n                     <Col>\r\n                         <InputGroup className=\"mb-1 mt-1 d-flex justify-content-center\">\r\n                             <InputGroup.Text className=\"p-1 justify-content-center shadow-outline-ammo\" style={{ minWidth: '18rem' }}><small>{name}</small></InputGroup.Text>\r\n                         </InputGroup>\r\n                     </Col>\r\n                     <Col>\r\n                         <InputGroup className=\"mb-1 mt-1 d-flex justify-content-center\">\r\n                             <InputGroup.Text className=\"p-1 justify-content-center shadow-outline-ammo\" style={{ minWidth: '18rem' }}><small>{codeName}</small></InputGroup.Text>\r\n                         </InputGroup>\r\n                     </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag, Divider } from 'antd';\r\n\r\n\r\nfunction getTagView(tag) {\r\n    return (\r\n        <Col key={tag} className=\"m-1 ps-0 pe-0 d-flex justify-content-center\">\r\n            <Tag className=\"m-1 shadow-gold2\" bordered={true} color=\"volcano\">\r\n                <b>{tag}</b>\r\n            </Tag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function TagInfoView({tags}) {\r\n    if (tags && tags.length > 0) {\r\n        const result = [];\r\n        for (let i = 0; i < tags.length; i++) {\r\n            result.push(getTagView(tags[i]));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-3 mb-2\">Tags</Divider>\r\n                <Row className=\"ps-1 pe-1\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Container from 'react-bootstrap/Container';\r\nimport WRow from \"./WRow\";\r\nimport LegendarySelector from \"./LegendarySelector\";\r\nimport { memo, useState } from 'react';\r\nimport { Divider, Tag } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\nimport WTypeDropdown from '../helpers/WTypeDropdown';\r\nimport { getRowWithImage } from '../helpers/WTypeDropdown'\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport AutoHandSelector from '../damage/AutoHandSelector';\r\nimport DamageItem from './DamageItem';\r\nimport DamageAdd from './DamageAdd';\r\nimport ModalDeleteDamage from './ModalDeleteDamage';\r\nimport AmmoInfoView from './AmmoInfoView';\r\nimport TagInfoView from './TagInfoView';\r\n\r\n\r\nfunction modElement(mod) {\r\n    return (\r\n         <div key={mod.id} className=\"col d-flex\">\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap justify-content-center\">\r\n                <InputGroup.Text className='bg-mod-cat' style={{ width: '8rem' }}><small>{mod.group}</small></InputGroup.Text>\r\n                <InputGroup.Text className='bg-mod-name' style={{ minWidth: '12rem' }}><small>{mod.name}</small></InputGroup.Text>\r\n            </InputGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DamageTable = memo(function DamageTable({setWSpec, wSpec, health}) {\r\n    console.log(\"DamageTable\");\r\n    const [weaponType, setWeaponType] = useState(wSpec.type);\r\n    const [modalDeleteDamage, setModalDeleteDamage] = useState({id: -1, name: 'none', show: false});\r\n    function onWeaponChange(e) {\r\n        wSpec.type = e;\r\n        setWSpec({...wSpec});\r\n    }\r\n    const mods = wSpec.mods.map((mod) => (modElement(mod)));\r\n    let dItems = [];\r\n    for (let i = 0; i < wSpec.damages.length; i++) {\r\n        dItems.push(<DamageItem key={i} item={wSpec.damages[i]} wSpec={wSpec} setWSpec={setWSpec} setModalDeleteDamage={setModalDeleteDamage}></DamageItem>);\r\n    }\r\n    return (\r\n        <Container fluid className=\"p-0\">\r\n            <ModalDeleteDamage wSpec={wSpec} setWSpec={setWSpec} modalDeleteDamage={modalDeleteDamage} setModalDeleteDamage={setModalDeleteDamage}></ModalDeleteDamage>\r\n            <DamageAdd wSpec={wSpec} setWSpec={setWSpec}></DamageAdd>\r\n            {dItems}\r\n            <Divider className=\"p-0 mt-2 mb-2\">Specs</Divider>\r\n            <WRow wSpec={wSpec} setWSpec={setWSpec}></WRow>\r\n            <Divider className=\"p-0 mt-2 mb-2\"></Divider>\r\n            <Row>\r\n                <div className=\"col d-flex justify-content-start\">\r\n                    <WTypeDropdown weaponType={weaponType} setWeaponType={setWeaponType} onSelect={onWeaponChange} title={\"Type\"}></WTypeDropdown>\r\n                </div>\r\n                 <div className=\"col d-flex justify-content-end pe-1\">\r\n                    <Tag bordered={true} color=\"volcano\" className=\"pt-2\"><h6 className=\"m-auto p-auto\"><strong>{getRowWithImage(wSpec.type)}</strong></h6></Tag>\r\n               </div>\r\n            </Row>\r\n            <Divider className=\"p-0 mt-2 mb-2\"></Divider>\r\n            <AutoHandSelector wSpec={wSpec} setWSpec={setWSpec}></AutoHandSelector>\r\n            <Divider className=\"p-0 mt-2 mb-2\">Legendary Effects</Divider>\r\n            <LegendarySelector index={0} header={\"⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <LegendarySelector index={1} header={\"⭐⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <LegendarySelector index={2} header={\"⭐⭐⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <LegendarySelector index={3} header={\"⭐⭐⭐⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <LegendarySelector index={4} header={\"⭐⭐⭐⭐⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <Divider className=\"p-0 mt-2 mb-2\">Modifications</Divider>\r\n            <Row className=\"d-flex\">\r\n                {mods}\r\n            </Row>\r\n            <AmmoInfoView wSpec={wSpec}></AmmoInfoView>\r\n            <TagInfoView tags={wSpec.tags}></TagInfoView>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default DamageTable;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport DamageTable from \"../damage/DamageTable\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst WeaponSpecs = memo(function WeaponSpecs({wSpec, setWSpec, showStatRef, setShowStat, health}) {\r\n    console.log(\"WeaponSpecs\");\r\n    const openStat = (e) => {\r\n        setShowStat(!showStatRef.current);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"0\">\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">Weapon Specs</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"p-2\">\r\n                    <DamageTable setWSpec={setWSpec} wSpec={wSpec} health={health}></DamageTable>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default WeaponSpecs;\r\n","export function calculateSpecial(boostDamage) {\r\n    for (let key in boostDamage.special) {\r\n        boostDamage.special[key] = 0;\r\n    }\r\n    for (let key in boostDamage) {\r\n        if (key === \"special\") {\r\n            continue;\r\n        }\r\n        const card = boostDamage[key];\r\n        const special = boostDamage.special;\r\n        const type = card.category.toLowerCase();\r\n        if (card.is_used) {\r\n            special[type] += card.cost[card.rank - 1];\r\n        }\r\n    }\r\n}","import { defaultBoosts } from '../entities/EBoosts';\r\nimport { calculateSpecial } from './BoostHelpers';\r\n\r\n\r\nexport default class PerkCardBuilder {\r\n\r\n    static build(buildName, setBoostDamage, player, setPlayer) {\r\n        let boosts = defaultBoosts();\r\n        if (buildName !== \"Reset\") {\r\n            PerkCardBuilder.setupGeneral(boosts, player);\r\n        }\r\n        switch(buildName) {\r\n            case \"Heavy\":\r\n                PerkCardBuilder.setupCard(boosts.stabilized, 3);\r\n                PerkCardBuilder.setupCard(boosts.heavy_gunner, 11);\r\n                PerkCardBuilder.setupCard(boosts.lock_and_load, 3);\r\n                break;\r\n            case \"Heavy Explosive\":\r\n                PerkCardBuilder.setupCard(boosts.stabilized, 3);\r\n                PerkCardBuilder.setupCard(boosts.heavy_gunner, 11);\r\n                PerkCardBuilder.setupCard(boosts.lock_and_load, 3);\r\n                PerkCardBuilder.setupCard(boosts.demolition_expert, 5);\r\n                break;\r\n            case \"Heavy FullHouse\":\r\n                PerkCardBuilder.setupCard(boosts.stabilized, 3);\r\n                PerkCardBuilder.setupCard(boosts.heavy_gunner, 11);\r\n                PerkCardBuilder.setupCard(boosts.lock_and_load, 3);\r\n                PerkCardBuilder.setupCard(boosts.demolition_expert, 5);\r\n                PerkCardBuilder.setupCard(boosts.adrenaline, 5, 6);\r\n                PerkCardBuilder.setupCard(boosts.tenderizer, 3);\r\n                PerkCardBuilder.setupCard(boosts.toft, 4);\r\n                break;\r\n            case \"Shotgun\":\r\n                PerkCardBuilder.setupCard(boosts.shotgunner, 11);\r\n                PerkCardBuilder.setupCard(boosts.scattershot, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Automatic Rifle\":\r\n                PerkCardBuilder.setupCard(boosts.commando, 11);\r\n                PerkCardBuilder.setupCard(boosts.ground_pounder, 3);\r\n                PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Non-Automatic Rifle\":\r\n                PerkCardBuilder.setupCard(boosts.rifleman, 11);\r\n                PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Automatic Pistol\":\r\n                PerkCardBuilder.setupCard(boosts.guerrilla, 11);\r\n                PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Non-Automatic Pistol\":\r\n                PerkCardBuilder.setupCard(boosts.gunslinger, 11);\r\n                PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Bow\":\r\n                PerkCardBuilder.setupCard(boosts.archer, 11);\r\n                PerkCardBuilder.setupCard(boosts.bow_before_me, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Melee One-Handed\":\r\n                PerkCardBuilder.setupCard(boosts.incisor, 3);\r\n                PerkCardBuilder.setupCard(boosts.martial_artist, 3);\r\n                PerkCardBuilder.setupCard(boosts.gladiator, 11);\r\n                PerkCardBuilder.setupCard(boosts.party_girl_boy, 2);\r\n                break;\r\n            case \"Melee Two-Handed\":\r\n                PerkCardBuilder.setupCard(boosts.incisor, 3);\r\n                PerkCardBuilder.setupCard(boosts.martial_artist, 3);\r\n                PerkCardBuilder.setupCard(boosts.slugger, 11);\r\n                PerkCardBuilder.setupCard(boosts.party_girl_boy, 2);\r\n                break;\r\n            case \"Unarmed\":\r\n                PerkCardBuilder.setupCard(boosts.incisor, 3);\r\n                PerkCardBuilder.setupCard(boosts.martial_artist, 3);\r\n                PerkCardBuilder.setupCard(boosts.iron_fist, 3);\r\n                PerkCardBuilder.setupCard(boosts.party_girl_boy, 2);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        calculateSpecial(boosts);\r\n        player.strange = boosts.strange_in_numbers.displayed_value;\r\n        player.freak = boosts.class_freak.displayed_value;\r\n        player.alcoholEffects = (boosts.party_girl_boy.displayed_value) > 0 ? boosts.party_girl_boy.displayed_value : 1;\r\n        setPlayer({...player});\r\n        setBoostDamage(boosts);\r\n    }\r\n\r\n    static setupGeneral(boosts, player) {\r\n        PerkCardBuilder.setupCard(boosts.bloody_mess, 3);\r\n        PerkCardBuilder.setupCard(boosts.class_freak, 3);\r\n        PerkCardBuilder.setupCard(boosts.strange_in_numbers, 1);\r\n        PerkCardBuilder.setupCard(boosts.nerd_rage, 3);\r\n        boosts.nerd_rage.displayed_value = (player.health.value <= 20.0) ? boosts.nerd_rage.value : 0.0;\r\n    }\r\n\r\n    static setupCard(card, rank, x=1) {\r\n        if (rank === 0) {\r\n            x = 1;\r\n        }\r\n        card.rank = rank;\r\n        card.x = x;\r\n        card.value = card.rank_values[card.rank - 1] * x;\r\n        card.is_used = (rank !== 0);\r\n        card.displayed_value = card.value;\r\n    }\r\n\r\n    static getImageNamesForPickedCards(boosts) {\r\n        const result = [];\r\n        for (const name in boosts) {\r\n            const perk = boosts[name];\r\n            if (perk.is_used) {\r\n                result.push(perk.im_name);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static buildWithOptions(wType, automatic, energyTag, explosiveTag, fusionTag, oneHandedTag, twoHandedTag, silencerTag, shotgunTag, main, temp, leg, drink, team, lowHp, pa, explosive, crit, sneak, night, useSerums, player, bodyTags, creatureTags) {\r\n        let boosts = defaultBoosts();\r\n        if (main) {\r\n            PerkCardBuilder.setupCard(boosts.bloody_mess, 3);\r\n            if (bodyTags.includes(\"glowing\")) {\r\n                PerkCardBuilder.setupCard(boosts.glow_sight, 3);\r\n            }\r\n        }\r\n        if (silencerTag && sneak && night && main) {\r\n            PerkCardBuilder.setupCard(boosts.mister_sandman, 2);\r\n        }\r\n        if (useSerums && main) {\r\n            PerkCardBuilder.setupCard(boosts.class_freak, 3);\r\n        }\r\n        if (team && main) {\r\n            PerkCardBuilder.setupCard(boosts.strange_in_numbers, 1);\r\n        }\r\n        if (crit && main) {\r\n            PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n        }\r\n        if (lowHp && main) {\r\n            PerkCardBuilder.setupCard(boosts.nerd_rage, 3);\r\n            player.health.value = 20;\r\n        }\r\n        if (energyTag && wType !== \"Heavy\" && main) {\r\n            PerkCardBuilder.setupCard(boosts.science, 6);\r\n        }\r\n        if (fusionTag && main) {\r\n            PerkCardBuilder.setupCard(boosts.power_user, 3);\r\n        }\r\n        if (temp) {\r\n            PerkCardBuilder.setupCard(boosts.adrenaline, 5, 6);\r\n            PerkCardBuilder.setupCard(boosts.tenderizer, 3);\r\n        }\r\n        if (leg) {\r\n            if (sneak) {\r\n                PerkCardBuilder.setupCard(boosts.follow_through, 4);\r\n            } else {\r\n                PerkCardBuilder.setupCard(boosts.toft, 4);\r\n            }\r\n        }\r\n        if (sneak && main) {\r\n            if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n                PerkCardBuilder.setupCard(boosts.ninja, 3);\r\n            } else {\r\n                PerkCardBuilder.setupCard(boosts.covert_operative, 3);\r\n            }\r\n        }\r\n        if (explosive && main) { // Works with rockets / grenades?\r\n            PerkCardBuilder.setupCard(boosts.demolition_expert, 5);\r\n        }\r\n        if (main) {\r\n            switch(wType) {\r\n                case \"Heavy\":\r\n                    if (pa) {\r\n                        PerkCardBuilder.setupCard(boosts.stabilized, 3); // Works with rockets / grenades?\r\n                    }\r\n                    PerkCardBuilder.setupCard(boosts.lock_and_load, 3); // Works with rockets / grenades?\r\n                    if (!explosiveTag) { // Are rockets / grenades weapons boosted by heavy cards?\r\n                        PerkCardBuilder.setupCard(boosts.heavy_gunner, 11);\r\n                    }\r\n                    if (shotgunTag) {\r\n                        PerkCardBuilder.setupCard(boosts.lock_and_load, 2);\r\n                        PerkCardBuilder.setupCard(boosts.heavy_gunner, 9);\r\n                        PerkCardBuilder.setupCard(boosts.shotgunner, 8);\r\n                    }\r\n                    break;\r\n                case \"Shotgun\":\r\n                    PerkCardBuilder.setupCard(boosts.shotgunner, 11);\r\n                    PerkCardBuilder.setupCard(boosts.scattershot, 3);\r\n                    break;\r\n                case \"Rifle\":\r\n                    PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                    if (automatic) {\r\n                        PerkCardBuilder.setupCard(boosts.commando, 11);\r\n                        PerkCardBuilder.setupCard(boosts.ground_pounder, 3);\r\n\r\n                    } else {\r\n                        PerkCardBuilder.setupCard(boosts.rifleman, 11);\r\n                    }\r\n                    break;\r\n                case \"Pistol\":\r\n                    PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                    if (automatic) {\r\n                        PerkCardBuilder.setupCard(boosts.guerrilla, 11);\r\n                    } else {\r\n                        PerkCardBuilder.setupCard(boosts.gunslinger, 11);\r\n                    }\r\n                    break;\r\n                case \"Bow\":\r\n                    PerkCardBuilder.setupCard(boosts.archer, 11);\r\n                    PerkCardBuilder.setupCard(boosts.bow_before_me, 3);\r\n                    break;\r\n                case \"Melee\":\r\n                    PerkCardBuilder.setupCard(boosts.incisor, 3);\r\n                    if (!automatic) {\r\n                        PerkCardBuilder.setupCard(boosts.martial_artist, 3);\r\n                    }\r\n                    if (drink) {\r\n                        PerkCardBuilder.setupCard(boosts.party_girl_boy, 2);\r\n                    }\r\n                    if (oneHandedTag) {\r\n                        PerkCardBuilder.setupCard(boosts.gladiator, 11);\r\n                    } else if (twoHandedTag) {\r\n                        PerkCardBuilder.setupCard(boosts.slugger, 11);\r\n                    }\r\n                    break;\r\n                case \"Unarmed\":\r\n                    PerkCardBuilder.setupCard(boosts.incisor, 3);\r\n                    PerkCardBuilder.setupCard(boosts.martial_artist, 3);\r\n                    PerkCardBuilder.setupCard(boosts.iron_fist, 3);\r\n                    if (drink) {\r\n                        PerkCardBuilder.setupCard(boosts.party_girl_boy, 2);\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        calculateSpecial(boosts);\r\n        if (temp && boosts.special.agility > 15) {\r\n            const extra = boosts.special.agility - 15;\r\n            let adr = 5 - extra;\r\n            if (adr < 0) {\r\n                adr = 0;\r\n            }\r\n            PerkCardBuilder.setupCard(boosts.adrenaline, adr, 6);\r\n            calculateSpecial(boosts);\r\n        }\r\n        if (main && boosts.special.perception < 15 && creatureTags.includes(\"bug\")) {\r\n            let extra = 15 - boosts.special.perception;\r\n            if (extra > 3) {\r\n                extra = 3;\r\n            }\r\n            PerkCardBuilder.setupCard(boosts.exterminator, extra);\r\n            calculateSpecial(boosts);\r\n        }\r\n        player.strange = boosts.strange_in_numbers.displayed_value;\r\n        player.freak = boosts.class_freak.displayed_value;\r\n        player.team = team;\r\n        player.alcoholEffects = (boosts.party_girl_boy.displayed_value) > 0 ? boosts.party_girl_boy.displayed_value : 1;\r\n        return boosts;\r\n    }\r\n}","const perks = require.context('../resources/perks', true, /\\.webp/);\r\n\r\nexport default function getPerkImage(name) {\r\n    try {\r\n        return perks('./' + name + '.webp');\r\n    } catch {\r\n        return '';\r\n    }\r\n}","import perkCards from '../resources/perkCards.json';\r\nimport { getEffect } from '../helpers/EffectProvider';\r\n\r\n\r\nfunction prepareName(name, card) {\r\n    if (!card.legendary && name.startsWith(\"Expert\")) {\r\n        name = name.slice(7, name.length) + \" (Expert)\";\r\n    } else if (!card.legendary && name.startsWith(\"Master\")) {\r\n        name = name.slice(7, name.length) + \" (Master)\";\r\n    }\r\n    return name;\r\n}\r\n\r\nfor (let i = 0; i < perkCards.length; i++) {\r\n    const card = perkCards[i];\r\n    let name;\r\n    if (!card.mPerk1) {\r\n        name = card.mName;\r\n    } else {\r\n        const mPerk = getEffect(card.mPerk1);\r\n        name = mPerk.full;\r\n    }\r\n    name = prepareName(name, card);\r\n    if (card.fPerk1 && card.fPerk1 !== \"\") {\r\n        const fPerk = getEffect(card.fPerk1);\r\n        const name2 = prepareName(fPerk.full, card);\r\n        name = name + \" / \" + name2;\r\n    }\r\n    card[\"fullName\"] = name;\r\n}\r\n\r\nfunction nameComparator(item1, item2) {\r\n    return item1.fullName.localeCompare(item2.fullName);\r\n}\r\n\r\nconst sortedItems = perkCards.sort(nameComparator);\r\n\r\nexport function getSortedPerkCards() {\r\n    return sortedItems;\r\n}\r\n\r\nexport function getPerkCard(id) {\r\n    for (let i = 0; i < sortedItems.length; i++) {\r\n        const item = sortedItems[i];\r\n        if (item.id === id) {\r\n            return item;\r\n        }\r\n    }\r\n    return null;\r\n}","export default class PerkCardTools {\r\n\r\n    static getColor(type) {\r\n        return getComputedStyle(document.documentElement).getPropertyValue(\"--bg-\" + type.toLowerCase() + \"-card-color\");\r\n    }\r\n}","import Button from 'react-bootstrap/Button';\r\nimport PerkCardTools from '../PerkCardTools';\r\n\r\n\r\nexport default function PerkCardButton(props) {\r\n    const bgColor = PerkCardTools.getColor(props.item.type);\r\n    const desc = (props.item.desc && props.item.desc !== \"\") ? props.item.desc : \"-\";\r\n    const legBadge = (props.item.legendary) ? <div className=\"badge bg-lite-shadow2\" style={{backgroundColor: '#ffc700', color: '#513f00'}}>Legendary</div> : <></>;\r\n    return (\r\n        <div>\r\n            <Button id={props.item['id']} className=\"lite-shadow\" variant=\"blue-white-border\" style={{width: '100%', margin: '0.1rem', paddingTop: '0.2rem', paddingBottom: '0.1rem', padding: \"0.3rem\"}} onClick={props.onClick}>\r\n                <div className=\"mb-2\">\r\n                    <h6><b>{props.item.fullName}</b></h6>\r\n                </div>\r\n                <div className=\"p-1 perk-description\">\r\n                    {desc}\r\n                </div>\r\n                <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                    <div className=\"w-100 d-flex pt-2 justify-content-start\">\r\n                        {legBadge}\r\n                    </div>\r\n                    <div className=\"w-100 d-flex pt-2 justify-content-end\">\r\n                        <div className=\"badge bg-lite-shadow2\" style={{backgroundColor: bgColor, color: '#fff'}}>{props.item.type}</div>\r\n                    </div>\r\n                </div>\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import Container from 'react-bootstrap/Container';\r\nimport PerkCardButton from './PerkCardButton';\r\nimport { memo, useState } from 'react';\r\nimport { Pagination, FloatButton } from 'antd';\r\nimport { getPerkCard, getSortedPerkCards } from '../PerkCardProvider';\r\n\r\n\r\n\r\nconst PerkCardItems = memo(function PerkCardItems(props) {\r\n    console.log(\"Perk Card Items\");\r\n    const [pageSize, setPageSize] = useState(20);\r\n    function onItemClick(e) {\r\n        const id = e.currentTarget.id;\r\n        if (!props.currentItem) {\r\n            props.setShowToast(true);\r\n        } else {\r\n            props.setShowToast(!(props.currentItem.id === id && props.showToast));\r\n        }\r\n        props.setCurrentItem(getPerkCard(id));\r\n    }\r\n    const items = [];\r\n    const sortedItems = getSortedPerkCards();\r\n    const needTypeFilter = props.filterType !== 'All';\r\n    for (let i = 0; i < sortedItems.length; i++) {\r\n        const item = sortedItems[i];\r\n        if (needTypeFilter && item.type !== props.filterType) {\r\n            continue;\r\n        }\r\n        if (props.filterStatus === \"Legendary\" && !item.legendary) {\r\n            continue;\r\n        } else if (props.filterStatus === \"Ordinary\" && item.legendary) {\r\n            continue;\r\n        }\r\n        if (props.filterName && props.filterName !== \"\" && !item.fullName.toLowerCase().includes(props.filterName.toLowerCase())) {\r\n            continue;\r\n        }\r\n        items.push(\r\n            <PerkCardButton key={item.id} index={i} item={item} onClick={onItemClick} />\r\n        );\r\n    }\r\n    function onPageChanged(page, pageSize) {\r\n        props.setCurrentPage(page);\r\n        setPageSize(pageSize);\r\n    }\r\n    const paginated = [];\r\n    const start = (props.currentPage - 1) * pageSize;\r\n    const end = start + pageSize;\r\n    for (let i = start; i < end; i++) {\r\n        paginated.push(items[i]);\r\n    }\r\n    return (\r\n        <Container>\r\n            <Pagination className=\"pt-1 pb-3\" align=\"center\" current={props.currentPage} defaultPageSize={pageSize} onChange={onPageChanged} total={items.length} />\r\n            {paginated}\r\n            <Pagination className=\"pt-3\" align=\"center\" current={props.currentPage} defaultPageSize={pageSize} onChange={onPageChanged} total={items.length} />\r\n            <FloatButton.BackTop style={{ right: 60 }} duration={100} visibilityHeight={2000} />\r\n        </Container>\r\n\r\n    );\r\n});\r\n\r\nexport default PerkCardItems;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport BaseDropdown from '../../viewComponents/dropdown/BaseDropdown';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst typeDict = {All: 'All', Strength: 'Strength', Perception: 'Perception', Endurance: 'Endurance', Charisma: 'Charisma', Intelligence: 'Intelligence', Agility: 'Agility', Luck: 'Luck'};\r\nconst statusDict = {All: 'All', Legendary: 'Legendary', Ordinary: 'Ordinary'};\r\n\r\nexport default function PerkCardFilter(props) {\r\n    function nameChanged(e) {\r\n        props.setFilterName(e.target.value);\r\n        props.setCurrentPage(1);\r\n    }\r\n    function onSelectType(e) {\r\n        props.setFilterType(e);\r\n        props.setCurrentPage(1);\r\n    }\r\n    function onSelectStatus(e) {\r\n        props.setFilterStatus(e);\r\n        props.setCurrentPage(1);\r\n    }\r\n    return (\r\n        <div>\r\n            <InputGroup className=\"ps-1 pe-1 pb-2 flex-nowrap\">\r\n                <BaseDropdown title={'Type'} dict={typeDict} onSelect={onSelectType}></BaseDropdown>\r\n                <Form.Control style={{width: '10rem'}} maxLength=\"70\" onChange={nameChanged} />\r\n                <BaseDropdown title={'Status'} dict={statusDict} onSelect={onSelectStatus}></BaseDropdown>\r\n            </InputGroup>\r\n        </div>\r\n    );\r\n}","import Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport StackEffectView from '../../helpers/views/StackEffectView';\r\n\r\n\r\nexport default function PerkCardToast(props) {\r\n    if (!props.showToast || !props.item) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <ToastContainer\r\n            className=\"p-3 position-fixed p-3\"\r\n            position={\"top-center\"}\r\n            role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\r\n            style={{ zIndex: 10 }}>\r\n            <Toast bg=\"light\" onClose={(e) => props.setShowToast(false)} show={props.showToast} animation={false}>\r\n                <Toast.Header className=\"pe-3\">\r\n                    <strong className=\"ms-2 mt-auto mb-auto p-auto me-auto\">{props.item['fullName']}</strong>\r\n                </Toast.Header>\r\n                <Toast.Body className={\"pt-1 pb-2 modal-scroll-60 p-2\"}>\r\n                    <StackEffectView item={props.item} />\r\n                </Toast.Body>\r\n            </Toast>\r\n        </ToastContainer>\r\n    );\r\n}","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { memo, useState } from 'react';\r\nimport StaticPopoverRenderer from '../../viewComponents/popover/StaticPopoverRenderer';\r\nimport Global from '../../helpers/Global';\r\nimport Button from 'react-bootstrap/Button';\r\nimport PerkCardItems from './PerkCardItems';\r\nimport PerkCardFilter from './PerkCardFilter';\r\nimport PerkCardToast from './PerkCardToast';\r\nimport FilterDisplay from '../../consumables/view/FilterDisplay';\r\n\r\n\r\nconst questionPopoverHeader = (<b>Perk Cards</b>);\r\n\r\nconst questionPopoverBody = (\r\n    <>\r\n        <div><b>Items with next properties are not included:</b></div>\r\n        <div>⁃<i> Vault</i></div>\r\n        <div>⁃<i> CUT</i></div>\r\n        <div>⁃<i> zzz_Babylon</i></div>\r\n        <div className=\"mb-2\">⁃<i> zzz_deleted</i></div>\r\n        <div className=\"mb-2\"><b>Parsed from:</b></div>\r\n        <div><i>{Global.perkCardParseVersion}</i></div>\r\n        <div><i>{Global.perkCardParseVersionName}</i></div>\r\n    </>\r\n);\r\n\r\nconst questionPopover = new StaticPopoverRenderer(questionPopoverHeader, questionPopoverBody, 'PerkCardQuestionPopoverPlace');\r\n\r\nconst PerkCardView = memo(function PerkCardView() {\r\n    console.log(\"PerkCardView\");\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [filterName, setFilterName] = useState(\"\");\r\n    const [filterType, setFilterType] = useState(\"All\");\r\n    const [filterStatus, setFilterStatus] = useState(\"All\"); // Legendary / Non Legendary\r\n    function onQClick(e) {\r\n        questionPopover.renderToggle(e.target);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"7\">\r\n                <Accordion.Header>\r\n                    <div id=\"PerkCardQuestionPopoverPlace\"></div>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '12rem'}}>\r\n                            <span className=\"ac-text\">Perk Cards</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '2rem'}} onClick={onQClick}>?</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <PerkCardToast item={currentItem} showToast={showToast} setShowToast={setShowToast} />\r\n                    <PerkCardFilter setFilterType={setFilterType} setFilterName={setFilterName} filterType={filterType} setCurrentPage={setCurrentPage} filterStatus={filterStatus} setFilterStatus={setFilterStatus} />\r\n                    <FilterDisplay filterType={filterType} filterEffect={filterStatus} />\r\n                    <PerkCardItems filterType={filterType} filterName={filterName} filterStatus={filterStatus} currentPage={currentPage} setCurrentPage={setCurrentPage} currentItem={currentItem} setCurrentItem={setCurrentItem} showToast={showToast} setShowToast={setShowToast} />\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PerkCardView;","import { useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nconst { Chart } = await import('chart.js/auto');\r\n\r\n\r\nfunction getData(values, label, color) {\r\n    return {\r\n        datasets: [{\r\n            label: label,\r\n            data: values,\r\n            borderColor: color,\r\n            pointRadius: 1.5,\r\n            borderWidth: 2,\r\n            fill: false,\r\n        }],\r\n    };\r\n}\r\n\r\nfunction getConfig(data) {\r\n    return {\r\n        type: 'line',\r\n        data: data,\r\n        options: {\r\n            plugins: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n            },\r\n            elements: {\r\n                line: {\r\n                    tension: 0,\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    position: 'bottom',\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Level',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                },\r\n                y: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Resistance',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                }\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\nfunction drawChart(config, chartId) {\r\n    const curChart = Chart.getChart(chartId);\r\n    if (curChart) {\r\n        curChart.destroy();\r\n    }\r\n    new Chart(document.getElementById(chartId), config);\r\n}\r\n\r\nfunction getCanvas(id) {\r\n    if (!id) {\r\n        return (<></>);\r\n    }\r\n    return (<canvas id={id}></canvas>);\r\n}\r\n\r\nexport default function ChartView(props) {\r\n    const config = getConfig(getData(props.values, props.title + \" Resistance\", props.color));\r\n    useEffect(() => {\r\n        drawChart(config, props.chartId);\r\n    });\r\n\r\n    return (\r\n        <Card className={props.className} style={{minWidth: '18rem'}}>\r\n            <Card.Header className={props.headerClassName}>\r\n                {props.title}\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex justify-content-center p-0\">\r\n                {getCanvas(props.chartId)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag } from 'antd';\r\n\r\n\r\nexport default function GeneralRaceView(props) {\r\n    if (!props.race) {\r\n        return (<></>)\r\n    }\r\n    const codeName = props.race.name;\r\n    const id = props.race.id;\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col className=\"d-flex justify-content-end p-0 me-1\">\r\n                    <Tag bordered={true} color=\"red\" className=\"shadow-outline m-0\"><strong>Id: {id}</strong></Tag>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mt-2\">\r\n                <Col className=\"d-flex justify-content-end p-0 me-1\">\r\n                    <Tag bordered={true} color=\"blue\" className=\"shadow-outline m-0\"><strong>Code: {codeName}</strong></Tag>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag, Divider } from 'antd';\r\nimport { numberToString } from '../../helpers/StringHelpers';\r\n\r\n\r\n// const colors = [\"volcano\", \"red\", \"magenta\", \"blue\", \"purple\"];\r\n\r\nfunction getColTagView(tag, index, position=\"center\") {\r\n    // colors[getRandomNumber(colors.length)]\r\n    return (\r\n        <Col key={tag + index} className={\"m-1 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <Tag className=\"m-0 shadow-outline\" bordered={true} color={\"purple\"}>\r\n                <b>{tag}</b>\r\n            </Tag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction getTagView(tag, index, position, color) {\r\n    return (\r\n        <div className={\"m-0 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <Tag className=\"shadow-outline m-1\" bordered={true} color={color}>\r\n                <b>{tag}</b>\r\n            </Tag>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function RaceBodyView({bodyData}) {\r\n    const body = bodyData.body;\r\n    if (body) {\r\n        const result = [];\r\n        let index = 0\r\n        for (const partName in body) {\r\n            index += 1;\r\n            const part = body[partName];\r\n            const partText = part.name + \" ‣ \" + numberToString(part.damage_mult, 2) + \"x\"\r\n            result.push(getColTagView(partText, index, \"center\"));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-4 mb-1\">Body Damage Multipliers</Divider>\r\n                {getTagView(\"Id: \" + bodyData.id, 0, \"end\", \"red\")}\r\n                {getTagView(\"Id: \" + bodyData.name, 0, \"end\", \"blue\")}\r\n                <div className=\"m-3\" />\r\n                <Row className=\"ps-1 pe-1 pb-2\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","export default class RaceTools {\r\n\r\n    static prepareRaceName(name) {\r\n        if (name.endsWith(\"_Race\")) {\r\n            name = name.substring(0, name.length - 5);\r\n        }\r\n        else if (name.endsWith(\"Race\")) {\r\n            name = name.substring(0, name.length - 4);\r\n        }\r\n        if (name.startsWith(\"ZZZ_\") || name.startsWith(\"zzz_\") || name.startsWith(\"ATX_\") || name.startsWith(\"XPD_\")) {\r\n            name = name.substring(4, name.length);\r\n        }\r\n        return name;\r\n    }\r\n}","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport RaceTools from '../RaceTools';\r\nimport { memo } from 'react';\r\n\r\n\r\nfunction getItems(pairs) {\r\n    const result = [];\r\n    for (let i = 0; i < pairs.length; i++) {\r\n        const pair = pairs[i];\r\n        const value = RaceTools.prepareRaceName(pair.value);\r\n        result.push(<Dropdown.Item key={pair.key} eventKey={pair.key}>{value}</Dropdown.Item>)\r\n    }\r\n    return result;\r\n}\r\n\r\nconst RaceDropdown = memo(function RaceDropdown(props) {\r\n    let raceName = \"Choose a race\";\r\n    if (props.raceName) {\r\n        raceName = RaceTools.prepareRaceName(props.raceName);\r\n    }\r\n    function onSelect(e) {\r\n        props.setRaceName(e);\r\n    }\r\n    return (\r\n        <Row className=\"p-1 mb-2 mt-0\">\r\n            <Col className=\"d-flex justify-content-center\">\r\n                <DropdownButton variant='warning' size=\"sm\" onSelect={onSelect} title={<strong>{raceName}</strong>}>\r\n                    {getItems(props.pairs)}\r\n                </DropdownButton>\r\n            </Col>\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default RaceDropdown;\r\n\r\n","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag, Divider } from 'antd';\r\n\r\n\r\nfunction getTagView(tag) {\r\n    return (\r\n        <Col key={tag} className=\"m-0 ps-0 pe-0 d-flex justify-content-center\">\r\n            <Tag className=\"m-1 shadow-outline\" bordered={true} color=\"default\">\r\n                <b>{tag}</b>\r\n            </Tag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function RaceTagView({tags}) {\r\n    if (tags && tags.length > 0) {\r\n        const result = [];\r\n        for (let i = 0; i < tags.length; i++) {\r\n            result.push(getTagView(tags[i]));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-3 mb-1\">Tags</Divider>\r\n                <Row className=\"ps-1 pe-1\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport ResistanceView from './ResistanceView';\r\nimport RaceTagView from './RaceTagView';\r\nimport RaceBodyView from './RaceBodyView';\r\nimport { memo, useState } from 'react';\r\nimport raceItems from '../../resources/race.json';\r\nimport RaceDropdown from './RaceDropdown';\r\nimport GeneralRaceView from './GeneralRaceView';\r\nimport Container from 'react-bootstrap/Container';\r\nimport StaticPopoverRenderer from '../../viewComponents/popover/StaticPopoverRenderer';\r\nimport Global from '../../helpers/Global';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst questionPopoverHeader = (<b>Races</b>);\r\n\r\nconst questionPopoverBody = (\r\n    <>\r\n        <div className=\"mb-2\"><b>Parsed from:</b></div>\r\n        <div><i>{Global.raceParseVersion}</i></div>\r\n        <div><i>{Global.raceParseVersionName}</i></div>\r\n    </>\r\n);\r\n\r\nconst questionPopover = new StaticPopoverRenderer(questionPopoverHeader, questionPopoverBody, 'RaceViewQuestionPopoverPlace');\r\n\r\nconst raceMap = new Map();\r\nconst racePairs = [];\r\n\r\nfunction raceComparator(race1, race2) {\r\n    const name1 = race1.key;\r\n    const name2 = race2.key;\r\n    return name1.localeCompare(name2)\r\n}\r\n\r\nfor (let i = 0; i < raceItems.length; i++) {\r\n        const item = raceItems[i];\r\n        const it = raceMap.get(item.full);\r\n        if (it) {\r\n            console.log(\"Same name: \" + it.id + \" \" + item.id);\r\n        }\r\n        raceMap.set(item.full, item);\r\n        racePairs.push({key: item.full, value: item.full});\r\n}\r\n\r\nracePairs.sort(raceComparator);\r\n\r\nfunction getRaceTagView(race) {\r\n    if (!race) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <RaceTagView tags={race.tags} />\r\n    );\r\n}\r\n\r\nfunction getRaceBodyView(race) {\r\n    if (!race) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <RaceBodyView bodyData={race.bodyData} />\r\n    );\r\n}\r\n\r\nconst RaceView = memo(function RaceView() {\r\n    console.log(\"RaceView\");\r\n    const [raceName, setRaceName] = useState(null);\r\n    let race = null;\r\n    if (raceName) {\r\n        race = raceMap.get(raceName);\r\n    }\r\n    function onQClick(e) {\r\n        questionPopover.renderToggle(e.target);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"5\">\r\n                <Accordion.Header>\r\n                    <div id=\"RaceViewQuestionPopoverPlace\"></div>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '12rem'}}>\r\n                            <span className=\"ac-text\">Races</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '2rem'}} onClick={onQClick}>?</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <Container>\r\n                        <RaceDropdown pairs={racePairs} raceName={raceName} setRaceName={setRaceName} />\r\n                        <GeneralRaceView race={race} />\r\n                        {getRaceTagView(race)}\r\n                        {getRaceBodyView(race)}\r\n                        <ResistanceView race={race} />\r\n                    </Container>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default RaceView;","import ChartView from \"./ChartView\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Divider } from 'antd';\r\nimport CreatureDataProvider from '../../creature/CreatureDataProvider';\r\n\r\n\r\nfunction buildResCols(res) {\r\n    const result = [];\r\n    for (const name in res) {\r\n        const cRes = res[name];\r\n        const typeData = CreatureDataProvider.getStyle(name);\r\n        result.push(\r\n            <Col className=\"d-flex justify-content-center\" key={name}>\r\n                <ChartView className=\"d-flex justify-content-center m-1\" color={typeData[2]} headerClassName={typeData[1]} title={typeData[0]} chartId={name} values={cRes.curve} />\r\n            </Col>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function ResistanceView(props) {\r\n    if (!props.race || Object.keys(props.race.resistance).length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className=\"p-0 mt-3 mb-2\">Resistance</Divider>\r\n            <Row className=\"d-flex justify-content-center\">\r\n                {buildResCols(props.race.resistance)}\r\n            </Row>\r\n        </>\r\n    )\r\n}","import { Tag, Divider } from 'antd';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { keyValueTag } from '../helpers/RowBuilder';\r\nimport { getEffectsForPopover, getSpellHeader } from '../helpers/SpellView';\r\nimport getSpell from '../helpers/Spell';\r\nimport { truncate } from '../helpers/Input';\r\n\r\n\r\nfunction buildModCard(key, mod_e, color) {\r\n    if (mod_e.prop === \"Enchantments\") {\r\n        const spell = getSpell().get(mod_e.val1);\r\n        const effects = spell.mag_effects;\r\n        return (\r\n            <Card key={key} className=\"mb-1 mt-1\">\r\n                {keyValueTag(mod_e.op, mod_e.prop, color)}\r\n                {getSpellHeader(spell, '20rem')}\r\n                {getEffectsForPopover(effects)}\r\n            </Card>\r\n        );\r\n    } else {\r\n        const val1 = truncate(mod_e.val1, 30);\r\n        const val2 = truncate(mod_e.val2, 30);\r\n        return (\r\n            <Card key={key} className=\"mb-1 mt-1\">\r\n                {keyValueTag(mod_e.op, mod_e.prop, color)}\r\n                {keyValueTag('Val1:', val1, color)}\r\n                {keyValueTag('Val2:', val2, color)}\r\n                {keyValueTag('Curv:', mod_e.curv, color)}\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nfunction getMods(mods) {\r\n    let result = []\r\n    let color = 'purple';\r\n    for (let i = 0; i < mods.length; i++) {\r\n        const mod_e = mods[i];\r\n        result.push(buildModCard(i, mod_e, color));\r\n        if (color === 'purple') {\r\n            color = 'magenta';\r\n        } else {\r\n            color = 'purple';\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function popoverContent(modData) {\r\n    return (\r\n        <>\r\n            <Tag className=\"m-1\" color={'indigo'}><strong>{modData.id}</strong></Tag>\r\n            <Tag className=\"m-1\" color={'red'}>{modData.codeName}</Tag>\r\n            <Divider className='mt-1 mb-2'></Divider>\r\n            {getMods(modData.modifiers)}\r\n        </>\r\n    );\r\n}","import { ModTools } from '../helpers/mods/ModTools';\r\nimport Strings from '../helpers/Strings';\r\n\r\n\r\nexport default class TemplateTools {\r\n\r\n    // ATTENTION! Do not exclude activated by default\r\n    static excludedModIds = {\r\n        \"00693d37\" : [\"00496566\", \"001ac24e\", \"00147b02\", \"00496564\", \"00496565\"], // Blue flamer (Holy fire)\r\n        \"000e5881\" : [\"00496566\", \"001ac24e\", \"00147b02\", \"00496564\", \"00496565\", \"006e06a3\"],\r\n    }\r\n\r\n    static excludeMod(wId, mId) {\r\n        const eIds = TemplateTools.excludedModIds[wId];\r\n        if (eIds) {\r\n            for (let i = 0; i < eIds.length; i++) {\r\n                const eId = eIds[i];\r\n                if (eId === mId) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Get rid of mods which do not influence on damage or hidden\r\n    static getDamagedModIndexes(template, includeGroups, accuracyMods, silencerDamage) {\r\n        const result = {}\r\n        for (const categoryName in template.allMods) {\r\n            const mods = template.allMods[categoryName];\r\n            const exclude = includeGroups && !includeGroups.includes(categoryName);\r\n            let defaultIndex = -1;\r\n            let accuracyBestIndex = -1;\r\n            let indexes = [];\r\n            for (let i = 0; i < mods.length; i++) {\r\n                const mod = mods[i];\r\n                const modId = mod[0];\r\n                if (exclude) { // Care only about default if it is presented\r\n                    if (mod[1]) {\r\n                        defaultIndex = i;\r\n                        break;\r\n                    }\r\n                } else if (!TemplateTools.excludeMod(template.id, modId) && !mod[3]) { // 3-hidden\r\n\r\n                    // 4-useful (means directly affecting on damage)\r\n                    if (mod[4]) {\r\n                        if (ModTools.hasSilencerById(modId)) {\r\n                            if (silencerDamage) {\r\n                                indexes.push(i);\r\n                            }\r\n                        } else {\r\n                            indexes.push(i);\r\n                        }\r\n                    } else if (accuracyBestIndex === -1) {\r\n                        const bestMod = accuracyMods[categoryName];\r\n                        if (bestMod && bestMod === modId) {\r\n                            accuracyBestIndex = i;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (exclude) { // Can't choose, using only default one\r\n                indexes = [defaultIndex];\r\n            } else if (indexes.length === 0) { // All are damage useless, using best accuracy or default\r\n                if (accuracyBestIndex === -1) {\r\n                    indexes = [defaultIndex];\r\n                } else {\r\n                    indexes = [accuracyBestIndex];\r\n                }\r\n            }\r\n            result[categoryName] = indexes;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static resetMods(template) {\r\n        const modCategories = template.allMods;\r\n        for (const modCategory in modCategories) {\r\n            const mods = modCategories[modCategory];\r\n            for (let i = 0; i < mods.length; i++) {\r\n                const mod = mods[i];\r\n                mod[1] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getImage(template) {\r\n        return template.iconName[template.type[1]];\r\n    }\r\n\r\n    static hasDefaultLegendary(template) {\r\n        const leg1 = template.legendary1;\r\n        const leg2 = template.legendary2;\r\n        const leg3 = template.legendary3;\r\n        const leg4 = template.legendary4;\r\n        const leg5 = template.legendary5;\r\n        return (leg1.id || leg2.id || leg3.id || leg4.id || leg5.id);\r\n    }\r\n\r\n    static getDefaultLegendary(template, legendarySetter) {\r\n        const result = [];\r\n        const obj = legendarySetter.extractDefaultLegendary(template);\r\n        const leg1 = obj.legendary1;\r\n        const leg2 = obj.legendary2;\r\n        const leg3 = obj.legendary3;\r\n        const leg4 = obj.legendary4;\r\n        const leg5 = obj.legendary5;\r\n        if (leg1) {\r\n            result.push([leg1.id, 0]);\r\n        }\r\n        if (leg2) {\r\n            result.push([leg2.id, 1]);\r\n        }\r\n        if (leg3) {\r\n            result.push([leg3.id, 2]);\r\n        }\r\n        if (leg4) {\r\n            result.push([leg4.id, 3]);\r\n        }\r\n        if (leg5) {\r\n            result.push([leg5.id, 4]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static isWeaponRanged(template) {\r\n        return TemplateTools.isWeaponRangedByType(template.type[1]);\r\n    }\r\n\r\n    static isWeaponRangedByType(type) {\r\n        return !(type === Strings.Melee || type === Strings.Unarmed);\r\n    }\r\n\r\n    static isWeaponExplosive(template) {\r\n        return template['exp'][1] > 0;\r\n    }\r\n\r\n    static hasPhysicalDamage(template) {\r\n        return template['bbDamage'][1] > 0;\r\n    }\r\n\r\n    static getGroups(templates, set) {\r\n        for (let i = 0; i < templates.length; i++) {\r\n            for (const name in templates[i].allMods) {\r\n                set.add(name);\r\n            }\r\n        }\r\n    }\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { convertTemplateToSpecs } from '../entities/EWeaponSpecs';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction modalView(loading, name, applyTemplate, onHide) {\r\n    if (loading) {\r\n        return (\r\n            <Modal.Body>\r\n                <b>Loading...</b>\r\n            </Modal.Body>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Apply Template\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to apply '{name}' template? Current weapon properties will be replaced.\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={applyTemplate}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function ModalApplyTemplate(props) {\r\n    console.log(\"ModalApplyTemplate\");\r\n    const [loading, setLoading] = useState(false);\r\n    if (!props.modalTemplate.show) {\r\n        return (<></>);\r\n    }\r\n    let name = \"\";\r\n    if (props.modalTemplate.template) {\r\n        name = props.modalTemplate.template.name;\r\n    }\r\n    name = truncateLongWords(name, 25);\r\n    function onHide(e) {\r\n        setLoading(false);\r\n        props.setModalTemplate({template: null, show: false});\r\n    }\r\n\r\n    function applyTemplate(e) {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const template = props.modalTemplate.template;\r\n            const specItem = convertTemplateToSpecs(template, false);\r\n            props.setWSpec(specItem);\r\n            onHide(e);\r\n        }, 100);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show = {props.modalTemplate.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            {modalView(loading, name, applyTemplate, onHide)}\r\n        </Modal>\r\n    );\r\n}","import getAmmo from '../helpers/Ammo';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Collapse } from 'antd';\r\nimport { getField } from './ViewHelper';\r\nimport { buildProjViewById } from './ProjView';\r\n\r\n\r\nfunction buildProj(proj) {\r\n    const result = [];\r\n    if (proj && proj.length > 0) {\r\n        for (let i = 0; i < proj.length; i++) {\r\n            const projId = proj[i];\r\n            result.push(\r\n                <Card key={i} className=\"m-0 mt-2 p-0 bg-light-pink\">\r\n                    <Card.Header className='m-0 p-1 ps-2 bg-proj-header'><small>Projectile</small></Card.Header>\r\n                    <Card.Body className=\"p-1 m-0\">\r\n                        {buildProjViewById(projId)}\r\n                    </Card.Body>\r\n                </Card>\r\n            );\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction buildAmmoView(ammoData, proj) {\r\n    return (\r\n        <>\r\n            <Row className='bg-lite'>\r\n                {getField(ammoData, 'Id:', 'id', 'default', '20rem')}\r\n                {getField(ammoData, 'Code Name:', 'name', 'purple', '20rem')}\r\n                {getField(ammoData, 'Full Name:', 'full', 'purple', '20rem')}\r\n                {getField(ammoData, 'Type:', 'ammo_type', 'blue', '20rem')}\r\n                {getField(ammoData, 'Value:', 'value', 'blue', '20rem')}\r\n                {getField(ammoData, 'Weight:', 'weight', 'blue', '20rem', true, 3)}\r\n                {getField(ammoData, 'Damage:', 'damage', 'blue', '20rem', false)}\r\n                {getField(ammoData, 'Health:', 'health', 'blue', '20rem', false)}\r\n            </Row>\r\n            {buildProj(proj)}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction ammoInfo(className, id, overrideProj) {\r\n    if (id === '') {\r\n        return (<></>);\r\n    }\r\n    const ammoData = getAmmo().get(id);\r\n    let proj = [ammoData['projectile']];\r\n    if (overrideProj && overrideProj.length > 0) {\r\n        proj = overrideProj;\r\n    }\r\n\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>Ammo</strong>,\r\n            children: <>{buildAmmoView(ammoData, proj)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Collapse size='small' items={items} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// overrideProj is deprecated, only Additional projectile seems can be overridden\r\nexport default function AmmoView({className, ammoId, overrideProj}) {\r\n    return ammoInfo(className, ammoId, overrideProj);\r\n}","import { getField } from './ViewHelper';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nfunction getDamagesData(damageData, width='20rem') {\r\n    let result = [];\r\n    for (let i = 0; i < damageData.length; i++) {\r\n        result.push(getDamageData(i, damageData[i], width));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getDamageData(key, damageData, width='20rem') {\r\n    return (\r\n        <Card className='p-0 m-1' key={key}>\r\n            <Row>\r\n                {getField(damageData, 'Id:', 'type_id', 'default', width)}\r\n                {getField(damageData, 'Code Name:', 'type_name', 'purple', width)}\r\n                {getField(damageData, 'Name:', 'type_full_name', 'purple', width)}\r\n                {getField(damageData, 'DCurv:', 'curv', 'blue', width)}\r\n                {getField(damageData, 'Value:', 'value', 'blue', width)}\r\n                {getField(damageData, 'Magnitude:', 'magnitude', 'blue', width)}\r\n                {getField(damageData, 'Time:', 'time', 'blue', width)}\r\n                {getField(damageData, 'Interval:', 'interval', 'blue', width)}\r\n            </Row>\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction buildCard(damageData, header, className) {\r\n    if (damageData) {\r\n        return (\r\n            <Card className=\"bg-light-pink\">\r\n                <Card.Header className={className}>\r\n                    <small>{header}</small>\r\n                </Card.Header>\r\n                <Card.Body className=\"p-0 m-0\">\r\n                    {getDamagesData(damageData)}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nexport default function DamageView({damageData}) {\r\n    return (\r\n        <>\r\n            {buildCard(damageData.Base, \"Damage\", \"bg-damage-header m-0 p-1 ps-2\")}\r\n        </>\r\n    );\r\n}","import { keyValueTag } from '../helpers/RowBuilder';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Collapse } from 'antd';\r\nimport { getField, getResolvedField } from './ViewHelper';\r\nimport SpellView from './SpellView';\r\nimport DamageView from './DamageView';\r\n\r\n\r\nfunction getTags(template) {\r\n    let result = [];\r\n    const tagNames = template['tags'];\r\n    for (let i = 0; i < tagNames.length; i++) {\r\n        result.push(\r\n            (\r\n                <Col key={i} className='d-flex justify-content-center'>\r\n                    {keyValueTag(\"Tag: \",  tagNames[i], 'magenta', {width: '20rem'})}\r\n                </Col>\r\n            )\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction buildGeneralView(template) {\r\n    const auto = (template.isAuto[1] === 1) ? \"Yes\" : \"No\";\r\n    const crit = template.crMult + template.crit[1] / 100.0;\r\n    const crit_spells = template.crSpellId[1];\r\n    let crit_views = [];\r\n    for (let i = 0; i < crit_spells.length; i++) {\r\n        crit_views.push(<SpellView key={i} spellId={crit_spells[i]} header={\"Crit Spell\"}></SpellView>);\r\n    }\r\n    return (\r\n        <>\r\n            <Row className=\"mb-2 bg-lite\">\r\n                {getField(template, 'Id:', 'id', 'default', '20rem')}\r\n                {getField(template, 'Code Name:', 'cName', 'purple', '20rem')}\r\n                {getField(template, 'Full Name:', 'name', 'purple', '20rem')}\r\n                {getResolvedField(\"Automatic\", auto, 'blue', '20rem')}\r\n                {getField(template, 'AP:', 'ap', 'blue', '20rem', false, 3, 1)}\r\n                {getField(template, 'Weight:', 'weight', 'blue', '20rem', false, 3, 1)}\r\n                {getField(template, 'Levels:', 'levels', 'blue', '20rem')}\r\n                {getResolvedField('Crit Mult:', crit, 'blue', '20rem', false, 3)}\r\n                {getField(template, 'Crit Charge:', 'crChar', 'blue', '20rem')}\r\n                {getField(template, 'Crit Spell:', 'crSpellId', 'blue', '20rem', true, 0, 1)}\r\n                {getTags(template)}\r\n            </Row>\r\n            <DamageView damageData={template['damageData']}></DamageView>\r\n            <div className=\"mb-2\" />\r\n            <SpellView spellId={template.spellId} header={\"Base Spell\"}></SpellView>\r\n            <div className=\"mb-2\" />\r\n            {crit_views}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction general(template) {\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>General</strong>,\r\n            children: <>{buildGeneralView(template)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Collapse size='small' items={items} />\r\n    );\r\n}\r\n\r\nconst GeneralView = function GeneralView(props) {\r\n    return general(props.template);\r\n}\r\n\r\nexport default GeneralView;","import { keyValueBadge } from './RowBuilder';\r\nimport {  Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nfunction formatName(legendaryName) {\r\n    const tail = \" Legendary Mod\";\r\n    if (legendaryName.endsWith(tail)) {\r\n        return legendaryName.slice(0, legendaryName.length - tail.length);\r\n    }\r\n    return legendaryName;\r\n}\r\n\r\nexport default function LegendaryView({template}) {\r\n    const isLeg1 = (Object.keys(template.legendary1).length > 0);\r\n    const isLeg2 = (Object.keys(template.legendary2).length > 0);\r\n    const isLeg3 = (Object.keys(template.legendary3).length > 0);\r\n    const isLeg4 = (Object.keys(template.legendary4).length > 0);\r\n    const isLeg5 = (Object.keys(template.legendary5).length > 0);\r\n    if (isLeg1 || isLeg2 || isLeg3 || isLeg4 || isLeg5) {\r\n        const leg1 = (isLeg1) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐\", formatName(template.legendary1.name)) : (<></>);\r\n        const leg2 = (isLeg2) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐⭐\", formatName(template.legendary2.name)) : (<></>);\r\n        const leg3 = (isLeg3) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐⭐⭐\", formatName(template.legendary3.name)) : (<></>);\r\n        const leg4 = (isLeg4) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐⭐⭐⭐\", formatName(template.legendary4.name)) : (<></>);\r\n        const leg5 = (isLeg5) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐⭐⭐⭐⭐\", formatName(template.legendary5.name)) : (<></>);\r\n        return (\r\n            <>\r\n                <Divider className='m-1 p-1'>Legendary</Divider>\r\n                <Row className=\"m-1 d-flex justify-content-center\">\r\n                    {leg1}\r\n                    {leg2}\r\n                    {leg3}\r\n                    {leg4}\r\n                    {leg5}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import { getField, getResolvedField } from './ViewHelper';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Collapse } from 'antd';\r\n\r\n\r\nfunction getDamagesData(damageData, width='20rem') {\r\n    let result = [];\r\n    for (let i = 0; i < damageData.length; i++) {\r\n        result.push(getDamageData(i, damageData[i], width));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getDamageData(key, damageData, width='20rem') {\r\n    return (\r\n            <Card key={key} className=\"mt-1 mb-1 bg-lite\">\r\n                <Row>\r\n                    {getField(damageData, 'Damage From:', 'directParent', 'default', width, false)}\r\n                    {getField(damageData, 'Damage Type Id:', 'type_id', 'default', width, false)}\r\n                    {getField(damageData, 'Code Name:', 'type_name', 'purple', width, false)}\r\n                    {getField(damageData, 'Name:', 'type_full_name', 'purple', width, false)}\r\n                    {getField(damageData, 'DCurv:', 'curv', 'blue', width, false)}\r\n                    {getField(damageData, 'DValue:', 'value', 'blue', width, false)}\r\n                    {getField(damageData, 'Magnitude:', 'magnitude', 'blue', width, false)}\r\n                    {getField(damageData, 'Time:', 'time', 'blue', width, false)}\r\n                    {getField(damageData, 'Interval:', 'interval', 'blue', width, false, 3)}\r\n                    {getResolvedField('Destructible:', damageData.destructible.toString(), 'blue', width, false)}\r\n                    {getResolvedField('Parent:', damageData.parent, 'indigo', width, false)}\r\n                </Row>\r\n            </Card>\r\n    )\r\n}\r\n\r\nfunction buildCard(key, damageData, header, className) {\r\n    if (damageData) {\r\n        return (\r\n            <Card key={key} className=\"mt-1 mb-1\">\r\n                <Card.Header className={className}>\r\n                    <small>{header}</small>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    {getDamagesData(damageData)}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getDamageCards(damageData) {\r\n    let result = [];\r\n    let i = 0;\r\n    for (let key in damageData) {\r\n        const damage = damageData[key];\r\n        result.push(buildCard(i++, damage, key, \"bg-proj-header m-0 p-1 ps-2\"))\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction damageCollapse(damageData) {\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>Damage Overview</strong>,\r\n            children: <>{getDamageCards(damageData)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Collapse size='small' items={items} />\r\n    );\r\n}\r\n\r\nexport default function DamageOverview({damageData}) {\r\n    return (\r\n        <>{damageCollapse(damageData)}</>\r\n    );\r\n}","import getMods from '../helpers/Mods';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag } from 'antd';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport { popoverContent } from './ModPropsPopover';\r\nimport { WeaponPopoverOverlay } from '../helpers/WeaponPopoverOverlay';\r\n\r\n\r\nfunction getModRow(modData, def, isUsed) {\r\n    let color = (modData['useful']) ? 'purple' : 'grey';\r\n    if (def) {\r\n        color = 'blue';\r\n    }\r\n    if (isUsed) {\r\n        color = 'brown';\r\n    }\r\n    return (\r\n        <Tag.CheckableTag style={{width: '100%'}}>\r\n            <strong style={{color: color}}>{modData.name}</strong>\r\n        </Tag.CheckableTag>\r\n    );\r\n}\r\n\r\nexport default function ModRow({index, weaponId, modsSameType, checkMod, defMods}) {\r\n    const modSameType = modsSameType[index];\r\n    const modData = getMods().get(modSameType[0]);\r\n    let def = defMods.includes(modSameType[0]);\r\n    const isUsed = modSameType[1];\r\n    const modRow = getModRow(modData, def, isUsed);\r\n    const disabled = !modSameType[2];\r\n    if (modData['hide']) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <Row className=\"p-1\" key={modData.id} title={modData.codeName} id={modData.id}>\r\n            <Col>\r\n                <WeaponPopoverOverlay popoverHeader={modData.name} popoverContent={popoverContent(modData)} itemToOverly={modRow}></WeaponPopoverOverlay>\r\n            </Col>\r\n            <Col className=\"col-auto d-flex justify-content-end\">\r\n                <UCheckbox onChange={(e) => checkMod(e, weaponId, modData, modSameType, modsSameType)} disabled={disabled} checked={isUsed}></UCheckbox>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","const testImagePaths = require.context('../resources/forReadme/Tests', true, /\\.webp$/);\r\nconst versionPaths = require.context('../resources/forReadme/Tests', true, /\\.json$/);\r\n\r\n\r\nexport const testedWeapons = buildTestedWeapons();\r\n\r\nexport function isTested(wId) {\r\n    return (testedWeapons.get(wId)) ? true : false;\r\n}\r\n\r\nfunction buildTestedWeapons() {\r\n    const versions = buildMap(versionPaths);\r\n    const imagesMap = buildMap(testImagePaths);\r\n    let resultMap = new Map();\r\n    imagesMap.forEach((value, key) => {\r\n        const version = versions.get(key)[0];\r\n        const obj = {\r\n            img: value,\r\n            alt: version.alt,\r\n            version: version.version,\r\n        };\r\n        resultMap.set(key, obj);\r\n    });\r\n    return resultMap;\r\n}\r\n\r\nfunction buildMap(paths) {\r\n    let result = new Map();\r\n    paths.keys().map(key => {\r\n        const firstIndex = key.indexOf(\"/\") + 1;\r\n        const lastIndex = key.indexOf(\"/\", firstIndex);\r\n        const id = key.substring(firstIndex, lastIndex);\r\n        let array = result.get(id);\r\n        const path = paths(key);\r\n        if (!array) {\r\n            result.set(id, [path]);\r\n        } else {\r\n            array.push(path);\r\n        }\r\n        return result;\r\n    });\r\n    return result;\r\n}\r\n\r\n\r\n","export const weaponRestrictions = {\r\n    \"00646880\": \"Shredder mod will not add bash damage automatically\",\r\n    \"0001f669\": \"Shredder mod will not add bash damage automatically\",\r\n    \"000d1eb0\": \"Charging has to be setup manually for this weapon\",\r\n}","import Accordion from 'react-bootstrap/Accordion';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport '../css/style.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { bullet, ammo, fireRate } from '../helpers/Emoji';\r\nimport { Tag, Divider, Collapse } from 'antd';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { keyValueBadge } from '../helpers/RowBuilder';\r\nimport { getRowWithImage } from '../helpers/WTypeDropdown'\r\nimport { getImageElement } from '../helpers/WeaponImages'\r\nimport { useState, memo } from 'react';\r\nimport { getTemplateCopyById } from '../helpers/TemplatesRegister';\r\nimport AmmoView from '../helpers/AmmoView';\r\nimport ProjView from '../helpers/ProjView';\r\nimport GeneralView from '../helpers/GeneralView';\r\nimport AdditionalDView from '../helpers/AdditionalDView';\r\nimport LegendaryView from '../helpers/LegendaryView';\r\nimport CritView from '../helpers/CritView';\r\nimport DamageOverview from '../helpers/DamageOverview';\r\nimport ModRow from './ModRow';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { modsSetter } from '../templates/TemplateItems';\r\nimport { WarningPopover } from '../helpers/WarningPopover';\r\nimport { isTested } from './TestedWeapons';\r\nimport { weaponRestrictions } from '../helpers/WeaponRestrictions';\r\n\r\n\r\nfunction getApplyButton(template, setModalTemplate, setModalCalculate, onTestClick) {\r\n    function testedMedal(wId) {\r\n        if (isTested(wId)) {\r\n            return (\r\n                <Button id={wId} variant=\"white\" className=\"p-0 ps-2 pe-2 m-0\" onClick={onTestClick}>\r\n                    <div style={{fontSize: '1.5rem'}}>🎖️</div>\r\n                </Button>\r\n            );\r\n        }\r\n        return (<></>);\r\n    }\r\n    function restrictions(wId) {\r\n        const version = weaponRestrictions[wId];\r\n        if (version) {\r\n            return (\r\n                <WarningPopover element={(\r\n                    <Button variant=\"white\" className=\"p-0 ps-2 pe-2 m-0\">\r\n                        <div style={{fontSize: '1.5rem'}}>📛</div>\r\n                    </Button>\r\n                )} message={version} header={'Restrictions'} />\r\n            );\r\n        }\r\n        return (<></>);\r\n    }\r\n    if (template.apply) {\r\n        return (\r\n            <Row className=\"mt-3\">\r\n                <Col className=\"col-2 d-flex justify-content-center\">\r\n                    {restrictions(template.id)}\r\n                </Col>\r\n                <Col className=\"col-4 d-flex justify-content-center\">\r\n                    <Button style={{minWidth: '6rem'}} onClick={(e) => setModalTemplate({template: template, show: true})}>Choose</Button>\r\n                </Col>\r\n                <Col className=\"col-4 d-flex justify-content-center\">\r\n                    <Button style={{minWidth: '6rem'}} onClick={(e) => setModalCalculate({template: template, show: true})}>Calculate</Button>\r\n                </Col>\r\n                <Col className=\"col-2 justify-content-center center-text\">\r\n                    {testedMedal(template.id)}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getResetButton(template, itemsLength, resetButtonActive, setResetButtonActive) {\r\n    if (itemsLength === 0 || !resetButtonActive) {\r\n        return (<></>);\r\n    }\r\n    function onClick(e) {\r\n        const cleanTemplate = getTemplateCopyById(template.id);\r\n        for (const property in cleanTemplate) {\r\n            template[property] = cleanTemplate[property];\r\n        }\r\n        modsSetter.setTemplatesMods([template]);\r\n        setResetButtonActive(!resetButtonActive);\r\n    }\r\n    return (\r\n        <span className='d-flex justify-content-center'>\r\n            <Button size=\"sm\" variant=\"warning\" className='ms-0 mt-0 mb-3' onClick={onClick}>Reset</Button>\r\n        </span>\r\n    );\r\n}\r\n\r\nfunction buildInfoRows(info, badgeStyle, badgesRow) {\r\n    const filteredInfo = [];\r\n    const filteredMarks = [];\r\n    for (let i = 1; i < info.length; i += 2) {\r\n        if (info[i] !== \"\") {\r\n            filteredMarks.push(info[i - 1]);\r\n            filteredInfo.push(info[i]);\r\n        }\r\n    }\r\n    let size = filteredInfo.length;\r\n    let k = badgesRow.length;\r\n    for (let i = 0; i < size; i += 3) {\r\n        if ((i + 1) === size) {\r\n            badgesRow.push(resultBadges(k++, badgeStyle, \"-\", \"-\", filteredMarks[i], filteredInfo[i], \"-\", \"-\"));\r\n        } else if ((i + 2) === size) {\r\n            badgesRow.push(resultBadges(k++, badgeStyle, filteredMarks[i], filteredInfo[i], \"-\", \"-\", filteredMarks[i + 1], filteredInfo[i + 1]));\r\n        } else {\r\n            badgesRow.push(resultBadges(k++, badgeStyle, filteredMarks[i], filteredInfo[i], filteredMarks[i + 1], filteredInfo[i + 1], filteredMarks[i + 2], filteredInfo[i + 2]));\r\n        }\r\n    }\r\n    const badgesCols = [];\r\n    size = badgesRow.length;\r\n    for (let i = 0; i < size; i += 3) {\r\n        if ((i + 1) === size) {\r\n            badgesCols.push(\r\n                <Col key={i}>\r\n                    <Row>\r\n                        {badgesRow[i]}\r\n                    </Row>\r\n                </Col>\r\n            );\r\n        } else if ((i + 2) === size) {\r\n            badgesCols.push(\r\n                <Col key={i}>\r\n                    <Row>\r\n                        {badgesRow[i]}\r\n                        {badgesRow[i + 1]}\r\n                    </Row>\r\n                </Col>\r\n            );\r\n        } else {\r\n            badgesCols.push(\r\n                <Col key={i}>\r\n                    <Row>\r\n                        {badgesRow[i]}\r\n                        {badgesRow[i + 1]}\r\n                        {badgesRow[i + 2]}\r\n                    </Row>\r\n                </Col>\r\n            );\r\n        }\r\n    }\r\n    return badgesCols;\r\n}\r\n\r\nfunction resultBadges(key, style, left1, right1, left2, right2, left3, right3) {\r\n    return (\r\n        <div key={key} className=\"col d-flex justify-content-center\">\r\n            <Stack className='pb-1' direction=\"horizontal\" gap={1}>\r\n                {keyValueBadge(style, '6.5rem', left1,  right1)}\r\n                {keyValueBadge(style, '6.5rem', left2,  right2)}\r\n                {keyValueBadge(style, '6.5rem', left3,  right3)}\r\n            </Stack>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst WeaponTemplate = memo(function WeaponTemplate({modsSetter, template, setModalTemplate, setModalCalculate, onTestClick}) {\r\n    console.log(\"WeaponTemplate: \" + template.index);\r\n    const [changed, setChanged] = useState(false);\r\n    const [resetButtonActive, setResetButtonActive] = useState(false);\r\n    function modRow(index, modsSameType, checkMod) {\r\n        return (\r\n           <ModRow key={index} weaponId={template.id} index={index} modsSameType={modsSameType} checkMod={checkMod} defMods={template.defMods}>\r\n           </ModRow>\r\n        );\r\n    };\r\n\r\n    function checkMod(e, weaponId, modData, modSameType, modsSameType) {\r\n        const check = !modSameType[1];\r\n\r\n        // Disable mods because only one mod of the same type can be selected at the same time.\r\n        for (let i = 0; i < modsSameType.length; i++) {\r\n            modsSameType[i][1] = false;\r\n        }\r\n        modSameType[1] = check;\r\n        modsSetter.cleanTemplateAndApplyCurrentMods(template);\r\n        setChanged(!changed);\r\n        setResetButtonActive(true);\r\n    };\r\n    let result = [];\r\n    let items = [];\r\n\r\n    // All mods\r\n    if (!template.unverified) {\r\n        const mods = template.allMods;\r\n        let i = 0;\r\n        for (const property in mods) {\r\n            const modsSameType = mods[property];\r\n            let children = [];\r\n\r\n            // Modes of one type\r\n            for (let j = 0; j < modsSameType.length; j++) {\r\n                children.push(modRow(j, modsSameType, checkMod));\r\n            }\r\n            const item = {\r\n                    key: i,\r\n                    label: property,\r\n                    children: children,\r\n            }\r\n            items.push(item);\r\n            i += 1;\r\n        }\r\n    }\r\n    let divider = (<Divider className='m-1 p-1'>Modifications</Divider>);\r\n    if (items.length === 0) {\r\n        divider = (<></>);\r\n    } else {\r\n        result.push(<Collapse accordion key={template.index} items={items} />);\r\n    }\r\n    const fireRateText = (template.isAuto[1]) ? template.autoRate[1].toFixed(2) : (10 / template.manualRate[1]).toFixed(2);\r\n    const iSize = '0.75rem';\r\n    const badgeStyle = \"badge bg-lite-outline m-1\";\r\n    const critText = (template.crit[1] === 0) ? \"\" : \"+\" + template.crit[1].toFixed(1) + \"%\";\r\n    const expText = (template.exp[1] === 0) ? \"\" : \"+\" + template.exp[1].toFixed(1) +\"%\";\r\n    const strText = (template.strengthBoost[1] === 0) ? \"\" : \"+\" + template.strengthBoost[1].toFixed(1) + \"%\";\r\n    const sneakText = (template.sneak[1] === 0) ? \"\" : \"+\" + template.sneak[1].toFixed(1) + \"%\";\r\n    const bashText = (template.bash[1] === 0) ? \"\" : \"+\" + template.bash[1].toFixed(1) + \"%\";\r\n    const aaText = (template.antiArmor[1] === 0) ? \"\" : \"+\" + template.antiArmor[1].toFixed(1) + \"%\";\r\n    const bonusText = (template.bonusMult[1] === 0) ? \"\" : (((template.bonusMult[1] < 0) ? \"\" : \"+\") + (template.bonusMult[1] * 100).toFixed(1) + \"%\");\r\n    const crippleText = (template.cripple[1] === 0) ? \"\" : \"+\" + template.cripple[1].toFixed(1) + \"%\";\r\n    const batteryText = (template.chargeTime[1] === 0) ? \"\" : template.chargeTime[1].toFixed(2) + \" s\";\r\n    const powerText = (template.powerAttack[1] === 0) ? \"\" : \"+\" + (template.powerAttack[1]).toFixed(1) + \"%\";\r\n    const info = [\"☠️\", critText, \"💣\", expText, \"💪\", strText, \"🐍\", sneakText, \"🌪️\", bashText, \"🛡️\", aaText, \"🚀\", bonusText, \"🦵\", crippleText, \"🔋\", batteryText, \"🪓\", powerText];\r\n    let badgesRow = [];\r\n    badgesRow.push(resultBadges(0, badgeStyle, bullet(iSize), template.shotSize[1].toFixed(0), \"⌛\", template.reloadTime[1].toFixed(2) + \" s\", fireRate(iSize), fireRateText));\r\n    badgesRow.push(resultBadges(1, badgeStyle, ammo(iSize), template.capacity[1].toFixed(0), \"🏃\", template.ap[1].toFixed(2), \"🏋\", template.weight[1].toFixed(2)));\r\n    const infoRows = buildInfoRows(info, badgeStyle, badgesRow);\r\n    return (\r\n        <div className=\"p-1\" key={template.id} id={template.id} title={template.name}>\r\n            <Accordion.Item eventKey={template.id} className=\"p-1 m-0 out-accordion\">\r\n                <Accordion.Button className='p-0 ps-2 pe-3 m-0 out-accordion' style={{height: '3rem'}}>\r\n                    <Container fluid className=\"p-0 m-0\">\r\n                        <Row className=\"p-0 m-0\">\r\n                            <Col className=\"p-0 ps-0 m-0 center-text\">\r\n                                {getImageElement(template.iconName[template.type[1]], '2.9rem')}\r\n                                <strong className=\"ps-4\">{template.name}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Accordion.Button>\r\n                <Accordion.Body className=\"p-1\">\r\n                    <Row>\r\n                        <div className=\"col d-flex justify-content-start mb-2 pt-1\">\r\n                            <Tag bordered={true} color=\"default\" className=\"shadow-outline2\"><h6 className=\"m-0 p-1\"><strong>Level: {template.level}</strong></h6></Tag>\r\n                        </div>\r\n                         <div className=\"col d-flex justify-content-end mb-2 pt-1 pe-1\">\r\n                            <Tag bordered={true} color=\"volcano\" className=\"shadow-outline3\"><h6 className=\"m-0 p-1\"><strong>{getRowWithImage(template.type[1])}</strong></h6></Tag>\r\n                       </div>\r\n                    </Row>\r\n                    <Divider className='mt-1 mb-2'></Divider>\r\n                    <Row>\r\n                        {infoRows}\r\n                    </Row>\r\n                    <AdditionalDView template={template}></AdditionalDView>\r\n                    <CritView crits={template.crSpellId[1]} weapId={template.id}></CritView>\r\n                    <LegendaryView template={template}></LegendaryView>\r\n                    <Divider className='mt-2 mb-2'></Divider>\r\n                    <GeneralView template={template}></GeneralView>\r\n                    <AmmoView className=\"pt-2\" ammoId={template.ammoId[1]}></AmmoView>\r\n                    <ProjView className=\"pt-2\" projId={template.projId[1]}></ProjView>\r\n                    <div className=\"pt-2\" />\r\n                    <DamageOverview damageData={template.damageData}></DamageOverview>\r\n                    {divider}\r\n                    {getResetButton(template, items.length, resetButtonActive, setResetButtonActive)}\r\n                    {result}\r\n                    {getApplyButton(template, setModalTemplate, setModalCalculate, onTestClick)}\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default WeaponTemplate;","import getMods from '../Mods';\r\n\r\n\r\nexport default class LegendarySetter {\r\n\r\n    set(template, mod) {\r\n        this.privateSet(template, mod);\r\n    }\r\n\r\n    privateSet(obj, mod) {\r\n        const words = mod.ap.split(\"_\");\r\n        const lastWord = words[words.length - 1];\r\n        if (lastWord === \"Legendary1\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary1 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        } else if (lastWord === \"Legendary2\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary2 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        } else if (lastWord === \"Legendary3\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary3 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        } else if (lastWord === \"Legendary4\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary4 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        } else if (lastWord === \"Legendary5\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary5 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        }\r\n    }\r\n\r\n    extractDefaultLegendary(template) {\r\n        const result = {};\r\n        for (const property in template.allMods) {\r\n            const propMods = template.allMods[property];\r\n            for (let j = 0; j < propMods.length; j++) {\r\n                const mod = propMods[j];\r\n                const modId = mod[0];\r\n                const isUsed = mod[1];\r\n                const modData = getMods().get(modId);\r\n                if (modData) {\r\n                    if (isUsed) {\r\n                        this.privateSet(result, modData);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","import getTemplates from '../helpers/TemplatesRegister';\r\nimport WeaponTemplate from './WeaponTemplate';\r\nimport { memo, useState, useEffect } from 'react';\r\nimport { ModParser } from '../helpers/mods/ModParser';\r\nimport DamageExtractor from '../helpers/mods/DamageExtractor';\r\nimport DamageSetter from '../helpers/mods/DamageSetter';\r\nimport LegendarySetter from '../helpers/mods/LegendarySetter';\r\nimport ModsSetter from '../helpers/mods/ModsSetter';\r\nimport { Pagination } from 'antd';\r\nimport { Skeleton } from 'antd';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport TemplateTools from './TemplateTools';\r\n\r\n\r\nexport const modGroups = new Set();\r\n\r\nexport const weaponIds = {All: []};\r\n\r\nexport const modsSetter = new ModsSetter(new LegendarySetter(), new ModParser(), new DamageExtractor(),\r\n    new DamageSetter());\r\n\r\nfunction buildTemplates() {\r\n    console.log(\"BuildTemplates\");\r\n    const templates = JSON.parse(JSON.stringify(getTemplates()));\r\n    if (modGroups.size === 0) {\r\n        TemplateTools.getGroups(templates, modGroups);\r\n    }\r\n    const weaponIdsExists = (weaponIds.All.length > 0);\r\n    for (let i = 0; i < templates.length; i++) {\r\n        const template = templates[i];\r\n        template.index = i;\r\n        if (!weaponIdsExists) {\r\n            const type = template.type[0];\r\n            let weaponIdsByType = weaponIds[type];\r\n            if (!weaponIdsByType) {\r\n                weaponIdsByType = [];\r\n                weaponIds[type] = weaponIdsByType;\r\n            }\r\n            const obj = {id: template.id, apply: template.apply};\r\n            weaponIdsByType.push(obj);\r\n            weaponIds.All.push(obj);\r\n        }\r\n    }\r\n    modsSetter.setTemplatesMods(templates);\r\n    return templates;\r\n}\r\n\r\nfunction getSkeletons(size) {\r\n    let result = [];\r\n    for (let i = 0; i < size; i++) {\r\n        result.push(\r\n            <div key={i} className=\"p-1\">\r\n                <Accordion.Item className=\"p-1 m-0 out-accordion\">\r\n                    <div className=\"p-1\" style={{height: '3rem'}}>\r\n                        <Skeleton avatar paragraph={{ rows: 0, }} />\r\n                    </div>\r\n                </Accordion.Item>\r\n            </div>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nconst templates = buildTemplates();\r\n\r\nconst TemplateItems = memo(function TemplateItems(props) {\r\n    console.log(\"TemplateItems\");\r\n    const [wData, setWData] = useState({paginated: [], total: 0, loaded: false});\r\n\r\n    const filterByName = (item) => {\r\n        if (props.filterName === \"\" || props.filterName === null) {\r\n            return true;\r\n        }\r\n        return item.name.includes(props.filterName);\r\n    };\r\n\r\n    const filterByType = (item) => {\r\n        if (props.weaponType === \"All\") {\r\n            return true;\r\n        }\r\n        return item.type.includes(props.weaponType);\r\n    }\r\n\r\n    // TODO: Not correct as it re-renders trice instead of twice.\r\n    useEffect(() => {\r\n        setWData({paginated: [], current: wData.paginated.length, total: wData.total, loaded: false});\r\n\r\n        // Pray with might for those who called this 'setTimeout', 'setInterval' to be burning in hell as long as possible.\r\n        setTimeout(() => {\r\n                const [paginated, total] = prepareTemplates(props, filterByName, filterByType);\r\n                setWData({paginated: paginated, current: paginated.length, total: total, loaded: true});\r\n            }\r\n        );\r\n    }, [props.page, props.weaponType, props.filterName, props.pageSize, templates]);\r\n    function showData() {\r\n        if (!wData.loaded) {\r\n            return (\r\n                <>\r\n                    {getSkeletons(wData.total)}\r\n                    <div className=\"mb-2\" />\r\n                    <Pagination align=\"center\" disabled current={props.page} onChange={null} defaultPageSize={props.pageSize} total={wData.total} />\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                    {wData.paginated}\r\n                    <div className=\"mb-1\" />\r\n                    <Pagination className=\"mb-2\" align=\"center\" current={props.page} defaultPageSize={props.pageSize} onChange={props.onPageChanged} total={wData.total} />\r\n                </>\r\n            );\r\n        }\r\n    }\r\n    return (\r\n       <>{showData()}</>\r\n    );\r\n});\r\n\r\nexport default TemplateItems;\r\n\r\nfunction prepareTemplates(props, filterByName, filterByType) {\r\n    const items = templates.filter(filterByType).filter(filterByName).map((template) => <WeaponTemplate key={template.index} onTestClick={props.onTestClick} modsSetter={modsSetter} template={template} setModalTemplate={props.setModalTemplate} setModalCalculate={props.setModalCalculate}></WeaponTemplate>);\r\n    const lastIndex = items.length - 1;\r\n    let paginated = [];\r\n    for (let i = props.startIndex; i < props.startIndex + props.pageSize; i++) {\r\n        if (i > lastIndex) {\r\n            break;\r\n        }\r\n        paginated.push(items[i]);\r\n    }\r\n    return [paginated, items.length];\r\n}","import getMods from '../Mods';\r\nimport { getTemplateCopyById } from '../TemplatesRegister';\r\n\r\n\r\nexport default class ModsSetter {\r\n\r\n    constructor(legendarySetter, modParser, damageExtractor, damageSetter) {\r\n        this.legendarySetter = legendarySetter;\r\n        this.modParser = modParser;\r\n        this.damageExtractor = damageExtractor;\r\n        this.damageSetter = damageSetter;\r\n    }\r\n\r\n    // Probably deprecated (Current mods apparently have activated default mods at the beginning)\r\n    setTemplatesDefaultMods(templates) {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    cleanTemplateAndApplyCurrentMods(template) {\r\n        this.resetTemplate(template);\r\n        this.setTemplatesMods([template]);\r\n    }\r\n\r\n    // It will set mods on current template, use this only for clean ones.\r\n    setTemplatesMods(templates) {\r\n\r\n        // Apply default damage effects like (Ammo, Projectile) they will modify default damage values\r\n        // which later have to be modified by other buffs\r\n        this.applyModValues(templates, true, true);\r\n\r\n        // Extract all damages with current settings\r\n        this.damageExtractor.extract(templates);\r\n\r\n        this.damageSetter.setDamages(templates);\r\n\r\n        // Apply all buffs including those who boost damage\r\n        this.applyModValues(templates, false, false);\r\n    }\r\n\r\n    applyModValues(templates, mutatingDamage, setLegendary) {\r\n        for (let i = 0; i < templates.length; i++) {\r\n            const template = templates[i];\r\n            const allMods = template.allMods;\r\n            for (let property in allMods) {\r\n                const propMods = allMods[property];\r\n                for (let j = 0; j < propMods.length; j++) {\r\n                    const mod = propMods[j];\r\n                    const modId = mod[0];\r\n                    const isUsed = mod[1];\r\n                    if (isUsed) {\r\n                        const modData = getMods().get(modId);\r\n                        if (modData) {\r\n                            if (setLegendary) {\r\n                                this.legendarySetter.set(template, modData);\r\n                            }\r\n                            this.modParser.applyOrRevoke(modData, template, true, mutatingDamage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Forced measure due to bad-knee design\r\n    resetTemplate(template) {\r\n        const cleanTemplate = getTemplateCopyById(template.id);\r\n        for (const property in cleanTemplate) {\r\n            if (property !== \"allMods\") {\r\n                template[property] = cleanTemplate[property];\r\n            }\r\n        }\r\n    }\r\n}","\r\n// Iterate through {name11: ['A', 'B', 1], name12: [], name13: ['D', obj]}\r\n// Returning every possible combinations:\r\n// {name11: 'A', name13: 'D'}, {name11: 'B', name13: 'D'} ... {name11: 1, name13: obj}\r\nexport default class Combinator {\r\n\r\n    /*\r\n        Usage:\r\n            const comb = {name11: ['A', 'B', 'C'], name12: [], name13: ['D', 'E']};\r\n            const combinator = new Combinator(comb);\r\n            let result = combinator.current();\r\n            console.log(result); // First combination\r\n            while(combinator.next()) {\r\n                combinator.current();\r\n                console.log(result);\r\n            }\r\n    */\r\n    constructor(combinations) {\r\n        this.combinations = combinations;\r\n        this.currentCombination = {};\r\n        this.lastIndexes = [];\r\n        this.curIndexes = [];\r\n        this.names = [];\r\n        this.hbRead = false;\r\n        this.combinationsCount = 1;\r\n        for (const groupName in combinations) {\r\n            this.names.push(groupName);\r\n            const group = combinations[groupName];\r\n            const last = group.length - 1;\r\n            this.lastIndexes.push(last);\r\n            if (group.length > 0) {\r\n                this.combinationsCount *= group.length;\r\n                this.currentCombination[groupName] = this.combinations[groupName][0];\r\n                this.curIndexes.push(0);\r\n            } else {\r\n                this.curIndexes.push(-1);\r\n            }\r\n        }\r\n        this.currentNumber = 1;\r\n    }\r\n\r\n    getCombinationsCount() {\r\n        return this.combinationsCount;\r\n    }\r\n\r\n    getCurrentNumber() {\r\n        return this.currentNumber;\r\n    }\r\n\r\n    next() {\r\n        if (this.isLast()) {\r\n            return false;\r\n        }\r\n        this.currentNumber += 1;\r\n        this.nextCombination();\r\n        this.hbRead = false;\r\n        return true;\r\n    }\r\n\r\n    // Only for reading\r\n    current() {\r\n        if (this.hbRead) {\r\n            return this.currentCombinations;\r\n        } else {\r\n            for (let i = 0; i < this.curIndexes.length; i++) {\r\n                const rowPos = this.curIndexes[i];\r\n                const name = this.names[i];\r\n                if (rowPos > -1) {\r\n                    this.currentCombination[name] = this.combinations[name][rowPos];\r\n                }\r\n            }\r\n            this.hbRead = true;\r\n            return this.currentCombination;\r\n        }\r\n    }\r\n\r\n    isLast() {\r\n        let result = true;\r\n        for (let i = 0; i < this.curIndexes.length; i++) {\r\n            if (this.curIndexes[i] !== this.lastIndexes[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    nextCombination() {\r\n        for (let i = 0; i < this.curIndexes.length; i++) {\r\n            let next = false;\r\n            if (this.curIndexes[i] > -1) {\r\n                this.curIndexes[i] += 1;\r\n                if (this.curIndexes[i] > this.lastIndexes[i]) {\r\n                    this.curIndexes[i] = 0;\r\n                    next = true;\r\n                }\r\n            } else {\r\n                next = true;\r\n            }\r\n            if (!next) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import { ConIronSight } from './mods/appliers/ConIronSight';\r\nimport { SightedTransition } from './mods/appliers/SightedTransition';\r\nimport { MaxConDegree } from './mods/appliers/MaxConDegree';\r\nimport { MinConDegree } from './mods/appliers/MinConDegree';\r\nimport { RecoilMaxDegree } from './mods/appliers/RecoilMaxDegree';\r\nimport { RecoilMinDegree } from './mods/appliers/RecoilMinDegree';\r\nimport { ModParser } from './mods/ModParser';\r\nimport TemplateTools from '../templates/TemplateTools';\r\nimport { ModTools } from './mods/ModTools';\r\nimport getMods from './Mods';\r\n\r\n\r\nexport default class AccuracyHelper {\r\n    static RECOIL = 0;\r\n    static CON = 1;\r\n    static BALANCE = 2;\r\n\r\n    static ACCURACY_INFO = (\r\n        <>\r\n            <p>\r\n                <b>Only for range weapons.</b>\r\n            </p>\r\n            <p>\r\n                The calculator does not calculate accuracy from these parameters, hence it has no influence on damage,\r\n                but it still can choose the best among the raw values from mods.\r\n            </p>\r\n        </>\r\n    );\r\n\r\n    static ACC_PREFERENCE = {Recoil: AccuracyHelper.RECOIL, Spread: AccuracyHelper.CON, Balance: AccuracyHelper.BALANCE};\r\n\r\n    constructor() {\r\n        this.modEffects = new Map();\r\n        this.modEffects.set(\"ConIronSight\", new ConIronSight());\r\n        this.modEffects.set(\"SightedTransition\", new SightedTransition());\r\n        this.modEffects.set(\"MaxConDegree\", new MaxConDegree());\r\n        this.modEffects.set(\"MinConDegree\", new MinConDegree());\r\n        this.modEffects.set(\"RecoilMaxDegree\", new RecoilMaxDegree());\r\n        this.modEffects.set(\"RecoilMinDegree\", new RecoilMinDegree());\r\n    }\r\n\r\n    getCleanTemplate() {\r\n        const result = {};\r\n        result[\"maxConDegree\"] = [1, 1];\r\n        result[\"minConDegree\"] = [1, 1];\r\n        result[\"recoilMaxDegree\"] = [1, 1];\r\n        result[\"recoilMinDegree\"] = [1, 1];\r\n        result[\"conIronSight\"] = [1, 1];\r\n        result[\"sightedTransition\"] = [1, 1];\r\n        result[\"defaultMod\"] = false;\r\n        return result;\r\n    }\r\n\r\n    // Find best mods which do not affect on damage directly, not hidden and not excluded\r\n    // If all are equal then default is used.\r\n    getBestMods(template, includeGroups, preference) {\r\n        const result = {}\r\n        for (const categoryName in template.allMods) {\r\n            const mods = template.allMods[categoryName];\r\n            const resultMods = {};\r\n            if (!includeGroups.includes(categoryName)) {\r\n                continue;\r\n            }\r\n            for (let i = 0; i < mods.length; i++) {\r\n                const temp = this.getCleanTemplate();\r\n                const mod = mods[i];\r\n                const modId = mod[0]\r\n                const modData = getMods().get(modId);\r\n                if (!modData || modData.hide || !AccuracyHelper.hasAccuracyData(modData)) {\r\n                    continue;\r\n                }\r\n\r\n                // 4-useful (means directly affecting on damage, we skip them)\r\n                // Consider silencer does not affect damage except some conditions\r\n                const useful = (mod[4] && !ModTools.hasSilencer(modData));\r\n\r\n                // 3-hidden\r\n                if (!mod[3] && !useful && !TemplateTools.excludeMod(template.id, modId)) {\r\n                    temp[\"defaultMod\"] = mod[1];\r\n                    ModParser.applySpecific(temp, modData, this.modEffects);\r\n                    resultMods[modId] = temp;\r\n                }\r\n            }\r\n            result[categoryName] = resultMods;\r\n        }\r\n        return this.getTheBestModsForCategory(result, preference);\r\n    }\r\n\r\n    getTheBestModsForCategory(allMods, preference) {\r\n        const result = {};\r\n        let pFunc = null;\r\n        switch (preference) {\r\n            case AccuracyHelper.RECOIL:\r\n                pFunc = this.determineBestRecoilPriority;\r\n                break;\r\n            case AccuracyHelper.CON:\r\n                pFunc = this.determineBestConPriority;\r\n                break;\r\n            case AccuracyHelper.BALANCE:\r\n                pFunc = this.determineBestBalance;\r\n                break;\r\n            default:\r\n                pFunc = this.determineBestBalance;\r\n        }\r\n        for (const groupName in allMods) {\r\n            let best = null;\r\n            const mods = allMods[groupName];\r\n            for (const id in mods) {\r\n                const modData = mods[id];\r\n                best = pFunc(id, modData, best, this);\r\n            }\r\n            if (best) {\r\n                result[groupName] = best[0];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    determineBestBalance(currentId, currentData, best, th) {\r\n        if (!best) {\r\n            return [currentId, currentData];\r\n        }\r\n        const bestCon = th.getAverageCon(best[1]);\r\n        const currentCon = th.getAverageCon(currentData);\r\n        const bestRecoil = th.getAverageRecoil(best[1]);\r\n        const currentRecoil = th.getAverageRecoil(currentData);\r\n        const bestBalance = (bestCon + bestRecoil) / 2.0;\r\n        const currentBalance = (currentCon + currentRecoil) / 2.0;\r\n        if (bestBalance > currentBalance) {\r\n            return [currentId, currentData];\r\n        } else if (bestBalance === currentBalance) {\r\n            const bestTransition = th.getTransition(best[1]);\r\n            const currentTransition = th.getTransition(currentData);\r\n            if (bestTransition > currentTransition) {\r\n                return [currentId, currentData];\r\n            } else if (bestTransition === currentTransition) {\r\n                const bestSight = th.getSight(best[1]);\r\n                const currentSight = th.getSight(currentData);\r\n                if (bestSight > currentSight) {\r\n                    return [currentId, currentData];\r\n                } else if (bestSight === currentSight) {\r\n                    if (currentData['defaultMod']) { // Everything is equal then default is preferred\r\n                        return [currentId, currentData];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return best;\r\n    }\r\n\r\n    determineBestConPriority(currentId, currentData, best, th) {\r\n        if (!best) {\r\n            return [currentId, currentData];\r\n        }\r\n        const bestCon = th.getAverageCon(best[1]);\r\n        const currentCon = th.getAverageCon(currentData);\r\n        if (bestCon > currentCon) {\r\n            return [currentId, currentData];\r\n        } else if (bestCon === currentCon) {\r\n            const bestRecoil = th.getAverageRecoil(best[1]);\r\n            const currentRecoil = th.getAverageRecoil(currentData);\r\n            if (bestRecoil > currentRecoil) {\r\n                return [currentId, currentData];\r\n            } else if (bestRecoil === currentRecoil) {\r\n                const bestTransition = th.getTransition(best[1]);\r\n                const currentTransition = th.getTransition(currentData);\r\n                if (bestTransition > currentTransition) {\r\n                    return [currentId, currentData];\r\n                } else if (bestTransition === currentTransition) {\r\n                    const bestSight = th.getSight(best[1]);\r\n                    const currentSight = th.getSight(currentData);\r\n                    if (bestSight > currentSight) {\r\n                        return [currentId, currentData];\r\n                    } else if (bestSight === currentSight) {\r\n                        if (currentData['defaultMod']) { // Everything is equal then default is preferred\r\n                            return [currentId, currentData];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return best;\r\n    }\r\n\r\n    determineBestRecoilPriority(currentId, currentData, best, th) {\r\n        if (!best) {\r\n            return [currentId, currentData];\r\n        }\r\n        const bestRecoil = th.getAverageRecoil(best[1]);\r\n        const currentRecoil = th.getAverageRecoil(currentData);\r\n        if (bestRecoil > currentRecoil) {\r\n            return [currentId, currentData];\r\n        } else if (bestRecoil === currentRecoil) {\r\n            const bestCon = th.getAverageCon(best[1]);\r\n            const currentCon = th.getAverageCon(currentData);\r\n            if (bestCon > currentCon) {\r\n                return [currentId, currentData];\r\n            } else if (bestCon === currentCon) {\r\n                const bestTransition = th.getTransition(best[1]);\r\n                const currentTransition = th.getTransition(currentData);\r\n                if (bestTransition > currentTransition) {\r\n                    return [currentId, currentData];\r\n                } else if (bestTransition === currentTransition) {\r\n                    const bestSight = th.getSight(best[1]);\r\n                    const currentSight = th.getSight(currentData);\r\n                    if (bestSight > currentSight) {\r\n                        return [currentId, currentData];\r\n                    } else if (bestSight === currentSight) {\r\n                        if (currentData['defaultMod']) { // Everything is equal then default is preferred\r\n                            return [currentId, currentData];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return best;\r\n    }\r\n\r\n    getAverageRecoil(modData) {\r\n        const maxR = modData.recoilMaxDegree[1];\r\n        const minR = modData.recoilMinDegree[1];\r\n        return (maxR + minR) / 2.0;\r\n    }\r\n\r\n    getAverageCon(modData) {\r\n        const maxC = modData.maxConDegree[1];\r\n        const minC = modData.minConDegree[1];\r\n        return (maxC + minC) / 2.0;\r\n    }\r\n\r\n    getTransition(modData) {\r\n        return modData.sightedTransition[1];\r\n    }\r\n\r\n    getSight(modData) {\r\n        return modData.conIronSight[1];\r\n    }\r\n\r\n    static accuracyProps = [\"conIronSight\", \"maxConDegree\", \"minConDegree\", \"recoilMaxDegree\", \"recoilMinDegree\", \"sightedTransition\"]\r\n\r\n    static hasAccuracyData(modData) {\r\n        /*\r\n        let result = false;\r\n        for (let i = 0; i < modData.modifiers.length; i++) {\r\n            const mod = modData.modifiers[i];\r\n        }\r\n        return AccuracyHelper.accuracyProps.includes(modData.props)\r\n        */\r\n        return true;\r\n    }\r\n}","export default class LegsId {\r\n    static QUAD = '00692275';\r\n    static ARISTOCRAT = '00606b71';\r\n    static ANTI_ARMOR = '005281b4';\r\n    static TWO_SHOT = '004f6d76';\r\n    static EXECUTIONER = '004f6aa1';\r\n    static BLOODIED = '004f6aa0';\r\n    static STEADY = '00606c8d';\r\n    static MELEE_RAPID = '001a7bda';\r\n    static HITMAN = '0052414e';\r\n    static RANGED_RAPID = '0052414f';\r\n    static VITAL = '0052414b';\r\n    static EXPLOSIVE = '004f5771';\r\n    static CRIPPLING = '004ed02c';\r\n    static SWIFT = '00524150';\r\n    static STRENGTH = '005299fc';\r\n}","import LegsId from './LegsId';\r\n\r\n\r\nexport default class LegendaryCalcBuilder {\r\n\r\n    static getLegendary1(isRange, lowHP, legs=null) {\r\n        legs = LegendaryCalcBuilder.initLegs(legs);\r\n        legs.push(LegsId.ANTI_ARMOR);\r\n        legs.push(LegsId.EXECUTIONER);\r\n        if (isRange) {\r\n            legs.push(LegsId.QUAD);\r\n            legs.push(LegsId.TWO_SHOT);\r\n        }\r\n        if (lowHP) {\r\n            legs.push(LegsId.BLOODIED);\r\n        } else {\r\n            legs.push(LegsId.ARISTOCRAT);\r\n        }\r\n        return legs;\r\n    }\r\n\r\n    static initLegs(legs) {\r\n        if (!legs) {\r\n            legs = [];\r\n        } else {\r\n            legs.length = 0;\r\n        }\r\n        return legs;\r\n    }\r\n\r\n    static getLegendary2(isRange, explosive, scoped, legs=null) {\r\n        legs = LegendaryCalcBuilder.initLegs(legs);\r\n        legs.push(LegsId.VITAL);\r\n        legs.push(LegsId.CRIPPLING);\r\n        if (isRange) {\r\n            if (scoped) {\r\n                legs.push(LegsId.HITMAN);\r\n            }\r\n            if (!explosive) {\r\n                legs.push(LegsId.EXPLOSIVE);\r\n            }\r\n            legs.push(LegsId.RANGED_RAPID);\r\n        } else {\r\n            legs.push(LegsId.STEADY);\r\n            legs.push(LegsId.MELEE_RAPID);\r\n        }\r\n        return legs;\r\n    }\r\n\r\n    static getLegendary3(isRange, legs=null) {\r\n        legs = LegendaryCalcBuilder.initLegs(legs);\r\n        if (isRange) {\r\n            legs.push(LegsId.SWIFT);\r\n        } else {\r\n            legs.push(LegsId.STRENGTH);\r\n        }\r\n        return legs;\r\n    }\r\n}","import { defaultExtraDamage } from '../../entities/ExtraDamageOptions';\r\nimport { buildCreature, getAverageTimeMillis } from '../../entities/ECreatures';\r\nimport { defaultAdds } from '../../entities/EAddDamages';\r\nimport { convertTemplateToSpecs } from '../../entities/EWeaponSpecs';\r\nimport { defaultPlayerStats } from '../../entities/EPlayerStats';\r\nimport { defaultPlayer } from '../../entities/EPlayer';\r\nimport WeaponFactory from '../../damage/weapon/WeaponFactory';\r\nimport DamageEmulator from '../../damage/DamageEmulator';\r\nimport { getTemplateCopyById } from '../../helpers/TemplatesRegister';\r\nimport { modsSetter } from '../TemplateItems';\r\nimport { millisToTime } from '../../helpers/Time';\r\nimport Combinator from '../../helpers/Combinator';\r\nimport AccuracyHelper from '../../helpers/AccuracyHelper';\r\nimport PerkCardBuilder from '../../perkCardBoosts/PerkCardBuilder';\r\nimport ConsumablesBuilder from '../../boostStuff/ConsumablesBuilder';\r\nimport TemplateTools from '../TemplateTools';\r\nimport { ModParser } from '../../helpers/mods/ModParser';\r\nimport LegendaryCalcBuilder from '../../helpers/LegendaryCalcBuilder';\r\nimport LegendarySetter from '../../helpers/mods/LegendarySetter';\r\nimport { getLegendaryNameFromSpec } from '../../helpers/LegendaryProvider';\r\n\r\n\r\nexport default class ParameterCalculator {\r\n    static info = (\r\n        <>\r\n            <p>\r\n                <b>ATTENTION!</b>\r\n            </p>\r\n            <p>\r\n                ⁍ Not all weapons are tested in real game, therefore some of damage values can be incorrect or\r\n                mods (which are presented in the calculator) can be not accessible for usage in the game. The calculator will run through mods, legendary mods, perks, consumables to find the best configuration provided that a weapon has 100% accuracy.\r\n            </p>\r\n            <p>\r\n                ⁍ The calculator will try to pick mods with best recoil / spread, but they will not impact accuracy during calculations whereas in real game accuracy can greatly affect damage performance.\r\n            </p>\r\n            <p>\r\n                ⁍ Possible AP benefits are ignored.\r\n            </p>\r\n            <p>\r\n                ⁍ Weapons with default legendary mods will not be iterated through other legendary.\r\n            </p>\r\n            <p>\r\n                ⁍ Gun-Foo, Bash, all legendary perks (except TOFT, Follow Through), and some others affecting accuracy are ignored.\r\n            </p>\r\n            <p>\r\n                ⁍ Power attack, Furious are ignored (as being not tested for now).\r\n            </p>\r\n        </>\r\n    );\r\n    constructor(creatureNames, id, modGroups, cards, frCrit, frHead, main, stuff, legendaryOpts, accuracyPreference) {\r\n        this.creatureNames = creatureNames;\r\n        this.id = id;\r\n        this.modGroups = modGroups;\r\n        this.modCombinator = null;\r\n        this.boostCombinator = null;\r\n        this.bestParameters = null;\r\n        this.lastParameters = null;\r\n        this.bestTime = Infinity;\r\n        this.lastTime = Infinity;\r\n        this.creatureName = null;\r\n        this.template = null;\r\n        this.count = 0;\r\n        this.maxCount = 0;\r\n        this.cards = cards;\r\n        this.frHead = frHead;\r\n        this.frCrit = frCrit;\r\n        this.main = main;\r\n        this.stuff = stuff;\r\n        this.modParser = new ModParser();\r\n        this.legendary = null;\r\n        this.legendaryOpts = legendaryOpts;\r\n        this.defaultLegendary = null;\r\n        this.hasGotLastCombination = false;\r\n        this.currentConfig = {};\r\n        this.bestConfig = null;\r\n        this.bestAverageHit = 0;\r\n        this.accuracyHelper = new AccuracyHelper();\r\n        this.accuracyPreference = accuracyPreference;\r\n        this.defaultExplosive = false;\r\n        this.perkImageNames = [];\r\n        this.creatureTags = [];\r\n        this.bodyTags = [];\r\n\r\n        // Currently accuracy mods do not influence on damage but, best\r\n        // values still can be calculated (without paying attention to distance)\r\n        // specify such mods in advance to reduce the number of computations\r\n        this.bestAccuracyMods = null;\r\n    }\r\n\r\n    getBestParameters() {\r\n\r\n        // We are finished, but for Non-Automatic option best parameters can still be null\r\n        // use the last one\r\n        return (this.bestParameters) ? this.bestParameters : this.lastParameters;\r\n    }\r\n\r\n    getTemplate() {\r\n        return this.template;\r\n    }\r\n\r\n    getCount() {\r\n        return this.count;\r\n    }\r\n\r\n    getMaxCount() {\r\n        return this.maxCount;\r\n    }\r\n\r\n    getBestTime(clockFormat=true) {\r\n        const time = (this.bestParameters) ? this.bestTime : this.lastTime;\r\n        if (clockFormat) {\r\n            return millisToTime(time);\r\n        }\r\n        return time;\r\n    }\r\n\r\n    prepareAndCalcFirst(creatureName=\"average\") {\r\n\r\n        // The order of invoking functions is important!\r\n        this.creatureName = creatureName;\r\n        this.creatureTags = this.getCreatureTags();\r\n        this.bodyTags = this.getBodyTags();\r\n        this.template = getTemplateCopyById(this.id);\r\n        this.bestAccuracyMods = this.accuracyHelper.getBestMods(this.template, this.modGroups, this.accuracyPreference);\r\n        this.defaultLegendary = TemplateTools.getDefaultLegendary(this.template, new LegendarySetter());\r\n        this.defaultExplosive = this.isDefaultExplosive();\r\n        this.legendary = this.buildLegendary();\r\n        const silencerDamage = this.main.Night && this.cards.Sneak;\r\n        const modCombinations = TemplateTools.getDamagedModIndexes(this.template, this.modGroups, this.bestAccuracyMods, silencerDamage);\r\n        this.modCombinator = new Combinator(modCombinations);\r\n        this.maxCount = this.modCombinator.getCombinationsCount();\r\n        this.applyMods();\r\n        this.boostCombinator = this.buildBoostCombinator();\r\n        let consList = null;\r\n        let legsList = null;\r\n        if (this.boostCombinator) {\r\n            const current = this.boostCombinator.current();\r\n            consList = this.buildConsumableList(current);\r\n            legsList = this.buildLegendaryList(current);\r\n        }\r\n        this.calculateAndCount(consList, legsList);\r\n    }\r\n\r\n    buildLegendary() {\r\n        const legendary = {};\r\n        const range = TemplateTools.isWeaponRanged(this.template);\r\n        const lowHP = this.cards[\"Low HP\"];\r\n        const scoped = this.main[\"Scoped\"];\r\n        let leg1 = [];\r\n        let leg2 = [];\r\n        let leg3 = [];\r\n        if (this.defaultLegendary.length === 0) {\r\n            if (this.legendaryOpts.Legendary1) {\r\n                leg1 = LegendaryCalcBuilder.getLegendary1(range, lowHP);\r\n            }\r\n            if (this.legendaryOpts.Legendary2) {\r\n                leg2 = LegendaryCalcBuilder.getLegendary2(range, this.defaultExplosive, scoped);\r\n            }\r\n            if (this.legendaryOpts.Legendary3) {\r\n                leg3 = LegendaryCalcBuilder.getLegendary3(range);\r\n            }\r\n        }\r\n        legendary['Legendary1_l'] = leg1;\r\n        legendary['Legendary2_l'] = leg2;\r\n        legendary['Legendary3_l'] = leg3;\r\n        return legendary;\r\n    }\r\n\r\n    getBodyTags() {\r\n        let bodyTags = []\r\n        const uniqueTags = new Set();\r\n        if (this.creatureName === 'average') {\r\n            for (const fieldName in this.creatureNames) {\r\n                const creatureData = this.creatureNames[fieldName];\r\n                uniqueTags.add(creatureData[3].toLowerCase());\r\n            }\r\n            bodyTags = [...uniqueTags];\r\n        } else {\r\n            for (const fieldName in this.creatureNames) {\r\n                const creatureData = this.creatureNames[fieldName];\r\n                if (creatureData[0] === this.creatureName) {\r\n                    bodyTags = [creatureData[3].toLowerCase()];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return bodyTags;\r\n    }\r\n\r\n    getCreatureTags() {\r\n        let creatureTags = []\r\n        const uniqueTags = new Set();\r\n        if (this.creatureName === 'average') {\r\n            for (const fieldName in this.creatureNames) {\r\n                const creatureData = this.creatureNames[fieldName];\r\n                for (let i = 0; i < creatureData[2].length; i++) {\r\n                    const tag = creatureData[2][i];\r\n                    uniqueTags.add(tag.toLowerCase());\r\n                }\r\n            }\r\n            creatureTags = [...uniqueTags];\r\n        } else {\r\n            for (const fieldName in this.creatureNames) {\r\n                const creatureData = this.creatureNames[fieldName];\r\n                if (creatureData[0] === this.creatureName) {\r\n                    for (let i = 0; i < creatureData[2].length; i++) {\r\n                        const tag = creatureData[2][i];\r\n                        creatureTags.push(tag.toLowerCase());\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return creatureTags;\r\n    }\r\n\r\n    getConsumables() {\r\n        const result = {};\r\n        const wType = this.template.type[1];\r\n        const wName = this.template.name;\r\n        const tags = this.template.tags;\r\n        const ammo = (this.template.ammoType) ? this.template.ammoType.codeName : \"\";\r\n        const crit = this.cards.Crit;\r\n        const sneak = this.cards.Sneak;\r\n        const team = this.cards.Team;\r\n        const lowHP = this.cards[\"Low HP\"];\r\n        const scoped = this.main[\"Scoped\"];\r\n\r\n        if (this.stuff[\"Magazines\"]) {\r\n            result[\"Magazines_c\"] = ConsumablesBuilder.getMagazineItems(wType, wName, tags, crit, team, scoped, this.creatureTags);\r\n        }\r\n        if (this.stuff[\"Endangerol Syringer\"]) {\r\n            const others = ConsumablesBuilder.getOtherItems(TemplateTools.hasPhysicalDamage(this.template));\r\n            if (others.length > 0) {\r\n                result[\"Syringer_c\"] = others;\r\n            }\r\n        }\r\n        if (this.stuff[\"Bobble Heads\"]) {\r\n            const bobble = ConsumablesBuilder.getBobbleHeadItems(wType, tags, ammo);\r\n            if (bobble.length > 0) {\r\n                result[\"Bobble_c\"] = bobble;\r\n            }\r\n        }\r\n        if (this.stuff[\"Drink\"]) {\r\n            const drink = ConsumablesBuilder.getDrinkItems(wType, tags, crit);\r\n            if (drink.length > 0) {\r\n                result[\"Drink_c\"] = drink;\r\n            }\r\n        }\r\n        if (this.stuff[\"Chemicals\"]) {\r\n            result[\"Chemicals_c\"] = ConsumablesBuilder.getChemicalItems(wType, crit, sneak);\r\n        }\r\n        if (this.stuff[\"Food\"]) {\r\n            const food = ConsumablesBuilder.getFoodItems(wType, crit);\r\n            if (food.length > 0) {\r\n                result[\"Food_c\"] = food;\r\n            }\r\n        }\r\n        if (this.stuff[\"Serums\"]) {\r\n            result[\"Serums_c\"] = ConsumablesBuilder.getSerumItems(wType, crit, lowHP, team, this.stuff[\"Food\"]);\r\n        }\r\n        return (Object.keys(result).length === 0) ? null : result;\r\n    }\r\n\r\n    calculateAndCount(consumableBoostsList, legendary) {\r\n        this.lastParameters = this.calculateCombination(consumableBoostsList, legendary);\r\n        this.lastTime = this.lastParameters[this.creatureName].lifeTime;\r\n        this.averageHit = this.lastParameters[this.creatureName].averageHit;\r\n        if (!this.lastParameters[\"Rejected\"]) {\r\n            if (this.lastTime < this.bestTime) {\r\n                this.bestParameters = this.lastParameters;\r\n                this.bestAverageHit = this.averageHit;\r\n                this.bestTime = this.lastTime;\r\n                this.updateBestConfig();\r\n            } else if (this.lastTime === this.bestTime) {\r\n                if (this.averageHit >= this.bestAverageHit) {\r\n                    this.bestAverageHit = this.averageHit;\r\n                    this.bestParameters = this.lastParameters;\r\n                    this.bestTime = this.lastTime;\r\n                    this.updateBestConfig();\r\n                }\r\n            }\r\n        }\r\n        this.count += 1;\r\n    }\r\n\r\n    buildBoostCombinator() {\r\n        let consCombinations = this.getConsumables();\r\n        if (!consCombinations) {\r\n            consCombinations = {};\r\n        }\r\n        for (const name in this.legendary) {\r\n            consCombinations[name] = this.legendary[name];\r\n        }\r\n        if (Object.keys(consCombinations).length > 0) {\r\n            return new Combinator(consCombinations);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    buildConsumableList(boostCombinations) {\r\n        const result = [];\r\n        if (!boostCombinations) {\r\n            return result;\r\n        }\r\n        for (const name in boostCombinations) {\r\n            if (name.endsWith(\"_c\")) {\r\n                const array = boostCombinations[name];\r\n                for (let i = 0; i < array.length; i++) {\r\n                    result.push(array[i]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    buildLegendaryList(boostCombinations) {\r\n        const result = [];\r\n        if (!boostCombinations) {\r\n            return result;\r\n        }\r\n        for (const name in boostCombinations) {\r\n            if (name.endsWith(\"1_l\")) {\r\n                result.push([boostCombinations[name], 0]);\r\n            } else if (name.endsWith(\"2_l\")) {\r\n                result.push([boostCombinations[name], 1]);\r\n            } else if (name.endsWith(\"3_l\")) {\r\n                result.push([boostCombinations[name], 2]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    nextBoostExists() {\r\n        return this.boostCombinator && this.boostCombinator.next();\r\n    }\r\n\r\n    calculateCombinations(maxCount=1) {\r\n        let count = 0;\r\n        while (count < maxCount) {\r\n            let modCombinationExists = false;\r\n            let currentBoosts = null;\r\n            if (!this.nextBoostExists()) {\r\n                modCombinationExists = this.modCombinator.next();\r\n                if (modCombinationExists) {\r\n                    this.applyMods();\r\n                    this.boostCombinator = this.buildBoostCombinator();\r\n                    if (this.boostCombinator) {\r\n                        currentBoosts = this.boostCombinator.current();\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            } else {\r\n                currentBoosts = this.boostCombinator.current();\r\n            }\r\n            const consList = this.buildConsumableList(currentBoosts);\r\n            const legsList = this.buildLegendaryList(currentBoosts);\r\n            this.calculateAndCount(consList, legsList);\r\n            count += 1;\r\n        }\r\n        this.hasGotLastCombination = (count === 0);\r\n        return !this.hasGotLastCombination;\r\n    }\r\n\r\n    isFinished() {\r\n        return this.hasGotLastCombination;\r\n    }\r\n\r\n    getCompletionPercent() {\r\n        if (!this.modCombinator) {\r\n            return 0;\r\n        }\r\n        const onePart =  100 / this.modCombinator.getCombinationsCount();\r\n        return parseInt(onePart * this.modCombinator.getCurrentNumber());\r\n    }\r\n\r\n    applyMods() {\r\n        TemplateTools.resetMods(this.template);\r\n        const combinations = this.modCombinator.current();\r\n        for (const name in combinations) {\r\n            const modGroup = this.template.allMods[name];\r\n            if (modGroup) {\r\n                const modIndex = combinations[name];\r\n                if (modIndex > -1) {\r\n                    modGroup[modIndex][1] = true;\r\n                }\r\n            }\r\n        }\r\n        modsSetter.cleanTemplateAndApplyCurrentMods(this.template);\r\n    }\r\n\r\n    // Considers that if explosive exists by default then it will exist for any other configuration\r\n    // must be applied before resetting template\r\n    isDefaultExplosive() {\r\n        modsSetter.cleanTemplateAndApplyCurrentMods(this.template);\r\n        return TemplateTools.isWeaponExplosive(this.template);\r\n    }\r\n\r\n    nonAutomatic() {\r\n        return (this.main[\"Non-Automatic\"] && this.template.isAuto[1] === 1);\r\n    }\r\n\r\n    applyLegendaryToWSpec(wSpec, legendary, update) {\r\n        if (!legendary) {\r\n            return;\r\n        }\r\n        const lowHP = this.cards[\"Low HP\"];\r\n        for(let i = 0; i < legendary.length; i++) {\r\n            const leg = legendary[i];\r\n            const legId = leg[0];\r\n            const legIndex = leg[1];\r\n            this.modParser.applyLegendaryModToWSpec(legId, wSpec, legIndex, ((lowHP) ? 20 : 100), update, true);\r\n            wSpec.legendary[legIndex][0] = legId;\r\n        }\r\n    }\r\n\r\n    memoConfig(wSpec, consumableBoostsList) {\r\n        const mods = [];\r\n        const leg1 = getLegendaryNameFromSpec(wSpec, 1);\r\n        const leg2 = getLegendaryNameFromSpec(wSpec, 2);\r\n        const leg3 = getLegendaryNameFromSpec(wSpec, 3);\r\n        for (let i = 0; i < wSpec.mods.length; i++) {\r\n            const mod = wSpec.mods[i];\r\n            mods.push({group: mod.group, name: mod.name});\r\n        }\r\n        this.currentConfig[\"mods\"] = mods;\r\n        this.currentConfig[\"consumables\"] = consumableBoostsList;\r\n        this.currentConfig[\"legendary\"] = [leg1, leg2, leg3];\r\n        this.currentConfig[\"perks\"] = this.perkImageNames;\r\n        return this.currentConfig;\r\n    }\r\n\r\n    updateBestConfig() {\r\n        this.bestConfig = {};\r\n        const mods = [];\r\n        const legs = [];\r\n        const consumables = [];\r\n        const perks = [];\r\n        this.bestConfig['mods'] = mods;\r\n        this.bestConfig['legendary'] = legs;\r\n        this.bestConfig['consumables'] = consumables;\r\n        this.bestConfig['perks'] = perks;\r\n        for (let i = 0; i < this.currentConfig.mods.length; i++) {\r\n            const mod = this.currentConfig.mods[i];\r\n            mods.push({group: mod.group, name: mod.name});\r\n        }\r\n\r\n        for (let i = 0; i < this.currentConfig.legendary.length; i++) {\r\n            const leg = this.currentConfig.legendary[i];\r\n            legs.push(leg);\r\n        }\r\n\r\n        for (let i = 0; i < this.currentConfig.consumables.length; i++) {\r\n            const cons = this.currentConfig.consumables[i];\r\n            consumables.push(cons);\r\n        }\r\n\r\n        for (let i = 0; i < this.currentConfig.perks.length; i++) {\r\n            const perk = this.currentConfig.perks[i];\r\n            perks.push(perk);\r\n        }\r\n    }\r\n\r\n    getBestConfig() {\r\n        return (this.bestConfig) ? this.bestConfig : this.currentConfig;\r\n    }\r\n\r\n    getCurrentConfig() {\r\n        return this.currentConfig;\r\n    }\r\n\r\n    buildNewCreatures() {\r\n        return {\r\n            creature1: buildCreature(this.creatureNames.creature1[0], this.creatureNames.creature1[1], \"creature1\"),\r\n            creature2: buildCreature(this.creatureNames.creature2[0], this.creatureNames.creature2[1], \"creature2\"),\r\n            creature3: buildCreature(this.creatureNames.creature3[0], this.creatureNames.creature3[1], \"creature3\"),\r\n            creature4: buildCreature(this.creatureNames.creature4[0], this.creatureNames.creature4[1], \"creature4\"),\r\n        };\r\n    }\r\n\r\n    calculateCombination(consumableBoostsList, legendary) {\r\n        const wSpec = convertTemplateToSpecs(this.template, false);\r\n\r\n        // Update default legs or apply new in wSpec\r\n        const updateLeg = this.defaultLegendary.length > 0;\r\n        const legToApply = (this.defaultLegendary.length > 0) ? this.defaultLegendary : legendary;\r\n        this.applyLegendaryToWSpec(wSpec, legToApply, updateLeg);\r\n        const extraDamage = defaultExtraDamage();\r\n        extraDamage.useCrit = this.cards[\"Crit\"];\r\n        extraDamage.critFreq = this.frCrit;\r\n        extraDamage.useSneak = this.cards[\"Sneak\"];\r\n        extraDamage.headFreq = this.frHead;\r\n        extraDamage.useHead = this.main[\"Head Shot\"];\r\n        const additionalDamages = defaultAdds();\r\n        const player = defaultPlayer();\r\n        const playerStats = defaultPlayerStats();\r\n        playerStats.strength.value = this.main[\"Strength\"];\r\n        const boostDamage = this.buildPerks(wSpec, player);\r\n        this.memoConfig(wSpec, consumableBoostsList);\r\n        const creatures = this.buildNewCreatures();\r\n        const [, consumableBoosts,] = ConsumablesBuilder.buildFromList(consumableBoostsList, player);\r\n        const weaponFactory = new WeaponFactory(wSpec, boostDamage, extraDamage, additionalDamages, consumableBoosts, playerStats);\r\n        const timeLimit = (this.bestTime === Infinity) ? null : [this.creatureName, this.bestTime];\r\n        const result = new DamageEmulator(weaponFactory.build(WeaponFactory.DEFAULT), creatures).emulate(35000, timeLimit);\r\n        const report = {\r\n            \"Rejected\": this.nonAutomatic(),\r\n            \"Parameters\": {\r\n                wSpec: wSpec,\r\n                creatures: creatures,\r\n                extraDamage: extraDamage,\r\n                additionalDamages: additionalDamages,\r\n                player: player,\r\n                playerStats: playerStats,\r\n                boostDamage: boostDamage,\r\n                result: result,\r\n                consumableList: consumableBoostsList,\r\n            },\r\n            \"average\": {lifeTime: getAverageTimeMillis(creatures), averageHit: (creatures.creature1.averageHit + creatures.creature2.averageHit + creatures.creature3.averageHit + creatures.creature4.averageHit) / 4},\r\n        };\r\n        report[creatures.creature1.name] = {lifeTime: creatures.creature1.lifeTime, averageHit: creatures.creature1.averageHit};\r\n        report[creatures.creature2.name] = {lifeTime: creatures.creature2.lifeTime, averageHit: creatures.creature2.averageHit};\r\n        report[creatures.creature3.name] = {lifeTime: creatures.creature3.lifeTime, averageHit: creatures.creature3.averageHit};\r\n        report[creatures.creature4.name] = {lifeTime: creatures.creature4.lifeTime, averageHit: creatures.creature4.averageHit};\r\n        return report;\r\n    }\r\n\r\n    buildPerks(wSpec, player) {\r\n        const wType = wSpec.type;\r\n        const automatic = (wSpec.is_auto === 1);\r\n        const energyTag = wSpec.tags.includes(\"Energy\");\r\n        const explosiveTag = wSpec.tags.includes(\"Explosive\");\r\n        const fusionTag = wSpec.tags.includes(\"FusionCore\");\r\n        const oneHandedTag = wSpec.tags.includes(\"Melee1H\");\r\n        const twoHandedTag = wSpec.tags.includes(\"Melee2H\");\r\n        const silencerTag = wSpec.tags.includes(\"HasSilencer\");\r\n        const shotgunTag = wSpec.tags.includes(\"Shotgun\");\r\n        const main = this.cards[\"Main Boosts\"];\r\n        const temp = this.cards[\"Temp Boosts\"];\r\n        const leg = this.cards[\"Leg Boosts\"];\r\n        const team = this.cards[\"Team\"];\r\n        const lowHp = this.cards[\"Low HP\"];\r\n        const pa = this.cards[\"Power Armor\"];\r\n        const explosive = (wSpec.exp > 0);\r\n        const crit = this.cards[\"Crit\"];\r\n        const sneak = this.cards[\"Sneak\"];\r\n        const night = this.main[\"Night\"];\r\n        const useSerums = this.stuff[\"Serums\"];\r\n        const drink = this.stuff[\"Drink\"];\r\n        const boosts = PerkCardBuilder.buildWithOptions(wType, automatic, energyTag, explosiveTag, fusionTag, oneHandedTag, twoHandedTag, silencerTag, shotgunTag, main, temp, leg, drink, team, lowHp, pa, explosive, crit, sneak, night, useSerums, player, this.bodyTags, this.creatureTags);\r\n        this.perkImageNames = PerkCardBuilder.getImageNamesForPickedCards(boosts);\r\n        return boosts;\r\n    }\r\n}","export default class PickedGroups {\r\n    static excludeGroups = [\"Replacement\", \"Feedthroat\", \"Handle\", \"Mod1\", \"Mod2\", \"Mod3\", \"Mod4\", \"Modelswap\", \"Meleelogo\", \"Shaft\", \"Legendary1\", \"Legendary2\", \"Legendary3\", \"Legendary4\", \"Legendary5\", \"Customname\", \"Frontsight\"];\r\n    static groups = [];\r\n\r\n    static init(template) {\r\n        PickedGroups.groups.length = 0;\r\n        for (const name in template.allMods) {\r\n            PickedGroups.push(name);\r\n        }\r\n    }\r\n\r\n    static excluded(name) {\r\n        return PickedGroups.excludeGroups.includes(name);\r\n    }\r\n\r\n    static push(name) {\r\n        if (!PickedGroups.excluded(name)) {\r\n            PickedGroups.groups.push(name);\r\n        }\r\n    }\r\n\r\n    static clear() {\r\n        PickedGroups.groups.length = 0;\r\n    }\r\n\r\n    static get() {\r\n        return PickedGroups.groups;\r\n    }\r\n}","import { useState } from 'react';\r\nimport { Divider } from 'antd';\r\nimport { UCheckbox } from '../../../viewComponents/checkbox/UCheckbox';\r\nimport GroupView from '../../../helpers/views/GroupView';\r\nimport PickedGroups from './PickedGroups';\r\nimport Row from 'react-bootstrap/Row';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nfunction getDefaultModGroups(template) {\r\n    let result = {};\r\n    if (template) {\r\n        for (const name in template.allMods) {\r\n            if (!PickedGroups.excluded(name)) {\r\n                 result[name] = true;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction buildGroupsView(groups, onGroupChange) {\r\n    let result = [];\r\n\r\n    for (const name in groups) {\r\n        result.push(getModItem(name, groups, onGroupChange));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getModItem(name, groups, onGroupChange) {\r\n    const checked = groups[name];\r\n    const outline = (checked) ? \"shadow-blue\" : \"\";\r\n    return (\r\n        <div key={name} className=\"col\">\r\n            <GroupView className={outline}>\r\n                <InputGroup className=\"mb-1 mt-1 p-0 m-0 flex-nowrap justify-content-center\">\r\n                    <InputGroup.Text style={{ width: '2.8rem'}}>\r\n                        <UCheckbox title={name} onChange={onGroupChange} checked={checked}></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text style={{ width: '15rem' }}><small>{name}</small></InputGroup.Text>\r\n                </InputGroup>\r\n            </GroupView>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function CalcModGroups(props) {\r\n    const [groups, setGroups] = useState(getDefaultModGroups(props.template));\r\n    function onGroupChange(e) {\r\n        groups[e.target.title] = e.target.checked;\r\n        PickedGroups.clear();\r\n        for (const name in groups) {\r\n            if (groups[name]) {\r\n                PickedGroups.push(name);\r\n            }\r\n        }\r\n        setGroups({...groups});\r\n    }\r\n    return (\r\n        <>\r\n            <Divider key={'ModGroups'} className=\"p-0 mt-3 mb-1\">Mod Groups</Divider>\r\n            <Container>\r\n                <Row>\r\n                    {buildGroupsView(groups, onGroupChange)}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import {checkLength} from '../../../helpers/Input';\r\nimport { Divider } from 'antd';\r\nimport { UCheckbox } from '../../../viewComponents/checkbox/UCheckbox';\r\nimport GroupView from '../../../helpers/views/GroupView';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Button } from 'react-bootstrap';\r\nimport { WarningPopover } from '../../../helpers/WarningPopover';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nfunction getInfo(name, infos) {\r\n    const info = infos[name];\r\n    if (info) {\r\n        return (\r\n            <WarningPopover element={infoButton()} message={info} header=\"Description\" />\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction infoButton() {\r\n    return (\r\n        <Button style={{ width: '2rem' }} variant=\"warning\"><strong>?</strong></Button>\r\n    );\r\n}\r\n\r\nfunction headButton(name, frHead, setFrHead) {\r\n    if (name !== \"Head Shot\") {\r\n        return (<></>);\r\n    }\r\n    function onClick(e) {\r\n        frHead += 20;\r\n        if (frHead > 100) {\r\n            frHead = 20;\r\n        }\r\n        setFrHead(frHead);\r\n    }\r\n    return (\r\n        <Button className={\"ps-0 pe-0 \"} style={{ width: '3rem' }} variant=\"secondary\" onClick={onClick}><strong><small>{frHead}%</small></strong></Button>\r\n    );\r\n}\r\n\r\nfunction buildView(items, setItems, frHead, setFrHead, frCrit, setFrCrit, infos) {\r\n    const result = [];\r\n    function onChange(e) {\r\n        items[e.target.title] = e.target.checked;\r\n        setItems({...items});\r\n    }\r\n    for (const opt in items) {\r\n        result.push(getItem(opt, onChange, items, setItems, frHead, setFrHead, frCrit, setFrCrit, infos));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction critButton(name, frCrit, setFrCrit) {\r\n    if (name !== \"Crit\") {\r\n        return (<></>);\r\n    }\r\n    function onClick(e) {\r\n        frCrit -= 1;\r\n        if (frCrit < 1) {\r\n            frCrit = 7;\r\n        }\r\n        setFrCrit(frCrit);\r\n    }\r\n    return (\r\n        <Button className=\"ps-0 pe-0\" style={{ width: '3rem' }} variant=\"secondary\" onClick={onClick}><strong><small>1 / {frCrit}</small></strong></Button>\r\n    );\r\n}\r\n\r\nfunction getItem(name, onChange, items, setItems, frHead, setFrHead, frCrit, setFrCrit, infos) {\r\n    let width = (infos[name]) ? '13rem' : '15rem';\r\n    width = (name === \"Head Shot\" || name === \"Crit\") ? \"12rem\" : width;\r\n    width = (name === \"Strength\") ? \"11rem\" : width;\r\n    const dis = (name === \"Strength\");\r\n    const checked = (dis) ? true : items[name];\r\n    const outline = (checked) ? \"shadow-blue\" : \"\";\r\n    return (\r\n        <Col key={name}>\r\n            <GroupView className={outline}>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap justify-content-center\">\r\n                    <InputGroup.Text style={{ width: '2.8rem'}}>\r\n                        <UCheckbox disabled={dis} title={name} onChange={onChange} checked={checked}></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text style={{ width: width }}><small>{name}</small></InputGroup.Text>\r\n                    {getInfo(name, infos)}\r\n                    {headButton(name, frHead, setFrHead)}\r\n                    {strengthField(name, items, setItems)}\r\n                    {critButton(name, frCrit, setFrCrit)}\r\n                </InputGroup>\r\n            </GroupView>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction strengthField(name, items, setItems) {\r\n    if (name !== \"Strength\") {\r\n        return (<></>);\r\n    }\r\n    function onChange(e) {\r\n        checkLength(e);\r\n        let value = parseInt(e.target.value);\r\n        let min = parseInt(e.target.min);\r\n        if (value < min) {\r\n            value = min;\r\n        }\r\n        items.Strength = value;\r\n        setItems({\r\n            ...items,\r\n        });\r\n    }\r\n    return (\r\n        <Form.Control className={\"pe-1\"} style={{ minWidth: '4rem', maxWidth: '4rem'}} type=\"number\" min=\"5\" value={items.Strength} max={\"100\"} maxLength=\"3\" onChange={onChange} />\r\n    );\r\n}\r\n\r\nexport default function CalcModOptionsView(props) {\r\n    return (\r\n        <>\r\n            <Divider key={props.header} className=\"p-0 mt-3 mb-1\">{props.header}</Divider>\r\n            <Container>\r\n                <Row>\r\n                    {buildView(props.items, props.setItems, props.frHead, props.setFrHead, props.frCrit, props.setFrCrit, props.infos)}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n}","import CalcModOptionsView from './CalcModOptionsView';\r\n\r\n\r\nconst infos = {\r\n    \"Temp Boosts\": \"Cards like Adrenaline, Tenderizer...\",\r\n    \"Main Boosts\": \"Cards like Heavy Gunner, Stabilized...\",\r\n    \"Leg Boosts\": \"TOFT, Follow Through.\",\r\n    \"Low HP\": \"20% / 100%\",\r\n    \"Power Armor\": \"Used only for 'Heavy', ignored for other groups\",\r\n}\r\n\r\nexport default function CalcCards(props) {\r\n    return (\r\n        <CalcModOptionsView header={\"Cards\"} items={props.cards} setItems={props.setCards} frCrit={props.frCrit} setFrCrit={props.setFrCrit} infos={infos}></CalcModOptionsView>\r\n    );\r\n}","import CalcModOptionsView from './CalcModOptionsView';\r\n\r\n\r\nconst infos = {\r\n    \"Non-Automatic\": \"Calculate among non-automatic mods only. If only automatic mods are presented then default config will be used.\",\r\n    \"Night\": \"Only for weapons with suppressor in sneak mode.\",\r\n}\r\n\r\nexport default function CalcMain(props) {\r\n    return (\r\n        <CalcModOptionsView header={\"Main\"} items={props.main} setItems={props.setMain} frHead={props.frHead} setFrHead={props.setFrHead} infos={infos}></CalcModOptionsView>\r\n    );\r\n}","import CalcModOptionsView from './CalcModOptionsView';\r\n\r\n\r\nconst infos = {\r\n    \"Drink\": <>Only <strong>Whiskey, Sweet Mut Fruit, Ballistic Bock, High Voltage Hefe, Vintage Mire Magic Moonshine, Sugar-Free Nukashine</strong> are used to reduce the number of useless combinations.</>,\r\n    \"Food\": <>Only <strong>Tasty Mutant Hound Stew, Deathclaw Wellington, Blight Soup, Spiked Venison & Tato Stew</strong> are used to reduce the number of useless combinations.</>,\r\n    \"Chemicals\": <><strong>Nuclear Don's blend</strong> is not included. <b>Bufftats / Psychotats</b> is not included (<b>Psychobuff</b> is used instead). <b>Fury</b> is used instead of <b>Super Chem MK1/2/3/4</b> as it gives the same effect with <strong>Psychobuff</strong>. Only <strong>Psychobuff, Fury, Overdrive, Calmex</strong> are used to reduce the number of useless combinations.</>,\r\n}\r\n\r\nexport default function CalcConsumables(props) {\r\n    return (\r\n        <CalcModOptionsView header={\"Consumables\"} items={props.stuff} setItems={props.setStuff} infos={infos}></CalcModOptionsView>\r\n    );\r\n}","import CalcModOptionsView from './CalcModOptionsView';\r\n\r\n\r\nconst infos = {\r\n    \"Legendary1\": <>Only <strong>Quad, Aristocrat, Anti-Armor, Two Shot, Executioner, Bloodied</strong> are used to reduce the number of useless combinations.</>,\r\n    \"Legendary2\": <>Only <strong>Steady, Melee Rapid, Hitman, Ranged Rapid, Vital, Explosive, Crippling</strong> are used to reduce the number of useless combinations.</>,\r\n    \"Legendary3\": <>Only <strong>Swift, Strength</strong> are used to reduce the number of useless combinations.</>,\r\n}\r\n\r\nexport default function CalcLegendary(props) {\r\n    return (\r\n        <CalcModOptionsView header={\"Legendary\"} items={props.leg} setItems={props.setLeg} infos={infos}></CalcModOptionsView>\r\n    );\r\n}","import { getImageElement } from '../helpers/WeaponImages';\r\nimport TemplateTools from './TemplateTools';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nexport default function WeaponEmblem(props) {\r\n    let iconName = props.iconName;\r\n    let className = \"shadow-outline-gold\";\r\n    if (props.className) {\r\n        className = props.className;\r\n    }\r\n    if (props.template) {\r\n        iconName = TemplateTools.getImage(props.template);\r\n    }\r\n    return (\r\n        <Card className={\"p-0 m-0 \" + className} style={{maxHeight: props.iconSize, width: props.iconSize}}>\r\n            <Card.Body className=\"p-1 m-0\">\r\n                {getImageElement(iconName, props.iconSize)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","export default function LegendaryCalcRowView(props) {\r\n    function getLeg(stars, index) {\r\n        return getRow(stars, props.legendary[index], props.width, false, props.fontSize, props.starSize);\r\n    }\r\n    const leg1 = getLeg(\"⭐\", 0);\r\n    const leg2 = getLeg(\"⭐⭐\", 1);\r\n    const leg3 = getLeg(\"⭐⭐⭐\", 2);\r\n    return (\r\n        <div className=\"mb-0 d-flex justify-content-center\">\r\n            {leg1}\r\n            {leg2}\r\n            {leg3}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getRow(stars, text, width, wrap, fontSize, starSize) {\r\n    return (\r\n        <div className=\"bg-yellow m-1 shadow-gold ps-1 pe-1\" style={{width: width}}>\r\n            <div className=\"d-flex justify-content-center\" style={{fontSize: starSize}}>\r\n                {stars}\r\n            </div>\r\n            <div style={{textWrap: wrap, fontWeight: 'bold', textAlign: 'center', fontSize: fontSize, overflow: 'hidden', textOverflow: 'ellipsis'}}>\r\n                {text}\r\n            </div>\r\n        </div>\r\n    );\r\n}","function getWidths(size, columns) {\r\n    let rest = size - columns;\r\n    const rows = [columns];\r\n    while (rest > 0) {\r\n        if (rest < columns) {\r\n            rows.push(rest);\r\n        } else {\r\n            rows.push(columns);\r\n        }\r\n        rest -= columns;\r\n    }\r\n    const widths = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        const row = rows[i];\r\n        for (let j = 0; j < row; j++) {\r\n            widths.push((100 / row).toFixed(2) + \"%\");\r\n        }\r\n\r\n    }\r\n    return widths;\r\n}\r\n\r\nexport default function ModsCalcRowView(props) {\r\n    const modViews = [];\r\n    let columns = 0;\r\n    let modView = [];\r\n    const wrap = (props.wrapText) ? 'wrap' : 'nowrap';\r\n    if (props.mods.length < 2) {\r\n        columns = 1;\r\n    } else if (props.mods.length < 5) {\r\n        columns = 2;\r\n    } else if (props.mods.length < 7) {\r\n        columns = 3;\r\n    } else {\r\n        columns = 4;\r\n    }\r\n    const widths = getWidths(props.mods.length, columns);\r\n    for (let i = 0; i < props.mods.length; i++) {\r\n        const mod = props.mods[i];\r\n        const width = widths[i];\r\n        modView.push(\r\n            <div key={mod.name} className=\"mod-item-shadow m-1 ps-1 pe-1\" style={{width: width, display: 'flex', alignItems: 'center', justifyContent: 'center'}}><div style={{textWrap: wrap, fontWeight: 'bold', textAlign: 'center', color: '#555555', fontSize: props.fontSize, overflow: 'hidden', textOverflow: 'ellipsis'}}>{mod.name}</div></div>\r\n        );\r\n        if (((i + 1) % columns) === 0) {\r\n            modViews.push(<div key={i} className=\"mb-0 d-flex justify-content-center\">{modView}</div>);\r\n            modView = [];\r\n        }\r\n    }\r\n    if (modView.length > 0) {\r\n        modViews.push(<div key={props.mods.length} className=\"mb-0 d-flex justify-content-center\">{modView}</div>);\r\n    }\r\n    return (\r\n        <div className=\"m-0 p-0\" style={{minHeight: props.minHeight}}>\r\n            {modViews}\r\n        </div>\r\n    );\r\n}","import ConsumablesBuilder from '../../boostStuff/ConsumablesBuilder';\r\n\r\n\r\nexport default class ParametersApplier {\r\n\r\n    static applyCalculatedParameters(parameters, props) {\r\n        props.setWSpec(parameters.wSpec);\r\n        props.setBoostDamage(parameters.boostDamage);\r\n        props.setPlayer(parameters.player);\r\n        props.setPlayerStats(parameters.playerStats);\r\n        props.setAdditionalDamages(parameters.additionalDamages);\r\n        props.setExtraDamage(parameters.extraDamage);\r\n\r\n        // Have to recalculate it for best result to set appropriate selection to items.\r\n        const [foodPref, stuffBoost, consumables] = ConsumablesBuilder.buildFromList(parameters.consumableList, parameters.player);\r\n        ConsumablesBuilder.setConsumableItems(consumables, props.setMagazines, props.setBobbleHeads, props.setFood, props.setDrink, props.setPsycho, props.setSerum, props.setOthers);\r\n        props.setFoodPref(foodPref);\r\n        props.setStuffBoost(stuffBoost);\r\n    }\r\n}","import { useState, useRef } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport ParameterCalculator from './calc/ParameterCalculator';\r\nimport CalcModGroups from './calc/view/CalcModGroups';\r\nimport CalcCards from './calc/view/CalcCards';\r\nimport PickedGroups from './calc/view/PickedGroups';\r\nimport CalcMain from './calc/view/CalcMain';\r\nimport CalcConsumables from './calc/view/CalcConsumables';\r\nimport CalcLegendary from './calc/view/CalcLegendary';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\nimport WeaponEmblem from './WeaponEmblem';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { WarningPopoverBadge } from '../helpers/WarningPopover';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\nimport TemplateTools from './TemplateTools';\r\nimport { keyValueTag } from '../helpers/RowBuilder';\r\nimport ConsumablesBuilder from '../boostStuff/ConsumablesBuilder';\r\nimport LegendaryCalcRowView from './calc/view/LegendaryCalcRowView';\r\nimport ModsCalcRowView from './calc/view/ModsCalcRowView';\r\nimport ParametersApplier from './calc/ParametersApplier';\r\nimport EmblemCalcRowView from './calc/view/EmblemCalcRowView';\r\nimport AccuracyHelper from '../helpers/AccuracyHelper';\r\nimport { Divider } from 'antd';\r\nimport getPerkImage from '../perkCardBoosts/PerkImageProvider';\r\nimport { getDefaultCards, getDefaultMain, getDefaultStuff, getDefaultLegendary } from './calc/CalcEntities';\r\n\r\n\r\nlet parameterCalculator = null;\r\n\r\nlet firstShown = false;\r\n\r\nconst calcIterations = 4;\r\n\r\nexport default function ModalCalculateWeapon(props) {\r\n    // console.log(\"ModalCalculateWeapon\");\r\n    const minHeight = useRef(null);\r\n    const [count, setCount] = useState({config: {}, current: 0, percent: 0, bestTime: Infinity});\r\n    const [calculating, setCalculating] = useState(0); // 0 - start, 1 - calculating, 2 - finished\r\n    const [cards, setCards] = useState(getDefaultCards());\r\n    const [main, setMain] = useState(getDefaultMain());\r\n    const [stuff, setStuff] = useState(getDefaultStuff());\r\n    const [leg, setLeg] = useState(getDefaultLegendary());\r\n    const [frCrit, setFrCrit] = useState(4);\r\n    const [frHead, setFrHead] = useState(100);\r\n    const [selectedCreature, setSelectedCreature] = useState('average');\r\n    const [accuracyPref, setAccuracyPref] = useState(AccuracyHelper.BALANCE);\r\n\r\n    if (!props.modalCalculate.show) {\r\n        firstShown = false;\r\n        return (<></>);\r\n    }\r\n\r\n    if (!firstShown) {\r\n        firstShown = true;\r\n        PickedGroups.init(props.modalCalculate.template);\r\n    }\r\n\r\n    let name = \"\";\r\n    if (props.modalCalculate.template) {\r\n        name = props.modalCalculate.template.name;\r\n    }\r\n    name = truncateLongWords(name, 25);\r\n\r\n    function onHide(e) {\r\n        setCount({config: {}, current: 0, percent: 0, bestTime: Infinity});\r\n        setCalculating(0);\r\n        props.setModalCalculate({template: null, show: false});\r\n        parameterCalculator = null;\r\n        firstShown = false;\r\n    }\r\n\r\n    function applyTemplate(e) {\r\n        if (parameterCalculator) {\r\n            setCalculating(3);\r\n            setTimeout(() => {\r\n                const parameters = parameterCalculator.getBestParameters().Parameters;\r\n                ParametersApplier.applyCalculatedParameters(parameters, props);\r\n                onHide(e);\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    function startCalculation(e) {\r\n        parameterCalculator = new ParameterCalculator(props.creatureNamesRef.current, props.modalCalculate.template.id, PickedGroups.get(), cards, frCrit, frHead, main, stuff, leg, accuracyPref);\r\n        parameterCalculator.prepareAndCalcFirst(selectedCreature);\r\n        setCount({config: parameterCalculator.getCurrentConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n        setCalculating(1);\r\n    }\r\n\r\n    if (calculating === 1) {\r\n        setTimeout(() => {\r\n                if (parameterCalculator) {\r\n                    const calculated = parameterCalculator.calculateCombinations(calcIterations);\r\n                    if (!calculated) {\r\n                        setCalculating(2);\r\n                        setCount({config: parameterCalculator.getBestConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n                    } else {\r\n                        setCount({config: parameterCalculator.getCurrentConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    function getButtons(calculating) {\r\n        if (calculating === 0) {\r\n            return (\r\n                <>\r\n                    <Button className=\"w-100 me-1\" onClick={startCalculation}>Start</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </>\r\n            );\r\n        } else if (calculating === 1) {\r\n            return (\r\n                <Button className=\"w-100 me-1\" onClick={onHide}>Stop And Close</Button>\r\n            );\r\n        } else if (calculating === 2) {\r\n            return (\r\n                <>\r\n                    <Button className=\"w-100 me-1\" onClick={applyTemplate}>Apply</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </>\r\n            );\r\n        } else {\r\n            return (<></>);\r\n        }\r\n    }\r\n\r\n    function getCounter(calculating) {\r\n        if (calculating === 0) {\r\n            return (<></>);\r\n        }\r\n        const leftValue = count.current + \" - \" + count.percent + \"%\";\r\n        const rightValue = count.bestTime;\r\n        const wrapText = (calculating === 2);\r\n        const currentElement = document.getElementById(\"modal-calc-item\");\r\n        if (currentElement) {\r\n            const curHeight = currentElement.offsetHeight;\r\n            if (!minHeight.current || minHeight.current < curHeight) {\r\n                minHeight.current = curHeight;\r\n            }\r\n        }\r\n        return (\r\n            <div style={{minHeight: minHeight.current}} id=\"modal-calc-item\">\r\n                <div className=\"mb-2 d-flex justify-content-center\">\r\n                    {keyValueTag(leftValue,  rightValue, 'volcano', {width: '100%', height: '1.34rem', fontSize: '1rem'}, false)}\r\n                </div>\r\n                <LegendaryCalcRowView legendary={count.config.legendary} width='50%' fontSize='65%' starSize='50%' />\r\n                <ModsCalcRowView minHeight='2.9rem' mods={count.config.mods} fontSize='65%' wrapText={wrapText} />\r\n                <EmblemCalcRowView imNames={count.config.perks} imageProvider={getPerkImage} iconSize='2.0rem' imageSize='1.864rem' borderRadius='5px' />\r\n                <EmblemCalcRowView imNames={count.config.consumables} imageProvider={ConsumablesBuilder.getImagePathById} iconSize='2.0rem' imageSize='1.864rem' />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function getCreatureNames() {\r\n        const result = [\"average\"];\r\n        for (const fieldName in props.creatureNamesRef.current) {\r\n            const data = props.creatureNamesRef.current[fieldName];\r\n            result.push(data[0]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function onSelectCreatureName(e) {\r\n        setSelectedCreature(e);\r\n    }\r\n\r\n    const creatureNames = getCreatureNames();\r\n    let selectedCreatureName;\r\n    if (creatureNames.includes(selectedCreature)) {\r\n        selectedCreatureName = CreatureDataProvider.capitalizeCreatureName(selectedCreature);\r\n    } else {\r\n        selectedCreatureName = \"Average\";\r\n        setSelectedCreature(\"average\");\r\n    }\r\n\r\n    function getSettings(calculating) {\r\n        if (calculating === 0) {\r\n            let show = !TemplateTools.hasDefaultLegendary(props.modalCalculate.template);\r\n            return (\r\n                <>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelectCreatureName} names={creatureNames} title={<strong>{selectedCreatureName}</strong>} />\r\n                    </div>\r\n                    <Divider className=\"mt-3 mb-2\">\r\n                        Accuracy\r\n                        <WarningPopoverBadge className=\"ms-3\" sign=\"?\" message={AccuracyHelper.ACCURACY_INFO} header={\"Accuracy\"} placement={'bottom'} />\r\n                    </Divider>\r\n                    <BSRadio className=\"d-flex justify-content-center m-1\" pairs={AccuracyHelper.ACC_PREFERENCE} selectedValue={accuracyPref} setSelectedValue={setAccuracyPref} parseValueInt={true} />\r\n                    <CalcMain main={main} setMain={setMain} frHead={frHead} setFrHead={setFrHead}></CalcMain>\r\n                    <CalcModGroups template={props.modalCalculate.template}></CalcModGroups>\r\n                    <CalcCards cards={cards} setCards={setCards} frCrit={frCrit} setFrCrit={setFrCrit}></CalcCards>\r\n                    <CalcLegendary leg={leg} setLeg={setLeg} show={show}></CalcLegendary>\r\n                    <CalcConsumables stuff={stuff} setStuff={setStuff}></CalcConsumables>\r\n                </>\r\n            );\r\n        }\r\n        return (<></>);\r\n    }\r\n\r\n    function nameView() {\r\n        if (calculating !== 0) {\r\n            return (<></>);\r\n        }\r\n        return (\r\n            <div className=\"d-flex justify-content-center mb-3\">\r\n                <strong><small>Calculate Best Options</small></strong>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function getModalView() {\r\n        if (calculating ===  3) {\r\n            return (\r\n                <Modal.Body className=\"modal-scroll-80-60\">\r\n                    <b>Loading...</b>\r\n                </Modal.Body>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Modal.Header className=\"d-flex justify-content-center p-1\">\r\n                    <Row className=\"p-1\" style={{width: '100%'}}>\r\n                        <Col className=\"d-flex justify-content-start p-0\" xs={2}>\r\n                            <WeaponEmblem template={props.modalCalculate.template} iconSize='2.5rem' />\r\n                        </Col>\r\n                        <Col xs={8} className=\"d-flex justify-content-center\">\r\n                            <div className=\"p-auto m-auto\" style={{fontSize: '1rem', fontWeight: 'bold'}}>{name}</div>\r\n                        </Col>\r\n                        <Col xs={2} className=\"d-flex justify-content-end m-auto pe-1\">\r\n                            <WarningPopoverBadge message={ParameterCalculator.info} sign=\"?\" header={\"Description\"} placement={'left'} />\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"modal-scroll-80-60\">\r\n                    {nameView()}\r\n                    {getCounter(calculating)}\r\n                    {getSettings(calculating)}\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"p-2\">\r\n                    <InputGroup className=\"mb-0 mt-0 flex-nowrap\">\r\n                        {getButtons(calculating)}\r\n                    </InputGroup>\r\n                </Modal.Footer>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.modalCalculate.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            {getModalView()}\r\n        </Modal>\r\n    );\r\n}","export function getDefaultCards() {\r\n    return {\"Main Boosts\": true, \"Temp Boosts\": false, \"Leg Boosts\": false, \"Team\": true, \"Low HP\": true, \"Power Armor\": true, \"Sneak\": false, \"Crit\": false};\r\n}\r\n\r\nexport function getDefaultMain() {\r\n    return {\"Strength\": 25, \"Head Shot\": true, \"Non-Automatic\": false, \"Scoped\": false, \"Night\": false};\r\n}\r\n\r\nexport function getDefaultStuff() {\r\n    return {\"Magazines\": false, \"Bobble Heads\": false, \"Chemicals\": true, \"Food\": true, \"Drink\": true, \"Serums\": true, \"Endangerol Syringer\": false};\r\n}\r\n\r\nexport function getDefaultLegendary() {\r\n    return {\"Legendary1\": true, \"Legendary2\": true, \"Legendary3\": true};\r\n}","import { Divider } from 'antd';\r\nimport { UCheckbox } from '../../../viewComponents/checkbox/UCheckbox';\r\nimport GroupView from '../../../helpers/views/GroupView';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nfunction buildGroupsView(groups, onGroupChange) {\r\n    let result = [];\r\n    for (const name in groups) {\r\n        result.push(getModItem(name, groups, onGroupChange));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getModItem(name, groups, onGroupChange) {\r\n    const checked = groups[name];\r\n    const outline = (checked) ? \"shadow-blue\" : \"\";\r\n    return (\r\n        <Col key={name}>\r\n            <GroupView className={outline}>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap justify-content-center\">\r\n                    <InputGroup.Text style={{ width: '2.8rem' }}>\r\n                        <UCheckbox title={name} onChange={onGroupChange} checked={checked}></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text style={{ width: '15rem' }}><small>{name}</small></InputGroup.Text>\r\n                </InputGroup>\r\n            </GroupView>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function CalcModGroupsAll(props) {\r\n\r\n    function onGroupChange(e) {\r\n        props.groups[e.target.title] = e.target.checked;\r\n        props.setGroups({...props.groups});\r\n    }\r\n    return (\r\n        <>\r\n            <Divider key={'ModGroups'} className=\"p-0 mt-3 mb-1\">Mod Groups</Divider>\r\n            <Container>\r\n                <Row>\r\n                    {buildGroupsView(props.groups, onGroupChange)}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { getRowWithImage } from '../../../helpers/WTypeDropdown';\r\n\r\n\r\nexport default function CalcWGroupsDropdown({type, setType}) {\r\n    function onSelect(e) {\r\n        setType(e);\r\n    };\r\n    return (\r\n        <Row className=\"p-2 mb-2 mt-1\">\r\n            <Col className=\"d-flex justify-content-center\">\r\n                <DropdownButton size=\"sm\" variant=\"info\" onSelect={onSelect} id=\"dropdown-basic-button\" title={getRowWithImage(type)}>\r\n                    <Dropdown.Item eventKey=\"All\">All</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Heavy\">{getRowWithImage(\"Heavy\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Shotgun\">{getRowWithImage(\"Shotgun\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Rifle\">{getRowWithImage(\"Rifle\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Pistol\">{getRowWithImage(\"Pistol\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Bow\">{getRowWithImage(\"Bow\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Melee\">{getRowWithImage(\"Melee\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Unarmed\">{getRowWithImage(\"Unarmed\")}</Dropdown.Item>\r\n                </DropdownButton>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import Card from 'react-bootstrap/Card';\r\nimport WeaponEmblem from '../../WeaponEmblem';\r\nimport { keyValueTag } from '../../../helpers/RowBuilder';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LegendaryCalcRowView from './LegendaryCalcRowView';\r\nimport ModsCalcRowView from './ModsCalcRowView';\r\nimport EmblemCalcRowView from './EmblemCalcRowView';\r\nimport ConsumablesBuilder from '../../../boostStuff/ConsumablesBuilder';\r\nimport getPerkImage from '../../../perkCardBoosts/PerkImageProvider';\r\nimport { useRef } from 'react';\r\n\r\n\r\nexport default function CalcCurrentItem(props) {\r\n    const minHeight = useRef(null);\r\n    const weaponName = useRef(null);\r\n    const leftValue = props.count.current + \" - \" + props.count.percent + \"%\";\r\n    const rightValue = props.count.bestTime;\r\n    const perksHeight = null; // (props.perksUsed) ? '4rem' : '0rem';\r\n    const consHeight = null; // (props.consUsed) ? '6rem' : '0rem';\r\n    const currentElement = document.getElementById(\"current-calc-item\");\r\n\r\n    // Adjust card height according to weapon name, we want to avoid height bouncing but be adjusted to\r\n    // every weapon\r\n    if (weaponName.current !== props.wName) {\r\n        weaponName.current = props.wName;\r\n        minHeight.current = null;\r\n    } else {\r\n        if (currentElement) {\r\n            const curHeight = currentElement.offsetHeight;\r\n            if (!minHeight.current || minHeight.current < curHeight) {\r\n                minHeight.current = curHeight;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card className=\"shadow-card-gold\" id=\"current-calc-item\" style={{minHeight: minHeight.current}}>\r\n                <Card.Body className=\"p-1 ps-2 m-0\">\r\n                    <Row>\r\n                        <Col className=\"m-auto\" xs={3}>\r\n                            <WeaponEmblem className=\"shadow-card-grey\" iconName={props.iconName} iconSize='2.8rem'></WeaponEmblem>\r\n                        </Col>\r\n                        <Col xs={9}>\r\n                            <div className=\"d-flex justify-content-end pe-1\"><strong className=\"text-shadow-blue2\">{props.wName}</strong></div>\r\n                            <div className=\"d-flex justify-content-end\">{keyValueTag(leftValue,  rightValue, 'red', {width: '100%', height: '1.34rem', fontSize: '1rem'})}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <LegendaryCalcRowView legendary={props.count.config.legendary} width='50%' fontSize='65%' starSize='50%' />\r\n                    <ModsCalcRowView minHeight='2.9rem' mods={props.count.config.mods} fontSize='65%' wrapText={false} />\r\n                    <EmblemCalcRowView style={{minHeight: perksHeight}} imNames={props.count.config.perks} imageProvider={getPerkImage} iconSize='1.5rem' imageSize='1.364rem' borderRadius='5px' />\r\n                    <EmblemCalcRowView style={{minHeight: consHeight}} imNames={props.count.config.consumables} imageProvider={ConsumablesBuilder.getImagePathById} iconSize='1.5rem' imageSize='1.364rem' />\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n}","import Card from 'react-bootstrap/Card';\r\nimport WeaponEmblem from '../../WeaponEmblem';\r\nimport { keyValueTag } from '../../../helpers/RowBuilder';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LegendaryCalcRowView from './LegendaryCalcRowView';\r\nimport ModsCalcRowView from './ModsCalcRowView';\r\nimport EmblemCalcRowView from './EmblemCalcRowView';\r\nimport { memo } from 'react';\r\nimport ConsumablesBuilder from '../../../boostStuff/ConsumablesBuilder';\r\nimport getPerkImage from '../../../perkCardBoosts/PerkImageProvider';\r\n\r\n\r\nconst CalcResultItem = memo(function CalcResultItem(props) {\r\n    // console.log(\"CalcResultItem\");\r\n    const leftValue = \"\";\r\n    const rightValue = props.bestTime;\r\n    function onClick(e) {\r\n        if (props.finishedRef.current) {\r\n            props.setWNameToApply(props.wName);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card className=\"shadow-outline-result-item mb-3\" onClick={onClick}>\r\n                <Card.Body className=\"p-1 ps-2 m-0\">\r\n                    <Row>\r\n                        <Col className=\"m-auto\" xs={3}>\r\n                            <WeaponEmblem className=\"shadow-card-grey\" iconName={props.iconName} iconSize='2.8rem'></WeaponEmblem>\r\n                        </Col>\r\n                        <Col xs={9}>\r\n                            <div className=\"d-flex justify-content-end pe-1\"><strong className=\"text-shadow-grey-blue\">{props.wName}</strong></div>\r\n                            <div className=\"d-flex justify-content-end\">{keyValueTag(leftValue,  rightValue, 'volcano', {width: '100%', height: '1.34rem', fontSize: '1rem'})}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <LegendaryCalcRowView legendary={props.config.legendary} width='50%' fontSize='65%' starSize='50%' />\r\n                    <ModsCalcRowView minHeight='1rem' mods={props.config.mods} fontSize='65%' wrapText={true} />\r\n                    <EmblemCalcRowView imNames={props.config.perks} imageProvider={getPerkImage} iconSize='1.5rem' imageSize='1.364rem' borderRadius='5px' />\r\n                    <EmblemCalcRowView imNames={props.config.consumables} imageProvider={ConsumablesBuilder.getImagePathById} iconSize='1.5rem' imageSize='1.364rem' borderRadius='4px' />\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default CalcResultItem;","import { memo } from 'react';\r\nimport CalcResultItem from \"./CalcResultItem\";\r\n\r\n\r\nfunction compareItems(item1, item2) {\r\n    if (item1 === null && item2 === null) {\r\n        return 0;\r\n    } else if (item1 === null) {\r\n        return 1;\r\n    } else if (item2 === null) {\r\n        return -1;\r\n    }\r\n    const time1 = item1.bestTimeCount;\r\n    const time2 = item2.bestTimeCount;\r\n    if (time1 < time2) {\r\n        return -1;\r\n    } else if (time2 < time1) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst CalcResultItems = memo(function CalcResultItems(props) {\r\n    console.log(\"CalcResultItems\");\r\n    let result = [];\r\n    const resultView = [];\r\n    for (let i = 0; i < props.calcItems.length; i++) {\r\n        const item = props.calcItems[i];\r\n        result.push(item);\r\n    }\r\n    result = result.sort(compareItems);\r\n    for (let i = 0; i < result.length; i++) {\r\n        const item = result[i];\r\n        resultView.push(<CalcResultItem key={item.wName} title={item.wName} finishedRef={props.finishedRef} setWNameToApply={props.setWNameToApply} config={item.config} wName={item.wName} bestTime={item.bestTime} iconName={item.iconName}></CalcResultItem>);\r\n    }\r\n    return (\r\n        <>\r\n            {resultView}\r\n        </>\r\n    );\r\n});\r\n\r\nexport default CalcResultItems;","import { useState, useEffect, useRef } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport ParameterCalculator from './calc/ParameterCalculator';\r\nimport CalcModGroupsAll from './calc/view/CalcModGroupsAll';\r\nimport CalcCards from './calc/view/CalcCards';\r\nimport PickedGroups from './calc/view/PickedGroups';\r\nimport CalcMain from './calc/view/CalcMain';\r\nimport CalcConsumables from './calc/view/CalcConsumables';\r\nimport CalcLegendary from './calc/view/CalcLegendary';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\nimport { WarningPopoverBadge } from '../helpers/WarningPopover';\r\nimport TemplateTools from './TemplateTools';\r\nimport { modGroups, weaponIds } from './TemplateItems';\r\nimport CalcWGroupsDropdown from \"./calc/view/CalcWGroupsDropdown\";\r\nimport CalcCurrentItem from \"./calc/view/CalcCurrentItem\";\r\nimport CalcResultItems from \"./calc/view/CalcResultItems\";\r\nimport ParametersApplier from './calc/ParametersApplier';\r\nimport { getImage } from '../helpers/WTypeDropdown';\r\nimport { Divider } from 'antd';\r\nimport { Progress } from 'antd';\r\nimport AccuracyHelper from '../helpers/AccuracyHelper';\r\nimport { getDefaultCards, getDefaultMain, getDefaultStuff, getDefaultLegendary } from './calc/CalcEntities';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\n\r\n\r\nlet parameterCalculator = null;\r\n\r\nlet firstShown = false;\r\n\r\nlet currentWIndex = 0;\r\n\r\nlet parameters = null;\r\n\r\nconst calcIterations = 4;\r\n\r\nfunction getDefaultModGroups() {\r\n    let result = {};\r\n    for (const name of modGroups) {\r\n        if (!PickedGroups.excluded(name)) {\r\n             result[name] = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function ModalCalculateWeapons(props) {\r\n    const [count, setCount] = useState({config: {}, current: 0, percent: 0, bestTime: Infinity});\r\n    const [groups, setGroups] = useState(getDefaultModGroups());\r\n    const [calculating, setCalculating] = useState(0); // 0 - start, 1 - calculating, 2 - finished\r\n    const [cards, setCards] = useState(getDefaultCards());\r\n    const [main, setMain] = useState(getDefaultMain());\r\n    const [stuff, setStuff] = useState(getDefaultStuff());\r\n    const [leg, setLeg] = useState(getDefaultLegendary());\r\n    const [frCrit, setFrCrit] = useState(4);\r\n    const [frHead, setFrHead] = useState(100);\r\n    const [completion, setCompletion] = useState({current: 0, size: 0});\r\n    const [selectedCreature, setSelectedCreature] = useState('average');\r\n    const [accuracyPref, setAccuracyPref] = useState(AccuracyHelper.BALANCE);\r\n    const [weaponResult, setWeaponResult] = useState([]);\r\n    const [type, setType] = useState(\"All\");\r\n    const [wNameToApply, setWNameToApply] = useState(null);\r\n    const [renderSwitch, setRenderSwitch] = useState(false);\r\n    const canCalculateRef = useRef(false);\r\n    const finishedRef = useRef(false);\r\n\r\n    /*\r\n    // Changes on every render, to allow a user smooth interaction and updates\r\n    useEffect(() => {\r\n        if (canCalculateRef.current) {\r\n            calculateParameters();\r\n            setRenderSwitch(!renderSwitch);\r\n        }\r\n    }, [renderSwitch]);\r\n    */\r\n\r\n    // We are finished and child asked to be applied.\r\n    useEffect(() => {\r\n        if (finishedRef.current) {\r\n            finishedRef.current = false;\r\n            const result = parameters.get(wNameToApply);\r\n            if (result) {\r\n                setCalculating(3);\r\n                setTimeout(() => {\r\n                    const parameters = result.Parameters;\r\n                    ParametersApplier.applyCalculatedParameters(parameters, props);\r\n                    onHide(null);\r\n                }, 100);\r\n            }\r\n        }\r\n    }, [wNameToApply]);\r\n\r\n    if (!props.modalCalculates.show) {\r\n        firstShown = false;\r\n        return (<></>);\r\n    }\r\n\r\n    if (!firstShown) {\r\n        currentWIndex = 0;\r\n        firstShown = true;\r\n        // The modal just popped up\r\n    }\r\n\r\n    function onHide(e) {\r\n        setCount({config: {}, current: 0, percent: 0, bestTime: Infinity});\r\n        setWeaponResult([]);\r\n        setCompletion({current: 0, size: 0});\r\n        setCalculating(0);\r\n        setWNameToApply(null);\r\n        finishedRef.current = false;\r\n        currentWIndex = 0;\r\n        props.setModalCalculates({show: false});\r\n        canCalculateRef.current = false;\r\n        parameterCalculator = null;\r\n        firstShown = false;\r\n        parameters = null;\r\n    }\r\n\r\n    function setupParameterCalculator() {\r\n        let wId = null;\r\n        if (props.modalCalculates.show) {\r\n            const wIds = weaponIds[type];\r\n            let idObj = wIds[currentWIndex];\r\n            while(idObj) {\r\n                currentWIndex++;\r\n                if (idObj.apply) {\r\n                    wId = idObj.id;\r\n                    break;\r\n                }\r\n                idObj = wIds[currentWIndex];\r\n            }\r\n            if (wId) {\r\n                const gNames = [];\r\n                for (const name in groups) {\r\n                    if (groups[name]) {\r\n                        gNames.push(name);\r\n                    }\r\n                }\r\n                parameterCalculator = new ParameterCalculator(props.creatureNamesRef.current, wId, gNames, cards, frCrit, frHead, main, stuff, leg, accuracyPref);\r\n                parameterCalculator.prepareAndCalcFirst(selectedCreature);\r\n            }\r\n        }\r\n        if (!wId) {\r\n            parameterCalculator = null;\r\n            currentWIndex = 0;\r\n        }\r\n        return (wId !== null);\r\n    }\r\n\r\n    function startCalculation(e) {\r\n        const wIds = weaponIds[type];\r\n        let size = 0;\r\n        for (let i = 0; i < wIds.length; i++) {\r\n            if (wIds[i].apply) {\r\n                size += 1;\r\n            }\r\n        }\r\n        parameters = new Map();\r\n        setCompletion({current: 0, size: size});\r\n        setupParameterCalculator();\r\n        setCalculating(1);\r\n        finishedRef.current = false;\r\n        setCount({config: parameterCalculator.getCurrentConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n        setRenderSwitch(!renderSwitch);\r\n        canCalculateRef.current = true;\r\n    }\r\n\r\n    if (calculating === 1 && canCalculateRef.current && parameterCalculator) {\r\n        canCalculateRef.current = false;\r\n        setTimeout(() => {\r\n            calculateParameters();\r\n        });\r\n    }\r\n\r\n    function calculateParameters() {\r\n        if (calculating === 1 && parameterCalculator) {\r\n            if (!parameterCalculator.calculateCombinations(calcIterations)) {\r\n                const template = parameterCalculator.getTemplate();\r\n                const wName = template.name;\r\n                const iconName = TemplateTools.getImage(template);\r\n                parameters.set(wName, parameterCalculator.getBestParameters());\r\n                weaponResult.push({config: parameterCalculator.getBestConfig(), wName: wName, iconName: iconName, bestTime: parameterCalculator.getBestTime(), bestTimeCount: parameterCalculator.getBestTime(false)});\r\n                setWeaponResult([...weaponResult]);\r\n                setCompletion({current: completion.current + 1, size: completion.size});\r\n                if (!setupParameterCalculator()) {\r\n                    finishedRef.current = true;\r\n                    setCalculating(2);\r\n                    return;\r\n                }\r\n            }\r\n            canCalculateRef.current = true;\r\n            setCount({config: parameterCalculator.getCurrentConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n        }\r\n    }\r\n\r\n    function getButtons(calculating) {\r\n        if (calculating === 0) {\r\n            return (\r\n                <>\r\n                    <Button className=\"w-100 me-1\" onClick={startCalculation}>Start</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </>\r\n            );\r\n        } else if (calculating === 1) {\r\n            return (\r\n                <Button className=\"w-100 me-1\" onClick={onHide}>Stop And Close</Button>\r\n            );\r\n        } else if (calculating === 2) {\r\n            return (\r\n                <>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </>\r\n            );\r\n        } else {\r\n            return (<></>);\r\n        }\r\n    }\r\n\r\n    function getProgressNumber(percent) {\r\n        return (\r\n            <strong className=\"text-shadow-blue\"><small>{percent}%</small></strong>\r\n        );\r\n    }\r\n\r\n    function getCurrentItem() {\r\n        if (parameterCalculator) {\r\n            const template = parameterCalculator.getTemplate();\r\n            const iconName = TemplateTools.getImage(template);\r\n            const wName = template.name;\r\n            const perksUsed = cards[\"Main Boosts\"] || cards[\"Temp Boosts\"];\r\n            let consUsed = false;\r\n            for (const name in stuff) {\r\n                const item = stuff[name];\r\n                if (item) {\r\n                    consUsed = true;\r\n                    break;\r\n                }\r\n            }\r\n            return (<CalcCurrentItem perksUsed={perksUsed} consUsed={consUsed} iconName={iconName} count={count} wName={wName}></CalcCurrentItem>);\r\n        }\r\n    }\r\n\r\n    function getProgress(calculating) {\r\n        if (calculating === 0) {\r\n            return (<></>);\r\n        }\r\n        const percent = parseInt(100 * completion.current / completion.size);\r\n        const header = (calculating === 2) ? \"Tap To Apply\" : \"\";\r\n        return (\r\n            <>\r\n                <div className=\"d-flex justify-content-center mb-1\">\r\n                    <Progress\r\n                        size={40}\r\n                        type=\"dashboard\"\r\n                        steps={50}\r\n                        percent={percent}\r\n                        format={(percent) => getProgressNumber(percent)}\r\n                        strokeColor=\"rgb(0, 255, 136)\"\r\n                        trailColor=\"rgba(0, 0, 0, 0.1)\"\r\n                        strokeWidth={17} />\r\n                </div>\r\n                {getCurrentItem()}\r\n                <Divider className=\"mt-3 mb-3 text-shadow-blue2\"><b>{header}</b></Divider>\r\n                <CalcResultItems calcItems={weaponResult} finishedRef={finishedRef} setWNameToApply={setWNameToApply}></CalcResultItems>\r\n            </>\r\n        );\r\n    }\r\n\r\n    function getCreatureNames() {\r\n        const result = [\"average\"];\r\n        for (const fieldName in props.creatureNamesRef.current) {\r\n            const data = props.creatureNamesRef.current[fieldName];\r\n            result.push(data[0]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getSettings(calculating) {\r\n        function onSelectCreatureName(e) {\r\n            setSelectedCreature(e);\r\n        }\r\n\r\n        const creatureNames = getCreatureNames();\r\n        let selectedCreatureName;\r\n        if (creatureNames.includes(selectedCreature)) {\r\n            selectedCreatureName = CreatureDataProvider.capitalizeCreatureName(selectedCreature);\r\n        } else {\r\n            selectedCreatureName = \"Average\";\r\n            setSelectedCreature(\"average\");\r\n        }\r\n        if (calculating === 0) {\r\n            return (\r\n                <>\r\n                    <CalcWGroupsDropdown type={type} setType={setType}></CalcWGroupsDropdown>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelectCreatureName} names={creatureNames} title={<strong>{selectedCreatureName}</strong>} />\r\n                    </div>\r\n                    <Divider className=\"mt-3 mb-2\">\r\n                        Accuracy\r\n                        <WarningPopoverBadge className=\"ms-3\" sign=\"?\" message={AccuracyHelper.ACCURACY_INFO} header={\"Accuracy\"} placement={'bottom'} />\r\n                    </Divider>\r\n                    <BSRadio className=\"d-flex justify-content-center m-1\" pairs={AccuracyHelper.ACC_PREFERENCE} selectedValue={accuracyPref} setSelectedValue={setAccuracyPref} parseValueInt={true} />\r\n                    <CalcMain main={main} setMain={setMain} frHead={frHead} setFrHead={setFrHead}></CalcMain>\r\n                    <CalcModGroupsAll groups={groups} setGroups={setGroups}></CalcModGroupsAll>\r\n                    <CalcCards cards={cards} setCards={setCards} frCrit={frCrit} setFrCrit={setFrCrit}></CalcCards>\r\n                    <CalcLegendary leg={leg} setLeg={setLeg} show={true}></CalcLegendary>\r\n                    <CalcConsumables stuff={stuff} setStuff={setStuff}></CalcConsumables>\r\n                </>\r\n            );\r\n        }\r\n        return (<></>);\r\n    }\r\n    const header = (calculating === 0) ? \"Best Of The Best\" : type;\r\n    const wIcon = (calculating === 0) ? \"\" : getImage(type);\r\n    function getModalView() {\r\n        if (calculating === 3) {\r\n            return (\r\n                <Modal.Body className=\"modal-scroll-80-60\">\r\n                    <b>Loading...</b>\r\n                </Modal.Body>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Modal.Header className=\"d-flex justify-content-center p-1\">\r\n                <Row className=\"p-1\" style={{width: '100%'}}>\r\n                    <Col className=\"d-flex justify-content-start ps-2 p-0\" xs={2}>\r\n                        {wIcon}\r\n                    </Col>\r\n                    <Col xs={8} className=\"d-flex justify-content-center\">\r\n                        <div className=\"p-auto m-auto text-shadow-indigo\" style={{fontSize: '1.1rem', letterSpacing: '1px', fontWeight: 'bold'}}>{header}</div>\r\n                    </Col>\r\n                    <Col xs={2} className=\"d-flex justify-content-end m-auto pe-1\">\r\n                        <WarningPopoverBadge message={ParameterCalculator.info} sign=\"?\" header={\"Description\"} placement={'left'} />\r\n                    </Col>\r\n                </Row>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"modal-scroll-80-60 pt-2 p-3\">\r\n                    {getProgress(calculating)}\r\n                    {getSettings(calculating)}\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"p-2\">\r\n                    <InputGroup className=\"mb-0 mt-0 flex-nowrap\">\r\n                        {getButtons(calculating)}\r\n                    </InputGroup>\r\n                </Modal.Footer>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.modalCalculates.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            {getModalView()}\r\n        </Modal>\r\n    );\r\n}","import { useState } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\n\r\n\r\nfunction TestedCarousel({data}) {\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const handleSelect = (selectedIndex) => {\r\n        setIndex(selectedIndex);\r\n    };\r\n    const titles = getTitles(data.img);\r\n    return (\r\n        <>\r\n            <p className=\"d-flex justify-content-center\">\r\n                {titles[index]}\r\n            </p>\r\n            <Carousel activeIndex={index} onSelect={handleSelect} interval={null} data-bs-theme=\"dark\">\r\n                {getImages(data.img, data.alt)}\r\n            </Carousel>\r\n            <p className=\"pt-2 pb-0\">\r\n                <small>{data.version}</small>\r\n            </p>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nfunction getImages(img, alt) {\r\n    let result = [];\r\n    for(let i = 0; i < img.length; i++) {\r\n        result.push(\r\n            <Carousel.Item style={{padding: '0% 15% 10% 15%'}}>\r\n                <img className=\"d-block w-100\" src={img[i]} alt={alt} />\r\n            </Carousel.Item>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getTitles(images) {\r\n    let result = [];\r\n    for (let i = 0; i < images.length; i++) {\r\n        const img = images[i];\r\n        const firstIndex = img.indexOf(\"_\") + 1;\r\n        const lastIndex = img.indexOf(\"_\", firstIndex);\r\n        result.push(img.substring(firstIndex, lastIndex));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default TestedCarousel;","import Modal from 'react-bootstrap/Modal';\r\nimport TestedCarousel from './TestedCarousel';\r\nimport { testedWeapons } from './TestedWeapons';\r\n\r\n\r\nexport default function ModalTestedWeapon(props) {\r\n    console.log(\"ModalTestedWeapon\");\r\n    if (!props.modalTested.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalTested({data: null, show: false});\r\n    }\r\n    const data = testedWeapons.get(props.modalTested.wId);\r\n    return (\r\n        <Modal\r\n            show = {props.modalTested.show}\r\n            onHide = {onHide}\r\n            size=\"xl\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Tests\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"pb-1\">\r\n                <TestedCarousel data={data} />\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}","import { memo, useState } from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport ModalApplyTemplate from './ModalApplyTemplate';\r\nimport ModalCalculateWeapon from './ModalCalculateWeapon';\r\nimport ModalCalculateWeapons from './ModalCalculateWeapons';\r\nimport ModalTestedWeapon from './ModalTestedWeapon';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport WTypeDropdown from '../helpers/WTypeDropdown';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport TemplateItems from './TemplateItems';\r\nimport { FloatButton } from 'antd';\r\nimport { Button } from 'react-bootstrap';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nfunction buildLicense() {\r\n    return (\r\n        <Popover className=\"popover-adjustable\">\r\n            <Popover.Header as=\"h3\"><strong>Licensing</strong></Popover.Header>\r\n            <Popover.Body>\r\n                Weapon images below were taken from the video game Fallout 76 or from websites created and owned by Bethesda Softworks, the copyright of which is held by Bethesda Softworks, or were released to the press for promotional purposes by the same.\r\n                The use of images to illustrate items of the game concerning the subject of the images in question is believed to qualify as fair use under United States copyright law, as such display does not significantly impede the right of the copyright holder to sell the copyrighted material and is not being used to generate profit.\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nconst WeaponTemplates = memo(function WeaponTemplates(props) {\r\n    console.log(\"WeaponTemplates\");\r\n    const [modalTemplate, setModalTemplate] = useState({template: null, show: false});\r\n    const [modalCalculate, setModalCalculate] = useState({template: null, show: false});\r\n    const [modalCalculates, setModalCalculates] = useState({show: false});\r\n    const [modalTested, setModalTested] = useState({wId: '', show: false});\r\n    const [filterName, setFilterName] = useState(\"\");\r\n    const [weaponType, setWeaponType] = useState(\"All\");\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(20);\r\n    const [startIndex, setStartIndex] = useState(0);\r\n    function resetPage() {\r\n        setPage(1);\r\n        setStartIndex(0);\r\n    }\r\n    function filterNameChanged(e) {\r\n        setPage(1);\r\n        setStartIndex(0);\r\n        setFilterName(e.target.value);\r\n    }\r\n    function onPageChanged(page, pageSize) {\r\n        setStartIndex(pageSize * (page - 1));\r\n        setPage(page);\r\n        setPageSize(pageSize);\r\n    }\r\n    function onTestClick(e) {\r\n        setModalTested({wId: e.currentTarget.id, show: true});\r\n    }\r\n    function findBestClick(e) {\r\n        setModalCalculates({show: true});\r\n    }\r\n    return (\r\n        <>\r\n            <Row className=\"p-auto m-auto mb-2\">\r\n                <Col className=\"m-auto p-2 d-flex justify-content-start\">\r\n                    <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={buildLicense()}>\r\n                        <Badge variant=\"black\" pill>!</Badge>\r\n                    </OverlayTrigger>\r\n                </Col>\r\n                <Col className=\"m-auto p-1 pe-2 d-flex justify-content-end\">\r\n                    <Button size=\"sm\" variant=\"danger\" onClick={findBestClick}><strong className=\"best-button-shadow\">Find The Best</strong></Button>\r\n                </Col>\r\n            </Row>\r\n            <ModalTestedWeapon modalTested={modalTested} setModalTested={setModalTested} />\r\n            <ModalApplyTemplate modalTemplate={modalTemplate} setModalTemplate={setModalTemplate} setWSpec={props.setWSpec}></ModalApplyTemplate>\r\n            <ModalCalculateWeapon creatureNamesRef={props.creatureNamesRef} modalCalculate={modalCalculate} setModalCalculate={setModalCalculate} setWSpec={props.setWSpec} setBoostDamage={props.setBoostDamage} setPlayer={props.setPlayer} setExtraDamage={props.setExtraDamage} setFoodPref={props.setFoodPref} setStuffBoost={props.setStuffBoost} setAdditionalDamages={props.setAdditionalDamages} setPlayerStats={props.setPlayerStats} setMagazines={props.setMagazines} setBobbleHeads={props.setBobbleHeads} setFood={props.setFood} setDrink={props.setDrink} setPsycho={props.setPsycho} setSerum={props.setSerum} setOthers={props.setOthers}></ModalCalculateWeapon>\r\n            <ModalCalculateWeapons creatureNamesRef={props.creatureNamesRef} modalCalculates={modalCalculates} setModalCalculates={setModalCalculates} setWSpec={props.setWSpec} setBoostDamage={props.setBoostDamage} setPlayer={props.setPlayer} setExtraDamage={props.setExtraDamage} setFoodPref={props.setFoodPref} setStuffBoost={props.setStuffBoost} setAdditionalDamages={props.setAdditionalDamages} setPlayerStats={props.setPlayerStats} setMagazines={props.setMagazines} setBobbleHeads={props.setBobbleHeads} setFood={props.setFood} setDrink={props.setDrink} setPsycho={props.setPsycho} setSerum={props.setSerum} setOthers={props.setOthers}></ModalCalculateWeapons>\r\n            <InputGroup className=\"ps-1 pe-1 pb-2 flex-nowrap\">\r\n                <WTypeDropdown weaponType={weaponType} setWeaponType={setWeaponType} resetPage={resetPage}></WTypeDropdown>\r\n                <Form.Control style={{width: '10rem'}} maxLength=\"70\" onChange={filterNameChanged} />\r\n            </InputGroup>\r\n            <Accordion className=\"accordion\">\r\n                <TemplateItems onTestClick={onTestClick} onPageChanged={onPageChanged} startIndex={startIndex} pageSize={pageSize} page={page} weaponType={weaponType} filterName={filterName} setModalTemplate={setModalTemplate} setModalCalculate={setModalCalculate}></TemplateItems>\r\n            </Accordion>\r\n            <FloatButton.BackTop style={{ right: 60 }} duration={100} visibilityHeight={2000} />\r\n        </>\r\n    );\r\n});\r\n\r\nexport default WeaponTemplates;","import Card from 'react-bootstrap/Card';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nconst imagePathMap = new Map();\r\n\r\nexport function getMark(key, imagePath, className, iconSize, imageSize, borderRadius) {\r\n    return (\r\n        <Card key={key} className={\"m-1 d-flex justify-content-center \" + className} style={{height: iconSize, width: iconSize}}>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <Image style={{borderRadius: borderRadius, height: imageSize, width: imageSize}} src={imagePath} />\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function EmblemCalcRowView(props) {\r\n    let className = \"shadow-outline-gold2\";\r\n    if (props.className) {\r\n        className = props.className;\r\n    }\r\n    const views = [];\r\n    for (let i = 0; i < props.imNames.length; i++) {\r\n        const imName = props.imNames[i];\r\n        if (imName) {\r\n            let imagePath = imagePathMap.get(imName);\r\n            if (!imagePath) {\r\n                imagePath = props.imageProvider(imName);\r\n                imagePathMap.set(imName, imagePath);\r\n            }\r\n            views.push(getMark(imName, imagePath, className, props.iconSize, props.imageSize, props.borderRadius));\r\n        }\r\n    }\r\n    return (\r\n        <Row className=\"d-flex justify-content-center\" style={props.style}>\r\n            {views}\r\n        </Row>\r\n    );\r\n}","// Custom checkbox\r\nexport function UCheckbox(props) {\r\n    let className = \"form-check-input \";\r\n    if (props.className) {\r\n        className += props.className;\r\n    }\r\n    let bgColor = null;\r\n    let bColor = null;\r\n    if (props.checkBgColor && props.checked) {\r\n        bgColor = props.checkBgColor;\r\n    }\r\n    if (props.checkBorderColor && props.checked) {\r\n        bColor = props.checkBorderColor;\r\n    }\r\n    const ms = (props.children) ? \"ms-1\" : \"ms-0\";\r\n    return (\r\n        <div>\r\n            <input id={props.id} title={props.title} style={{cursor: 'pointer', borderColor: bColor, backgroundColor: bgColor}} className={className} type=\"checkbox\" disabled={props.disabled} checked={props.checked} onChange={props.onChange} />\r\n            <label className={\"form-check-label \" + ms}>\r\n                {props.children}\r\n            </label>\r\n        </div>\r\n    );\r\n}","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\n\r\nfunction getItems(dict) {\r\n    const result = [];\r\n    for (const name in dict) {\r\n        result.push(<Dropdown.Item key={name} eventKey={name}>{dict[name]}</Dropdown.Item>);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function BaseDropdown(props) {\r\n    let onSelect = props.onSelect;\r\n    if (!onSelect) {\r\n        onSelect = (e) => {\r\n            props.setValue(e);\r\n        };\r\n    }\r\n    return (\r\n        <DropdownButton variant={props.variant} size={props.size} onSelect={onSelect} title={props.title}>\r\n            {getItems(props.dict)}\r\n        </DropdownButton>\r\n    );\r\n}\r\n\r\n","import ReactDOM from 'react-dom/client';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\n\r\n\r\nexport default class StaticPopoverRenderer {\r\n\r\n    // Workaround as propagation is suppressed (onHide will no be invoked)\r\n    // This measure is intended to prevent of opening of several popovers if a propagation is suppressed and on\r\n    // hide can't be invoked\r\n    static lastOpened = null;\r\n\r\n    constructor(header, body, placeId, placement='top') {\r\n        this.header = header;\r\n        this.body = body;\r\n        this.placeId = placeId;\r\n        this.show = false;\r\n        this.root = null;\r\n        this.placement = placement;\r\n    }\r\n\r\n    renderToggle(target) {\r\n        this.show = !this.show;\r\n        if (StaticPopoverRenderer.lastOpened && StaticPopoverRenderer.lastOpened !== this) {\r\n            StaticPopoverRenderer.lastOpened.onHide();\r\n        }\r\n        if (this.show) {\r\n            StaticPopoverRenderer.lastOpened = this;\r\n        }\r\n        if (!this.root) {\r\n            this.root = ReactDOM.createRoot(document.getElementById(this.placeId))\r\n        }\r\n        this.root.render(this.buildLayout(this.header, this.body, this.show, target, this.placement));\r\n    }\r\n\r\n    renderToggleNewContent(target, header, body) {\r\n        this.header = header;\r\n        this.body = body;\r\n        this.renderToggle(target);\r\n    }\r\n\r\n    onHide(e) {\r\n        if (StaticPopoverRenderer.lastOpened === this) {\r\n            StaticPopoverRenderer.lastOpened = null;\r\n        }\r\n        this.show = false;\r\n        if (this.root) {\r\n            this.root.render((<></>));\r\n        }\r\n    }\r\n\r\n    buildLayout(header, body, show, target, placement) {\r\n        return (\r\n            <Overlay\r\n                show={show}\r\n                target={target}\r\n                rootClose='true'\r\n                onHide={e => (this.onHide(e))}\r\n                placement={placement}>\r\n                <Popover className=\"popover-adjustable\">\r\n                    <Popover.Header>\r\n                        {header}\r\n                    </Popover.Header>\r\n                    <Popover.Body>\r\n                        {body}\r\n                    </Popover.Body>\r\n                </Popover>\r\n            </Overlay>\r\n        );\r\n    }\r\n}\r\n","var map = {\n\t\"./bh_big_guns.webp\": 95529,\n\t\"./bh_energy.webp\": 47901,\n\t\"./bh_explosive.webp\": 18840,\n\t\"./bh_melee.webp\": 55959,\n\t\"./bh_repair.webp\": 58136,\n\t\"./bh_small_guns.webp\": 53574,\n\t\"./bh_sneak.webp\": 60603,\n\t\"./bh_strength.webp\": 14188,\n\t\"./bh_unarmed.webp\": 28373\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 53797;","var map = {\n\t\"./ballistic_bock.webp\": 68120,\n\t\"./beer.webp\": 91715,\n\t\"./blackwater_brew.webp\": 20220,\n\t\"./bourbon.webp\": 84664,\n\t\"./chally_milk.webp\": 48566,\n\t\"./cranberry_moonshine.webp\": 45866,\n\t\"./fern_flower_tea.webp\": 99811,\n\t\"./firecracker_berry_juice.webp\": 89318,\n\t\"./high_voltage_hefe.webp\": 74687,\n\t\"./liquid_courage.webp\": 64030,\n\t\"./mire_magic_moonshine.webp\": 24305,\n\t\"./moonshine.webp\": 52635,\n\t\"./mountain_honey.webp\": 92418,\n\t\"./new_river_red_ale.webp\": 60787,\n\t\"./nuka_cola_dark.webp\": 31201,\n\t\"./nuka_twist.webp\": 19104,\n\t\"./nukashine.webp\": 95415,\n\t\"./oak_holler_lager.webp\": 93197,\n\t\"./old_possum.webp\": 26110,\n\t\"./pickaxe_pilsner.webp\": 31396,\n\t\"./rum.webp\": 6851,\n\t\"./steeped_fern_flower_tea.webp\": 81894,\n\t\"./steeped_thistle_tea.webp\": 4948,\n\t\"./sweetmutfruit.webp\": 70939,\n\t\"./vodka.webp\": 35534,\n\t\"./whiskey.webp\": 51397,\n\t\"./wine.webp\": 48112\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 43242;","var map = {\n\t\"./blight_soup.webp\": 51365,\n\t\"./candy.webp\": 76572,\n\t\"./deathclaw_steak.webp\": 10593,\n\t\"./deathclaw_wellington.webp\": 98684,\n\t\"./glowing_steak.webp\": 26055,\n\t\"./gulper_stuffed_foot.webp\": 5001,\n\t\"./light_mutant_hound_chops.webp\": 79270,\n\t\"./mole_rat_chunks.webp\": 55139,\n\t\"./molerat_jerky.webp\": 23437,\n\t\"./mutton_chops.webp\": 12246,\n\t\"./nuka_cola_candy.webp\": 3416,\n\t\"./stingwing_filet.webp\": 67262,\n\t\"./tasty_mutant_hound_stew.webp\": 27397,\n\t\"./tasty_mutton_meat_pie.webp\": 87623,\n\t\"./yao_guai_ribs.webp\": 78016,\n\t\"./yao_guai_roast.webp\": 51555\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92122;","var map = {\n\t\"./acceptable_overkill.webp\": 66133,\n\t\"./attack_of_the_fishmen.webp\": 96923,\n\t\"./bear_proofing_your_campsite.webp\": 21842,\n\t\"./blood_on_the_harp.webp\": 49110,\n\t\"./camouflage_special.webp\": 55050,\n\t\"./corsair_queen.webp\": 47468,\n\t\"./curse_of_the_burned.webp\": 72609,\n\t\"./demon_slaves_demon_sands.webp\": 51986,\n\t\"./down_home_cooking.webp\": 72551,\n\t\"./flatwoods_monster.webp\": 39376,\n\t\"./future_of_warfare.webp\": 99986,\n\t\"./giant_super_weapons.webp\": 93557,\n\t\"./guide_to_hunting_commies.webp\": 7290,\n\t\"./hills_grafton.webp\": 40546,\n\t\"./home_in_the_hills.webp\": 47002,\n\t\"./invasion_of_the_zetans.webp\": 74413,\n\t\"./little_guns_for_little_ladies.webp\": 77246,\n\t\"./mothman.webp\": 17982,\n\t\"./nuke_the_man.webp\": 22716,\n\t\"./plasma_the_weapon_of_tomorrow.webp\": 98167,\n\t\"./rise_of_the_mutants.webp\": 48458,\n\t\"./rockobot_takes_the_nation_by_storm.webp\": 6934,\n\t\"./snallygaster.webp\": 77577,\n\t\"./take_aim_army_style.webp\": 92371,\n\t\"./the_future_of_hunting.webp\": 82555,\n\t\"./the_starlet_sniper.webp\": 40667,\n\t\"./tomorrow_technology.webp\": 70892,\n\t\"./us_army_goes_to_space.webp\": 49222,\n\t\"./wendigo.webp\": 84477,\n\t\"./when_apes_go_bananas.webp\": 85392\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18405;","var map = {\n\t\"./syringer.webp\": 23603\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97611;","var map = {\n\t\"./buffout.webp\": 50498,\n\t\"./bufftats.webp\": 57172,\n\t\"./calmex.webp\": 27405,\n\t\"./f.webp\": 63011,\n\t\"./mk1.webp\": 86846,\n\t\"./mk2.webp\": 75487,\n\t\"./mk3.webp\": 68892,\n\t\"./mk4.webp\": 27821,\n\t\"./nd.webp\": 58537,\n\t\"./o.webp\": 99336,\n\t\"./p.webp\": 76169,\n\t\"./pb.webp\": 35457,\n\t\"./psycho.webp\": 58127,\n\t\"./pt.webp\": 82683,\n\t\"./x_cell.webp\": 64618\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48114;","var map = {\n\t\"./ar_serum.webp\": 19820,\n\t\"./c_serum.webp\": 29906,\n\t\"./e_serum.webp\": 63088,\n\t\"./ee_serum.webp\": 71693,\n\t\"./h_serum.webp\": 17727,\n\t\"./hm_serum.webp\": 33592,\n\t\"./sd_serum.webp\": 32576,\n\t\"./serum.webp\": 21424,\n\t\"./t_serum.webp\": 74755,\n\t\"./tm_serum.webp\": 22876\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 37665;","var map = {\n\t\"./0003a0d4/version.json\": 95892\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 51619;","var map = {\n\t\"./0003a0d4/01_Details_weapon.webp\": 70730,\n\t\"./0003a0d4/02_Stats_.webp\": 72102,\n\t\"./0003a0d4/03_Perks_.webp\": 41273,\n\t\"./0003a0d4/04_Specifications_.webp\": 78207,\n\t\"./0003a0d4/05_Crit-Scorched_test.webp\": 61450,\n\t\"./0003a0d4/06_Sneak-Scorched_test.webp\": 51293\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 67443;","var map = {\n\t\"./adrenaline.webp\": 77939,\n\t\"./archer.webp\": 26487,\n\t\"./better_criticals.webp\": 98439,\n\t\"./bloody_mess.webp\": 18472,\n\t\"./bow_before_me.webp\": 69853,\n\t\"./class_freak.webp\": 64044,\n\t\"./commando.webp\": 85230,\n\t\"./covert_operative.webp\": 32371,\n\t\"./demolition_expert.webp\": 79375,\n\t\"./exterminator.webp\": 84992,\n\t\"./follow_through.webp\": 57743,\n\t\"./gladiator.webp\": 8985,\n\t\"./glow_sight.webp\": 37143,\n\t\"./ground_pounder.webp\": 78725,\n\t\"./guerrilla.webp\": 94933,\n\t\"./gun_fu.webp\": 41542,\n\t\"./gunslinger.webp\": 87912,\n\t\"./heavy_gunner.webp\": 58723,\n\t\"./incisor.webp\": 64005,\n\t\"./iron_fist.webp\": 43409,\n\t\"./lock_and_load.webp\": 38510,\n\t\"./martial_artist.webp\": 29416,\n\t\"./mister_sandman.webp\": 10979,\n\t\"./nerd_rage.webp\": 79361,\n\t\"./ninja.webp\": 8668,\n\t\"./party_girl_boy.webp\": 31306,\n\t\"./power_user.webp\": 18937,\n\t\"./rifleman.webp\": 30814,\n\t\"./scattershot.webp\": 12650,\n\t\"./science.webp\": 94710,\n\t\"./shotgunner.webp\": 51307,\n\t\"./slugger.webp\": 19563,\n\t\"./stabilized.webp\": 56659,\n\t\"./strange_in_numbers.webp\": 48479,\n\t\"./tank_killer.webp\": 16926,\n\t\"./tenderizer.webp\": 92478,\n\t\"./toft.webp\": 35123\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18541;","var map = {\n\t\"./10mm.json\": 67136,\n\t\"./10mmSubmachineGun.json\": 98223,\n\t\"./44.json\": 96691,\n\t\"./50CalMachineGun.json\": 7943,\n\t\"./AlienBlaster.json\": 75847,\n\t\"./AncientBlade.json\": 18197,\n\t\"./Anti-ScorchedTrainingPistol.json\": 62954,\n\t\"./AssaultRifle.json\": 73024,\n\t\"./AssaultronBlade.json\": 9661,\n\t\"./AutoAxe.json\": 34260,\n\t\"./AutoGrenadeLauncher.json\": 68390,\n\t\"./Bada-Boom.json\": 91467,\n\t\"./BaseballBat.json\": 13870,\n\t\"./BaseballGrenade.json\": 78575,\n\t\"./Baton.json\": 18199,\n\t\"./BearArm.json\": 89261,\n\t\"./BlackPowderBlunderbuss.json\": 47182,\n\t\"./BlackPowderPistol.json\": 55208,\n\t\"./BlackPowderRifle.json\": 51743,\n\t\"./BladeofBastet.json\": 52289,\n\t\"./BlastMine.json\": 55104,\n\t\"./BlueFlamer.json\": 82672,\n\t\"./Board.json\": 13605,\n\t\"./BoneClub.json\": 49269,\n\t\"./BoneHammer.json\": 43323,\n\t\"./Bow.json\": 75301,\n\t\"./BowieKnife.json\": 57908,\n\t\"./BoxingGlove.json\": 9033,\n\t\"./Broadsider.json\": 63064,\n\t\"./BugGrenade.json\": 30335,\n\t\"./BurningLove.json\": 91970,\n\t\"./CamdenWhacker.json\": 6144,\n\t\"./CandyCane.json\": 65817,\n\t\"./Cattleprod.json\": 82513,\n\t\"./Chainsaw.json\": 22433,\n\t\"./ChineseOfficerSword.json\": 13233,\n\t\"./CircuitBreaker.json\": 91582,\n\t\"./ColdShoulder.json\": 20329,\n\t\"./CombatKnife.json\": 95272,\n\t\"./CombatRifle.json\": 91267,\n\t\"./CombatShotgun.json\": 85119,\n\t\"./CommandersCharge.json\": 38248,\n\t\"./CommieWhacker.json\": 72100,\n\t\"./CompoundBow.json\": 40914,\n\t\"./Cremator.json\": 74592,\n\t\"./Crossbow.json\": 53231,\n\t\"./CrowdControl.json\": 45678,\n\t\"./CrusaderPistol.json\": 73655,\n\t\"./CrushingBlow.json\": 17010,\n\t\"./CryoMine.json\": 76209,\n\t\"./CryogenicGrenade.json\": 57254,\n\t\"./Cryolator.json\": 80934,\n\t\"./CultistBlade.json\": 44885,\n\t\"./CultistDagger.json\": 61499,\n\t\"./CultistPickaxe.json\": 92252,\n\t\"./DeathTambo.json\": 34520,\n\t\"./DeathclawGauntlet.json\": 44022,\n\t\"./DisorderlyConduct.json\": 65216,\n\t\"./DoctorsOrders.json\": 24120,\n\t\"./Double-BarrelShotgun.json\": 59577,\n\t\"./Drill.json\": 96708,\n\t\"./Dross.json\": 25292,\n\t\"./Dynamite.json\": 20416,\n\t\"./DynamiteBundle.json\": 25200,\n\t\"./ElectroEnforcer.json\": 11061,\n\t\"./EnclavePlasma.json\": 79305,\n\t\"./ExplosiveBait.json\": 21466,\n\t\"./FaceBreaker.json\": 85782,\n\t\"./FancyPumpActionShotgun.json\": 90634,\n\t\"./FatMan.json\": 76546,\n\t\"./FinalWord.json\": 88773,\n\t\"./FireAxe.json\": 13725,\n\t\"./Flamer.json\": 35276,\n\t\"./FloaterFlamerGrenade.json\": 52247,\n\t\"./FloaterFreezerGrenade.json\": 34831,\n\t\"./FloaterGnasherGrenade.json\": 48222,\n\t\"./FoundationsVengeance.json\": 41775,\n\t\"./FragmentationGrenade.json\": 82626,\n\t\"./FragmentationGrenadeMIRV.json\": 96328,\n\t\"./FragmentationMine.json\": 20059,\n\t\"./GammaGun.json\": 83158,\n\t\"./GatlingGun.json\": 43757,\n\t\"./GatlingLaser.json\": 4688,\n\t\"./GatlingPlasma.json\": 37971,\n\t\"./Gauntlet.json\": 35429,\n\t\"./GaussMinigun.json\": 58511,\n\t\"./GaussPistol.json\": 48787,\n\t\"./GaussRifle.json\": 32310,\n\t\"./GaussShotgun.json\": 82674,\n\t\"./GolfClub.json\": 65851,\n\t\"./GrandFinale.json\": 49396,\n\t\"./GrantsSaber.json\": 85437,\n\t\"./GrognaksAxe.json\": 60029,\n\t\"./GuitarSword.json\": 14106,\n\t\"./GulperSmacker.json\": 96750,\n\t\"./GunthersBigIron.json\": 48723,\n\t\"./HandmadeRifle.json\": 93263,\n\t\"./HarpoonGun.json\": 30080,\n\t\"./Hatchet.json\": 82634,\n\t\"./Hellstorm.json\": 40033,\n\t\"./HuntingRifle.json\": 78828,\n\t\"./ImposterAssaultronHead.json\": 27364,\n\t\"./Kingfisher.json\": 76841,\n\t\"./Knuckles.json\": 78333,\n\t\"./Laser.json\": 23482,\n\t\"./LeadPipe.json\": 54117,\n\t\"./LeverActionRifle.json\": 54119,\n\t\"./LightMachineGun.json\": 48844,\n\t\"./Love-Tap.json\": 52455,\n\t\"./M79GrenadeLauncher.json\": 47112,\n\t\"./Machete.json\": 23318,\n\t\"./MeatCleaver.json\": 37294,\n\t\"./MeatHook.json\": 70287,\n\t\"./MechanicsBestFriend.json\": 13476,\n\t\"./MedicalMalpractice.json\": 67205,\n\t\"./MeteoriticSword.json\": 46859,\n\t\"./MindOverMatter.json\": 15804,\n\t\"./Minigun.json\": 33626,\n\t\"./MissileLauncher.json\": 73989,\n\t\"./MoleMinerGauntlet.json\": 64161,\n\t\"./MoleratBat.json\": 83902,\n\t\"./MolotovCocktail.json\": 99285,\n\t\"./MrHandyBuzzBlade.json\": 31737,\n\t\"./Multi-PurposeAxe.json\": 43477,\n\t\"./Nailer.json\": 35116,\n\t\"./NightLight.json\": 12097,\n\t\"./NoxiousFogCrawler.json\": 95656,\n\t\"./Nuka-Launcher.json\": 20413,\n\t\"./NukaGrenade.json\": 44648,\n\t\"./NukaQuantumGrenade.json\": 93535,\n\t\"./NukeMine.json\": 86049,\n\t\"./Oathbreaker.json\": 81173,\n\t\"./OldGuards10mmSMG.json\": 43790,\n\t\"./PepperShaker.json\": 68343,\n\t\"./Pickaxe.json\": 70338,\n\t\"./Pipe.json\": 5951,\n\t\"./PipeBolt-Action.json\": 5769,\n\t\"./PipeRevolver.json\": 77652,\n\t\"./PipeWrench.json\": 76898,\n\t\"./PiratePunch.json\": 76818,\n\t\"./Pitchfork.json\": 47443,\n\t\"./Plasma.json\": 29613,\n\t\"./PlasmaCaster.json\": 96281,\n\t\"./PlasmaCutter.json\": 52830,\n\t\"./PlasmaGrenade.json\": 1573,\n\t\"./PlasmaMine.json\": 90094,\n\t\"./PoleHook.json\": 81950,\n\t\"./PollysAssaultronHead.json\": 19906,\n\t\"./PoolCue.json\": 67996,\n\t\"./PowerFist.json\": 62702,\n\t\"./PulseGrenade.json\": 47246,\n\t\"./PulseMine.json\": 65215,\n\t\"./PumpActionShotgun.json\": 74607,\n\t\"./PumpkinGrenade.json\": 19133,\n\t\"./QuadLauncher.json\": 66780,\n\t\"./Radium.json\": 5135,\n\t\"./Railway.json\": 92390,\n\t\"./ResoluteVeteran.json\": 99771,\n\t\"./RevolutionarySword.json\": 75347,\n\t\"./Ripper.json\": 46117,\n\t\"./RollingPin.json\": 14715,\n\t\"./SaltoftheEarth.json\": 41951,\n\t\"./SalvagedAssaultronHead.json\": 32160,\n\t\"./SheepsquatchClub.json\": 14543,\n\t\"./SheepsquatchShard.json\": 76101,\n\t\"./SheepsquatchStaff.json\": 96899,\n\t\"./ShepherdsCrook.json\": 37955,\n\t\"./Shishkebab.json\": 4973,\n\t\"./Shovel.json\": 264,\n\t\"./Sickle.json\": 18602,\n\t\"./SingleActionRevolver.json\": 83286,\n\t\"./SkiSword.json\": 25805,\n\t\"./Sledgehammer.json\": 43795,\n\t\"./SlugBuster.json\": 83241,\n\t\"./SmartFragmentationGrenade.json\": 96669,\n\t\"./SoleSurvivor.json\": 91140,\n\t\"./Spear.json\": 77336,\n\t\"./SubmachineGun.json\": 2234,\n\t\"./SuperSledge.json\": 19224,\n\t\"./Switchblade.json\": 93255,\n\t\"./Tenderizer.json\": 57521,\n\t\"./Tesla.json\": 10686,\n\t\"./TheActionHero.json\": 22372,\n\t\"./TheDebilitator.json\": 15429,\n\t\"./TheDragon.json\": 41349,\n\t\"./TheFarmhand.json\": 31247,\n\t\"./TheFixer.json\": 61878,\n\t\"./TheGuarantee.json\": 31400,\n\t\"./TheGutter.json\": 6849,\n\t\"./TheInvader.json\": 79119,\n\t\"./TheQuickFix.json\": 3740,\n\t\"./TheVATSUnknown.json\": 58448,\n\t\"./ThrowingKnife.json\": 30400,\n\t\"./TireIron.json\": 7899,\n\t\"./Tomahawk.json\": 71105,\n\t\"./ToneDeath.json\": 46019,\n\t\"./UltraciteGatlingLaser.json\": 2775,\n\t\"./UltraciteLaser.json\": 56859,\n\t\"./UnstoppableMonster.json\": 63214,\n\t\"./V63Zweihaender.json\": 49576,\n\t\"./WalkingCane.json\": 22055,\n\t\"./WarDrum.json\": 74403,\n\t\"./WarGlaive.json\": 5043,\n\t\"./WesternRevolver.json\": 47092,\n\t\"./WesternSpirit.json\": 88910,\n\t\"./WhackerSmacker.json\": 84152,\n\t\"./WhistleInTheDark.json\": 83003,\n\t\"./ZetasRevenge.json\": 34776\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 96539;","var map = {\n\t\"./10mm.webp\": 36795,\n\t\"./10mm_submachine_gun.webp\": 86374,\n\t\"./44.webp\": 69136,\n\t\"./50_cal_machine_gun.webp\": 35317,\n\t\"./alien_blaster.webp\": 86433,\n\t\"./ancient_blade.webp\": 56769,\n\t\"./anti-scorched_training_pistol.webp\": 45089,\n\t\"./assault_rifle.webp\": 83514,\n\t\"./assaultron_blade.webp\": 98915,\n\t\"./auto_axe.webp\": 82940,\n\t\"./auto_grenade_launcher.webp\": 69795,\n\t\"./bada-boom.webp\": 36466,\n\t\"./baseball_bat.webp\": 32828,\n\t\"./baseball_grenade.webp\": 59757,\n\t\"./baton.webp\": 20642,\n\t\"./bear_arm.webp\": 24883,\n\t\"./black_powder_blunderbuss.webp\": 25061,\n\t\"./black_powder_pistol.webp\": 23297,\n\t\"./black_powder_rifle.webp\": 87208,\n\t\"./black_powder_rifle_dragon.webp\": 60122,\n\t\"./blade_of_bastet.webp\": 14684,\n\t\"./blast_mine.webp\": 20564,\n\t\"./blue_flamer.webp\": 92974,\n\t\"./board.webp\": 59216,\n\t\"./bone_club.webp\": 49603,\n\t\"./bone_hammer.webp\": 80021,\n\t\"./bow.webp\": 69436,\n\t\"./bowie_knife.webp\": 42880,\n\t\"./boxing_glove.webp\": 85533,\n\t\"./broadsider.webp\": 18615,\n\t\"./bug_grenade.webp\": 22103,\n\t\"./burning_love.webp\": 84556,\n\t\"./camden_whacker.webp\": 59226,\n\t\"./candy_cane.webp\": 62551,\n\t\"./cattleprod.webp\": 31158,\n\t\"./chainsaw.webp\": 95458,\n\t\"./chinese_officer_sword.webp\": 36908,\n\t\"./circuit_breaker.webp\": 78104,\n\t\"./cold_shoulder.webp\": 28691,\n\t\"./combat_knife.webp\": 64006,\n\t\"./combat_rifle.webp\": 60797,\n\t\"./combat_shotgun.webp\": 45865,\n\t\"./commanders_charge.webp\": 11688,\n\t\"./commie_whacker.webp\": 89278,\n\t\"./compound_bow.webp\": 85118,\n\t\"./cremator.webp\": 43619,\n\t\"./crossbow.webp\": 95748,\n\t\"./crowd_control.webp\": 48583,\n\t\"./crusader_pistol.webp\": 80559,\n\t\"./crushing_blow.webp\": 22734,\n\t\"./cryo_mine.webp\": 38913,\n\t\"./cryogenic_grenade.webp\": 22940,\n\t\"./cryolator.webp\": 79715,\n\t\"./cultist_blade.webp\": 26037,\n\t\"./cultist_dagger.webp\": 9035,\n\t\"./cultist_pickaxe.webp\": 25692,\n\t\"./death_tambo.webp\": 80544,\n\t\"./deathclaw_gauntlet.webp\": 25336,\n\t\"./default.webp\": 37033,\n\t\"./disorderly_conduct.webp\": 4580,\n\t\"./doctors_orders.webp\": 90996,\n\t\"./double-barrel_shotgun.webp\": 89765,\n\t\"./drill.webp\": 75925,\n\t\"./dross.webp\": 16177,\n\t\"./dynamite.webp\": 28131,\n\t\"./dynamite_bundle.webp\": 39268,\n\t\"./electro_enforcer.webp\": 49225,\n\t\"./enclave_plasma.webp\": 6681,\n\t\"./enclave_plasma_rifle.webp\": 19296,\n\t\"./explosive_bait.webp\": 13144,\n\t\"./face_breaker.webp\": 21390,\n\t\"./fancy_pump_action_shotgun.webp\": 31258,\n\t\"./fat_man.webp\": 14956,\n\t\"./final_word.webp\": 81113,\n\t\"./fire_axe.webp\": 60503,\n\t\"./flamer.webp\": 79675,\n\t\"./floater_flamer_grenade.webp\": 64827,\n\t\"./floater_freezer_grenade.webp\": 45700,\n\t\"./floater_gnasher_grenade.webp\": 71903,\n\t\"./foundations_vengeance.webp\": 47267,\n\t\"./fragmentation_grenade.webp\": 69996,\n\t\"./fragmentation_grenade_mirv.webp\": 26587,\n\t\"./fragmentation_mine.webp\": 15665,\n\t\"./gamma_gun.webp\": 72432,\n\t\"./gatling_gun.webp\": 50709,\n\t\"./gatling_laser.webp\": 15592,\n\t\"./gatling_plasma.webp\": 76747,\n\t\"./gauntlet.webp\": 38530,\n\t\"./gauss_minigun.webp\": 63441,\n\t\"./gauss_pistol.webp\": 33261,\n\t\"./gauss_rifle.webp\": 30700,\n\t\"./gauss_shotgun.webp\": 9456,\n\t\"./golf_club.webp\": 19577,\n\t\"./grand_finale.webp\": 1100,\n\t\"./grants_saber.webp\": 22109,\n\t\"./grognaks_axe.webp\": 39115,\n\t\"./guitar_sword.webp\": 97292,\n\t\"./gulper_smacker.webp\": 35614,\n\t\"./gunthers_big_iron.webp\": 35214,\n\t\"./handmade_rifle.webp\": 67441,\n\t\"./harpoon_gun.webp\": 44594,\n\t\"./hatchet.webp\": 71623,\n\t\"./hellstorm.webp\": 37400,\n\t\"./hunting_rifle.webp\": 54134,\n\t\"./imposter_assaultron_head.webp\": 96909,\n\t\"./kingfisher.webp\": 30874,\n\t\"./knuckles.webp\": 24514,\n\t\"./laser.webp\": 77635,\n\t\"./laser_rifle.webp\": 23550,\n\t\"./lead_pipe.webp\": 3671,\n\t\"./lever_action_rifle.webp\": 19750,\n\t\"./light_machine_gun.webp\": 62579,\n\t\"./love-tap.webp\": 36944,\n\t\"./lucky_rabbits_foot.webp\": 85655,\n\t\"./m79_grenade_launcher.webp\": 88095,\n\t\"./machete.webp\": 50751,\n\t\"./meat_cleaver.webp\": 59882,\n\t\"./meat_hook.webp\": 71059,\n\t\"./mechanics_best_friend.webp\": 50859,\n\t\"./medical_malpractice.webp\": 72591,\n\t\"./meteoritic_sword.webp\": 39259,\n\t\"./mind_over_matter.webp\": 62713,\n\t\"./mind_over_matter_rifle.webp\": 74816,\n\t\"./minigun.webp\": 12547,\n\t\"./missile_launcher.webp\": 71965,\n\t\"./mole_miner_gauntlet.webp\": 4970,\n\t\"./molerat_bat.webp\": 16570,\n\t\"./molotov_cocktail.webp\": 45129,\n\t\"./mr_handy_buzz_blade.webp\": 94289,\n\t\"./multi-purpose_axe.webp\": 79753,\n\t\"./nailer.webp\": 98331,\n\t\"./night_light.webp\": 92953,\n\t\"./noxious_fog_crawler.webp\": 28525,\n\t\"./nuka-launcher.webp\": 62284,\n\t\"./nuka_grenade.webp\": 41616,\n\t\"./nuka_quantum_grenade.webp\": 83562,\n\t\"./nuke_mine.webp\": 60705,\n\t\"./oathbreaker.webp\": 28644,\n\t\"./old_guards_10mm_smg.webp\": 10784,\n\t\"./orbital_scan_beacon.webp\": 79576,\n\t\"./orbital_strike_beacon.webp\": 88345,\n\t\"./pepper_shaker.webp\": 30309,\n\t\"./pickaxe.webp\": 86255,\n\t\"./pipe.webp\": 59092,\n\t\"./pipe_bolt-action.webp\": 16383,\n\t\"./pipe_bolt-action_rifle.webp\": 37946,\n\t\"./pipe_revolver.webp\": 55134,\n\t\"./pipe_revolver_rifle.webp\": 12703,\n\t\"./pipe_rifle.webp\": 9105,\n\t\"./pipe_wrench.webp\": 40328,\n\t\"./pirate_punch.webp\": 43378,\n\t\"./pitchfork.webp\": 28126,\n\t\"./plasma.webp\": 50898,\n\t\"./plasma_caster.webp\": 44547,\n\t\"./plasma_cutter.webp\": 72244,\n\t\"./plasma_grenade.webp\": 8923,\n\t\"./plasma_mine.webp\": 82656,\n\t\"./plasma_rifle.webp\": 71987,\n\t\"./pole_hook.webp\": 83024,\n\t\"./pollys_assaultron_head.webp\": 89599,\n\t\"./pool_cue.webp\": 62434,\n\t\"./power_fist.webp\": 20376,\n\t\"./protest_sign_-_against_automation.webp\": 26089,\n\t\"./pulse_grenade.webp\": 81096,\n\t\"./pulse_mine.webp\": 36021,\n\t\"./pump_action_shotgun.webp\": 12964,\n\t\"./pumpkin_grenade.webp\": 47409,\n\t\"./quad_launcher.webp\": 18656,\n\t\"./radium.webp\": 52204,\n\t\"./railway.webp\": 84543,\n\t\"./resolute_veteran.webp\": 94083,\n\t\"./revolutionary_sword.webp\": 3477,\n\t\"./ripper.webp\": 79954,\n\t\"./rolling_pin.webp\": 2977,\n\t\"./salt_of_the_earth.webp\": 65339,\n\t\"./salvaged_assaultron_head.webp\": 36785,\n\t\"./sheepsquatch_club.webp\": 9353,\n\t\"./sheepsquatch_shard.webp\": 33003,\n\t\"./sheepsquatch_staff.webp\": 73925,\n\t\"./shepherds_crook.webp\": 92287,\n\t\"./shishkebab.webp\": 83950,\n\t\"./shovel.webp\": 4671,\n\t\"./sickle.webp\": 65725,\n\t\"./single_action_revolver.webp\": 32875,\n\t\"./ski_sword.webp\": 29875,\n\t\"./sledgehammer.webp\": 64084,\n\t\"./slug_buster.webp\": 99569,\n\t\"./slug_buster_rifle.webp\": 47688,\n\t\"./smart_fragmentation_grenade.webp\": 61502,\n\t\"./sole_survivor.webp\": 50872,\n\t\"./spear.webp\": 41669,\n\t\"./submachine_gun.webp\": 51498,\n\t\"./super_sledge.webp\": 4082,\n\t\"./switchblade.webp\": 25866,\n\t\"./tenderizer.webp\": 12926,\n\t\"./tesla.webp\": 81303,\n\t\"./the_action_hero.webp\": 84271,\n\t\"./the_debilitator.webp\": 95967,\n\t\"./the_dragon.webp\": 49151,\n\t\"./the_farmhand.webp\": 10901,\n\t\"./the_fixer.webp\": 18860,\n\t\"./the_guarantee.webp\": 27594,\n\t\"./the_gutter.webp\": 1019,\n\t\"./the_invader.webp\": 18625,\n\t\"./the_quick_fix.webp\": 64375,\n\t\"./the_vats_unknown.webp\": 2821,\n\t\"./throwing_knife.webp\": 1862,\n\t\"./tire_iron.webp\": 8633,\n\t\"./tomahawk.webp\": 54922,\n\t\"./tone_death.webp\": 86041,\n\t\"./ultracite_gatling_laser.webp\": 72610,\n\t\"./ultracite_laser.webp\": 26069,\n\t\"./ultracite_laser_rifle.webp\": 64508,\n\t\"./unstoppable_monster.webp\": 37140,\n\t\"./v63_zweihaender.webp\": 43150,\n\t\"./walking_cane.webp\": 3329,\n\t\"./war_drum.webp\": 57003,\n\t\"./war_glaive.webp\": 26827,\n\t\"./western_revolver.webp\": 64664,\n\t\"./western_spirit.webp\": 20458,\n\t\"./whacker_smacker.webp\": 52106,\n\t\"./whistle_in_the_dark.webp\": 17289,\n\t\"./zetas_revenge.webp\": 66897\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 70151;"],"names":["defPlayerStats","defaultPlayerStats","defPlayer","defaultPlayer","getDefaultGraphData","xValues","yValues","coef","Global","points","i","push","Main","console","log","key","setKey","useState","creatureChartNumber","setCreatureChartNumber","loadedScreen","setLoadedScreen","wSpec","setWSpec","defaultWeaponSpecs","showStat","setShowStat","graphValues","setGraphValues","creatures","setCreatures","defaultCreatures","boostDamage","setBoostDamage","defaultBoosts","resultDamage","setResultDamage","extraDamage","setExtraDamage","defaultExtraDamage","additionalDamages","setAdditionalDamages","defaultAdds","stuffBoost","setStuffBoost","ConsumablesBuilder","getEmptyConsumableBoosts","player","setPlayer","playerStats","setPlayerStats","magazines","setMagazines","getMagazines","bobbleHeads","setBobbleHeads","getBobbleHeads","food","setFood","getFood","drink","setDrink","getDrink","psycho","setPsycho","getPsycho","serum","setSerum","getSerum","others","setOthers","getOthers","foodPref","setFoodPref","carnivore","herbivore","consumableTouched","setConsumableTouched","creatureNamesRef","useRef","buildCreatureNames","applySnapshotRef","wSpecRef","resultDamageRef","playerRef","playerStatsRef","stuffBoostRef","boostDamageRef","extraDamageRef","additionalDamagesRef","creaturesRef","showStatRef","useEffect","weaponFactory","WeaponFactory","graphDamage","calcDamage","current","applySnapshot","cBoostDamage","cWSpec","cExtraDamage","cAdditionalDamages","cCreatures","cPlayer","cPlayerStats","cStuff","allStuffBoosts","consumables","buildFromList","setConsumableItems","_objectSpread","_jsx","LoadingLine","text","_jsxs","children","MainCardsDisplay","ToastSpecs","legendary","iconName","weaponName","defaultName","Tabs","id","activeKey","onSelect","k","className","Tab","eventKey","title","Accordion","WeaponSpecs","health","value","DamageBoosts","AdditionalDamage","CreaturesView","RaceView","ConsumablesView","PerkCardView","WeaponTemplates","BoostStuff","Snapshots","buildPopover","Popover","Header","as","Body","qa","_Fragment","OverlayTrigger","rootClose","trigger","placement","overlay","Button","variant","addIconName","name","_ref","additionalDamage","updateAdditionalDamages","marks","redraw","setRedraw","width","isUsed","disabled","is_used","Row","Card","Col","InputGroup","Text","style","UCheckbox","onChange","e","target","checked","checkBgColor","Slider","onAfterChange","tooltip","open","min","max","step","getImagePathById","cId","jsonItems","getter","substring","lastIndexOf","getMagazine","getBobbleHead","getOther","length","item","imName","getMagazineItems","wType","wName","tags","crit","team","scoped","creatureTags","result","combination","includes","getOtherItems","hasPhysicalDamage","getBobbleHeadItems","getDrinkItems","getFoodItems","getSerumItems","lowHP","combination1","combination2","getSerumItemsBase","getSerumItemsAdditional","combination3","combination4","combination5","noEagle","arguments","undefined","isCarnivore","getChemicalItems","sneak","prepare","consumableObjs","consumableNames","prepareItems","creature","Map","weapon","JSON","parse","stringify","consumablesList","consumablesSet","Set","has","loadBoosts","objT","chT","dT","boT","mT","fT","itT","alT","cTypes","tagPrefixes","tagEndings","ConsumableTools","getTagName","tag","full","getItemType","startsWith","slice","data","prefix","endsWith","removeTagPrefix","tagName","tagPrefix","removeTagEndings","tagEnding","removePrefixSuffix","getItemColor","type","getItemColorDark","getEffectFilterInfo","resultName","durationText","valueColor","leftRight","wordBreak","color","ConsumableButton","props","typeColor","effectValues","effectTag","tagData","magnitudes","durations","magnitude","duration","Math","maxText","toFixed","toString","minText","getEffectValues","effectTagsData","textBgColor","textStyle","borderRadius","backgroundColor","itemType","margin","paddingTop","paddingBottom","padding","onClick","fontSize","sortItems","consItems","sort","item1","item2","name1","name2","localeCompare","getItem","types","memo","pageSize","setPageSize","onItemClick","currentTarget","currentItem","setShowToast","showToast","setCurrentItem","items","needTypeFilter","filterType","filterName","toLowerCase","filterEffect","effectTags","index","onPageChanged","page","setCurrentPage","paginated","start","currentPage","end","Container","Pagination","align","defaultPageSize","total","FloatButton","BackTop","right","visibilityHeight","ConsumableToast","ToastContainer","position","role","zIndex","Toast","bg","onClose","show","animation","StackEffectView","typeDict","All","Chem","Food","Magazine","Serum","Drink","Bobblehead","Stimpak","BloodPack","Other","effectDict","effectDictJSON","ConsumableFilter","BaseDropdown","dict","setFilterType","Form","Control","maxLength","setFilterName","setFilterEffect","questionPopoverHeader","questionPopoverBody","consumablesParseVersion","consumablesParseVersionName","questionPopover","StaticPopoverRenderer","Item","renderToggle","stopPropagation","FilterDisplay","ConsumableItems","effect","keyValueRow","Chart","getConfig","titleText","options","plugins","legend","display","elements","line","tension","scales","x","y","drawChart","config","chartId","curChart","getChart","destroy","document","getElementById","values","label","datasets","borderColor","pointRadius","borderWidth","fill","minWidth","headerClassName","names","CreatureDataProvider","getCreatureNames","CreatureNamesDropdown","SimpleNameDropdown","size","fieldName","buildCreature","level","capName","levels","getCreatureLevels","CreatureLevelsDropdown","CreatureChooser","Stack","direction","gap","xs","raceMap","raceItems","set","RaceDataProvider","getRaceById","get","creatureNames","creatureName","creatureItems","creatureLevels","creatureLevelsWithMax","getCreatureData","getCreatureParametersByName","creatureData","getCreatureParametersByData","creatureDataCurve","lastItem","sample","sampleLevel","sampleValue","prevSampleLevel","prevSampleValue","calculateExactValue","immune_to_rad","immune_to_poison","reduction","reductions","reduction_only_not_bleeding","race","race_id","bodyData","body","getMaxBodyMultiplier","getAverageBodyMultiplier","maxMult","mult","damage_mult","multSum","count","prevLevel","nextLevel","curLevel","prevValue","nextValue","getMaxLevel","getLevelsList","maxLevel","capitalizeCreatureName","charAt","toUpperCase","replaceAll","getStyle","rType","getView","setCreatureName","CreatureDropdown","CreatureResHealthChartsView","CreatureDataView","Collapse","accordion","DropdownButton","getUniqueDropdownItemsByNames","CreatureInfoButton","creatureInfoPopover","cursor","getResBadge","immune","prepareTags","tags3","curTags","Tag","join","showDamageIf","what","damageLine","buildCreatureInfo2","armor","Object","keys","resultArmor","b","f","p","c","r","showHeadExp","explosiveDamage","headExpShotDamage","showCritHeadExp","critExplosiveDamage","critExplosiveHeadDamage","capitalized","immuneToPoison","immuneToRadiation","h","damageReduction","totalDamage","normalDamage","headShot","headShotDamage","critNormalDamage","critHeadNormalDamage","addText","tAmmo","ammo","reloads","millisToTime","lifeTime","buildCreatureInfo","showDefaultResistance","weaponSection","wNameTrunc","truncate","Divider","defaultResistance","curBody","reloadsTime","buildResCols","cRes","typeData","CreatureChartView","CreatureParamsLineView","keyValueBadge","numberToString","enemy","CreaturesCardView","creature1","creature2","creature3","creature4","Creature","constructor","creatureInfo","this","physical","energy","fire","poison","cryo","radiation","damageReductionOnlyNotBleeding","headMult","bodyMult","bodyShot","expResistance","reported","maxHit","hits","sumDamages","lastShotTime","timeDamages","lastTotalDamage","lastDamageNoTime","lastExpDamageNoTime","minNormalShot","maxNormalShot","minHeadShot","maxHeadShot","minHeadExpShot","maxHeadExpShot","minNormalCritShot","maxNormalCritShot","minNormalHeadCritShot","maxNormalHeadCritShot","minExpShot","maxExpShot","minExpCritShot","maxExpCritShot","minExpCritHeadShot","maxExpCritHeadShot","bulletCount","minTotalDamage","maxTotalDamage","maxTimeEffects","tdCounter","sneakPercent","critPercent","bleed","getName","getArmor","reduceArmor","antiArmor","insect","takeDamage","hit","deltaTime","applyDamages","damages","critShot","applyCritDamages","critDamages","isDead","setupBleed","kind","damageInfo","time","causeNonTimeDamages","gatherTimeDamages","causeTimeDamages","recordDamage","baseDamage","damage","bonus","bonusMult","getCreatureBonusMultiplier","creatureDamageBonuses","getTotalBonus","stack","existedDamages","damageType","timeDamagesHandler","map","dTime","causeFinalDamage","deleteTimeDamages","filter","getMaxTimeEffects","forEach","cripple","powerAttack","lastShotBonus","expDTypeBonus","critBoost","bash","firstBloodBonus","totalBonus","sneakShot","expValue","getExplosiveDamage","weaponType","expBonus","critExp","tenderizer","timeDamage","finalDamage","memoDamage","nonCritExp","expDamage","getArmorValue","damageKind","totalDamageBonus","executionerBonus","damageBonus","bonusName","getLastTotalDamage","isHead","explosive","getAverageHit","Infinity","totalTime","parseInt","formDeadReport","averageHit","damagedHealth","ratio","CreaturesProduction","produce","materials","property","produceByArmor","dummy","getDummy","grey","colors","blue","darkBlue","orange","magenta","indigo","red","UTag","colorScheme","bRadius","bWidth","bgColor","border","fontWeight","borderStyle","whiteSpace","getButton","getTag","getColTagView","onBodyPartClick","CreatureBodyView","bodyParts","partName","part","partText","CreatureReductionView","damageReductions","col","res_field","canDisable","chColor","checkBorderColor","getCheckbox","checkLength","parseFloat","ballistic","cold","rad","creatureTypes","Normal","Scorched","Glowing","CreatureTagsView","BSRadio","pairs","selectedValue","getLabel","float","CreaturesStats","CreatureStats","getItems","creatureParseVersion","creatureParseVersionName","alt","setAlt","defaultCreaturesAlt","buildExtraDamageView","buildExtraDamageButtons","resultBadges","left1","right1","left2","right2","aab","aae","aaf","aac","aap","aar","getAATail","aa","aai","getDamageViews","damageViews","damageDetails","DamageDetailsCard","damageData","AAView","getRow","leftValue","rightValue","leftColor","rightColor","showExplosive","setCreature","creatureBonus","numberEmoji","getNumberEmoji","currentCreature","additionalBonus","damageValue","getAnyCreatureBonus","bonusDamage","bonusText","critValue","displayedCrit","critText","totalSneakValue","isSneak","displayedSneak","totalDamageBonusMin","totalDamageBonusMinValue","totalDamageBonusMinPercent","totalDamageBonusMax","executioner","totalDamageBonusMaxValue","totalDamageBonusMaxPercent","totalDamageBonusText","sneakText","resultSneakValue","resultCritValue","isCrit","totalDamageMin","totalDamageMax","explosiveValueMin","explosiveValueMax","explosiveText","explosiveCritValueMin","explosiveCritValueMax","explosiveCritText","totalDamageText","tail","base","totalExp","totalExpCrit","getResult","dropdownItems","Dropdown","getSymbolStyle","Footer","DamageEmulator","creatureInfos","needToStopByTime","timeLimit","floor","emulate","steps","getAntiArmor","deadCount","getReloadsCount","getReloadsTime","getType","defaultWeaponName","getDefaultName","getDamages","getExplosiveDamageTypeBonus","getBonusMult","tDamage","getDisplayedDamage","getCritBonus","getSneakBonus","getCreatureBonus","strengthBonus","getStrengthBonus","getExplosiveBonus","shotSize","getShotSize","reloadTime","getReloadTime","fireRate","getFireRate","ammoCapacity","getAmmoCapacity","strength","getStrength","Weapon","weaponSpecsAssembler","getWeaponName","getDefaultWeaponName","getCritDamages","strengthBoost","getStrengthBoost","getBaseDamageMult","getCritBoost","explosiveBonus","explosiveDamageTypeBonus","getExplosivePhysicalBonus","getWeaponType","headShotFrequency","getHeadShotFrequency","critShotFrequency","getCritShotFrequency","sneakShotFrequency","getSneakShotFrequency","getCreatureDamageBonuses","getFirstBloodBonus","getLastShotBonus","getCripple","getBash","getPowerAttack","chargeTime","getChargeTime","chargePenalty","getChargePenalty","getSneak","getTotalDamageBonus","magazine","enableCrit","enableHeadShot","reloadsCount","reloadTimeCounting","alwaysMaxHit","reloadsTotalTime","hitCount","setEnableCrit","flag","setEnableHeadShot","setLastShotBonus","setFirstBloodBonus","setChargeTime","setFireRate","setAlwaysMaxHit","disableReloadTimeCounting","getMaxHit","curDamage","chanceTriggered","hitIfFrequency","chance","finalAccuracy","defDamage","frequency","random","StuffBoostsCollector","collectAllItems","stuffBoosts","collector","maxItem","getMaxItem","weaponNameOrTypeSatisfied","split","satisfyNameOrType","collect","weaponTags","customStacker","additional","satisfyTags","array1","array2","arrayLess","arrayMore","intersects","AccuracyAdjuster","adjustByLegendary","adjustByPerks","adjustByConsumables","WeaponSpecsAssembler","perks","extraDamageSettings","makeDamageItemCopy","concat","getDamageFromStuff","setFinalAccuracy","better_criticals","displayed_value","collectTags","ammoType","codeName","strPoints","collectFromLegendary","leg","exp","demolition_expert","damageToCreature","glow_sight","exist","useHead","headFreq","useCrit","critFreq","useSneak","toft","follow_through","tdb","totalD","maxChargeTime","crippleChance","covert_operative","sandman","mister_sandman","ninja","getBonusMultFromPerks","bResult","ballisticBDB","eResult","energyBDB","fResult","fireBDB","pResult","poisonBDB","cResult","coldBDB","rResult","radBDB","dtPhysical","dtEnergy","dtFire","dtPoison","dtCryo","dtRadiationExposure","buildBleedDamage","nerd_rage","bloody_mess","adrenaline","gun_fu","gladiator","hand","heavy_gunner","shotgunner","slugger","iron_fist","archer","commando","is_auto","rifleman","guerrilla","gunslinger","science","incisor","bow_before_me","tank_killer","stabilized","bMult","result2","exterminator","power_user","shot_size","weaponSpeed","speed","martial_artist","reloadSpeed","lock_and_load","scattershot","ground_pounder","defReloadTime","DEFAULT","NO_CRIT","build","rank","rank_values","max_x","category","info","cost","im_name","party_girl_boy","strange_in_numbers","class_freak","special","perception","endurance","charisma","intelligence","agility","luck","getAverageTimeMillis","sum","getAverageTime","averageShot","getCreatureByName","defBody","dps","buildDefCreature","normalMult","averageMult","immuneToRad","reductionOnlyNotBleeding","average","strange","freak","alcoholEffects","getStrangeMult","getFreakReduction","functions","nukeTheMan","partyGirlBoy","defValue","adrenalineReaction","ar","eagleEyes","eagleEyesNegative","empathSerum","carnivoreSerum","herbivoreSerum","foodCalc","foodType","herdMentality","posValue","speedDemonMove","speedDemonReload","talons1","talons2","twistedMuscles","convertStuffBoost","collectBoosts","Array","from","boosts","add","parentId","loadedStuff","used","applyBoost","anyway","boost","funcUsed","func","stuff","things","bobbles","serums","applyAllStuff","applyStuff","remainStuff","delete","deleteBoost","modParser","ModParser","getDefaultLegs","legIds","convertTemplateToSpecs","template","assignCurrentlyActiveUserLegendary","isAuto","defRate","manualRate","mods","modCategoryName","allMods","categoryMods","j","mod","getMods","group","legs","legendary1","legendary2","legendary3","legendary4","legendary5","replaceAdjustableLegs","collectAllDamages","sortedDamages","d","ignore","critDamagesData","crSpellId","critDamageData","critItem","convertDamageDataToDamageItem","weaponId","capacity","legendaryHealthUpdated","currentLegendaryIds","applyLegendaryModToWSpec","imageName","dType","adDamage","symbol","interval","area","AdditionalDView","iMap","createMap","getAmmo","require","magazinesList","bobbleHeadsList","bobbleHead","foods","foodsList","drinks","drinksList","psychos","psychoList","serumList","othersList","other","nameList","firstIndex","lastIndex","indexOf","creaturesInfo","buildGraphValues","shotsPerSecond","xValue","accuracy","headShotPercent","normalShotPercent","headShotMult","normalShotCount","critShotCount","shotSum","yValuesNoCrit","maxRes","cArmor","graphPoints","ceil","getColorsForHotMeter","g","damageExtractor","DamageExtractor","CritView","crits","weapId","allItems","visual","ench","extractEnch","spells","type_name","curv","vmadObjects","getEffect","effects","setVMADObject","object","getVMADObject","clearVMADObjects","clear","number","image","maxHeight","src","Image","fluid","bullet","iBullet","iAmmo","iFireRate","iTAmmo","gun","iGun","rifle","iRifle","shotgun","iShotgun","bow","iBow","melee","iMelee","heavy","iHeavy","unarmed","iUnarmed","thrown","iThrown","imageF","marginLeft","val","str","truncateLongWords","words","word","getHotPercentage","timeToPercent","percent","buildItem","wSpecCopy","averageTime","star","getLegendary","getLegendaryByStar","getLegendaryNameFromSpec","legObj","getPerks","getProj","getHazardOverlay","hazard","overlayButton","WeaponPopoverOverlay","popoverHeader","popoverContent","buildHazardView","itemToOverly","getExpView","expl","header","popover","projectile","objectExplosion","placedWeapon","combined","getResolvedField","proj","renderWeaponPopover","buildProjView","getProjButton","getProjectileOverlay","hazd","d_type","getField","getCardSpell","enchantment","getExplosiveForPopover","buildProjViewById","projId","destructible","buildProjViewByIds","ids","ProjView","projInfo","getSpell","getEffects","vType","v_type","buildEightEffect","buildFifthEffect","Error","buildFirstEffect","spell","getSpellHeader","getEffectsForPopover","mag_effects","actor1","getActorData","actor2","lValue","rValue","keyValueTag","actor","getActor","under_row","actorData","getNameValueField","getPerkButton","perkId","perk","getPerkContent","getGlobDuration","dur","glob_duration","getGlobMagnitude","mag","glob_magnitude","getEffectContent","mEffect","ability","resist","a_type","e_type","only_player","d_curv","explosion","actor_value1","actor_value2","getOverlay","buttonStyle","getEffectButton","buildSpellView","spellId","SpellView","round","emojis","getRandomNumber","getRandomEmoji","buildRandomEmojiString","space","spaceChars","repeat","eSize","Strings","Melee","Unarmed","templates","templateList","getTemplates","getTemplateCopyById","t","q","strTime","hideEmpty","cell","css","value1","value2","setWeaponType","resetPage","customTitle","getRowWithImage","customName","getImage","images","imageList","getImageElement","content","minHeight","height","paddingLeft","popoverBack","onToggle","initWeaponPopover","ReactDOM","render","extractPlacedObjects","damageTypes","resTypes","e_type_name","v_type_name","operation","skipFunctions","tomahawk","throwingKnife","extractFromTemplate","extract","ammoId","curWeapId","ammoData","extractAmmo","projIds","projData","extractProj","effectIds","adEffects","effectId","parent","ammoDamage","ammo_type","dTypes","addDamageNode","extractExp","resolveAndExtractProj","extractPerk","enchTime","extractEffects","enchId","existedEffects","globMagnitude","globDuration","onlyPlayer","m_effect","blood","resolveCurv","findEffectDamageType","source","resId","extractObject","obj","wId","dDamage","expCurv","exp_curv","view_name","type_id","type_full_name","directParent","entries","abs","DamageBlackList","check","damageId","list","ignoreMap","buildDamageItem","getDamageTypeFromCellName","getDamageValue","damageItem","cellNames","cellName","DamageSetter","setDamages","setDamage","setDamageForCategory","setCurrent","placeValueByType","putDamage","field","newDamage","DamageBonusMult","Apply","apply","super","getValue","addSetMullAdd","op","applyLegendary","modId","starIndex","update","checkOp","Ammo","val1","isChangingDefaultDamage","IsAutomatic","Speed","autoRate","mullAddToProperty","APCost","ap","Weight","weight","AttackDelay","CriticalDamageMult","addToProperty","AmmoCapacity","ReloadSpeed","OverrideProjectile","splice","HasRepeatableSingleFire","ActorValues","getCurvValue","val2","applyValue","isLegendary","checkZero","applied","needToRemove","Keywords","addTag","print","CritEffect","AttackDamage","bbDamage","DamageTypeValues","ebDamage","fbDamage","pbDamage","cbDamage","rbDamage","to","mullAddFromTo","WeightReduction","mullAdd","Enchantments","newValue","depend","adjustValueByHealth","NumProjectiles","Appliers","appliers","ConIronSight","SightedTransition","MaxConDegree","MinConDegree","RecoilMaxDegree","RecoilMinDegree","skip_legendary","applyOrRevoke","modData","mutatingDamage","modifiers","applier","prop","changeDefault","applySpecific","modEffects","ModTools","hasSilencerById","hasSilencer","expected","val3","allowNegative","setToProperty","mullSet","conIronSight","maxConDegree","minConDegree","recoilMaxDegree","recoilMinDegree","sightedTransition","getButtons","small","marginRight","setSelectedValue","parseValueInt","GroupView","redRounded","getNameByLabel","isEffectIdEmpty","getVMADButton","vmad","onEffectClick","buttonName","vmadObject","leftRight2","vmadView","buildRow","left","leftRightTag","buildConditionStrings","conditions","conditionStrings","cond","textAlign","textWrap","buildTextBlock","footer","trim","headerView","footerView","buildActor","desc","def","idNameRow","overflow","getGlob","glob","buildEffect","buildCurve","curve","maxValue","pathCurve","perkButtons","onPerkClick","perkData","costs","mPerkId","fPerkId","mPerk","fPerk","flexDirection","PerkCardCompactView","perkCard","getPerkCard","perkCardId","PerkCardTools","getColor","legBadge","buildPerkEffect","rows","entry","buildActors","getRows","indent","PerkCompactView","curve_max_value","SpellCompactView","range","checkEmpty","getPerk","EffectCompactView","resistance","getTagView","bordered","ConsumableTagsView","flexWrap","getItemDescription","getTag3","mt","mb","textOverflow","getWeight","getAddictionView","addictionChance","addiction_chance","addiction_spell","detailsView","alchemy","AlchemyCompactView","dnam_desc","buildBody","vmadId","textBlock","script_name","objView","objArrayView","structArrayView","objArray","objs","vmads","getScriptNameView","scriptName","effectButtonView","getGlobValue","buildView","VMADCompactView","viewIdStackRef","startItemIdRef","startItem","lastViewIdIndex","getEffectItem","backButton","onBackClick","getBackButton","newLength","effectView","marks100P","defaultValue","marks200","ADRow","AdditionalTable","InfoPopover","setShow","setTarget","sign","bodyBuilder","headerBuilder","Overlay","onHide","popoverBodyStyle","buildOverlay","Badge","pill","getPopoverInfoBody","popoverId","getPopoverInfoHeader","categoryName","picHeight","imPadding","setItems","colorName","colorValue","getPicture","useHeader","maxRows","setUpdate","cardClick","recalculateDynamicItems","valueType","description","emptyRows","emojiStrings","secondEmoji","outline","head","maxPopoverHeight","documentElement","getPropertyValue","Img","gameId","couple","first","second","cardHeight","EffectItem","rItems","EffectView","EffectItems","marks50","marksH","ANRow","General","badgeIf","condition","checkCardConditions","card","cardType","setCardType","xBadge","w","perkColor","getPerkColor","cName","imagePath","getPerkImage","getMark","bgCardColor","getComputedStyle","calculateSpecial","rank_len","changeRank","WarningPopover","element","message","onRadioClick","Basic","Expert","Master","getInfo","BRow1","BRow2","_ref2","BRow3","_ref3","BRow4","_ref4","BRow5","_ref5","BRow6","_ref6","BRow7","_ref7","BRow8","_ref8","BRow9","_ref9","BRow10","_ref10","getStatBadge","cParams","letter","getDropdown","PerkCardBuilder","BoostTable","GraphInfoView","cPercent","Progress","format","strokeColor","trailColor","strokeWidth","ResistanceChart","creatureNumber","setCreatureNumber","HotMeter","setIndex","copyColors","shiftIndex","limit","setTimeout","newIndex","showInfo","imagePopover","weaponIcon","percentC","weaponTitleName","renderToggleNewContent","SummaryView","DamageDetails","labels","creatureField","need","setValue","getLegendaryPrefix","legendaryPrefix","curLegPrefix","getInputText","legPrefixCheck","setLegPrefixCheck","Modal","setModalNewItemShow","centered","closeButton","Title","useLegPrefix","nextId","newItems","setNextId","createItem","getJsonFileRef","URL","createObjectURL","Blob","getFileRef","modalDownloadSnapshots","setModalDownloadSnapshots","href","download","_unused","downloadName","modalDownloadSnapshot","setModalDownloadSnapshot","fileName","setModalDeleteItem","itemId","modalDeleteAll","setModalDeleteAll","modalView","loading","applyItem","ModalApplyItem","setLoading","setModalApplyItem","copy","readSnapshotsFromInput","inputId","setIdCallback","setItemsCallback","oldItems","maxItems","file","reader","FileReader","onload","readSnapshotsJson","readAsText","readSnapshotsFrom","files","newMaxItems","radio","Add","Replace","addOld","setAddOld","setModalUploadSnapshots","htmlFor","readOnly","accept","_unused2","setModalRenameItem","setItem","modalUpdateItem","setModalUpdateItem","oldItem","uniqueCreatureNames","sortCreatureName","setSortCreatureName","downloadButton","UploadIcon","uploadButton","DownloadIcon","imNames","getUsedPerks","EmblemCalcRowView","imageProvider","iconSize","imageSize","row","tagColor","bodyContent","isOpen","critUsed","sneakUsed","headUsed","leg1Name","leg2Name","leg3Name","leg4Name","leg5Name","modView","fireRateLabel","getFireRateLabel","BoostRowView","UpdateIcon","PlayIcon","TrashIcon","headerBody","isItemOpen","setIsItemOpen","displayedWeaponName","RenameIcon","compareAverage","time1","time2","startIndex","sortAlg","compareCreatureGeneral","snapshots","SnapshotItem","showSizeChanger","getPagination","modalNewItemShow","modalRenameItem","modalUploadSnapshots","modalDeleteItem","modalApplyItem","setIsOpen","setPage","setStartIndex","readSnapshotsFromResources","snapshotsFile","defaultItems","uniqueNames","buildUniqueCreatureNames","onClickOpen","SnapshotsHeader","ModalDownloadSnapshots","ModalDownloadSnapshot","ModalUploadSnapshots","ModalNewItem","ModalDeleteItem","ModalDeleteAll","ModalRenameItem","ModalUpdateItem","WTypeDropdown","CollapseIcon","ExpandIcon","SnapshotItems","mainInfoPopover","MainInfoButton","infoButton","isRanged","TemplateTools","isWeaponRangedByType","damageText","fireRateText","fRate","getLegendaryRow","legendaryId","stars","legData","getPrevButtonDetails","showView","detailsLength","detailIndex","setDetailIndex","getNextButtonDetails","getNextButtonCreature","getPrevButtonCreature","getCreatures","getDetails","view","getMainToast","totalBonusText","setShowView","strengthTail","bonuses","totalBonusTextMin","totalBonusTextMax","toastBody","column2","onChange1","onChange2","icon","id1","id2","max1","max2","column","creatureIndex","creatureViews","fireRateIcon","defFireRateLabel","allMarks","marks3","marks25","marks40","marks95","marks100","marks20","marks24","marks300","marks15","legendaryInfo","marksName","wSpecLeg","adjustable","setCurrentLegendaryIds","legendaryItems","updateLegendary","getLegendaryDropdown","legName","legId","getQM","getEffectTag","getLegendaryAdjust","LegSlider","getLegendaryDetails","legBody","getCollapse","headerName","LegendarySelector","autoW","handW","auto","getInputItem","dItem","DamageItem","modalDeleteDamage","setModalDeleteDamage","NotificationToast","toastState","delay","autohide","setToastState","openNotification","DamageAdd","api","contextHolder","notification","useNotification","AmmoInfoView","TagInfoView","modElement","dItems","ModalDeleteDamage","WRow","AutoHandSelector","DamageTable","buildName","setupGeneral","setupCard","getImageNamesForPickedCards","buildWithOptions","automatic","energyTag","explosiveTag","fusionTag","oneHandedTag","twoHandedTag","silencerTag","shotgunTag","main","temp","lowHp","pa","night","useSerums","bodyTags","adr","extra","prepareName","perkCards","mPerk1","mName","fPerk1","sortedItems","fullName","getSortedPerkCards","PerkCardButton","filterStatus","Strength","Perception","Endurance","Charisma","Intelligence","Agility","Luck","statusDict","Legendary","Ordinary","PerkCardFilter","setFilterStatus","PerkCardToast","perkCardParseVersion","perkCardParseVersionName","PerkCardItems","ChartView","GeneralRaceView","RaceBodyView","RaceTools","prepareRaceName","pair","raceName","setRaceName","RaceTagView","raceParseVersion","raceParseVersionName","racePairs","raceComparator","race1","race2","it","getRaceTagView","getRaceBodyView","RaceDropdown","ResistanceView","res","buildModCard","mod_e","excludeMod","mId","eIds","excludedModIds","getDamagedModIndexes","includeGroups","accuracyMods","silencerDamage","exclude","defaultIndex","accuracyBestIndex","indexes","bestMod","resetMods","modCategories","modCategory","hasDefaultLegendary","leg1","leg2","leg3","leg4","leg5","getDefaultLegendary","legendarySetter","extractDefaultLegendary","isWeaponRanged","isWeaponExplosive","getGroups","applyTemplate","ModalApplyTemplate","modalTemplate","setModalTemplate","specItem","buildProj","buildAmmoView","AmmoView","overrideProj","ammoInfo","getDamagesData","getDamageData","buildCard","DamageView","Base","getTags","tagNames","buildGeneralView","crMult","crit_spells","crit_views","general","formatName","legendaryName","LegendaryView","isLeg1","isLeg2","isLeg3","isLeg4","isLeg5","getDamageCards","damageCollapse","DamageOverview","ModRow","modsSameType","checkMod","defMods","modSameType","modRow","CheckableTag","getModRow","testImagePaths","versionPaths","testedWeapons","versions","buildMap","imagesMap","resultMap","version","img","buildTestedWeapons","paths","array","path","weaponRestrictions","getApplyButton","setModalCalculate","onTestClick","restrictions","isTested","getResetButton","itemsLength","resetButtonActive","setResetButtonActive","cleanTemplate","modsSetter","setTemplatesMods","left3","right3","WeaponTemplate","changed","setChanged","cleanTemplateAndApplyCurrentMods","unverified","divider","iSize","badgeStyle","badgesRow","infoRows","filteredInfo","filteredMarks","badgesCols","buildInfoRows","GeneralView","LegendarySetter","privateSet","lastWord","propMods","modGroups","weaponIds","damageSetter","setTemplatesDefaultMods","resetTemplate","applyModValues","setLegendary","getSkeletons","Skeleton","avatar","paragraph","weaponIdsExists","weaponIdsByType","buildTemplates","wData","setWData","loaded","filterByName","filterByType","prepareTemplates","Combinator","combinations","currentCombination","lastIndexes","curIndexes","hbRead","combinationsCount","groupName","last","currentNumber","getCombinationsCount","getCurrentNumber","next","isLast","nextCombination","currentCombinations","rowPos","AccuracyHelper","getCleanTemplate","getBestMods","preference","resultMods","hide","hasAccuracyData","useful","getTheBestModsForCategory","pFunc","RECOIL","determineBestRecoilPriority","CON","determineBestConPriority","BALANCE","determineBestBalance","best","currentId","currentData","th","bestCon","getAverageCon","currentCon","bestBalance","getAverageRecoil","currentBalance","bestTransition","getTransition","currentTransition","bestSight","getSight","currentSight","bestRecoil","currentRecoil","_AccuracyHelper","ACCURACY_INFO","ACC_PREFERENCE","Recoil","Spread","Balance","accuracyProps","LegsId","QUAD","ARISTOCRAT","ANTI_ARMOR","TWO_SHOT","EXECUTIONER","BLOODIED","STEADY","MELEE_RAPID","HITMAN","RANGED_RAPID","VITAL","EXPLOSIVE","CRIPPLING","SWIFT","STRENGTH","LegendaryCalcBuilder","getLegendary1","isRange","initLegs","getLegendary2","getLegendary3","ParameterCalculator","cards","frCrit","frHead","legendaryOpts","accuracyPreference","modCombinator","boostCombinator","bestParameters","lastParameters","bestTime","lastTime","maxCount","defaultLegendary","hasGotLastCombination","currentConfig","bestConfig","bestAverageHit","accuracyHelper","defaultExplosive","perkImageNames","bestAccuracyMods","getBestParameters","getTemplate","getCount","getMaxCount","getBestTime","clockFormat","prepareAndCalcFirst","getCreatureTags","getBodyTags","isDefaultExplosive","buildLegendary","Night","Sneak","modCombinations","applyMods","buildBoostCombinator","consList","legsList","buildConsumableList","buildLegendaryList","calculateAndCount","Legendary1","Legendary2","Legendary3","uniqueTags","getConsumables","Crit","Team","bobble","consumableBoostsList","calculateCombination","updateBestConfig","consCombinations","boostCombinations","nextBoostExists","calculateCombinations","modCombinationExists","currentBoosts","isFinished","getCompletionPercent","onePart","modGroup","modIndex","nonAutomatic","applyLegendaryToWSpec","legIndex","memoConfig","cons","getBestConfig","getCurrentConfig","buildNewCreatures","updateLeg","legToApply","buildPerks","consumableBoosts","report","consumableList","PickedGroups","init","groups","excluded","excludeGroups","buildGroupsView","onGroupChange","getModItem","CalcModGroups","setGroups","getDefaultModGroups","infos","headButton","setFrHead","setFrCrit","opt","critButton","dis","strengthField","maxWidth","CalcModOptionsView","CalcCards","setCards","CalcMain","setMain","CalcConsumables","setStuff","CalcLegendary","setLeg","WeaponEmblem","LegendaryCalcRowView","getLeg","wrap","starSize","ModsCalcRowView","modViews","columns","wrapText","widths","rest","getWidths","alignItems","justifyContent","ParametersApplier","applyCalculatedParameters","parameters","parameterCalculator","firstShown","ModalCalculateWeapon","setCount","calculating","setCalculating","selectedCreature","setSelectedCreature","accuracyPref","setAccuracyPref","modalCalculate","Parameters","startCalculation","getCounter","currentElement","curHeight","offsetHeight","onSelectCreatureName","selectedCreatureName","getSettings","WarningPopoverBadge","CalcModGroupsAll","CalcWGroupsDropdown","setType","CalcCurrentItem","finishedRef","setWNameToApply","compareItems","bestTimeCount","resultView","calcItems","CalcResultItem","currentWIndex","ModalCalculateWeapons","completion","setCompletion","weaponResult","setWeaponResult","wNameToApply","renderSwitch","setRenderSwitch","canCalculateRef","modalCalculates","setModalCalculates","setupParameterCalculator","wIds","idObj","gNames","getCurrentItem","perksUsed","consUsed","getProgress","getProgressNumber","CalcResultItems","calculateParameters","wIcon","letterSpacing","getImages","Carousel","titles","getTitles","activeIndex","selectedIndex","ModalTestedWeapon","modalTested","setModalTested","TestedCarousel","TemplateItems","imagePathMap","views","bColor","ms","placeId","root","lastOpened","buildLayout","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","resolve","module","exports"],"sourceRoot":""}