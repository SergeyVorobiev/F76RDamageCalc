{"version":3,"file":"static/js/844.2fa6ba76.chunk.js","mappings":"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","sources":["Main.js","additional/ADRow.js","boostStuff/ConsumablesBuilder.js","consumables/ConsumableTools.js","consumables/view/ConsumableButton.js","consumables/view/ConsumableItems.js","consumables/view/ConsumableTagsView.js","consumables/view/ConsumableToast.js","consumables/view/ConsumableFilter.js","consumables/view/ConsumablesView.js","consumables/view/FilterDisplay.js","creature/CreatureChartView.js","creature/CreatureNamesDropdown.js","creature/CreatureLevelsDropdown.js","creature/CreatureChooser.js","race/RaceDataProvider.js","creature/CreatureDataProvider.js","creature/CreatureDataView.js","creature/CreatureDropdown.js","creature/CreatureInfoButton.js","creature/CreatureInfoPopover.js","creature/CreatureResHealthChartsView.js","creature/CreatureParamsLineView.js","creature/CreaturesCardView.js","creature/Creature.js","creature/CreaturesProduction.js","viewComponents/tag/UTag.js","creature/CreatureBodyView.js","creature/CreatureTagsView.js","creature/CreatureReductionView.js","creature/CreatureStats.js","creature/CreaturesStats.js","creature/CreaturesView.js","damage/AAView.js","damage/DamageDetails.js","damage/DamageDetailsCard.js","damage/DamageEmulator.js","damage/weapon/Weapon.js","boostStuff/StuffBoostsCollector.js","helpers/Array.js","helpers/AccuracyAdjuster.js","damage/weapon/WeaponSpecsAssembler.js","damage/weapon/WeaponFactory.js","entities/EAddDamages.js","entities/EBoosts.js","entities/ECreatures.js","entities/EPlayer.js","entities/EPlayerStats.js","boostStuff/BoostFunctions.js","entities/EStuffBoost.js","entities/EWeaponSpecs.js","entities/ExtraDamageOptions.js","helpers/AdditionalDView.js","helpers/Ammo.js","helpers/BoostStuffProvider.js","helpers/Calc.js","helpers/Colors.js","helpers/CritView.js","helpers/DropdownHelpers.js","helpers/EffectProvider.js","helpers/EffectViewHelper.js","helpers/Emoji.js","helpers/Global.js","helpers/Input.js","helpers/Item.js","helpers/LegendaryProvider.js","helpers/Mods.js","helpers/PerkProvider.js","helpers/Proj.js","helpers/ProjView.js","helpers/Spell.js","helpers/PerkPopover.js","templates/EffectPopover.js","helpers/SpellView.js","helpers/StringHelpers.js","helpers/Strings.js","helpers/TemplatesRegister.js","helpers/Time.js","helpers/ViewHelper.js","helpers/WTypeDropdown.js","helpers/WarningPopover.js","helpers/WeaponImages.js","helpers/WeaponPopoverOverlay.js","helpers/mods/DamageExtractor.js","damage/DamageBlackList.js","helpers/mods/DamageSetter.js","helpers/mods/appliers/DamageBonusMult.js","helpers/mods/appliers/Ammo.js","helpers/mods/appliers/IsAutomatic.js","helpers/mods/appliers/Speed.js","helpers/mods/appliers/APCost.js","helpers/mods/appliers/Weight.js","helpers/mods/appliers/AttackDelay.js","helpers/mods/appliers/CriticalDamageMult.js","helpers/mods/appliers/AmmoCapacity.js","helpers/mods/appliers/ReloadSpeed.js","helpers/mods/appliers/OverrideProjectile.js","helpers/mods/appliers/HasRepeatableSingleFire.js","helpers/mods/appliers/ActorValues.js","helpers/mods/appliers/Keywords.js","helpers/mods/appliers/CritEffect.js","helpers/mods/appliers/AttackDamage.js","helpers/mods/appliers/DamageTypeValues.js","helpers/mods/appliers/WeightReduction.js","helpers/mods/appliers/Enchantments.js","helpers/mods/appliers/NumProjectiles.js","helpers/mods/appliers/Appliers.js","helpers/mods/ModParser.js","helpers/mods/ModTools.js","helpers/mods/appliers/Apply.js","helpers/mods/appliers/ConIronSight.js","helpers/mods/appliers/MaxConDegree.js","helpers/mods/appliers/MinConDegree.js","helpers/mods/appliers/RecoilMaxDegree.js","helpers/mods/appliers/RecoilMinDegree.js","helpers/mods/appliers/SightedTransition.js","helpers/views/BSRadio.js","helpers/views/SimpleNameDropdown.js","perkCard/view/PerkCardCompactView.js","perk/view/PerkCompactView.js","spell/view/SpellCompactView.js","effect/view/EffectCompactView.js","consumables/view/AlchemyCompactView.js","vmad/view/VMADCompactView.js","helpers/views/StackEffectView.js","additional/AdditionalTable.js","main/AdditionalDamage.js","viewComponents/popover/InfoPopover.js","boostStuff/EffectItem.js","boostStuff/EffectItems.js","boostStuff/EffectView.js","boostStuff/ANRow.js","boostStuff/General.js","main/BoostStuff.js","perkCardBoosts/BRows.js","perkCardBoosts/BoostTable.js","main/DamageBoosts.js","main/GraphInfoView.js","main/HotMeter.js","main/MainCardsDisplay.js","main/ResistanceChart.js","snapshot/ModalNewItem.js","helpers/Files.js","snapshot/ModalDownloadSnapshots.js","snapshot/ModalDownloadSnapshot.js","snapshot/ModalDeleteItem.js","snapshot/ModalDeleteAll.js","snapshot/ModalApplyItem.js","helpers/FetchSnapshots.js","snapshot/ModalUploadSnapshots.js","snapshot/ModalRenameItem.js","snapshot/ModalUpdateItem.js","snapshot/SnapshotsHeader.js","snapshot/BoostRowView.js","snapshot/SnapshotItem.js","snapshot/SnapshotItems.js","main/Snapshots.js","main/MainInfoPopover.js","main/MainInfoButton.js","main/SummaryView.js","main/ToastSpecs.js","damage/WRow.js","damage/LegSlider.js","damage/LegendarySelector.js","damage/AutoHandSelector.js","damage/DamageItem.js","helpers/NotificationToast.js","damage/DamageAdd.js","damage/ModalDeleteDamage.js","damage/AmmoInfoView.js","damage/TagInfoView.js","damage/DamageTable.js","main/WeaponSpecs.js","perkCardBoosts/BoostHelpers.js","perkCardBoosts/PerkCardBuilder.js","perkCardBoosts/PerkImageProvider.js","perkCard/PerkCardProvider.js","perkCard/PerkCardTools.js","perkCard/view/PerkCardButton.js","perkCard/view/PerkCardItems.js","perkCard/view/PerkCardFilter.js","perkCard/view/PerkCardToast.js","perkCard/view/PerkCardView.js","race/view/ChartView.js","race/view/GeneralRaceView.js","race/view/RaceBodyView.js","race/RaceTools.js","race/view/RaceDropdown.js","race/view/RaceTagView.js","race/view/RaceView.js","race/view/ResistanceView.js","templates/ModPropsPopover.js","templates/TemplateTools.js","templates/ModalApplyTemplate.js","helpers/AmmoView.js","helpers/DamageView.js","helpers/GeneralView.js","helpers/LegendaryView.js","helpers/DamageOverview.js","templates/ModRow.js","templates/TestedWeapons.js","helpers/WeaponRestrictions.js","templates/WeaponTemplate.js","helpers/mods/LegendarySetter.js","templates/TemplateItems.js","helpers/mods/ModsSetter.js","helpers/Combinator.js","helpers/AccuracyHelper.js","helpers/LegsId.js","helpers/LegendaryCalcBuilder.js","templates/calc/ParameterCalculator.js","templates/calc/view/PickedGroups.js","templates/calc/view/CalcModGroups.js","templates/calc/view/CalcModOptionsView.js","templates/calc/view/CalcCards.js","templates/calc/view/CalcMain.js","templates/calc/view/CalcConsumables.js","templates/calc/view/CalcLegendary.js","templates/WeaponEmblem.js","templates/calc/view/LegendaryCalcRowView.js","templates/calc/view/ModsCalcRowView.js","templates/calc/ParametersApplier.js","templates/ModalCalculateWeapon.js","templates/calc/CalcEntities.js","templates/calc/view/CalcModGroupsAll.js","templates/calc/view/CalcWGroupsDropdown.js","templates/calc/view/CalcCurrentItem.js","templates/calc/view/CalcResultItem.js","templates/calc/view/CalcResultItems.js","templates/ModalCalculateWeapons.js","templates/TestedCarousel.js","templates/ModalTestedWeapon.js","templates/WeaponTemplates.js","templates/calc/view/EmblemCalcRowView.js","viewComponents/checkbox/UCheckbox.js","viewComponents/dropdown/BaseDropdown.js","viewComponents/popover/StaticPopoverRenderer.js","resources/boostStuff/bobbleHeads|sync|/.webp","resources/boostStuff/drink|sync|/.webp","resources/boostStuff/food|sync|/.webp","resources/boostStuff/magazines|sync|/.webp","resources/boostStuff/others|sync|/.webp","resources/boostStuff/psycho|sync|/.webp","resources/boostStuff/serums|sync|/.webp","resources/forReadme/Tests|sync|/.json$","resources/forReadme/Tests|sync|/.webp$","resources/perks|sync|/.webp","resources/weaponTemplates|sync|/.json$","resources/weapon_icons|sync|/.webp$"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport { WarningPopoverBadge } from './helpers/WarningPopover';\r\nimport AdditionalDamage from \"./main/AdditionalDamage\";\r\nimport MainCardsDisplay from \"./main/MainCardsDisplay\";\r\nimport ToastSpecs from \"./main/ToastSpecs\";\r\nimport CreaturesView from \"./creature/CreaturesView\";\r\nimport WeaponFactory from './damage/weapon/WeaponFactory';\r\nimport { calcDamage, graphDamage } from \"./helpers/Calc\";\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { defaultExtraDamage } from './entities/ExtraDamageOptions';\r\nimport { defaultCreatures, buildCreatureNames } from './entities/ECreatures';\r\nimport { defaultBoosts } from './entities/EBoosts';\r\nimport { defaultPlayerStats } from './entities/EPlayerStats';\r\nimport { defaultPlayer } from './entities/EPlayer';\r\nimport { defaultAdds } from './entities/EAddDamages';\r\nimport { defaultWeaponSpecs } from './entities/EWeaponSpecs';\r\nimport WeaponSpecs from './main/WeaponSpecs';\r\nimport DamageBoosts from './main/DamageBoosts';\r\nimport Snapshots from './main/Snapshots';\r\nimport BoostStuff from './main/BoostStuff';\r\nimport WeaponTemplates from './templates/WeaponTemplates';\r\nimport ConsumablesBuilder from './boostStuff/ConsumablesBuilder';\r\nimport RaceView from './race/view/RaceView';\r\nimport PerkCardView from './perkCard/view/PerkCardView';\r\nimport ConsumablesView from './consumables/view/ConsumablesView';\r\nimport LoadingLine from './main/LoadingLine';\r\nimport Global from './helpers/Global';\r\n\r\n\r\nconst defPlayerStats = defaultPlayerStats();\r\n\r\nconst defPlayer = defaultPlayer();\r\n\r\nfunction getDefaultGraphData() {\r\n    let xValues = [];\r\n    let yValues = [];\r\n    const maxRes = 1000;\r\n    const coef = maxRes / Global.points;\r\n    for (let i = 0; i <= Global.points; i++) {\r\n        xValues.push(coef * i);\r\n        yValues.push(0);\r\n    }\r\n    return {\r\n        xValues: xValues,\r\n        yValues: yValues,\r\n    }\r\n}\r\n\r\nexport default function Main() {\r\n\r\n    const [key, setKey] = useState('Main');\r\n\r\n    const [creatureChartNumber, setCreatureChartNumber] = useState(1);\r\n\r\n    const [loadedScreen, setLoadedScreen] = useState(false);\r\n\r\n    const [wSpec, setWSpec] = useState(defaultWeaponSpecs());\r\n\r\n    const [showStat, setShowStat] = useState(false);\r\n\r\n    const [graphValues, setGraphValues] = useState(getDefaultGraphData());\r\n\r\n    const [creatures, setCreatures] = useState(defaultCreatures());\r\n\r\n    const [boostDamage, setBoostDamage] = useState(defaultBoosts());\r\n\r\n    const [resultDamage, setResultDamage] = useState({});\r\n\r\n    const [extraDamage, setExtraDamage] = useState(defaultExtraDamage());\r\n\r\n    const [additionalDamages, setAdditionalDamages] = useState(defaultAdds());\r\n\r\n    const [stuffBoost, setStuffBoost] = useState(ConsumablesBuilder.getEmptyConsumableBoosts());\r\n\r\n    const [player, setPlayer] = useState(defPlayer);\r\n\r\n    const [playerStats, setPlayerStats] = useState(defPlayerStats);\r\n\r\n    const [magazines, setMagazines] = useState(ConsumablesBuilder.getMagazines());\r\n\r\n    const [bobbleHeads, setBobbleHeads] = useState(ConsumablesBuilder.getBobbleHeads());\r\n\r\n    const [food, setFood] = useState(ConsumablesBuilder.getFood());\r\n\r\n    const [drink, setDrink] = useState(ConsumablesBuilder.getDrink());\r\n\r\n    const [psycho, setPsycho] = useState(ConsumablesBuilder.getPsycho());\r\n\r\n    const [serum, setSerum] = useState(ConsumablesBuilder.getSerum());\r\n\r\n    const [others, setOthers] = useState(ConsumablesBuilder.getOthers());\r\n\r\n    const [foodPref, setFoodPref] = useState({carnivore: false, herbivore: false});\r\n\r\n    const [consumableTouched, setConsumableTouched] = useState([]);\r\n\r\n    // Refs\r\n    const creatureNamesRef = useRef(buildCreatureNames(creatures));\r\n\r\n    const applySnapshotRef = useRef(null);\r\n\r\n    const wSpecRef = useRef(null);\r\n\r\n    const resultDamageRef = useRef(null);\r\n\r\n    const playerRef = useRef(null);\r\n\r\n    const playerStatsRef = useRef(null);\r\n\r\n    const stuffBoostRef = useRef(null);\r\n\r\n    const boostDamageRef = useRef(null);\r\n\r\n    const extraDamageRef = useRef(null);\r\n\r\n    const additionalDamagesRef = useRef(null);\r\n\r\n    const creaturesRef = useRef(null);\r\n\r\n    const showStatRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n            const weaponFactory = new WeaponFactory(wSpec, boostDamage, extraDamage, additionalDamages, stuffBoost, playerStats);\r\n            setGraphValues(graphDamage(creatures[\"creature\" + creatureChartNumber], weaponFactory));\r\n            setResultDamage(calcDamage(weaponFactory, creatures));\r\n            setLoadedScreen(true);\r\n    }, [boostDamage, wSpec, extraDamage, creatures, additionalDamages, stuffBoost, consumableTouched, player, playerStats]);\r\n\r\n    useEffect(() => {\r\n        const weaponFactory = new WeaponFactory(wSpec, boostDamage, extraDamage, additionalDamages, stuffBoost, playerStats);\r\n        setGraphValues(graphDamage(creatures[\"creature\" + creatureChartNumber], weaponFactory));\r\n    }, [creatures, creatureChartNumber]);\r\n\r\n    const applySnapshot = (cBoostDamage, cWSpec, cExtraDamage, cAdditionalDamages, cCreatures, cPlayer, cPlayerStats, cStuff) => {\r\n        setPlayer(cPlayer);\r\n        setPlayerStats(cPlayerStats);\r\n        setBoostDamage(cBoostDamage);\r\n        setWSpec(cWSpec);\r\n        setExtraDamage(cExtraDamage);\r\n        setAdditionalDamages(cAdditionalDamages);\r\n        const [foodPref, allStuffBoosts, consumables] = ConsumablesBuilder.buildFromList(cStuff, cPlayer);\r\n        ConsumablesBuilder.setConsumableItems(consumables, setMagazines, setBobbleHeads, setFood, setDrink, setPsycho, setSerum, setOthers);\r\n        setFoodPref(foodPref);\r\n        setStuffBoost(allStuffBoosts);\r\n        setCreatures({...cCreatures});\r\n    }\r\n    applySnapshotRef.current = applySnapshot;\r\n    wSpecRef.current = wSpec;\r\n    resultDamageRef.current = resultDamage;\r\n    playerRef.current = player;\r\n    playerStatsRef.current = playerStats;\r\n    stuffBoostRef.current = stuffBoost;\r\n    boostDamageRef.current = boostDamage;\r\n    extraDamageRef.current = extraDamage;\r\n    additionalDamagesRef.current = additionalDamages;\r\n    creaturesRef.current = creatures;\r\n    creatureNamesRef.current = buildCreatureNames(creatures);\r\n    showStatRef.current = showStat;\r\n    if (!loadedScreen) {\r\n        return (<LoadingLine text=\"Please Wait...\"/>);\r\n    }\r\n    const b = (\r\n        <>\r\n            <MainCardsDisplay creatureNamesRef={creatureNamesRef} wSpecRef={wSpecRef} graphValues={graphValues} resultDamage={resultDamage} creatures={creatures} boostDamageRef={boostDamageRef} setBoostDamage={setBoostDamage} setCreatures={setCreatures} creatureChartNumber={creatureChartNumber} setCreatureChartNumber={setCreatureChartNumber} extraDamage={extraDamage} setExtraDamage={setExtraDamage}></MainCardsDisplay>\r\n            <ToastSpecs creatures={creatures} legendary={wSpec.legendary} iconName={wSpec.iconName} weaponName={wSpec.defaultName} graphValues={graphValues} resultDamage={resultDamage} showStat={showStat} setShowStat={setShowStat} creatureChartNumber={creatureChartNumber} setCreatureChartNumber={setCreatureChartNumber} extraDamage={extraDamage} setExtraDamage={setExtraDamage} boostDamageRef={boostDamageRef} setBoostDamage={setBoostDamage}></ToastSpecs>\r\n            <Tabs\r\n                id=\"tab\"\r\n                activeKey={key}\r\n                onSelect={(k) => setKey(k)}\r\n                className=\"mt-1 mb-3 ms-1 me-1\">\r\n                <Tab eventKey=\"Main\" title={<span className=\"tab-text\">Main</span>}>\r\n                    <Accordion className=\"accordion\">\r\n                        <WeaponSpecs wSpec={wSpec} setWSpec={setWSpec} showStatRef={showStatRef} setShowStat={setShowStat} health={player.health.value}></WeaponSpecs>\r\n                        <DamageBoosts player={player} setPlayer={setPlayer} extraDamage={extraDamage} boostDamage={boostDamage} setBoostDamage={setBoostDamage} showStatRef={showStatRef} setShowStat={setShowStat}></DamageBoosts>\r\n                        <AdditionalDamage additionalDamages={additionalDamages} setAdditionalDamages={setAdditionalDamages} showStatRef={showStatRef} setShowStat={setShowStat}></AdditionalDamage>\r\n                        <CreaturesView creatureNamesRef={creatureNamesRef} creatures={creatures} setCreatures={setCreatures} resultDamage={resultDamage} extraDamage={extraDamage} setExtraDamage={setExtraDamage} boostDamageRef={boostDamageRef} setBoostDamage={setBoostDamage}></CreaturesView>\r\n                        <RaceView />\r\n                        <ConsumablesView />\r\n                        <PerkCardView />\r\n                    </Accordion>\r\n                </Tab>\r\n                <Tab eventKey=\"Templates\" title={<span className=\"tab-text\">Weapons</span>}>\r\n                    <WeaponTemplates creatureNamesRef={creatureNamesRef} setWSpec={setWSpec} setBoostDamage={setBoostDamage} setPlayer={setPlayer} setExtraDamage={setExtraDamage} setFoodPref={setFoodPref} setStuffBoost={setStuffBoost} setAdditionalDamages={setAdditionalDamages} setPlayerStats={setPlayerStats} setMagazines={setMagazines} setBobbleHeads={setBobbleHeads} setFood={setFood} setDrink={setDrink} setPsycho={setPsycho} setSerum={setSerum} setOthers={setOthers}></WeaponTemplates>\r\n                </Tab>\r\n                <Tab eventKey=\"Boosts\" title={<span className=\"tab-text\">Boosts</span>}>\r\n                    <BoostStuff foodPref={foodPref} setFoodPref={setFoodPref} magazines={magazines} setMagazines={setMagazines} bobbleHeads={bobbleHeads} setBobbleHeads={setBobbleHeads} food={food} setFood={setFood} drink={drink} setDrink={setDrink} psycho={psycho} setPsycho={setPsycho} serum={serum} setSerum={setSerum} others={others} setOthers={setOthers} player={player} setPlayer={setPlayer} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} showStat={showStat} setShowStat={setShowStat} boostDamage={boostDamage} setBoostDamage={setBoostDamage} playerStats={playerStats} setPlayerStats={setPlayerStats} setConsumableTouched={setConsumableTouched}></BoostStuff>\r\n                </Tab>\r\n                <Tab eventKey=\"Snapshots\" title={<span className=\"tab-text\">Snapshots</span>}>\r\n                     <Snapshots playerRef={playerRef} playerStatsRef={playerStatsRef} stuffBoostRef={stuffBoostRef} boostDamageRef={boostDamageRef} wSpecRef={wSpecRef} extraDamageRef={extraDamageRef} additionalDamagesRef={additionalDamagesRef} creaturesRef={creaturesRef} resultDamageRef={resultDamageRef} applySnapshotRef={applySnapshotRef}></Snapshots>\r\n                </Tab>\r\n            </Tabs>\r\n\r\n            <div className=\"pb-1 ps-2 pe-2 pt-3 mt-1 ms-1 me-1\" style={{backgroundColor: \"#f8f2f2\", borderRadius: \"10px 10px 0px 0px\", outline: '1px solid #bdb499'}}>\r\n                <table>\r\n                    <tr>\r\n                        <td className=\"version-text\">\r\n                            <div><i>{Global.version1}</i></div>\r\n                            <div><i>{Global.version2}</i></div>\r\n                        </td>\r\n                        <td>\r\n                            <WarningPopoverBadge className=\"ms-3\" sign=\"?\" message={Global.versionMessage} header={'Game Version'} placement={'top'} />\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <div className=\"w-100 mt-1 d-flex justify-content-end\">\r\n                    <div className=\"version-text-2\">{Global.webVersion}</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n    return b;\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { Slider } from 'antd';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction buildPopover(text) {\r\n    return (\r\n        <Popover className=\"popover-adjustable\">\r\n            <Popover.Header as=\"h3\"><strong>Why?</strong></Popover.Header>\r\n            <Popover.Body>\r\n                {text}\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nfunction qa(text) {\r\n    if (text === '' || text === null) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={buildPopover(text)}>\r\n            <Button variant=\"danger\">?</Button>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nfunction addIconName(name) {\r\n    switch(name) {\r\n        case \"Ballistic BDB\":\r\n            return \"💥 BDB\";\r\n        case \"Energy BDB\":\r\n            return \"⚡ BDB\";\r\n        case \"Fire BDB\":\r\n            return \"🔥 BDB\";\r\n        case \"Poison BDB\":\r\n            return \"☣️ BDB\";\r\n        case \"Cold BDB\":\r\n            return \"❄️ BDB\";\r\n        case \"Rad BDB\":\r\n            return \"☢️ BDB\";\r\n        case \"Damage To Creature\":\r\n            return \"🐵 Damage\";\r\n        case \"Sneak\":\r\n            return \"🐍 Sneak\";\r\n        case \"Crit\":\r\n            return \"☠️ Crit\";\r\n        case \"Strength\":\r\n            return \"💪 Strength\";\r\n        case \"Swift\":\r\n            return \"💨 Swift\";\r\n        case \"Health\":\r\n            return \"❤️ Health\";\r\n        default:\r\n            return name;\r\n    }\r\n}\r\n\r\nfunction ADRow({additionalDamage, updateAdditionalDamages, marks, text=''}) {\r\n    const [redraw, setRedraw] = useState(false);\r\n    const width = (text === '' || text === null) ? '8.9rem' : '7rem';\r\n    function slideChanged(e) {\r\n        setRedraw(!redraw);\r\n        additionalDamage.value = e;\r\n    }\r\n\r\n    function onAfterChange(e) {\r\n        updateAdditionalDamages();\r\n    }\r\n\r\n    function onChange(e) {\r\n        additionalDamage.is_used = e.target.checked;\r\n        updateAdditionalDamages();\r\n    }\r\n\r\n    let isUsed = false;\r\n    let disabled = false;\r\n    if (typeof additionalDamage.is_used === \"undefined\") {\r\n        isUsed = true;\r\n        disabled = true;\r\n    } else {\r\n        isUsed = additionalDamage.is_used;\r\n    }\r\n    return (\r\n        <Row>\r\n            <Card className=\"mb-2 pt-2 pb-2 ps-3 pe-3\">\r\n                <Col>\r\n                    <InputGroup className=\"mb-1\">\r\n                        <InputGroup.Text style={{ width: '2.5rem' }} >\r\n                            <UCheckbox onChange={onChange} checked={isUsed} disabled={disabled} checkBgColor={'#00b6ff'}></UCheckbox>\r\n                        </InputGroup.Text>\r\n                        <InputGroup.Text style={{ width: width }}>\r\n                            <strong>{addIconName(additionalDamage.name)}</strong>\r\n                        </InputGroup.Text>\r\n                        {qa(text)}\r\n                        <InputGroup.Text style={{width: '4.6rem'}}>\r\n                            <div className=\"badge bg-info\" style={{width: '3rem'}}>{additionalDamage.value}</div>\r\n                        </InputGroup.Text>\r\n                    </InputGroup>\r\n                    <Slider onChange={slideChanged} onAfterChange={onAfterChange} tooltip={{ open: false }} marks={marks.marks} min={marks.min} max={marks.max} step={marks.step} value={additionalDamage.value} />\r\n                </Col>\r\n            </Card>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ADRow;","import magazines from '../resources/boostStuff/magazines/magazines.json';\r\nimport bobbleHeads from '../resources/boostStuff/bobbleHeads/bobbleHeads.json';\r\nimport food from '../resources/boostStuff/food/food.json';\r\nimport drink from '../resources/boostStuff/drink/drink.json';\r\nimport psycho from '../resources/boostStuff/psycho/psycho.json';\r\nimport serum from '../resources/boostStuff/serums/serum.json';\r\nimport others from '../resources/boostStuff/others/others.json';\r\nimport { prepareItems, loadBoosts } from '../entities/EStuffBoost';\r\nimport { getMagazine, getBobbleHead, getFood, getDrink, getPsycho, getSerum, getOther } from '../helpers/BoostStuffProvider';\r\n\r\n\r\nexport default class ConsumablesBuilder {\r\n\r\n    static getImagePathById(cId) {\r\n        const type = cId.substring(cId.lastIndexOf(\"_\") + 1);\r\n        let jsonItems = null;\r\n        let getter = null;\r\n        switch(type) {\r\n            case 'magazine':\r\n                jsonItems = magazines;\r\n                getter = getMagazine;\r\n                break;\r\n            case 'bobble':\r\n                jsonItems = bobbleHeads;\r\n                getter = getBobbleHead;\r\n                break;\r\n            case 'food':\r\n                jsonItems = food;\r\n                getter = getFood;\r\n                break;\r\n            case 'drink':\r\n                jsonItems = drink;\r\n                getter = getDrink;\r\n                break;\r\n            case 'psycho':\r\n                jsonItems = psycho;\r\n                getter = getPsycho;\r\n                break;\r\n            case 'serum':\r\n                jsonItems = serum;\r\n                getter = getSerum;\r\n                break;\r\n             case 'other':\r\n                jsonItems = others\r\n                getter = getOther;\r\n                break;\r\n             default:\r\n                return \"\";\r\n        }\r\n        for (let i = 0; i < jsonItems.length; i++) {\r\n            const item = jsonItems[i];\r\n            if (item.id === cId) {\r\n                return getter(item.imName);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    static getMagazineItems(wType, wName, tags, crit, team, scoped, creatureTags) {\r\n        const result = [];\r\n        const combination = [];\r\n\r\n        // Creatures\r\n        if (creatureTags.includes(\"mirelurk\")) {\r\n            combination.push(\"attack_of_the_fishmen_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"ghoul\")) {\r\n            combination.push(\"curse_of_the_burned_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"supermutant\")) {\r\n            combination.push(\"rise_of_the_mutants_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"animal\")) {\r\n            combination.push(\"home_in_the_hills_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"scorched\")) {\r\n            combination.push(\"demon_slaves_demon_sands_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"robot\")) {\r\n            combination.push(\"the_future_of_hunting_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"yaoguai\")) {\r\n            combination.push(\"bear_proofing_your_campsite_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"liberator\")) {\r\n            combination.push(\"guide_to_hunting_commies_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"wendigo\")) {\r\n            combination.push(\"wendigo_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"mothman\")) {\r\n            combination.push(\"mothman_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"graftonmonster\")) {\r\n            combination.push(\"grafton_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"snallygaster\")) {\r\n            combination.push(\"snallygaster_magazine\");\r\n        }\r\n        if (creatureTags.includes(\"flatwoodsmonster\")) {\r\n            combination.push(\"flatwoods_alien_magazine\");\r\n        }\r\n\r\n        if (wName === \"Alien Blaster\") {\r\n            combination.push(\"invasion_of_the_zetans_magazine\");\r\n        } else if (wName === \"Cryolator\") {\r\n            combination.push(\"when_apes_go_bananas_magazine\");\r\n        }\r\n\r\n        // TODO: Does unarmed really work here?\r\n        if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n            combination.push(\"blood_on_the_harp_magazine\");\r\n            if (crit) {\r\n                combination.push(\"corsair_queen_magazine\");\r\n            }\r\n        } else {\r\n            if (scoped) {\r\n                combination.push(\"the_starlet_sniper_magazine\");\r\n            } else {\r\n                combination.push(\"take_aim_army_style_magazine\");\r\n            }\r\n        }\r\n        if (tags.includes(\"Knives\") || wType === \"Unarmed\") {\r\n            combination.push(\"camouflage_special_magazine\");\r\n        }\r\n        if (team) {\r\n            combination.push(\"nuke_the_man_magazine\");\r\n        }\r\n        if (tags.includes(\"Plasma\")) {\r\n            combination.push(\"tomorrow_technology_magazine\");\r\n        }\r\n        if (wType === \"Heavy\") {\r\n            combination.push(\"giant_super_weapons_magazine\");\r\n        }\r\n        if (crit) {\r\n            if (tags.includes(\"Laser\")) {\r\n                combination.push(\"acceptable_overkill_magazine\");\r\n            }\r\n            if (tags.includes(\"Ballistic\") && wType !== \"Heavy\" && wType !== \"Bow\") {\r\n                combination.push(\"little_guns_for_little_ladies_magazine\");\r\n            }\r\n            if (tags.includes(\"Plasma\")) {\r\n                combination.push(\"plasma_the_weapon_of_tomorrow_magazine\");\r\n            }\r\n            if (tags.includes(\"Energy\")) {\r\n                combination.push(\"us_army_goes_to_space_magazine\");\r\n            }\r\n            if (wType === \"Heavy\") {\r\n                combination.push(\"future_of_warfare_magazine\");\r\n            }\r\n            combination.push(\"rockobot_takes_the_nation_by_storm_magazine\");\r\n        }\r\n        result.push(combination);\r\n        return result;\r\n    }\r\n\r\n    static getOtherItems(hasPhysicalDamage) {\r\n        const result = [];\r\n        const combination = [];\r\n        if (hasPhysicalDamage) {\r\n            combination.push(\"syringer_other\");\r\n        }\r\n        if (combination.length > 0) {\r\n            result.push(combination);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getBobbleHeadItems(wType, tags) {\r\n        const result = [];\r\n        const combination = [];\r\n\r\n        if (wType === \"Heavy\") {\r\n            combination.push(\"big_guns_bobble\");\r\n        } else if (wType === \"Unarmed\") {\r\n            combination.push(\"unarmed_bobble\");\r\n            combination.push(\"strength_bobble\");\r\n        } else if (wType === \"Melee\") { // Does Unarmed work here?\r\n            combination.push(\"melee_bobble\");\r\n            combination.push(\"strength_bobble\");\r\n        }\r\n        if (tags.includes(\"Energy\")) {\r\n            combination.push(\"energy_bobble\");\r\n        }\r\n        if (tags.includes(\"Explosive\")) {\r\n            combination.push(\"explosive_bobble\");\r\n        }\r\n        if (tags.includes(\"FusionCore\")) {\r\n            combination.push(\"repair_bobble\");\r\n        }\r\n        if (tags.includes(\"Ballistic\") && wType !== \"Heavy\" && wType !== \"Bow\") {\r\n            combination.push(\"small_guns_bobble\");\r\n        }\r\n        if (combination.length > 0) {\r\n            result.push(combination);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getDrinkItems(wType, tags, crit) {\r\n        const result = [];\r\n        const combination = [];\r\n        if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n            combination.push(\"whiskey_drink\");\r\n            if (wType === \"Melee\") {\r\n                combination.push(\"gulpershine_vintage_drink\");\r\n            } else {\r\n                combination.push(\"sugar_free_nukashine_drink\"); // Possibly gulpershine will also work as unarmed is a melee\r\n            }\r\n        }\r\n        if (crit) {\r\n            combination.push(\"sweetmutfruit_drink\");\r\n        }\r\n        if (tags.includes(\"Ballistic\")) {\r\n            combination.push(\"ballistic_bock_drink\");\r\n        }\r\n        if (tags.includes(\"Energy\")) {\r\n            combination.push(\"high_voltage_hefe_drink\");\r\n        }\r\n        if (combination.length > 0) {\r\n            result.push(combination);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getFoodItems(wType, crit) {\r\n        const result = [];\r\n        const combination = [];\r\n        if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n            combination.push(\"tasty_mutant_hound_stew_food\");\r\n            combination.push(\"deathclaw_wellington_food\");\r\n            combination.push(\"spiked_venison_tato_stew_food\");\r\n        } else if (crit) {\r\n            combination.push(\"blight_soup_food\");\r\n        } else {\r\n            combination.push(\"spiked_venison_tato_stew_food\");\r\n        }\r\n        if (combination.length > 0) {\r\n            result.push(combination);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getSerumItems(wType, crit, lowHP, team, food) {\r\n        const result = [];\r\n        const combination1 = [];\r\n        const combination2 = [];\r\n        result.push(combination1);\r\n        ConsumablesBuilder.getSerumItemsBase(wType, false, lowHP, team, combination1);\r\n        if ((wType === \"Melee\" || wType === \"Unarmed\") && food) {\r\n            result.push(combination2);\r\n            ConsumablesBuilder.getSerumItemsBase(wType, false, lowHP, team, combination2);\r\n            ConsumablesBuilder.getSerumItemsAdditional(true, combination1);\r\n            ConsumablesBuilder.getSerumItemsAdditional(false, combination2);\r\n        }\r\n        if (crit && food) {\r\n            const combination3 = [];\r\n            const combination4 = [];\r\n            const combination5 = [];\r\n            result.push(combination3);\r\n            ConsumablesBuilder.getSerumItemsBase(wType, true, lowHP, team, combination3);\r\n            ConsumablesBuilder.getSerumItemsAdditional(false, combination3);\r\n            if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n                result.push(combination4);\r\n                ConsumablesBuilder.getSerumItemsBase(wType, true, lowHP, team, combination4);\r\n                ConsumablesBuilder.getSerumItemsAdditional(true, combination4);\r\n\r\n                // no eagle\r\n                result.push(combination5);\r\n                ConsumablesBuilder.getSerumItemsBase(wType, true, lowHP, team, combination5, true);\r\n                ConsumablesBuilder.getSerumItemsAdditional(true, combination5);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getSerumItemsBase(wType, crit, lowHP, team, combination, noEagle=false) {\r\n        if (lowHP) {\r\n            combination.push(\"adrenal_reaction_serum\");\r\n        }\r\n        if (wType === \"Melee\") {\r\n            combination.push(\"twisted_muscles_serum\");\r\n            combination.push(\"empath_serum\");\r\n        }\r\n        if (wType === \"Unarmed\") {\r\n            combination.push(\"twisted_muscles_serum\");\r\n            combination.push(\"talons_serum\");\r\n            combination.push(\"empath_serum\");\r\n        }\r\n        if (wType !== \"Melee\" && wType !== \"Unarmed\") {\r\n            combination.push(\"speed_demon_serum\");\r\n        }\r\n\r\n        // For the calculator it does not matter to have this mutation for crit, but technically it's important for (Luck)\r\n        if (team && (wType === \"Melee\" || wType === \"Unarmed\" || crit)) {\r\n            combination.push(\"herd_mentality_serum\");\r\n        }\r\n        if (crit && !noEagle) {\r\n            combination.push(\"eagle_eyes_serum\");\r\n        }\r\n    }\r\n\r\n    static getSerumItemsAdditional(isCarnivore, combination) {\r\n        if (isCarnivore) {\r\n            combination.push(\"carnivore_serum\");\r\n        } else {\r\n            combination.push(\"herbivore_serum\");\r\n        }\r\n    }\r\n\r\n    // Nuclear Don's blend is not included (As it is very rare and surpasses any others anyway).\r\n    // Super Chem MK1 in not included (Fury is used instead as it gives the same effect with Psychobuff)\r\n    static getChemicalItems(wType, crit, sneak) {\r\n        const result = [];\r\n        const combination = [];\r\n        result.push(combination);\r\n        combination.push(\"psychobuff_psycho\");\r\n        if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n            combination.push(\"fury_psycho\");\r\n        }\r\n        if (crit) {\r\n            combination.push(\"overdrive_psycho\");\r\n        }\r\n        if (sneak) {\r\n            combination.push(\"calmex_psycho\");\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static prepare(consumableObjs, consumableNames=null) {\r\n        prepareItems(consumableObjs[\"Magazines\"], consumableNames);\r\n        prepareItems(consumableObjs[\"BobbleHeads\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Food\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Drink\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Psycho\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Serum\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Others\"], consumableNames);\r\n    }\r\n\r\n    static getEmptyConsumableBoosts() {\r\n        return {\r\n            creature: new Map(),\r\n            weapon: new Map(),\r\n        };\r\n    }\r\n\r\n    static getFood() {\r\n        return JSON.parse(JSON.stringify(food));\r\n    }\r\n\r\n    static getDrink() {\r\n        return JSON.parse(JSON.stringify(drink));\r\n    }\r\n\r\n    static getPsycho() {\r\n        return JSON.parse(JSON.stringify(psycho));\r\n    }\r\n\r\n    static getSerum() {\r\n        return JSON.parse(JSON.stringify(serum));\r\n    }\r\n\r\n    static getOthers() {\r\n        return JSON.parse(JSON.stringify(others));\r\n    }\r\n\r\n    static getMagazines() {\r\n        return JSON.parse(JSON.stringify(magazines));\r\n    }\r\n\r\n    static getBobbleHeads() {\r\n        return JSON.parse(JSON.stringify(bobbleHeads));\r\n    }\r\n\r\n    static buildFromList(consumablesList, player) {\r\n        const consumablesSet = new Set(consumablesList);\r\n        const foodPref = {carnivore: consumablesSet.has(\"carnivore_serum\"), herbivore: consumablesSet.has(\"herbivore_serum\")};\r\n        const consumables = {};\r\n        consumables[\"Magazines\"] = ConsumablesBuilder.getMagazines();\r\n        consumables[\"BobbleHeads\"] = ConsumablesBuilder.getBobbleHeads();\r\n        consumables[\"Food\"] = ConsumablesBuilder.getFood();\r\n        consumables[\"Drink\"] = ConsumablesBuilder.getDrink();\r\n        consumables[\"Psycho\"] = ConsumablesBuilder.getPsycho();\r\n        consumables[\"Serum\"] = ConsumablesBuilder.getSerum();\r\n        consumables[\"Others\"] = ConsumablesBuilder.getOthers();\r\n        ConsumablesBuilder.prepare(consumables, consumablesSet);\r\n        const consumableBoosts = loadBoosts(consumables[\"Magazines\"], consumables[\"BobbleHeads\"],consumables[\"Food\"],\r\n        consumables[\"Drink\"], consumables[\"Psycho\"], consumables[\"Serum\"], consumables[\"Others\"], foodPref, player);\r\n        return [foodPref, consumableBoosts, consumables];\r\n    }\r\n\r\n    static setConsumableItems(consumables, setMagazines, setBobbleHeads, setFood, setDrink, setPsycho, setSerum, setOthers) {\r\n        setMagazines(consumables[\"Magazines\"]);\r\n        setBobbleHeads(consumables[\"BobbleHeads\"]);\r\n        setFood(consumables[\"Food\"]);\r\n        setDrink(consumables[\"Drink\"]);\r\n        setPsycho(consumables[\"Psycho\"]);\r\n        setSerum(consumables[\"Serum\"]);\r\n        setOthers(consumables[\"Others\"]);\r\n    }\r\n}","const objT = \"ObjectType\";\r\nconst chT = \"ChemType\";\r\nconst dT = \"DrinkType\";\r\nconst ingT = \"IngredientType\";\r\nconst meT = \"MealType\";\r\nconst boT = \"BobbleheadType\";\r\nconst plT = \"PlantType\";\r\nconst mT = \"MagazineType\";\r\nconst fT = \"FoodType\";\r\nconst itT = \"ItemType\";\r\nconst alT = \"AlcoholType\";\r\n\r\nconst dupl = \"DUPLICATE000\";\r\n\r\nconst cTypes = {\r\n    \"Chemical\": [chT, true], // true / false - prefix / suffix\r\n    \"Drink\": [dT, true],\r\n    \"Bobblehead\": [boT, true],\r\n    \"Magazine\": [mT, true],\r\n    \"Food\": [fT, true],\r\n    \"Item\": [itT, true],\r\n    \"Alcohol\": [alT, false],\r\n}\r\n\r\nconst tagPrefixes = [objT, ingT, meT, chT, dT, boT, plT, mT, fT, itT];\r\nconst tagEndings = [dupl, alT];\r\n\r\n\r\nexport default class ConsumableTools {\r\n\r\n    static getTagName(tag) {\r\n        if (typeof tag === typeof '') {\r\n            return tag;\r\n        }\r\n        if (tag.full && tag.full.length > 0) {\r\n            return tag.full;\r\n        }\r\n        return tag.name;\r\n    }\r\n\r\n    static getItemType(item) {\r\n        for (let i = 0; i < item.tags.length; i++) {\r\n            const tag = ConsumableTools.getTagName(item.tags[i]);\r\n            if (tag.startsWith(objT)) {\r\n                return tag.slice(objT.length, tag.length);\r\n            }\r\n        }\r\n        for (let i = 0; i < item.tags.length; i++) {\r\n            const tag = ConsumableTools.getTagName(item.tags[i]);\r\n            for (const name in cTypes) {\r\n                const data = cTypes[name];\r\n                const prefix = data[0];\r\n                const isPrefix = data[1];\r\n                if (isPrefix) {\r\n                    if (tag.startsWith(prefix)) {\r\n                        return name;\r\n                    }\r\n                } else {\r\n                    if (tag.endsWith(prefix)) {\r\n                        return name;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    static removeTagPrefix(tagName) {\r\n        for (let i = 0; i < tagPrefixes.length; i++) {\r\n            const tagPrefix = tagPrefixes[i];\r\n            if (tagName.startsWith(tagPrefix)) {\r\n                return tagName.slice(tagPrefix.length, tagName.length);\r\n            }\r\n        }\r\n        return tagName;\r\n    }\r\n\r\n    static removeTagEndings(tagName) {\r\n        for (let i = 0; i < tagEndings.length; i++) {\r\n            const tagEnding = tagEndings[i];\r\n            if (tagName.endsWith(tagEnding)) {\r\n                return tagName.slice(0, tagName.length - tagEnding.length);\r\n            }\r\n        }\r\n        return tagName;\r\n    }\r\n\r\n    static removePrefixSuffix(tagName) {\r\n        return ConsumableTools.removeTagEndings(ConsumableTools.removeTagPrefix(tagName));\r\n    }\r\n\r\n    static getItemColor(type) {\r\n        switch(type) {\r\n            case 'Bobblehead':\r\n                return '#b6d9ff';\r\n            case 'Chem':\r\n                return '#f5cfff';\r\n            case 'Magazine':\r\n                return '#ffdb95';\r\n            case 'Serum':\r\n                return '#b4ffbf';\r\n            case 'BloodPack':\r\n                return '#ff3779';\r\n            case 'Drink':\r\n                return '#daf2ff';\r\n            case 'Food':\r\n                return '#ffebce';\r\n            default:\r\n                return '#f4f4f4';\r\n        }\r\n    }\r\n\r\n    static getItemColorDark(type) {\r\n        switch(type) {\r\n            case 'Bobblehead':\r\n                return '#7cbbff';\r\n            case 'Chem':\r\n                return '#be9ac8';\r\n            case 'Magazine':\r\n                return '#c4ab5f';\r\n            case 'Serum':\r\n                return '#6ab576';\r\n            case 'BloodPack':\r\n                return '#b58192';\r\n            case 'Drink':\r\n                return '#85a9bd';\r\n            case 'Food':\r\n                return '#c4ad8b';\r\n            default:\r\n                return '#9d9d9d';\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import Button from 'react-bootstrap/Button';\r\nimport ConsumableTools from '../ConsumableTools';\r\nimport { leftRight } from '../../helpers/RowBuilder';\r\n\r\n\r\nfunction getDurationValue(effect) {\r\n    let duration = 0;\r\n    if (!effect.glob_duration || effect.glob_duration === '') {\r\n        if (effect.duration) {\r\n            duration = effect.duration;\r\n        }\r\n    } else {\r\n        duration = effect.glob_duration.value;\r\n    }\r\n    return duration;\r\n}\r\n\r\nfunction getEffectValues(effects, tag) {\r\n    const resultValues = [];\r\n    const resultNames = new Set();\r\n    const durations = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        if (tag === effect.tag) {\r\n            resultNames.add(effect.m_effect.full);\r\n            durations.push(getDurationValue(effect));\r\n            if (effect.curve_max_value) {\r\n                resultValues.push(effect.curve_max_value);\r\n            } else if (!effect.glob_magnitude || effect.glob_magnitude === '') {\r\n                resultValues.push(effect.magnitude ? effect.magnitude : 0);\r\n            } else {\r\n                resultValues.push(effect.glob_magnitude.value)\r\n            }\r\n        }\r\n    }\r\n    const valueColor = '#fc5972';\r\n    if (resultNames.size > 1) {\r\n        return getEffectFilterInfo(\"Multiple Effects\", \"\", \"\", valueColor);\r\n    }\r\n    if (resultValues.length === 0 || resultNames.size === 0) {\r\n        return null;\r\n    }\r\n    let resultName = Array.from(resultNames)[0];\r\n    const indSC = resultName.indexOf(\":\")\r\n    if (indSC > -1) {\r\n        resultName = resultName.substring(indSC + 2);\r\n    }\r\n    const max = (+Math.max(...resultValues).toFixed(3)).toString();\r\n    const min = (+Math.min(...resultValues).toFixed(3)).toString();\r\n    const maxDuration = (+Math.max(...durations).toFixed(1)).toString();\r\n    let durationText = \"\";\r\n    if (maxDuration > 0) {\r\n        durationText = \" (\" + maxDuration + \")\"\r\n    }\r\n    if (resultValues.length === 1 || min === max) {\r\n        return getEffectFilterInfo(resultName, durationText, max, valueColor);\r\n    } else if (resultValues.length === 2 && min < 0) {\r\n        return  getEffectFilterInfo(resultName, durationText, min + \" / \" + max, valueColor);\r\n    } else {\r\n        return getEffectFilterInfo(resultName, durationText, \"up to \" + max, valueColor);\r\n    }\r\n}\r\n\r\nfunction getEffectFilterInfo(resultName, durationText, max, valueColor) {\r\n    if (max === 0 || max === \"0\") {\r\n        max = \"\";\r\n    }\r\n    return leftRight(<div style={{wordBreak: \"break-all\"}}>{resultName} {durationText}</div>, <span style={{color: valueColor}}>{max}</span>, 9, 3, \"m-0 p-1\");\r\n}\r\n\r\nexport default function ConsumableButton(props) {\r\n    const typeColor = ConsumableTools.getItemColor(props.type);\r\n    let effectValues = null;\r\n    if (props.effectTag && props.effectTag !== \"None\") {\r\n        effectValues = getEffectValues(props.item.effects, props.effectTag);\r\n    }\r\n    const textBgColor = ConsumableTools.getItemColorDark(props.type);\r\n    const textStyle = (effectValues) ? {borderRadius: '1px', backgroundColor: textBgColor} : {};\r\n    let itemType = props.type;\r\n    if (!itemType || itemType === \"Chemical\") {\r\n        itemType = \"Other\";\r\n    }\r\n    return (\r\n        <div>\r\n            <Button id={props.item['id']} className=\"lite-shadow\" variant=\"blue-white-border\" style={{width: '100%', margin: '0.1rem', paddingTop: '0.2rem', paddingBottom: '0.1rem', padding: \"0.3rem\"}} onClick={props.onClick}>\r\n                <div className=\"d-flex justify-content-start p-1\" style={{fontSize: '0.9rem', backgroundColor: '#f4f4f4', borderRadius: '0.1rem'}}>\r\n                    <b>{props.item['full']}</b>\r\n                </div>\r\n                <div className=\"p-0\" style={textStyle}>\r\n                    <b className=\"p-0 bg-text-shadow\">{effectValues}</b>\r\n                </div>\r\n                <div className=\"d-flex pt-2 justify-content-end\">\r\n                    <div className=\"badge bg-lite-shadow2\" style={{backgroundColor: typeColor}}>{itemType}</div>\r\n                </div>\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import consItems from '../../resources/consumables.json';\r\nimport Container from 'react-bootstrap/Container';\r\nimport ConsumableButton from './ConsumableButton';\r\nimport ConsumableTools from '../ConsumableTools';\r\nimport { memo, useState } from 'react';\r\nimport { Pagination, FloatButton } from 'antd';\r\n\r\n\r\nfunction nameComparator(item1, item2) {\r\n    const name1 = item1['full'];\r\n    const name2 = item2['full'];\r\n    return name1.localeCompare(name2)\r\n}\r\n\r\nexport const sortItems = consItems.sort(nameComparator);\r\n\r\nexport function getItem(id) {\r\n    for (let i = 0; i < sortItems.length; i++) {\r\n        const item = sortItems[i];\r\n        if (item.id === id) {\r\n            return item;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nconst types = [\"Chem\", \"Food\", \"Magazine\", \"Serum\", \"Drink\", \"Bobblehead\", \"Stimpak\", \"BloodPack\"];\r\n\r\nconst ConsumableItems = memo(function ConsumableItems(props) {\r\n    console.log(\"Consumable Items\");\r\n    const [pageSize, setPageSize] = useState(20);\r\n    function onItemClick(e) {\r\n        const id = e.currentTarget.id;\r\n        if (!props.currentItem) {\r\n            props.setShowToast(true);\r\n        } else {\r\n            props.setShowToast(!(props.currentItem.id === id && props.showToast));\r\n        }\r\n        props.setCurrentItem(getItem(id));\r\n    }\r\n    const items = [];\r\n    const needTypeFilter = props.filterType !== 'All';\r\n    for (let i = 0; i < sortItems.length; i++) {\r\n        const item = sortItems[i];\r\n        const type = ConsumableTools.getItemType(item);\r\n        if (needTypeFilter) {\r\n            if (props.filterType === \"Other\" && types.includes(type)) {\r\n                continue;\r\n            } else if (props.filterType !== \"Other\" && props.filterType !== type) {\r\n                continue;\r\n            }\r\n        }\r\n        if (props.filterName && props.filterName.length > 0) {\r\n            if (!item.full.toLowerCase().includes(props.filterName.toLowerCase())) {\r\n                continue;\r\n            }\r\n        }\r\n        if (props.filterEffect && props.filterEffect !== 'None') {\r\n            if (!item.effectTags.includes(props.filterEffect)) {\r\n                continue;\r\n            }\r\n        }\r\n        items.push(\r\n            <ConsumableButton key={item.id} index={i} item={item} type={type} effectTag={props.filterEffect} onClick={onItemClick} />\r\n        );\r\n    }\r\n    function onPageChanged(page, pageSize) {\r\n        props.setCurrentPage(page);\r\n        setPageSize(pageSize);\r\n    }\r\n    const paginated = [];\r\n    const start = (props.currentPage - 1) * pageSize;\r\n    const end = start + pageSize;\r\n    for (let i = start; i < end; i++) {\r\n        paginated.push(items[i]);\r\n    }\r\n    return (\r\n        <Container>\r\n            <Pagination className=\"pt-1 pb-3\" align=\"center\" current={props.currentPage} defaultPageSize={pageSize} onChange={onPageChanged} total={items.length} />\r\n            {paginated}\r\n            <Pagination className=\"pt-3\" align=\"center\" current={props.currentPage} defaultPageSize={pageSize} onChange={onPageChanged} total={items.length} />\r\n            <FloatButton.BackTop style={{ right: 60 }} duration={100} visibilityHeight={2000} />\r\n        </Container>\r\n\r\n    );\r\n});\r\n\r\nexport default ConsumableItems;","import { Tag, Divider } from 'antd';\r\nimport ConsumableTools from '../ConsumableTools';\r\n\r\n\r\nfunction getTagView(tag, color) {\r\n    const tagName = ConsumableTools.getTagName(tag);\r\n    return (\r\n        <Tag key={tagName} className=\"mt-1\" bordered={true} color={color}>\r\n            <b><small>{ConsumableTools.removePrefixSuffix(tagName)}</small></b>\r\n        </Tag>\r\n    );\r\n}\r\n\r\nexport default function ConsumableTagsView(props) {\r\n    if (props.tags && props.tags.length > 0) {\r\n        const result = [];\r\n        for (let i = 0; i < props.tags.length; i++) {\r\n            result.push(getTagView(props.tags[i], props.color));\r\n        }\r\n        return (\r\n            <div className={props.className}>\r\n                 <Divider className=\"p-0 m-0\"><small>{props.title}</small></Divider>\r\n                 <div style={{flexWrap: \"wrap\"}} className=\"d-flex justify-content-center\">\r\n                    {result}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport ConsumableTagsView from './ConsumableTagsView';\r\nimport { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { numberToString } from '../../helpers/StringHelpers';\r\nimport { buildConditionStrings, buildTextBlock, idNameRow } from '../../helpers/EffectViewHelper';\r\n\r\n\r\n// TODO: Move styles to EffectViewHelper\r\nconst blue = {\r\n    backgroundColor: '#f7fbff',\r\n    borderColor: '#0072a3',\r\n    color: '#005691',\r\n}\r\n\r\nconst indigo = {\r\n    backgroundColor: '#fdfaff',\r\n    borderColor: '#5a008a',\r\n    color: '#430067',\r\n}\r\n\r\nconst redRounded = {\r\n    backgroundColor: '#fff4f4',\r\n    borderColor: '#890000',\r\n    color: '#c90000',\r\n    borderRadius: '0.5rem',\r\n}\r\n\r\nconst orange = {\r\n    backgroundColor: '#fffaf0',\r\n    borderColor: '#ffa800',\r\n    color: '#b77100',\r\n}\r\n\r\nconst magenta = {\r\n    backgroundColor: '#fff1fa',\r\n    borderColor: '#ca007c',\r\n    color: '#830f57',\r\n}\r\n\r\nexport function mainView(item) {\r\n    return (\r\n        <>\r\n            {idNameRow(item.id, item.name)}\r\n            {getItemDescription(item)}\r\n            {getWeight(item)}\r\n            <ConsumableTagsView className=\"pt-2\" tags={item.tags} color='blue' title=\"Tags\" />\r\n            <ConsumableTagsView className=\"pt-2\" color='magenta' tags={item.effectTags} title=\"Effect Tags\" />\r\n            {getAddictionPercent(item)}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nfunction getArea(effect) {\r\n    if (effect.area === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <div className=\"tag mt-1\">\r\n            <div>\r\n                Area: <span style={{color: 'red'}}>{effect.area}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getTag3(value, style, mt, mb) {\r\n    return (\r\n        <div style={{width: '100%'}} className={\"mt-\" + mt + \" mb-\" + mb + \" d-flex justify-content-center\"}>\r\n            <div className=\"tag mt-1\" style={style}>\r\n                <div style={{textWrap: 'nowrap', overflow: \"hidden\", textOverflow: 'ellipsis'}}>\r\n                    {value}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getAddictionPercent(item) {\r\n    let addictionChance = \"\";\r\n    if (item.addiction_chance > 0) {\r\n        addictionChance = \"Addiction chance: \" + (item.addiction_chance * 100).toFixed(1) + \"%\";\r\n    }\r\n    if (addictionChance === \"\") {\r\n        return (<></>);\r\n    }\r\n    return getTag3(addictionChance, redRounded, 3, 1)\r\n}\r\n\r\nfunction getWeight(item) {\r\n    const weight = \"Weight: \" + numberToString(item.weight, 3);\r\n    return getTag3(weight, indigo, 1, 0)\r\n}\r\n\r\nfunction getItemDescription(item) {\r\n    const desc = item.desc\r\n    if (!desc || desc === \"\") {\r\n        return (<></>);\r\n    }\r\n    const mt = 2;\r\n    const mb = 2;\r\n    return (\r\n        <div style={{width: '100%', backgroundColor: '#fffaf0'}} className={\"mt-\" + mt + \" mb-\" + mb + \" d-flex justify-content-center\"}>\r\n            <div style={{padding: '0.3rem'}}>\r\n                <small><b style={{color: '#bf6400'}}>{desc}</b></small>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getDuration(effect) {\r\n    let duration = 0;\r\n    let durationName = \"\";\r\n    if (!effect.glob_duration || effect.glob_duration === '') {\r\n        duration = effect.duration ? effect.duration : 0;\r\n    } else {\r\n        duration = effect.glob_duration.value;\r\n        durationName = \"(\" + effect.glob_duration.name + \")\";\r\n    }\r\n    if (duration === 0) {\r\n        return (<></>);\r\n    }\r\n    return getTag(\"Duration\", duration, durationName);\r\n}\r\n\r\nfunction getTag(title, value, name) {\r\n    return (\r\n         <div key={value + name} className=\"tag mt-1\">\r\n            <div style={{textWrap: 'nowrap', overflow: \"hidden\", textOverflow: 'ellipsis'}}>\r\n                {title}: <span style={{fontSize: '0.80rem', color: 'red'}}>{numberToString(value, 3)}</span> {name}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getTag2(value, style, fullLength=false) {\r\n    const full = (fullLength) ? \"w-100\" : \"\";\r\n    return (\r\n         <div className={\"tag mt-1 \" + full} style={style}>\r\n            <div style={{textWrap: 'nowrap', overflow: \"hidden\", textOverflow: 'ellipsis'}}>\r\n                {value}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getDescription(effect) {\r\n    return buildTagBlock(effect.m_effect.desc);\r\n}\r\n\r\nexport function buildTagBlock(desc, fullLength=false, center=false, style=null, containerClassName=\"\") {\r\n    if (!desc) {\r\n        return (<></>);\r\n    }\r\n    if (!style) {\r\n        style = orange;\r\n    }\r\n    desc = desc.trim();\r\n    if (desc === \"\") {\r\n        return (<></>);\r\n    }\r\n    if (center) {\r\n        return (<div className={\"d-flex justify-content-center \" + containerClassName}>{getTag2(desc, style, fullLength)}</div>);\r\n    }\r\n    return (<div className={containerClassName}>{getTag2(desc, style, fullLength)}</div>);\r\n}\r\n\r\nfunction getActor(effect) {\r\n    const actor = effect.m_effect.actor_value1;\r\n    if (!actor || typeof actor === typeof '') {\r\n        return (<></>);\r\n    }\r\n    return getTag2(actor.name, orange);\r\n}\r\n\r\nfunction getActorDesc(effect) {\r\n    const actor = effect.m_effect.actor_value1;\r\n    if (!actor || typeof actor === typeof '' ) {\r\n        return (<></>);\r\n    }\r\n    let desc = actor.desc;\r\n    if (desc) {\r\n        desc = desc.trim();\r\n    }\r\n    if (!desc || desc === \"\") {\r\n        return (<></>);\r\n    }\r\n    return buildTextBlock(desc, \"Description\");\r\n}\r\n\r\nfunction getParentPerkName(effect) {\r\n    const perk_name = effect.m_effect.parent_perk_name;\r\n    if (!perk_name || perk_name === '') {\r\n        return (<></>);\r\n    }\r\n    return getTag2(perk_name, orange);\r\n}\r\n\r\nfunction getParentPerkDesc(effect) {\r\n    const perk_desc = effect.m_effect.parent_perk_desc;\r\n    if (!perk_desc || perk_desc === '') {\r\n        return (<></>);\r\n    }\r\n    return getTag2(perk_desc, orange);\r\n}\r\n\r\nfunction getSource(effect) {\r\n    if (!effect.source || effect.source === '') {\r\n        return (<></>);\r\n    }\r\n    return getTag2(\"Src: \" + effect.source, indigo);\r\n}\r\n\r\nfunction getMagnitude(effect) {\r\n    let magnitude = (effect.magnitude ? effect.magnitude : 0);\r\n    let magnitudeName = \"\";\r\n    let curveMagnitude = 0;\r\n    let curveMagnitudeName = \"\";\r\n    let globMagnitude = 0;\r\n    let globMagnitudeName = \"\";\r\n    if (effect.curve_max_value) {\r\n        curveMagnitude = effect.curve_max_value;\r\n        curveMagnitudeName = \"(\" + effect.d_curv.split(\"\\n\")[0] + \")\";\r\n    }\r\n    if (effect.glob_magnitude && effect.glob_magnitude !== '') {\r\n        globMagnitude = effect.glob_magnitude.value;\r\n        globMagnitudeName = \"(\" + effect.glob_magnitude.name + \")\";\r\n    }\r\n    if (magnitude === 0 && curveMagnitude === 0 && globMagnitude === 0) {\r\n        return (<></>);\r\n    }\r\n    const result = [];\r\n    if (magnitude !== 0) {\r\n        result.push(getTag(\"Magnitude\", magnitude, magnitudeName));\r\n    }\r\n    if (curveMagnitude !== 0) {\r\n        result.push(getTag(\"Magnitude\", curveMagnitude, curveMagnitudeName));\r\n    }\r\n    if (globMagnitude !== 0) {\r\n        result.push(getTag(\"Magnitude\", globMagnitude, globMagnitudeName));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getParent(effect) {\r\n    const id = effect.m_effect.spell_id;\r\n    let parent;\r\n    if (id && id !== '') {\r\n        parent = \"(\" + id + \") \" + effect.m_effect.spell_full;\r\n        return getTag2(parent, indigo);\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getProperty(effect) {\r\n    const name = effect.m_effect.parent_name\r\n    if (name && name !== '') {\r\n        return getTag2(name, indigo);\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getEffectTagNameView(effect) {\r\n    if (!effect.tag || effect.tag === \"\") {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <div className=\"d-flex justify-content-end\">\r\n            <div className=\"tag mt-1\" style={magenta}>\r\n                {effect.tag}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getEffectView(effect, ind) {\r\n    const mEffect = effect.m_effect;\r\n    const borderColor = (ind % 2 === 0) ? '#a392a8' : '#929da9';\r\n    const fontColor = (ind % 2 === 0) ? '#581e4e' : '#1e3a59';\r\n    const backgroundColor = (ind % 2 === 0) ? '#fefbff' : '#fafcff';\r\n    const conditionStrings = buildConditionStrings(effect.conditions, \"mt-1\", '#7a0450', '#ffedf9');\r\n    const mConditionStrings = buildConditionStrings(mEffect.conditions, \"mt-1\", '#00301a', '#edfff6');\r\n    const perkConditionStrings = buildConditionStrings(effect.perk_spell_conditions, \"mt-1\", '#a36400', '#fff8df');\r\n\r\n    //const conditions = (effect.conditions || effect.m_effect.conditions) ? <b className=\"tag\" style={{height: '1.15rem', fontSize: '0.6rem', color: '#c7005f', borderRadius: '10px'}}>Conditional</b> : <></>;\r\n    const addicted = (effect.if_addicted) ? <b className=\"tag\" style={{height: '1.15rem', fontSize: '0.6rem', color: '#c7005f', borderRadius: '10px'}}>Addicted</b> : <></>;\r\n    return (\r\n        <Card key={mEffect.id + ind} className=\"lite-shadow m-1\" style={{borderColor: borderColor}}>\r\n            <Card.Header className=\"p-1 ps-2\" style={{backgroundColor: backgroundColor}}>\r\n                <div style={{color: fontColor}}>\r\n                    <b>{mEffect.full}</b>\r\n                </div>\r\n            </Card.Header>\r\n            <div className=\"p-1 pb-2\">\r\n                {getEffectTagNameView(effect)}\r\n                <div className=\"tag mt-1\" style={blue}>\r\n                    {mEffect.name}\r\n                </div>\r\n                {getMagnitude(effect)}\r\n                {getDuration(effect)}\r\n                {getArea(effect)}\r\n                {getParent(effect)}\r\n                {getSource(effect)}\r\n                {getProperty(effect)}\r\n                {getDescription(effect)}\r\n                {getActor(effect)}\r\n                {getActorDesc(effect)}\r\n                {getParentPerkName(effect)}\r\n                {getParentPerkDesc(effect)}\r\n                {conditionStrings}\r\n                {mConditionStrings}\r\n                {perkConditionStrings}\r\n            </div>\r\n            <Card.Footer className=\"p-0\">\r\n                <Container className='p-1'>\r\n                    <Row>\r\n                        <div className=\"d-flex col justify-content-start\" style={{alignItems: 'center'}}>\r\n                            {addicted}\r\n                        </div>\r\n                        <Col className=\"d-flex justify-content-end\" style={{alignItems: 'center'}}>\r\n                            <b><small>{mEffect.id}</small></b>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport function detailsView(item) {\r\n    const effects = item.effects;\r\n    const result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        result.push(getEffectView(effects[i], i));\r\n    }\r\n    return (\r\n        <>\r\n            {result}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function ConsumableToast(props) {\r\n    const [main, setMain] = useState(true);\r\n    if (!props.showToast || !props.item) {\r\n        return (<></>);\r\n    }\r\n    const view = (main) ? mainView(props.item) : detailsView(props.item);\r\n    const buttonName = (main) ? \"Details\" : \"Main\";\r\n    const padding = (main) ? \"2\" : \"1\";\r\n    function onClick(e) {\r\n        setMain(!main);\r\n    }\r\n    return (\r\n        <ToastContainer\r\n            className=\"p-3 position-fixed p-3\"\r\n            position={\"top-center\"}\r\n            role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\r\n            style={{ zIndex: 10 }}>\r\n            <Toast bg=\"light\" onClose={(e) => props.setShowToast(false)} show={props.showToast} animation={false}>\r\n                <Toast.Header className=\"pe-3\">\r\n                    <strong className=\"ms-2 mt-auto mb-auto p-auto me-auto\">{props.item['full']}</strong>\r\n                </Toast.Header>\r\n                <Toast.Body className={\"pt-1 pb-2 modal-scroll-60 p-\" + padding}>\r\n                    {view}\r\n                </Toast.Body>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <Button size=\"sm\" variant=\"blue-white-border ps-3 pe-3 p-1 mt-2 mb-2\" onClick={onClick}>{buttonName}</Button>\r\n                </div>\r\n            </Toast>\r\n        </ToastContainer>\r\n    );\r\n}","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport BaseDropdown from '../../viewComponents/dropdown/BaseDropdown';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst typeDict = {All: 'All', Chem: 'Chem', Food: 'Food', Magazine: 'Magazine', Serum: 'Serum', Drink: 'Drink', Bobblehead: 'Bobblehead', Stimpak: 'Stimpak', BloodPack: 'BloodPack', Other: 'Other'};\r\n\r\nconst effectDict = {\r\n\tNone: 'None',\r\n\tAPRegen: 'APRegen',\r\n\tAddBottlecap: 'AddBottlecap',\r\n\tAddPerk: 'AddPerk',\r\n\tAddictionCount: 'AddictionCount',\r\n\tAddictionEffect: 'AddictionEffect',\r\n\tAddictionOdds: 'AddictionOdds',\r\n\tAdjustFallSpeed: 'AdjustFallSpeed',\r\n\tAmmo: 'Ammo',\r\n\tBanner: 'Banner',\r\n\tBarter: 'Barter',\r\n\tBleed: 'Bleed',\r\n\tChameleon: 'Chameleon',\r\n\tCheaperCrafting: 'CheaperCrafting',\r\n\tConditionCost: 'ConditionCost',\r\n\tCureAddiction: 'CureAddiction',\r\n\tDamageParalyze: 'DamageParalyze',\r\n\tDamageResist: 'DamageResist',\r\n\tDetect: 'Detect',\r\n\tDetectLife: 'DetectLife',\r\n\tDisease: 'Disease',\r\n\tDiseaseChance: 'DiseaseChance',\r\n\tDiseaseCure: 'DiseaseCure',\r\n\tDiseaseResist: 'DiseaseResist',\r\n\tDuration: 'Duration',\r\n\tExtraDamage: 'ExtraDamage',\r\n\tFX: 'FX',\r\n\tFearless: 'Fearless',\r\n\tFestive: 'Festive',\r\n\tFireDamage: 'FireDamage',\r\n\tFortifyAP: 'FortifyAP',\r\n\tFortifyAPRegen: 'FortifyAPRegen',\r\n\tFortifyAgility: 'FortifyAgility',\r\n\tFortifyBarter: 'FortifyBarter',\r\n\tFortifyCarryWeight: 'FortifyCarryWeight',\r\n\tFortifyCharisma: 'FortifyCharisma',\r\n\tFortifyCritDamage: 'FortifyCritDamage',\r\n\tFortifyCryoResist: 'FortifyCryoResist',\r\n\tFortifyDamage: 'FortifyDamage',\r\n\tFortifyDamageResist: 'FortifyDamageResist',\r\n\tFortifyEndurance: 'FortifyEndurance',\r\n\tFortifyEnergyResist: 'FortifyEnergyResist',\r\n\tFortifyExplosionRadius: 'FortifyExplosionRadius',\r\n\tFortifyExplosiveDamage: 'FortifyExplosiveDamage',\r\n\tFortifyFireResist: 'FortifyFireResist',\r\n\tFortifyGunAccuracy: 'FortifyGunAccuracy',\r\n\tFortifyHealRate: 'FortifyHealRate',\r\n\tFortifyHealing: 'FortifyHealing',\r\n\tFortifyHealth: 'FortifyHealth',\r\n\tFortifyIntelligence: 'FortifyIntelligence',\r\n\tFortifyJumpHeight: 'FortifyJumpHeight',\r\n\tFortifyLuck: 'FortifyLuck',\r\n\tFortifyMeleeDamage: 'FortifyMeleeDamage',\r\n\tFortifyMoveSpeed: 'FortifyMoveSpeed',\r\n\tFortifyPerception: 'FortifyPerception',\r\n\tFortifyRadAway: 'FortifyRadAway',\r\n\tFortifyReloadSpeed: 'FortifyReloadSpeed',\r\n\tFortifyResistDamage: 'FortifyResistDamage',\r\n\tFortifyResistEnergy: 'FortifyResistEnergy',\r\n\tFortifyResistPoison: 'FortifyResistPoison',\r\n\tFortifyResistRad: 'FortifyResistRad',\r\n\tFortifySneak: 'FortifySneak',\r\n\tFortifySprintAP: 'FortifySprintAP',\r\n\tFortifyStrength: 'FortifyStrength',\r\n\tFortifyUnarmedDamage: 'FortifyUnarmedDamage',\r\n\tFortifyVATSAccuracy: 'FortifyVATSAccuracy',\r\n\tFortifyWaterBreathing: 'FortifyWaterBreathing',\r\n\tFortifyXPBonus: 'FortifyXPBonus',\r\n\tHealthRegen: 'HealthRegen',\r\n\tHungerIncrease: 'HungerIncrease',\r\n\tHungerNo: 'HungerNo',\r\n\tHungerReduce: 'HungerReduce',\r\n\tHungerThirstHeal: 'HungerThirstHeal',\r\n\tHungerThirstIncrease: 'HungerThirstIncrease',\r\n\tHungerThirstNo: 'HungerThirstNo',\r\n\tHungerThirstReduce: 'HungerThirstReduce',\r\n\tHungerThirstSlow: 'HungerThirstSlow',\r\n\tIncreaseDiseaseResistance: 'IncreaseDiseaseResistance',\r\n\tIncreaseSprintAP: 'IncreaseSprintAP',\r\n\tIncreasedFood: 'IncreasedFood',\r\n\tInsectRepellent: 'InsectRepellent',\r\n\tInvisibility: 'Invisibility',\r\n\tLockPick: 'LockPick',\r\n\tLootEffect: 'LootEffect',\r\n\tMutationCount: 'MutationCount',\r\n\tMutationTreated: 'MutationTreated',\r\n\tOther: 'Other',\r\n\tPoisonDamage: 'PoisonDamage',\r\n\tRadDamage: 'RadDamage',\r\n\tRadExtreme: 'RadExtreme',\r\n\tRadiationHazard: 'RadiationHazard',\r\n\tRandomEffect: 'RandomEffect',\r\n\tReduceAPRegen: 'ReduceAPRegen',\r\n\tReduceAccuracy: 'ReduceAccuracy',\r\n\tReduceActionPoints: 'ReduceActionPoints',\r\n\tReduceAgility: 'ReduceAgility',\r\n\tReduceCarryWeight: 'ReduceCarryWeight',\r\n\tReduceCharisma: 'ReduceCharisma',\r\n\tReduceChemEffect: 'ReduceChemEffect',\r\n\tReduceDamage: 'ReduceDamage',\r\n\tReduceDamageFromRobots: 'ReduceDamageFromRobots',\r\n\tReduceDamageResist: 'ReduceDamageResist',\r\n\tReduceDisease: 'ReduceDisease',\r\n\tReduceDiseaseChance: 'ReduceDiseaseChance',\r\n\tReduceDiseaseResistance: 'ReduceDiseaseResistance',\r\n\tReduceEndurance: 'ReduceEndurance',\r\n\tReduceEnemyDamage: 'ReduceEnemyDamage',\r\n\tReduceEnergyDamage: 'ReduceEnergyDamage',\r\n\tReduceFallDamage: 'ReduceFallDamage',\r\n\tReduceFallSpeed: 'ReduceFallSpeed',\r\n\tReduceIntelligence: 'ReduceIntelligence',\r\n\tReduceItemDegradation: 'ReduceItemDegradation',\r\n\tReduceLimbDamage: 'ReduceLimbDamage',\r\n\tReduceLuck: 'ReduceLuck',\r\n\tReduceMaxHealth: 'ReduceMaxHealth',\r\n\tReducePerception: 'ReducePerception',\r\n\tReduceStrength: 'ReduceStrength',\r\n\tReduceWeight: 'ReduceWeight',\r\n\tRegen: 'Regen',\r\n\tRepair: 'Repair',\r\n\tResistRadiation: 'ResistRadiation',\r\n\tRestoreAP: 'RestoreAP',\r\n\tRestoreAddiction: 'RestoreAddiction',\r\n\tRestoreHealth: 'RestoreHealth',\r\n\tRestoreRads: 'RestoreRads',\r\n\tReward: 'Reward',\r\n\tScience: 'Science',\r\n\tScopeStability: 'ScopeStability',\r\n\tScrap: 'Scrap',\r\n\tSearchMeat: 'SearchMeat',\r\n\tThirstIncrease: 'ThirstIncrease',\r\n\tThirstNo: 'ThirstNo',\r\n\tThirstReduce: 'ThirstReduce',\r\n\tTreasureHunt: 'TreasureHunt',\r\n\tUI: 'UI',\r\n\tVATSAccuracy: 'VATSAccuracy',\r\n\tWorkshop: 'Workshop',\r\n};\r\n\r\nexport default function ConsumableFilter(props) {\r\n    function nameChanged(e) {\r\n        props.setFilterName(e.target.value);\r\n        props.setCurrentPage(1);\r\n    }\r\n    function onSelectType(e) {\r\n        props.setFilterType(e);\r\n        props.setCurrentPage(1);\r\n    }\r\n    function onSelectEffect(e) {\r\n        props.setFilterEffect(e);\r\n        props.setCurrentPage(1);\r\n    }\r\n    return (\r\n        <div>\r\n            <InputGroup className=\"ps-1 pe-1 pb-2 flex-nowrap\">\r\n                <BaseDropdown title={\"Type\"} dict={typeDict} onSelect={onSelectType}></BaseDropdown>\r\n                <Form.Control style={{width: '10rem'}} maxLength=\"70\" onChange={nameChanged} />\r\n                <BaseDropdown title={\"Effect\"} dict={effectDict} onSelect={onSelectEffect}></BaseDropdown>\r\n            </InputGroup>\r\n        </div>\r\n    );\r\n}","import Accordion from 'react-bootstrap/Accordion';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { memo, useState } from 'react';\r\nimport ConsumableItems from './ConsumableItems';\r\nimport ConsumableToast from './ConsumableToast';\r\nimport ConsumableFilter from './ConsumableFilter';\r\nimport FilterDisplay from './FilterDisplay';\r\nimport StaticPopoverRenderer from '../../viewComponents/popover/StaticPopoverRenderer';\r\nimport Global from '../../helpers/Global';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst questionPopoverHeader = (<b>Consumables</b>);\r\n\r\nconst questionPopoverBody = (\r\n    <>\r\n        <div><b>Items with next properties are not included:</b></div>\r\n        <div>⁃<i> No name</i></div>\r\n        <div>⁃<i> Templates</i></div>\r\n        <div>⁃<i> Events</i></div>\r\n        <div>⁃<i> CUT</i></div>\r\n        <div>⁃<i> DEPRECATED</i></div>\r\n        <div>⁃<i> test</i></div>\r\n        <div className=\"mb-2\">⁃<i> Babylon</i></div>\r\n        <div className=\"mb-2\"><b>Parsed from:</b></div>\r\n        <div><i>{Global.consumablesParseVersion}</i></div>\r\n        <div><i>{Global.consumablesParseVersionName}</i></div>\r\n    </>\r\n);\r\n\r\nconst questionPopover = new StaticPopoverRenderer(questionPopoverHeader, questionPopoverBody, 'ConsumablesViewQuestionPopoverPlace');\r\n\r\nconst ConsumablesView = memo(function ConsumablesView() {\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [filterType, setFilterType] = useState('All');\r\n    const [filterName, setFilterName] = useState('');\r\n    const [filterEffect, setFilterEffect] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    function onQClick(e) {\r\n        questionPopover.renderToggle(e.target);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n\r\n            <Accordion.Item eventKey=\"6\">\r\n                <Accordion.Header>\r\n                    <div id=\"ConsumablesViewQuestionPopoverPlace\"></div>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '12rem'}}>\r\n                            <span className=\"ac-text\">Consumables</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '2rem'}} onClick={onQClick}>?</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <ConsumableToast item={currentItem} showToast={showToast} setShowToast={setShowToast} />\r\n                    <ConsumableFilter setFilterType={setFilterType} setFilterName={setFilterName} setFilterEffect={setFilterEffect} setCurrentPage={setCurrentPage} />\r\n                    <FilterDisplay filterType={filterType} filterEffect={filterEffect} />\r\n                    <ConsumableItems filterName={filterName} filterType={filterType} filterEffect={filterEffect} currentPage={currentPage} setCurrentPage={setCurrentPage} currentItem={currentItem} setCurrentItem={setCurrentItem} showToast={showToast} setShowToast={setShowToast} />\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ConsumablesView;","import {keyValueRow} from '../../helpers/RowBuilder';\r\n\r\n\r\nexport default function FilterDisplay(props) {\r\n    const effect = (!props.filterEffect || props.filterEffect === \"None\") ? \"-\" : props.filterEffect;\r\n    return (\r\n        <div className=\"ps-2 pe-2 pb-2\">\r\n            {keyValueRow(props.filterType, effect)}\r\n        </div>\r\n    );\r\n}","import { useEffect, memo } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nconst { Chart } = await import('chart.js/auto');\r\n\r\n\r\nfunction getData(values, label, color) {\r\n    return {\r\n        datasets: [{\r\n            label: label,\r\n            data: values,\r\n            borderColor: color,\r\n            pointRadius: 1.5,\r\n            borderWidth: 2,\r\n            fill: false,\r\n        }],\r\n    };\r\n}\r\n\r\nfunction getConfig(data, titleText) {\r\n    return {\r\n        type: 'line',\r\n        data: data,\r\n        options: {\r\n            plugins: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n            },\r\n            elements: {\r\n                line: {\r\n                    tension: 0,\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    position: 'bottom',\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Level',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                },\r\n                y: {\r\n                    title: {\r\n                        display: true,\r\n                        text: titleText,\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                }\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\nfunction drawChart(config, chartId) {\r\n    const curChart = Chart.getChart(chartId);\r\n    if (curChart) {\r\n        curChart.destroy();\r\n    }\r\n    new Chart(document.getElementById(chartId), config);\r\n}\r\n\r\nfunction getCanvas(id) {\r\n    if (!id) {\r\n        return (<></>);\r\n    }\r\n    return (<canvas id={id}></canvas>);\r\n}\r\n\r\nconst CreatureChartView = memo(function CreatureChartView(props) {\r\n    const titleText = (props.title === \"❤️ Health\") ? \"Health\" : \"Resistance\";\r\n    const config = getConfig(getData(props.values, props.title, props.color), titleText);\r\n    useEffect(() => {\r\n        drawChart(config, props.chartId);\r\n    });\r\n    return (\r\n        <Card className={props.className} style={{minWidth: '18rem'}}>\r\n            <Card.Header className={props.headerClassName}>\r\n                {props.title}\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex justify-content-center p-0\">\r\n                {getCanvas(props.chartId)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default CreatureChartView","import { buildCreature, buildCreatureNames } from '../entities/ECreatures';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\n\r\n\r\nconst names = CreatureDataProvider.getCreatureNames();\r\n\r\nexport default function CreatureNamesDropdown(props) {\r\n    function onSelect(e) {\r\n        props.creatures[props.creature.fieldName] = buildCreature(e, props.creature.level, props.creature.fieldName);\r\n        props.creatureNamesRef.current = buildCreatureNames(props.creatures);\r\n        props.setCreatures({\r\n            ...props.creatures,\r\n        });\r\n    }\r\n    return (\r\n        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelect} names={names} title={<strong>{props.creature.capName}</strong>} />\r\n    );\r\n}","import { buildCreature, buildCreatureNames } from '../entities/ECreatures';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\n\r\n\r\nconst levels = CreatureDataProvider.getCreatureLevels(true);\r\n\r\nexport default function CreatureLevelsDropdown(props) {\r\n    function onSelect(e) {\r\n        props.creatures[props.creature.fieldName] = buildCreature(props.creature.name, e, props.creature.fieldName);\r\n        props.creatureNamesRef.current = buildCreatureNames(props.creatures);\r\n        props.setCreatures({\r\n            ...props.creatures,\r\n        });\r\n    }\r\n    return (\r\n        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelect} names={levels} title={<strong>{props.creature.level}</strong>} />\r\n    );\r\n}","import CreatureNamesDropdown from './CreatureNamesDropdown';\r\nimport CreatureLevelsDropdown from './CreatureLevelsDropdown';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Stack from 'react-bootstrap/Stack';\r\n\r\n\r\nexport default function CreatureChooser(props) {\r\n    return (\r\n        <Stack className='justify-content-center' direction=\"horizontal\" gap={1}>\r\n            <Col xs={10} className=\"d-flex justify-content-start\">\r\n                <CreatureNamesDropdown creatureNamesRef={props.creatureNamesRef} creature={props.creature} creatures={props.creatures} setCreatures={props.setCreatures} />\r\n            </Col>\r\n            <Col xs={2} className=\"d-flex justify-content-end\">\r\n                <CreatureLevelsDropdown creatureNamesRef={props.creatureNamesRef} creature={props.creature} creatures={props.creatures} setCreatures={props.setCreatures} />\r\n            </Col>\r\n        </Stack>\r\n    );\r\n}","import raceItems from '../resources/race.json';\r\n\r\n\r\nconst raceMap = new Map();\r\n\r\nfor (let i = 0; i < raceItems.length; i++) {\r\n        const item = raceItems[i];\r\n        raceMap.set(item.id, item);\r\n}\r\n\r\nexport default class RaceDataProvider {\r\n\r\n    static getRaceById(id) {\r\n        return raceMap.get(id);\r\n    }\r\n}","import creatureItems from '../resources/creature_health_res.json';\r\nimport RaceDataProvider from '../race/RaceDataProvider';\r\n\r\n\r\nconst creatureNames = [];\r\n\r\nfor (const creatureName in creatureItems[0]) {\r\n    creatureNames.push(creatureName);\r\n}\r\n\r\nconst creatureLevels = [];\r\nconst creatureLevelsWithMax = [\"Max\"];\r\n\r\nfor (let i = 1; i <= 150; i++) {\r\n    creatureLevels.push(i);\r\n    creatureLevelsWithMax.push(i);\r\n}\r\n\r\ncreatureNames.sort();\r\n\r\nexport default class CreatureDataProvider {\r\n\r\n    static getCreatureData(creatureName) {\r\n        return creatureItems[0][creatureName];\r\n    }\r\n\r\n    static getCreatureParametersByName(creatureName, level) {\r\n        const creatureData = CreatureDataProvider.getCreatureData(creatureName);\r\n        return CreatureDataProvider.getCreatureParametersByData(creatureData, level);\r\n    }\r\n\r\n    static getCreatureParametersByData(creatureData, level) {\r\n        const result = {};\r\n        const creatureDataCurve = creatureData['curve'];\r\n        for (const name in creatureDataCurve) {\r\n            const values = creatureDataCurve[name];\r\n            const lastItem = values.length - 1;\r\n            for (let i = 0; i <= lastItem; i++) {\r\n                const sample = values[i];\r\n                const sampleLevel = sample.x;\r\n                const sampleValue = sample.y;\r\n                if (i === 0 && level <= sampleLevel) { // Return min possible value\r\n                    result[name] = sampleValue;\r\n                    break;\r\n                } else if (level === sampleLevel) { // Exact level\r\n                    result[name] = sampleValue;\r\n                    break;\r\n                } else if (i !== 0) { // Value could lie somewhere between\r\n                    const prevSampleLevel = values[i - 1].x;\r\n                    if (level > prevSampleLevel && level < sampleLevel) {\r\n                        const prevSampleValue = values[i - 1].y;\r\n                        result[name] = CreatureDataProvider.calculateExactValue(prevSampleLevel, sampleLevel, level, prevSampleValue, sampleValue);\r\n                        break;\r\n                    }\r\n                }\r\n                if (i === lastItem) { // Return max possible value\r\n                    result[name] = sampleValue;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        result[\"immuneToRad\"] = creatureData.immune_to_rad;\r\n        result[\"immuneToPoison\"] = creatureData.immune_to_poison;\r\n        result[\"reduction\"] = creatureData.reduction;\r\n        result[\"reductions\"] = [...creatureData.reductions];\r\n        result[\"tags\"] = [...creatureData.tags];\r\n        result[\"reductionOnlyNotBleeding\"] = creatureData.reduction_only_not_bleeding;\r\n        const race = RaceDataProvider.getRaceById(creatureData.race_id);\r\n        result['body'] = {...race.bodyData.body};\r\n        result['headMult'] = CreatureDataProvider.getMaxBodyMultiplier(result['body']);\r\n        result['normalMult'] = 1;\r\n        result['averageMult'] = CreatureDataProvider.getAverageBodyMultiplier(result['body']);\r\n        return result;\r\n    }\r\n\r\n    static getMaxBodyMultiplier(body) {\r\n        let maxMult = 0;\r\n        for (const name in body) {\r\n            const part = body[name];\r\n            const mult = part.damage_mult;\r\n            if (maxMult < mult) {\r\n                maxMult = mult;\r\n            }\r\n        }\r\n        return maxMult;\r\n    }\r\n\r\n    static getAverageBodyMultiplier(body) {\r\n        let multSum = 0;\r\n        let count = 0\r\n        for (const name in body) {\r\n            const part = body[name];\r\n            multSum += part.damage_mult;\r\n            count += 1;\r\n        }\r\n        return (count === 0) ? 0 : multSum / count;\r\n    }\r\n\r\n    static calculateExactValue(prevLevel, nextLevel, curLevel, prevValue, nextValue) {\r\n        const valueGap = nextValue - prevValue;\r\n        const levelsAmount = nextLevel - prevLevel;\r\n        const valuePerLevel = valueGap / levelsAmount;\r\n        const shift = curLevel - prevLevel;\r\n        return prevValue + valuePerLevel * shift;\r\n    }\r\n\r\n    static getCreatureNames() {\r\n        return creatureNames;\r\n    }\r\n\r\n    static getCreatureLevels(withMax=false) {\r\n        return (withMax) ? creatureLevelsWithMax : creatureLevels;\r\n    }\r\n\r\n    static getMaxLevel(name) {\r\n        let creatureData = CreatureDataProvider.getCreatureData(name);\r\n        if (!creatureData) {\r\n            return 1;\r\n        }\r\n        creatureData = creatureData['curve'];\r\n        const result = [];\r\n        for (const name in creatureData) {\r\n            const values = creatureData[name];\r\n            result.push(values[values.length -1].x);\r\n        }\r\n        let max = Math.max(...result);\r\n        if (max < 1) {\r\n            max = 1;\r\n        }\r\n        return max;\r\n    }\r\n\r\n    static getLevelsList(name) {\r\n        const maxLevel = CreatureDataProvider.getMaxLevel(name);\r\n        const result = [];\r\n        for (let i = 1; i <= maxLevel; i++) {\r\n            result.push(i);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static capitalizeCreatureName(creatureName) {\r\n        let name = creatureName.charAt(0).toUpperCase() + creatureName.slice(1);\r\n        return name.replaceAll(\"_\", \" \");\r\n    }\r\n\r\n    static getStyle(rType) {\r\n        switch(rType) {\r\n            case \"physical\":\r\n                return [\"💥 Physical\", \"small p-1 bg-ballistic\", \"grey\"];\r\n            case \"energy\":\r\n                return [\"⚡ Energy\", \"small p-1 bg-energy\", \"purple\"];\r\n            case \"fire\":\r\n                return [\"🔥 Fire\", \"small p-1 bg-fire\", \"red\"];\r\n            case \"cold\":\r\n                return [\"❄️ Cold\", \"small p-1 bg-cold\", \"#40aac2\"];\r\n            case \"poison\":\r\n                return [\"☣️ Poison\", \"small p-1 bg-poison\", \"green\"];\r\n            case \"radiation\":\r\n                return [\"☢️ Radiation\", \"small p-1 bg-rad\", \"#ccc976\"];\r\n            case \"health\":\r\n                return [\"❤️ Health\", \"small p-1 bg-health\", \"#cc7681\"]\r\n            default:\r\n                return [\"\", \"\"];\r\n        }\r\n    }\r\n}","import { Collapse } from 'antd';\r\nimport CreatureDataProvider from './CreatureDataProvider';\r\nimport CreatureDropdown from './CreatureDropdown';\r\nimport { useState } from 'react';\r\nimport CreatureResHealthChartsView from './CreatureResHealthChartsView';\r\n\r\n\r\nfunction getView(creatureName, setCreatureName) {\r\n    const creatureNames = CreatureDataProvider.getCreatureNames();\r\n    let title = null;\r\n    if (creatureName) {\r\n        title = CreatureDataProvider.capitalizeCreatureName(creatureName);\r\n    }\r\n    return (\r\n        <>\r\n            <CreatureDropdown title={title} names={creatureNames} setCreatureName={setCreatureName} />\r\n            <CreatureResHealthChartsView creatureName={creatureName} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function CreatureDataView(props) {\r\n    const [creatureName, setCreatureName] = useState(null);\r\n    // let title = creatureName;\r\n    // if (!title) {\r\n    let title = 'Creature Curves';\r\n    // } else {\r\n        title = CreatureDataProvider.capitalizeCreatureName(title);\r\n    // }\r\n    const item = {\r\n        key: 1,\r\n        label: <b className=\"creature-label-text\">{title}</b>,\r\n        children: getView(creatureName, setCreatureName),\r\n    };\r\n    const items = [];\r\n    items.push(item);\r\n    return (\r\n        <Collapse accordion key={\"Creature\"} items={items} />\r\n    );\r\n}","import { getUniqueDropdownItemsByNames } from '../helpers/DropdownHelpers';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst CreatureDropdown = memo(function RaceDropdown(props) {\r\n    let title = \"Choose a creature\";\r\n    if (props.title) {\r\n        title = props.title;\r\n    }\r\n    function onSelect(e) {\r\n        props.setCreatureName(e);\r\n    }\r\n    return (\r\n        <Row className=\"p-1 mb-2 mt-0\">\r\n            <Col className=\"d-flex justify-content-center\">\r\n                <DropdownButton variant=\"warning\" size=\"sm\" onSelect={onSelect} title={<strong>{title}</strong>}>\r\n                    {getUniqueDropdownItemsByNames(props.names)}\r\n                </DropdownButton>\r\n            </Col>\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default CreatureDropdown;\r\n\r\n","import { creatureInfoPopover } from './CreatureInfoPopover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nexport default function CreatureInfoButton(props) {\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"left\" overlay={creatureInfoPopover(props.creature, props.resultDamage, props.resultDamage.weaponName)}>\r\n            <Button variant=\"blue-white-border m-0\" style={{cursor: 'pointer'}}><b style={{fontSize: 'auto'}}>?</b></Button>\r\n        </OverlayTrigger>\r\n    );\r\n}","import Popover from 'react-bootstrap/Popover';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport { Divider } from 'antd';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport { truncate } from '../helpers/Input';\r\nimport { tAmmo, addText } from '../helpers/Emoji';\r\nimport { millisToTime } from '../helpers/Time';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\nimport { Tag } from 'antd';\r\n\r\n\r\nfunction getResBadge(className, value, immune) {\r\n    const result = (immune) ? \"Infinity\" : value.toFixed(1);\r\n    return (\r\n        <span style={{ width: '2.7rem' }} className={className}><small>{result}</small></span>\r\n    );\r\n}\r\n\r\nfunction prepareTags(creature) {\r\n    const tags3 = [];\r\n    let tags;\r\n    for (let i = 0; i < creature.tags.length; i++) {\r\n        if (i % 3 === 0) {\r\n            tags = [];\r\n            tags3.push(tags);\r\n        }\r\n        tags.push(creature.tags[i]);\r\n    }\r\n    const result = [];\r\n    for (let i = 0; i < tags3.length; i++) {\r\n        const curTags = tags3[i];\r\n        result.push(<div key={curTags.toString()} className=\"mt-1 mb-1 p-0 d-flex justify-content-center\"><Tag className=\"m-0\" color=\"purple\"><b>{curTags.join(\" ∙ \")}</b></Tag></div>);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction showDamageIf(what, damageLine, notShow=false) {\r\n    if (notShow || !damageLine || damageLine === \"\" || damageLine === 0 || damageLine.includes(\"0.0 - ↑0.0\")) {\r\n        return (<></>);\r\n    }\r\n    return what;\r\n}\r\n\r\nexport function buildCreatureInfo2(creature, resultDamage) {\r\n    let armor = null;\r\n    if (resultDamage && Object.keys(resultDamage).length > 0) {\r\n        armor = resultDamage.resultArmor.get(creature.name);\r\n    }\r\n    if (!armor) {\r\n        armor = [creature.b, creature.e, creature.f, creature.p, creature.c, creature.r];\r\n    }\r\n    const showHeadExp = (creature.explosiveDamage === creature.headExpShotDamage);\r\n    const showCritHeadExp = (creature.critExplosiveDamage === creature.critExplosiveHeadDamage);\r\n    let capitalized = CreatureDataProvider.capitalizeCreatureName(creature.name);\r\n    return (\r\n        <div>\r\n            <div className='d-flex pb-2 justify-content-center'><b>{capitalized} (Lvl: {creature.level})</b></div>\r\n            <Stack className='pt-0 pb-2 justify-content-center' direction=\"horizontal\" gap={1}>\r\n                {getResBadge(\"badge bg-ballistic-shadow\", armor[0], false)}\r\n                {getResBadge(\"badge bg-energy-shadow\", armor[1], false)}\r\n                {getResBadge(\"badge bg-fire-shadow\", armor[2], false)}\r\n                {getResBadge(\"badge bg-poison-shadow\", armor[3], creature.immuneToPoison)}\r\n                {getResBadge(\"badge bg-cold-shadow\", armor[4], false)}\r\n                {getResBadge(\"badge bg-rad-shadow\", armor[5], creature.immuneToRadiation)}\r\n            </Stack>\r\n            <Stack className='pb-0' direction=\"vertical\" gap={0}>\r\n                {keyValueRow(\"❤️ Health:\", creature.h.toFixed(2), \"default\", \"red\")}\r\n                {keyValueRow(\"🧽 Damage Reduction:\", (creature.damageReduction * 100).toFixed(0) + \"%\", \"default\", \"orange\")}\r\n                {showDamageIf(keyValueRow(\"🐍 Sneak:\", creature.sneak, \"default\", \"green\"), creature.sneak)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit:\", creature.crit, \"default\", \"magenta\"), creature.crit)}\r\n                {keyValueRow(\"💥 Total Damage:\", creature.totalDamage, \"default\", \"blue\")}\r\n                {showDamageIf(keyValueRow(\"💥 Normal Damage:\", creature.normalDamage, \"default\", \"blue\"), creature.normalDamage)}\r\n                {showDamageIf(keyValueRow(\"🤕 HShot (\" + creature.headShot.toFixed(2) + \"x):\", creature.headShotDamage, \"default\", \"blue\"), creature.headShotDamage)}\r\n                {showDamageIf(keyValueRow(\"💣 Explosive:\", creature.explosiveDamage, \"default\", \"blue\"), creature.explosiveDamage)}\r\n                {showDamageIf(keyValueRow(\"💣 Explosive Head:\", creature.headExpShotDamage, \"default\", \"blue\"), creature.headExpShotDamage, showHeadExp)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit:\", creature.critNormalDamage, \"default\", \"blue\"), creature.critNormalDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Head:\", creature.critHeadNormalDamage, \"default\", \"blue\"), creature.critHeadNormalDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Explosive:\", creature.critExplosiveDamage, \"default\", \"blue\"), creature.critExplosiveDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Head Explosive:\", creature.critExplosiveHeadDamage, \"default\", \"blue\"), creature.critExplosiveHeadDamage, showCritHeadExp)}\r\n                {keyValueRow(addText(tAmmo, '0.7rem', '0.27rem', \"Ammo / Hits:\"), creature.ammo, \"default\", \"pink\")}\r\n                {keyValueRow(\"Reloads:\", creature.reloads, \"default\", \"green\")}\r\n                {keyValueRow(\"Life Time:\", millisToTime(creature.lifeTime), \"default\", \"brown\")}\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\nexport function buildCreatureInfo(creature, resultDamage, showDefaultResistance, weaponName=null) {\r\n    let weaponSection;\r\n    let wNameTrunc = \"\";\r\n    if (!weaponName) {\r\n        weaponSection = (<></>);\r\n    } else {\r\n        wNameTrunc = truncate(weaponName, 55);\r\n        weaponSection = (\r\n            <>\r\n                <Divider className='p-0 m-1 mb-3'></Divider>\r\n                <span className=\"badge bg-warning mb-0 text-dark p-2 shadow-outline-unselected\"><small>{wNameTrunc}</small></span>\r\n            </>\r\n        );\r\n    }\r\n    let armor = null;\r\n    if (resultDamage && Object.keys(resultDamage).length > 0) {\r\n        armor = resultDamage.resultArmor.get(creature.name);\r\n    }\r\n    if (!armor) {\r\n        armor = [creature.b, creature.e, creature.f, creature.p, creature.c, creature.r];\r\n    }\r\n    const showHeadExp = (creature.explosiveDamage === creature.headExpShotDamage);\r\n    const showCritHeadExp = (creature.critExplosiveDamage === creature.critExplosiveHeadDamage);\r\n    let defaultResistance = (<></>);\r\n    if (showDefaultResistance) {\r\n        defaultResistance = (\r\n            <>\r\n                <Stack className='pt-0 pb-0 d-flex justify-content-center' direction=\"horizontal\" gap={1}>\r\n                    {getResBadge(\"badge bg-ballistic-shadow\", creature.b, false)}\r\n                    {getResBadge(\"badge bg-energy-shadow\", creature.e, false)}\r\n                    {getResBadge(\"badge bg-fire-shadow\", creature.f, false)}\r\n                    {getResBadge(\"badge bg-poison-shadow\", creature.p, creature.immuneToPoison)}\r\n                    {getResBadge(\"badge bg-cold-shadow\", creature.c, false)}\r\n                    {getResBadge(\"badge bg-rad-shadow\", creature.r, creature.immuneToRadiation)}\r\n                </Stack>\r\n                <Divider className='p-0 m-0'>v</Divider>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            {defaultResistance}\r\n            <Stack className='pt-0 pb-2 d-flex justify-content-center' direction=\"horizontal\" gap={1}>\r\n                {getResBadge(\"badge bg-ballistic-shadow\", armor[0], false)}\r\n                {getResBadge(\"badge bg-energy-shadow\", armor[1], false)}\r\n                {getResBadge(\"badge bg-fire-shadow\", armor[2], false)}\r\n                {getResBadge(\"badge bg-poison-shadow\", armor[3], creature.immuneToPoison)}\r\n                {getResBadge(\"badge bg-cold-shadow\", armor[4], false)}\r\n                {getResBadge(\"badge bg-rad-shadow\", armor[5], creature.immuneToRadiation)}\r\n            </Stack>\r\n            {prepareTags(creature)}\r\n            <Stack className='pb-0' direction=\"vertical\" gap={0}>\r\n                {keyValueRow(\" Body:\", creature.curBody, \"default\", \"default\")}\r\n                {keyValueRow(\"❤️ Health:\", creature.h.toFixed(2), \"default\", \"red\")}\r\n                {keyValueRow(\"🧽 Damage Reduction:\", (creature.damageReduction * 100).toFixed(0) + \"%\", \"default\", \"orange\")}\r\n                {showDamageIf(keyValueRow(\"🐍 Sneak:\", creature.sneak, \"default\", \"green\"), creature.sneak)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit:\", creature.crit, \"default\", \"magenta\"), creature.crit)}\r\n                {keyValueRow(\"💥 Total Damage:\", creature.totalDamage, \"default\", \"blue\")}\r\n                {showDamageIf(keyValueRow(\"💥 Normal Damage:\", creature.normalDamage, \"default\", \"blue\"), creature.normalDamage)}\r\n                {showDamageIf(keyValueRow(\"🤕 HShot (\" + creature.headShot.toFixed(2) + \"x):\", creature.headShotDamage, \"default\", \"blue\"), creature.headShotDamage)}\r\n                {showDamageIf(keyValueRow(\"💣 Explosive:\", creature.explosiveDamage, \"default\", \"blue\"), creature.explosiveDamage)}\r\n                {showDamageIf(keyValueRow(\"💣 Explosive Head:\", creature.headExpShotDamage, \"default\", \"blue\"), creature.headExpShotDamage, showHeadExp)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit:\", creature.critNormalDamage, \"default\", \"blue\"), creature.critNormalDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Head:\", creature.critHeadNormalDamage, \"default\", \"blue\"), creature.critHeadNormalDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Explosive:\", creature.critExplosiveDamage, \"default\", \"blue\"), creature.critExplosiveDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Head Explosive:\", creature.critExplosiveHeadDamage, \"default\", \"blue\"), creature.critExplosiveHeadDamage, showCritHeadExp)}\r\n                {keyValueRow(addText(tAmmo, '0.7rem', '0.27rem', \"Ammo / Hits:\"), creature.ammo, \"default\", \"pink\")}\r\n                {keyValueRow(\"Reloads:\", creature.reloads, \"default\", \"green\")}\r\n                {keyValueRow(\"Reloads Time:\", creature.reloadsTime.toFixed(2) + \" s\", \"default\", \"green\")}\r\n                {keyValueRow(\"Life Time:\", creature.lifeTime + \" ms\", \"default\", \"brown\")}\r\n                {weaponSection}\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const creatureInfoPopover = (creature, resultDamage, weaponName) => {\r\n    let capitalized = CreatureDataProvider.capitalizeCreatureName(creature.name);\r\n    return (\r\n        <Popover title=\"CreatureInfoPopover\" className=\"popover-adjustable\">\r\n            <Popover.Header className=\"d-flex justify-content-center\"><strong style={{fontSize: '0.9rem'}}>{capitalized} (Level: {creature.level})</strong></Popover.Header>\r\n            <Popover.Body className=\"popover-body3 ms-1 me-1\">\r\n                {buildCreatureInfo(creature, resultDamage, true, weaponName)}\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n};","import CreatureChartView from \"./CreatureChartView\";\r\nimport CreatureDataProvider from './CreatureDataProvider';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nfunction buildResCols(creatureName) {\r\n    const result = [];\r\n    let data = CreatureDataProvider.getCreatureData(creatureName);\r\n    if (data) {\r\n        data = data['curve'];\r\n    }\r\n    for (const name in data) {\r\n        const cRes = data[name];\r\n        const typeData = CreatureDataProvider.getStyle(name);\r\n        result.push(\r\n            <Col className=\"d-flex justify-content-center\" key={name}>\r\n                <CreatureChartView className=\"d-flex justify-content-center m-1\" color={typeData[2]} headerClassName={typeData[1]} title={typeData[0]} chartId={name + \"Creature\"} values={cRes} />\r\n            </Col>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function CreatureResHealthChartsView(props) {\r\n    return (\r\n        <Row className=\"d-flex justify-content-center\">\r\n            {buildResCols(props.creatureName)}\r\n        </Row>\r\n    )\r\n}","import Stack from 'react-bootstrap/Stack';\r\nimport CreatureInfoButton from './CreatureInfoButton';\r\nimport { keyValueBadge } from '../helpers/RowBuilder';\r\nimport { tAmmo } from '../helpers/Emoji';\r\nimport { millisToTime } from '../helpers/Time';\r\nimport { numberToString } from '../helpers/StringHelpers';\r\n\r\n\r\nexport default function CreatureParamsLineView(props) {\r\n    return (\r\n        <Stack className='ps-0 pe-1' direction=\"horizontal\" gap={1}>\r\n            {keyValueBadge(\"mt-1 mb-1 badge p-1 ms-1 me-0 bg-health-outline\", '5.5rem', '❤️', numberToString(props.creature.h, 2))}\r\n            {keyValueBadge(\"mt-1 mb-1 p-1 badge bg-ammo-outline ms-auto me-auto\", '7rem', tAmmo(\"0.5rem\"), props.creature.ammo)}\r\n            {keyValueBadge(\"mt-1 mb-1 p-1 badge bg-lifetime-outline ms-auto me-auto\", '7rem', (<small>⌛</small>), millisToTime(props.creature.lifeTime))}\r\n            <CreatureInfoButton creature={props.creature} resultDamage={props.resultDamage} />\r\n        </Stack>\r\n    );\r\n}","\r\nimport Card from 'react-bootstrap/Card';\r\nimport CreatureChooser from './CreatureChooser';\r\nimport CreatureParamsLineView from './CreatureParamsLineView';\r\n\r\n\r\nfunction enemy(creatureNamesRef, creature, creatures, setCreatures, resultDamage) {\r\n    return (\r\n        <Card className='pt-0 mt-0 mb-1'>\r\n            <Card.Header className='pt-0 pb-0'>\r\n                <CreatureChooser creatureNamesRef={creatureNamesRef} creature={creature} creatures={creatures} setCreatures={setCreatures} />\r\n            </Card.Header>\r\n            <CreatureParamsLineView creature={creature} resultDamage={resultDamage} />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function CreaturesCardView(props) {\r\n    return (\r\n        <Card className={props.className}>\r\n            <Card.Body className=\"pt-2 pb-1 ps-1 pe-1\">\r\n                {enemy(props.creatureNamesRef, props.creatures.creature1, props.creatures, props.setCreatures, props.resultDamage)}\r\n                {enemy(props.creatureNamesRef, props.creatures.creature2, props.creatures, props.setCreatures, props.resultDamage)}\r\n                {enemy(props.creatureNamesRef, props.creatures.creature3, props.creatures, props.setCreatures, props.resultDamage)}\r\n                {enemy(props.creatureNamesRef, props.creatures.creature4, props.creatures, props.setCreatures, props.resultDamage)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","export default class Creature {\r\n\r\n    constructor(creatureInfo) {\r\n        this.creatureInfo = creatureInfo;\r\n        this.physical = creatureInfo.b;\r\n        this.energy = creatureInfo.e;\r\n        this.fire = creatureInfo.f;\r\n        this.poison = creatureInfo.p;\r\n        this.cryo = creatureInfo.c;\r\n        this.name = creatureInfo.name;\r\n        this.tags = creatureInfo.tags;\r\n        this.tags = [];\r\n        for (let i = 0; i < creatureInfo.tags.length; i++) {\r\n            this.tags.push(creatureInfo.tags[i].toLowerCase());\r\n        }\r\n        this.body = creatureInfo.curBody;\r\n        this.radiation = creatureInfo.r;\r\n        this.health = creatureInfo.h;\r\n        this.damageReduction = creatureInfo.damageReduction;\r\n        this.damageReductionOnlyNotBleeding = creatureInfo.damageReductionOnlyNotBleeding;\r\n        this.headMult = creatureInfo.headShot;\r\n        this.bodyMult = creatureInfo.bodyShot;\r\n        this.immuneToRadiation = creatureInfo.immuneToRadiation;\r\n        this.immuneToPoison = creatureInfo.immuneToPoison;\r\n        this.expResistance = true;\r\n        this.reported = false;\r\n        this.maxHit = 0;\r\n        this.hits = 0;\r\n        this.sumDamages = 0;\r\n        this.lifeTime = 0;\r\n        this.lastShotTime = 0;\r\n        this.timeDamages = new Map();\r\n        this.lastTotalDamage = 0;\r\n        this.lastDamageNoTime = 0;\r\n        this.lastExpDamageNoTime = 0;\r\n        this.minNormalShot = 0;\r\n        this.maxNormalShot = 0;\r\n        this.minHeadShot = 0;\r\n        this.maxHeadShot = 0;\r\n        this.minHeadExpShot = 0;\r\n        this.maxHeadExpShot = 0;\r\n        this.minNormalCritShot = 0;\r\n        this.maxNormalCritShot = 0;\r\n        this.minNormalHeadCritShot = 0;\r\n        this.maxNormalHeadCritShot = 0;\r\n        this.minExpShot = 0;\r\n        this.maxExpShot = 0;\r\n        this.minExpCritShot = 0;\r\n        this.maxExpCritShot = 0;\r\n        this.minExpCritHeadShot = 0;\r\n        this.maxExpCritHeadShot = 0;\r\n        this.bulletCount = 1;\r\n        this.minTotalDamage = 0;\r\n        this.maxTotalDamage = 0;\r\n        this.maxTimeEffects = 0;\r\n        this.tdCounter = 0;\r\n        this.sneakPercent = 0;\r\n        this.critPercent = 0;\r\n        this.bleed = false;\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getArmor() {\r\n        return [this.physical, this.energy, this.fire, this.poison, this.cryo, this.radiation];\r\n    }\r\n\r\n    // To speed up the process we reduce armors in advance as they are basically static (except for some cases like TOFT\r\n    // where we ignore it anyway)\r\n    reduceArmor(antiArmor) {\r\n        let b = (1 - antiArmor.b / 100.0);\r\n        let e = (1 - antiArmor.e / 100.0);\r\n        let f = (1 - antiArmor.f / 100.0);\r\n        let p = (1 - antiArmor.p / 100.0);\r\n        let c = (1 - antiArmor.c / 100.0);\r\n        let r = (1 - antiArmor.r / 100.0);\r\n        if (this.tags.includes(\"bug\") || this.tags.includes(\"mirelurk\")) {\r\n            let i = 1 - antiArmor.insect / 100.0;\r\n            b *= i;\r\n            e *= i;\r\n            f *= i;\r\n            p *= i;\r\n            c *= i;\r\n            r *= i;\r\n        }\r\n        this.physical *= b;\r\n        this.physical = (this.physical < 0) ? 0 : this.physical;\r\n        this.energy *= e;\r\n        this.energy = (this.energy < 0) ? 0 : this.energy;\r\n        this.fire *= f;\r\n        this.fire = (this.fire < 0) ? 0 : this.fire;\r\n        this.poison *= p;\r\n        this.poison = (this.poison < 0) ? 0 : this.poison;\r\n        this.cryo *= c;\r\n        this.cryo = (this.cryo < 0) ? 0 : this.cryo;\r\n        this.radiation *= r;\r\n        this.radiation = (this.radiation < 0) ? 0 : this.radiation;\r\n        return this;\r\n    }\r\n\r\n    takeDamage(hit) {\r\n\r\n        // Dead\r\n        if (this.health <= 0) {\r\n            return true;\r\n        }\r\n        this.bulletCount = hit.bulletCount;\r\n        this.lastTotalDamage = 0;\r\n        this.lastDamageNoTime = 0;\r\n        this.lastExpDamageNoTime = 0;\r\n        this.hits += 1;\r\n        this.lifeTime += hit.deltaTime;\r\n        this.lastShotTime = hit.deltaTime;\r\n\r\n        // Run through damages to cause damage\r\n        this.applyDamages(hit, hit.damages);\r\n        if (hit.critShot) {\r\n            this.applyCritDamages(hit, hit.critDamages);\r\n        }\r\n        return this.isDead();\r\n    }\r\n\r\n    // TODO: Should we apply boosts to crit damages? How does this work?\r\n    applyCritDamages(hit, damages) {\r\n        this.applyDamages(hit, damages);\r\n    }\r\n\r\n    // WARNING: Considers every shot is hit (time is not important)\r\n    setupBleed(damages) {\r\n        for (let i = 0; i < damages.length; i++) {\r\n            const damageInfo = damages[i];\r\n            if (damageInfo.kind === 'bleed') {\r\n                this.bleed = true;\r\n                return;\r\n            }\r\n        }\r\n        this.bleed = false;\r\n    }\r\n    applyDamages(hit, damages) {\r\n        this.setupBleed(damages);\r\n        for (let i = 0; i < damages.length; i++) {\r\n            const damageInfo = damages[i];\r\n\r\n            if (damageInfo.time === 0) {\r\n                this.causeNonTimeDamages(hit, damageInfo);\r\n            } else {\r\n                this.gatherTimeDamages(hit, damageInfo);\r\n                this.causeTimeDamages(damageInfo.type);\r\n            }\r\n            if (this.health <= 0) {\r\n                break;\r\n            }\r\n        }\r\n        this.recordDamage(hit);\r\n    }\r\n\r\n    recordDamage(hit) {\r\n        if (this.minTotalDamage === 0 || this.lastTotalDamage < this.minTotalDamage) {\r\n            this.minTotalDamage = this.lastTotalDamage;\r\n        }\r\n        if (this.maxTotalDamage < this.lastTotalDamage) {\r\n            this.maxTotalDamage = this.lastTotalDamage;\r\n        }\r\n        if (!hit.critShot && !hit.headShot) {\r\n            if (this.minNormalShot === 0 || this.lastDamageNoTime < this.minNormalShot) {\r\n                this.minNormalShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.lastDamageNoTime > this.maxNormalShot) {\r\n                this.maxNormalShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.minExpShot === 0 || this.lastExpDamageNoTime < this.minExpShot) {\r\n                this.minExpShot = this.lastExpDamageNoTime;\r\n            }\r\n            if (this.lastExpDamageNoTime > this.maxExpShot) {\r\n                this.maxExpShot = this.lastExpDamageNoTime;\r\n            }\r\n        } else if (!hit.critShot && hit.headShot) {\r\n            if (this.minHeadShot === 0 || this.lastDamageNoTime < this.minHeadShot) {\r\n                this.minHeadShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.lastDamageNoTime > this.maxHeadShot) {\r\n                this.maxHeadShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.minHeadExpShot === 0 || this.lastExpDamageNoTime < this.minHeadExpShot) {\r\n                this.minHeadExpShot = this.lastExpDamageNoTime;\r\n            }\r\n            if (this.lastExpDamageNoTime > this.maxHeadExpShot) {\r\n                this.maxHeadExpShot = this.lastExpDamageNoTime;\r\n            }\r\n        } else if (hit.critShot && !hit.headShot) {\r\n            if (this.minNormalCritShot === 0 || this.lastDamageNoTime < this.minNormalCritShot) {\r\n                this.minNormalCritShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.lastDamageNoTime > this.maxNormalCritShot) {\r\n                this.maxNormalCritShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.minExpCritShot === 0 || this.lastExpDamageNoTime < this.minExpCritShot) {\r\n                this.minExpCritShot = this.lastExpDamageNoTime;\r\n            }\r\n            if (this.lastExpDamageNoTime > this.maxExpCritShot) {\r\n                this.maxExpCritShot = this.lastExpDamageNoTime;\r\n            }\r\n        } else if (hit.critShot && hit.headShot) {\r\n            if (this.minNormalHeadCritShot === 0 || this.lastDamageNoTime < this.minNormalHeadCritShot) {\r\n                this.minNormalHeadCritShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.lastDamageNoTime > this.maxNormalHeadCritShot) {\r\n                this.maxNormalHeadCritShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.minExpCritHeadShot === 0 || this.lastExpDamageNoTime < this.minExpCritHeadShot) {\r\n                this.minExpCritHeadShot = this.lastExpDamageNoTime;\r\n            }\r\n            if (this.lastExpDamageNoTime > this.maxExpCritHeadShot) {\r\n                this.maxExpCritHeadShot = this.lastExpDamageNoTime;\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: What the bonuses will work here? cripple, bash, power, total, crit, sneak?\r\n    gatherTimeDamages(hit, damageInfo) {\r\n        const baseDamage = damageInfo.damage;\r\n        let bonus = hit.bonusMult[damageInfo.type];\r\n        bonus += this.getCreatureBonusMultiplier(hit.creatureDamageBonuses);\r\n        const totalBonus = this.getTotalBonus(hit);\r\n        let value = baseDamage * bonus * totalBonus;\r\n\r\n        // TODO: The way of stacking is unknown (may be there is no stacking at all)\r\n        if (damageInfo.stack) {\r\n            const existedDamages = this.timeDamages.get(damageInfo.index);\r\n            if (existedDamages) {\r\n                if (existedDamages.length < 10) {\r\n                    existedDamages.push({damageType: damageInfo.type, time: damageInfo.time, value: value, index: damageInfo.index});\r\n                }\r\n            } else {\r\n                this.timeDamages.set(damageInfo.index, [{damageType: damageInfo.type, time: damageInfo.time, value: value, index: damageInfo.index}]);\r\n            }\r\n        } else {\r\n            this.timeDamages.set(damageInfo.index, [{damageType: damageInfo.type, time: damageInfo.time, value: value, index: damageInfo.index}]);\r\n        }\r\n    }\r\n\r\n    timeDamagesHandler(items, key, map) {\r\n        let dTime = this.lastShotTime;\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n\r\n            // Protect\r\n            if (dTime === 0) {\r\n                item.time = 0;\r\n            }\r\n            else if (item.time < dTime) {\r\n                dTime = item.time;\r\n                item.time = 0;\r\n            } else {\r\n                item.time -= dTime;\r\n            }\r\n            const damage = item.value * dTime;\r\n            this.tdCounter += 1;\r\n            this.causeFinalDamage(damage, item.damageType, false, false);\r\n        }\r\n    }\r\n\r\n    deleteTimeDamages(items, key, map) {\r\n        map.set(key, items.filter(item => item.time > 0));\r\n    }\r\n\r\n    getMaxTimeEffects() {\r\n        return this.maxTimeEffects;\r\n    }\r\n\r\n    causeTimeDamages(damageType) {\r\n        this.tdCounter = 0;\r\n        this.timeDamages.forEach(this.timeDamagesHandler, this);\r\n        this.timeDamages.forEach(this.deleteTimeDamages);\r\n        if (this.maxTimeEffects < this.tdCounter) {\r\n            this.maxTimeEffects = this.tdCounter;\r\n        }\r\n    }\r\n\r\n    causeNonTimeDamages(hit, damageInfo) {\r\n        const baseDamage = damageInfo.damage;\r\n        let bonus = hit.bonusMult[damageInfo.type];\r\n        bonus += this.getCreatureBonusMultiplier(hit.creatureDamageBonuses);\r\n        bonus += hit.cripple;\r\n        bonus += hit.powerAttack;\r\n        bonus += hit.lastShotBonus;\r\n        if (damageInfo.kind === \"explosive\") {\r\n            bonus += hit.expDTypeBonus;\r\n        }\r\n        let crit = 0;\r\n        if (hit.critShot) {\r\n            this.critPercent = hit.critBoost;\r\n            crit = baseDamage * hit.critBoost;\r\n        }\r\n        if (damageInfo.type === \"dtPhysical\" && damageInfo.kind === \"physical\") {\r\n            bonus += hit.bash;\r\n        }\r\n        if (this.health === this.creatureInfo.h) {\r\n            bonus += hit.firstBloodBonus;\r\n        }\r\n        const totalBonus = this.getTotalBonus(hit);\r\n        let sneak = 0;\r\n        if (hit.sneakShot) {\r\n            this.sneakPercent = hit.sneak;\r\n            sneak = baseDamage * hit.sneak * totalBonus;\r\n        }\r\n        let value = baseDamage * bonus * totalBonus;\r\n        let expValue = this.getExplosiveDamage(value, hit.weaponType, damageInfo.type, damageInfo.kind, hit.expBonus);\r\n        let critExp = 0;\r\n        if (expValue > 0) {\r\n            critExp = crit * hit.expBonus;\r\n        }\r\n        value += sneak;\r\n        value += crit;\r\n        expValue *= hit.tenderizer;\r\n        expValue += critExp;\r\n        const timeDamage = damageInfo.time > 0;\r\n        let finalDamage = this.causeFinalDamage(value, damageInfo.type, hit.headShot, false);\r\n        this.memoDamage(finalDamage, timeDamage, false);\r\n\r\n        // Explosives add for each bullet (no headshot)\r\n        const nonCritExp = expValue - critExp;\r\n        if (expValue > 0) {\r\n            for (let i = 0; i < this.bulletCount; i++) {\r\n                if (i === 0) { // Seems that crit exp must be added only for one bullet?\r\n                    finalDamage = this.causeFinalDamage(expValue, damageInfo.type, false, true);\r\n                } else {\r\n                    finalDamage = this.causeFinalDamage(nonCritExp, damageInfo.type, false, true);\r\n                }\r\n                this.memoDamage(finalDamage, timeDamage, true);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    memoDamage(finalDamage, timeDamage, expDamage) {\r\n        this.lastTotalDamage += finalDamage;\r\n        if (!timeDamage && !expDamage) {\r\n            this.lastDamageNoTime += finalDamage;\r\n        } else if (!timeDamage && expDamage) {\r\n            this.lastExpDamageNoTime += finalDamage;\r\n        }\r\n    }\r\n\r\n    getArmorValue(type) {\r\n        switch(type) {\r\n            case \"dtPhysical\":\r\n                return this.physical;\r\n            case \"dtEnergy\":\r\n                return this.energy;\r\n            case \"dtFire\":\r\n                return this.fire;\r\n            case \"dtPoison\":\r\n                return this.poison;\r\n            case \"dtCryo\":\r\n                return this.cryo;\r\n            case \"dtRadiationExposure\":\r\n                return this.radiation;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    getExplosiveDamage(value, weaponType, damageType, damageKind, expBonus) {\r\n        if (damageKind === 'bleed') {\r\n            return 0;\r\n        }\r\n        if (weaponType !== \"Melee\" && weaponType !== \"Unarmed\" && weaponType !== \"Thrown\") {\r\n            if ((damageType === 'dtPhysical' && damageKind === \"physical\") || damageType === 'dtEnergy') {\r\n                return value * expBonus;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getTotalBonus(hit) {\r\n        let totalBonus = hit.totalDamageBonus * hit.tenderizer;\r\n        totalBonus *= (this.health / this.creatureInfo.h < 0.4) ? hit.executionerBonus : 1.0;\r\n        return totalBonus;\r\n    }\r\n\r\n    getCreatureBonusMultiplier(creatureDamageBonuses) {\r\n        let result = 0;\r\n        if (this.name === \"Dummy\") {\r\n            return 0;\r\n        }\r\n        for (let [, damageBonus] of creatureDamageBonuses) {\r\n            const bonusName = damageBonus.name;\r\n            const bonusMult = damageBonus.value;\r\n            if (this.tags.includes(bonusName) || this.body === bonusName || this.name === bonusName) {\r\n                result += (bonusMult / 100.0);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getLastTotalDamage() {\r\n        return this.lastTotalDamage;\r\n    }\r\n\r\n    causeFinalDamage(value, damageType, isHead, explosive) {\r\n        let finalDamage;\r\n        let damageReduction = 1 - this.damageReduction;\r\n\r\n        // No reduction if bleeding (storm boss)\r\n        if (this.bleed && this.damageReductionOnlyNotBleeding) {\r\n            damageReduction = 1;\r\n        }\r\n        if (explosive && !this.expResistance) {\r\n            finalDamage = value * damageReduction;\r\n        } else {\r\n            finalDamage = this.finalDamage(value, damageType) * damageReduction;\r\n        }\r\n        if (isHead) {\r\n            finalDamage *= this.headMult;\r\n        } else {\r\n            finalDamage *= this.bodyMult;\r\n        }\r\n        this.health -= finalDamage;\r\n\r\n        // It is useful if you need to check average hit to determine the best weapon especially if a creature live time is 0\r\n        this.sumDamages += finalDamage;\r\n        if (finalDamage > this.maxHit) {\r\n            this.maxHit = finalDamage;\r\n        }\r\n        return finalDamage;\r\n    }\r\n\r\n    getAverageHit() {\r\n        if (this.hits === 0) {\r\n            return 0;\r\n        }\r\n        return this.sumDamages / this.hits;\r\n    }\r\n\r\n    finalDamage(value, type) {\r\n        if (type === \"dtRadiationExposure\" && this.immuneToRadiation) {\r\n            return 0;\r\n        } else if (type === \"dtPoison\" && this.immuneToPoison) {\r\n            return 0;\r\n        }\r\n        const armor = this.getArmorValue(type);\r\n        if (armor === Infinity) {\r\n            return 0;\r\n        } else if (armor === 0) {\r\n            return value;\r\n        }\r\n        let k = (0.15 * value / armor) ** 0.365;\r\n        if (k > 0.99) {\r\n            k = 0.99;\r\n        } else if (k < 0.01) {\r\n            k = 0.01;\r\n        }\r\n        return  k * value;\r\n    }\r\n\r\n    isDead() {\r\n        return this.health <= 0;\r\n    }\r\n\r\n    totalTime() {\r\n        return parseInt((this.lifeTime - this.lastShotTime) * 1000);\r\n    }\r\n\r\n    formDeadReport(reloads, reloadsTime) {\r\n        if (!this.reported) {\r\n            this.reported = true;\r\n            this.creatureInfo.averageHit = this.getAverageHit();\r\n            this.creatureInfo.maxHit = this.maxHit;\r\n            this.creatureInfo.sneak = (this.sneakPercent > 0) ? (this.sneakPercent * 100.0).toFixed(1) + \"%\" : \"\";\r\n            this.creatureInfo.crit = (this.critPercent > 0) ? (this.critPercent * 100.0).toFixed(1) + \"%\" : \"\";\r\n            this.creatureInfo.totalDamage = \"↓\" + this.minTotalDamage.toFixed(1) + \" - ↑\" + this.maxTotalDamage.toFixed(1);\r\n            this.creatureInfo.normalDamage = \"(↓\" + (this.minNormalShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxNormalShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.headShotDamage = \"(↓\" + (this.minHeadShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxHeadShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.headExpShotDamage = \"(↓\" + (this.minHeadExpShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxHeadExpShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.critNormalDamage = \"(↓\" + (this.minNormalCritShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxNormalCritShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.critHeadNormalDamage = \"(↓\" + (this.minNormalHeadCritShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxNormalHeadCritShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.explosiveDamage = \"(↓\" + (this.minExpShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxExpShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.critExplosiveDamage = \"(↓\" + (this.minExpCritShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxExpCritShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.critExplosiveHeadDamage = \"(↓\" + (this.minExpCritHeadShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxExpCritHeadShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            if (this.isDead()) {\r\n                this.creatureInfo.ammo = this.hits;\r\n                this.creatureInfo.reloads = reloads;\r\n                this.creatureInfo.reloadsTime = reloadsTime;\r\n                this.creatureInfo.lifeTime = this.totalTime();\r\n            } else { // Damage is to small, just emulate\r\n                const damagedHealth = this.creatureInfo.h - this.health;\r\n                if (damagedHealth === 0) {\r\n                    this.creatureInfo.ammo = Infinity;\r\n                    this.creatureInfo.reloads = Infinity;\r\n                    this.creatureInfo.reloadsTime = Infinity;\r\n                    this.creatureInfo.lifeTime = Infinity;\r\n                } else {\r\n                    const ratio = this.health / damagedHealth;\r\n                    this.creatureInfo.reloads = reloads + parseInt(reloads * ratio);\r\n                    this.creatureInfo.reloadsTime = reloadsTime + parseInt(reloadsTime * ratio);\r\n                    this.creatureInfo.ammo = this.hits + parseInt(this.hits * ratio);\r\n                    this.creatureInfo.lifeTime = parseInt((this.lifeTime + this.lifeTime * ratio - this.lastShotTime) * 1000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import Creature from './Creature';\r\nimport { getDummy } from '../entities/ECreatures';\r\n\r\n\r\nexport default class CreaturesProduction {\r\n\r\n    static produce(materials, antiArmor) {\r\n        const creatures = [];\r\n        for (const property in materials) {\r\n            const creatureInfo = materials[property];\r\n            const creature = new Creature(creatureInfo);\r\n            creature.reduceArmor(antiArmor);\r\n            creatures.push(creature);\r\n        }\r\n        return creatures;\r\n    }\r\n\r\n    static produceByArmor(creatureInfo, armor) {\r\n        const dummy = getDummy(creatureInfo);\r\n        dummy.b = armor[0];\r\n        dummy.e = armor[1];\r\n        dummy.f = armor[2];\r\n        dummy.p = armor[3];\r\n        dummy.c = armor[4];\r\n        dummy.r = armor[5];\r\n        return new Creature(dummy);\r\n    }\r\n}\r\n\r\n","const darkBlue = {\r\n    backgroundColor: '#e6f7ff',\r\n    borderColor: '#0085c6',\r\n    color: '#003e5d',\r\n}\r\n\r\nconst blue = {\r\n    backgroundColor: '#f7fbff',\r\n    borderColor: '#0072a3',\r\n    color: '#1d6db8',\r\n}\r\n\r\nconst indigo = {\r\n    backgroundColor: '#fdfaff',\r\n    borderColor: '#5a008a',\r\n    color: '#430067',\r\n}\r\n\r\nconst red = {\r\n    backgroundColor: '#fff4f4',\r\n    borderColor: '#890000',\r\n    color: '#c90000',\r\n}\r\n\r\nconst orange = {\r\n    backgroundColor: '#fffaf0',\r\n    borderColor: '#ffa800',\r\n    color: '#b56b1d',\r\n}\r\n\r\nconst magenta = {\r\n    backgroundColor: '#fff1fa',\r\n    borderColor: '#ca007c',\r\n    color: '#ab1672',\r\n}\r\n\r\nconst grey = {\r\n    backgroundColor: '#f4f4f4',\r\n    borderColor: '#9f9f9f',\r\n    color: '#3f3f3f',\r\n}\r\n\r\nconst colors = {\r\n    blue: blue,\r\n    darkBlue: darkBlue,\r\n    orange: orange,\r\n    magenta: magenta,\r\n    grey: grey,\r\n    indigo: indigo,\r\n    red: red,\r\n};\r\n\r\nexport default function UTag(props) {\r\n    const colorScheme = colors[props.color];\r\n    const borderRadius = props.bRadius ? props.bRadius : \"2px\";\r\n    const bWidth = props.bWidth ? props.bWidth : \"1px\";\r\n    let bgColor = grey.backgroundColor;\r\n    let borderColor = grey.borderColor;\r\n    let color = grey.color;\r\n    if (colorScheme) {\r\n        bgColor = colorScheme.backgroundColor;\r\n        color = colorScheme.color;\r\n        borderColor = colorScheme.borderColor;\r\n    }\r\n    if (!props.border) {\r\n        borderColor = bgColor;\r\n    }\r\n    const style = {\r\n        width: \"auto\",\r\n        fontSize: \"0.7rem\",\r\n        fontWeight: \"bold\",\r\n        backgroundColor: bgColor,\r\n        borderRadius: borderRadius,\r\n        borderStyle: \"solid\",\r\n        borderWidth: bWidth,\r\n        borderColor: borderColor,\r\n        color: color,\r\n        whiteSpace: \"nowrap\",\r\n    }\r\n    let result;\r\n    if (props.onClick) {\r\n       result = getButton(props, style);\r\n    } else {\r\n        result = getTag(props, style);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getButton(props, style) {\r\n    const className = (props.className) ? \"button-3 \" + props.className : \"button-3\";\r\n    return (<button className={className} title={props.title} style={style} onClick={props.onClick}>{props.children}</button>);\r\n}\r\n\r\nfunction getTag(props, style) {\r\n    return (<div title={props.title} className={props.className} style={style} onClick={props.onClick}>{props.children}</div>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Divider } from 'antd';\r\nimport UTag from '../viewComponents/tag/UTag';\r\nimport { numberToString } from '../helpers/StringHelpers';\r\n\r\n\r\nfunction getColTagView(tag, index, position, mult, onBodyPartClick) {\r\n    return (\r\n        <Col key={tag + index} className={\"m-1 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <UTag title={mult} style={{cursor: 'pointer'}} className=\"m-1 ps-2 pe-2 p-2\" bRadius=\"5px\" border={true} color={\"grey\"} onClick={onBodyPartClick}>\r\n                {tag}\r\n            </UTag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function CreatureBodyView(props) {\r\n    function onBodyPartClick(e) {\r\n        props.creature.bodyShot = e.currentTarget.title;\r\n        props.setCreatures({...props.creatures});\r\n    }\r\n    const body = props.creature.bodyParts;\r\n    if (body) {\r\n        const result = [];\r\n        let index = 0\r\n        for (const partName in body) {\r\n            index += 1;\r\n            const part = body[partName];\r\n            const partText = part.name + \" ‣ \" + numberToString(part.damage_mult, 2) + \"x\"\r\n            result.push(getColTagView(partText, index, \"center\", part.damage_mult, onBodyPartClick));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-2 mb-1\">Body Damage Multipliers</Divider>\r\n                <div className=\"m-3\" />\r\n                <Row className=\"ps-1 pe-1 pb-2\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Divider } from 'antd';\r\nimport UTag from '../viewComponents/tag/UTag';\r\n\r\n\r\nfunction getColTagView(tag, index, position) {\r\n    return (\r\n        <Col key={tag + index} className={\"m-1 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <UTag className=\"m-1 ps-2 pe-2 p-1\" bRadius=\"5px\" border={true} color={\"indigo\"}>\r\n                {tag}\r\n            </UTag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function CreatureBodyView(props) {\r\n    const tags = props.creature.tags;\r\n    if (tags) {\r\n        const result = [];\r\n        for (let i = 0; i < tags.length; i++) {\r\n            result.push(getColTagView(tags[i], i, \"center\"));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-4 mb-1\">Tags</Divider>\r\n                <div className=\"m-3\" />\r\n                <Row className=\"ps-1 pe-1 pb-2\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Divider } from 'antd';\r\nimport UTag from '../viewComponents/tag/UTag';\r\n\r\n\r\nfunction getColTagView(red, index, position, onClick) {\r\n    return (\r\n        <Col key={red + index} className={\"m-1 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <UTag title={red} className=\"m-1 ps-2 pe-2 p-1\" bRadius=\"5px\" border={true} color={\"orange\"} onClick={onClick}>\r\n                {red}\r\n            </UTag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function CreatureReductionView(props) {\r\n    const reductions = props.creature.damageReductions;\r\n    function onClick(e) {\r\n        props.creature.damageReduction = e.currentTarget.title;\r\n        props.setCreatures({...props.creatures});\r\n    }\r\n    if (reductions) {\r\n        const result = [];\r\n        for (let i = 0; i < reductions.length; i++) {\r\n            result.push(getColTagView(reductions[i], i, \"center\", onClick));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-2 mb-1\">Damage Reduction</Divider>\r\n                <div className=\"m-2\" />\r\n                <Row className=\"ps-1 pe-1 pb-2\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { checkLength } from '../helpers/Input';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport CreatureBodyView from './CreatureBodyView';\r\nimport CreatureTagsView from './CreatureTagsView';\r\nimport CreatureReductionView from './CreatureReductionView';\r\nimport { Divider } from 'antd';\r\nimport CreatureChooser from './CreatureChooser';\r\nimport CreatureInfoButton from './CreatureInfoButton';\r\n\r\n\r\nfunction col(name, creatures, setCreatures, creature, res_field, color, canDisable, min=0, max=9999) {\r\n    function onChange(e) {\r\n        checkLength(e);\r\n        if (e.target.value < min) {\r\n            e.target.value = min;\r\n        }\r\n        creature[res_field] = parseFloat(e.target.value);\r\n        setCreatures({\r\n            ...creatures,\r\n        });\r\n    }\r\n    function getCheckbox(canDisable) {\r\n        const chColor = (res_field === \"p\") ? \"#237504\" : \"#a4aa04\";\r\n        function onChange(e) {\r\n            const enabled = (res_field === \"p\") ? creature.immuneToPoison : creature.immuneToRadiation;\r\n            const result = !enabled\r\n            if (res_field === \"p\") {\r\n                creature.immuneToPoison = result;\r\n            } else {\r\n                creature.immuneToRadiation = result;\r\n            }\r\n            setCreatures({\r\n                ...creatures,\r\n            });\r\n        }\r\n        if (canDisable) {\r\n            return (\r\n                <InputGroup.Text style={{width: '2.6rem'}}>\r\n                    <UCheckbox checked={!((res_field === \"p\") ? creature.immuneToPoison : creature.immuneToRadiation)} checkBorderColor={chColor} checkBgColor={chColor} onChange={onChange}></UCheckbox>\r\n                </InputGroup.Text>\r\n            );\r\n        }\r\n        return <></>;\r\n    }\r\n    let disabled = false;\r\n    if (res_field === \"p\" || res_field === \"r\") {\r\n        disabled = (res_field === \"p\") ? creature.immuneToPoison : creature.immuneToRadiation;\r\n    }\r\n    const width = (canDisable) ? '7.45rem' : '10rem';\r\n    const value = creature[res_field];\r\n    return (\r\n        <Col>\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                <InputGroup.Text className={color} style={{ width: width }}>{name}</InputGroup.Text>\r\n                {getCheckbox(canDisable)}\r\n                <Form.Control className='w-auto' disabled={disabled} type=\"number\" min={min} value={value} max={max} maxLength=\"7\" onChange={onChange} />\r\n            </InputGroup>\r\n        </Col>);\r\n}\r\n\r\nconst energy = <>&#9889; Energy</>;\r\nconst ballistic = <>&#128165; Physical</>;\r\nconst fire = <>&#128293; Fire</>;\r\nconst poison = <>☣️ Poison</>;\r\nconst cold = <>❄️ Cryo</>;\r\nconst rad = <>☢️ Radiation</>;\r\nconst health = <>❤️ Health</>;\r\nconst reduction = <>🧽 Reduction</>;\r\nconst headShot = <>🤕 Head Shot</>;\r\nconst bodyShot = <>🧍 Body Shot</>;\r\nconst creatureTypes = {Normal: 'normal', Scorched: 'scorched', Glowing: 'glowing'};\r\n\r\n\r\nfunction CreatureStats({creatureNamesRef, creatures, setCreatures, creature, resultDamage}) {\r\n    console.log(\"CreatureStats\");\r\n    function onRadioTypeClick(e) {\r\n        creature.curBody = e.target.value;\r\n        setCreatures({...creatures});\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-end mb-2\">\r\n                <CreatureInfoButton creature={creature} resultDamage={resultDamage} />\r\n            </div>\r\n            <div className=\"text-center mb-3\">\r\n                <CreatureChooser creatureNamesRef={creatureNamesRef} creature={creature} creatures={creatures} setCreatures={setCreatures} />\r\n                <div className=\"m-2\" />\r\n                <Row>\r\n                    {col(ballistic, creatures, setCreatures, creature, \"b\", \"bg-ballistic\", false)}\r\n                    {col(energy, creatures, setCreatures, creature, \"e\", \"bg-energy\", false)}\r\n                </Row>\r\n                <Row>\r\n                    {col(fire, creatures, setCreatures, creature, \"f\", \"bg-fire\", false)}\r\n                    {col(poison, creatures, setCreatures, creature, \"p\", \"bg-poison\", true)}\r\n                </Row>\r\n                <Row>\r\n                    {col(cold, creatures, setCreatures, creature, \"c\", \"bg-cold\", false)}\r\n                    {col(rad, creatures, setCreatures, creature, \"r\", \"bg-rad\", true)}\r\n                </Row>\r\n                <Row>\r\n                    {col(health, creatures, setCreatures, creature, \"h\", \"bg-health\", false, 1, 999999)}\r\n                    {col(reduction, creatures, setCreatures, creature, \"damageReduction\", \"bg-reduction\", false, 0, 0.9)}\r\n                </Row>\r\n                <Row>\r\n                    {col(headShot, creatures, setCreatures, creature, \"headShot\", \"bg-head-shot\", false, 1, 2)}\r\n                    {col(bodyShot, creatures, setCreatures, creature, \"bodyShot\", \"bg-body-shot\", false, 0.1, 2)}\r\n                </Row>\r\n                <CreatureTagsView creature={creature} />\r\n                <CreatureBodyView creature={creature} creatures={creatures} setCreatures={setCreatures} />\r\n                <CreatureReductionView creature={creature} creatures={creatures} setCreatures={setCreatures} />\r\n                <Divider className=\"p-0 mt-1 mb-3\">Body</Divider>\r\n                <div className=\"pt-1 pb-1 d-flex justify-content-center\">\r\n                    <BSRadio pairs={creatureTypes} selectedValue={creature.curBody} onClick={onRadioTypeClick} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreatureStats;","import { Collapse } from 'antd';\r\nimport CreatureStats from \"../creature/CreatureStats\";\r\n\r\n\r\nfunction getLabel(creature) {\r\n    return (\r\n        <>\r\n            <div style={{float: \"left\", width: \"auto\"}}>\r\n                <b className=\"creature-label-text\">{creature.capName}</b>\r\n            </div>\r\n            <div style={{float: \"right\", width: \"auto\"}}>\r\n                <b style={{color: '#091503'}}>Lvl:</b> <b style={{fontSize: '0.9rem', color: '#bb0000'}}>{creature.level}</b>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nfunction getItems(creatureNamesRef, creatures, setCreatures, resultDamage) {\r\n    const items = [];\r\n    let i = 0;\r\n    for (const name in creatures) {\r\n        const creature = creatures[name];\r\n        const item = {\r\n            key: i,\r\n            label: getLabel(creature),\r\n            children: <CreatureStats creatureNamesRef={creatureNamesRef} creatures={creatures} setCreatures={setCreatures} creature={creature} resultDamage={resultDamage} />,\r\n        };\r\n        i++;\r\n        items.push(item);\r\n    }\r\n    return items;\r\n}\r\n\r\nexport default function CreaturesStats(props) {\r\n    const items = getItems(props.creatureNamesRef, props.creatures, props.setCreatures, props.resultDamage);\r\n    return (\r\n        <div className=\"mt-1 mb-3\">\r\n            <Collapse accordion key={\"Creatures\"} items={items} />\r\n        </div>\r\n    );\r\n}","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport CreaturesStats from \"./CreaturesStats\";\r\nimport CreatureDataView from \"./CreatureDataView\";\r\nimport { memo, useState } from 'react';\r\nimport { defaultCreatures, defaultCreaturesAlt } from '../entities/ECreatures';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport StaticPopoverRenderer from '../viewComponents/popover/StaticPopoverRenderer';\r\nimport Global from '../helpers/Global';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { buildExtraDamageView, buildExtraDamageButtons } from '../main/SummaryView';\r\nimport { Divider } from 'antd';\r\n\r\n\r\nconst questionPopoverHeader = (<b>Creatures</b>);\r\n\r\nconst questionPopoverBody = (\r\n    <>\r\n        <div className=\"mb-2\"><b>Parsed from:</b></div>\r\n        <div><i>{Global.creatureParseVersion}</i></div>\r\n        <div><i>{Global.creatureParseVersionName}</i></div>\r\n    </>\r\n);\r\n\r\nconst questionPopover = new StaticPopoverRenderer(questionPopoverHeader, questionPopoverBody, 'CreatureViewQuestionPopoverPlace');\r\n\r\nconst CreaturesView = memo(function CreaturesView({creatureNamesRef, creatures, setCreatures, resultDamage, extraDamage, setExtraDamage, boostDamageRef, setBoostDamage}) {\r\n    console.log(\"CreaturesView\")\r\n    const [alt, setAlt] = useState(false);\r\n    function resetCreatures(e) {\r\n        if (alt) {\r\n            setCreatures(defaultCreaturesAlt());\r\n        } else {\r\n            setCreatures(defaultCreatures());\r\n        }\r\n    }\r\n    function checkAlt(e) {\r\n        setAlt(!alt);\r\n    }\r\n    function onQClick(e) {\r\n        questionPopover.renderToggle(e.target);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"4\">\r\n                <Accordion.Header>\r\n                    <div id=\"CreatureViewQuestionPopoverPlace\"></div>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '12rem'}}>\r\n                            <span className=\"ac-text\">Creatures</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '2rem'}} onClick={onQClick}>?</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <div >\r\n                        <InputGroup className=\"d-flex justify-content-center mt-1 mb-1\">\r\n                            <InputGroup.Text>\r\n                                <UCheckbox onChange={checkAlt} checked={alt}><small><b className=\"ps-1\">Alt</b></small></UCheckbox>\r\n                            </InputGroup.Text>\r\n                            <Button size=\"sm\" variant=\"warning\" onClick={resetCreatures}><b>Reset to Bosses</b></Button>\r\n                        </InputGroup>\r\n                    </div>\r\n                    <Divider className=\"mb-2\">Extra Damage</Divider>\r\n                    {buildExtraDamageView(extraDamage, setExtraDamage, boostDamageRef, setBoostDamage, false)}\r\n                    <div className=\"m-2\" />\r\n                    {buildExtraDamageButtons(extraDamage, setExtraDamage)}\r\n                    <Divider className=\"mt-3 mb-3\"></Divider>\r\n                    <CreaturesStats creatureNamesRef={creatureNamesRef} creatures={creatures} setCreatures={setCreatures} resultDamage={resultDamage} />\r\n                    <CreatureDataView />\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default CreaturesView;","import Col from 'react-bootstrap/Col';\r\nimport { keyValueBadge } from '../helpers/RowBuilder';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { memo } from 'react';\r\nimport { Divider } from 'antd';\r\n\r\n\r\nfunction resultBadges(style, left1, right1, left2, right2) {\r\n    return (\r\n        <div className=\"col d-flex justify-content-center\">\r\n            <Stack className='pb-2' direction=\"horizontal\" gap={1}>\r\n                {keyValueBadge(style, '9rem', left1,  right1)}\r\n                {keyValueBadge(style, '9rem', left2,  right2)}\r\n            </Stack>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AAView = memo(function AAView({resultDamage}) {\r\n    if (!resultDamage.antiArmor) {\r\n        return (<></>);\r\n    }\r\n    const antiArmor = resultDamage.antiArmor;\r\n    let aab = antiArmor.b.toFixed(1) + \"%\";\r\n    let aae = antiArmor.e.toFixed(1) + \"%\";\r\n    let aaf = antiArmor.f.toFixed(1) + \"%\";\r\n    let aac = antiArmor.c.toFixed(1) + \"%\";\r\n    let aap = antiArmor.p.toFixed(1) + \"%\";\r\n    let aar = antiArmor.r.toFixed(1) + \"%\";\r\n    function getAATail(aa, aai) {\r\n        let aav = (1 - ((1 - aa / 100.0) * aai)) * 100.0;\r\n        return \" (\" + aav.toFixed(1) + \"%)\";\r\n    }\r\n    if (antiArmor.insect > 0) {\r\n        let aai = 1 - antiArmor.insect / 100.0;\r\n        aab += getAATail(antiArmor.b, aai);\r\n        aae += getAATail(antiArmor.e, aai);\r\n        aaf += getAATail(antiArmor.f, aai);\r\n        aac += getAATail(antiArmor.c, aai);\r\n        aap += getAATail(antiArmor.p, aai);\r\n        aar += getAATail(antiArmor.r, aai);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className='mt-1 mb-2'>🛡️ Anti Armor</Divider>\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        {resultBadges(\"badge bg-light-cream-outline ms-1 me-1 mb-1\", \"💥\", aab, \"⚡\", aae)}\r\n                        {resultBadges(\"badge bg-light-cream-outline ms-1 me-1 mb-1\", \"🔥\", aaf, \"❄️\", aac)}\r\n                        {resultBadges(\"badge bg-light-cream-outline ms-1 me-1\", \"☢️\", aar, \"☣️\", aap)}\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default AAView;","import { memo } from 'react';\r\nimport { Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nimport DamageDetailsCard from './DamageDetailsCard';\r\nimport AAView from './AAView';\r\n\r\n\r\nfunction getDamageViews(resultDamage) {\r\n    let damageViews = [];\r\n    if (!resultDamage.damageDetails) {\r\n        return (<></>);\r\n    }\r\n    for (let i = 0; i < resultDamage.damageDetails.length; i++) {\r\n        damageViews.push(<DamageDetailsCard key={i} resultDamage={resultDamage} damageData={resultDamage.damageDetails[i]} />);\r\n    }\r\n    if (damageViews.length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className='mt-3 mb-2'>💢 Damage</Divider>\r\n            <Row>\r\n                {damageViews}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst DamageDetails = memo(function DamageDetails({resultDamage}) {\r\n    if (!resultDamage) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <AAView resultDamage={resultDamage} />\r\n            {getDamageViews(resultDamage)}\r\n        </>\r\n    );\r\n});\r\n\r\nexport default DamageDetails;","import Card from 'react-bootstrap/Card';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport { memo, useState } from 'react';\r\nimport { getSymbolStyle } from '../helpers/AdditionalDView';\r\nimport { getNumberEmoji } from '../helpers/Emoji.js';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\n\r\nfunction getRow(leftValue, rightValue, leftColor, rightColor, show=true) {\r\n    return (show) ? keyValueRow((<span className=\"pt-0 pb-0\">{leftValue}</span>), (<span className=\"pt-0 pb-0\"><strong>{rightValue}</strong></span>), leftColor, rightColor) : (<></>);\r\n}\r\n\r\nfunction showExplosive(damageData, resultDamage) {\r\n    return damageData.type === \"dtPhysical\" && damageData.kind === \"physical\" && damageData.time === 0 && resultDamage.explosive > 0;\r\n}\r\n\r\nfunction getAnyCreatureBonus(resultDamage) {\r\n    for (let [, bonus] of resultDamage.creatureBonus) {\r\n        if (bonus.name === \"any\") {\r\n            return bonus.value / 100.0;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getCreatureNames(resultDamage) {\r\n    let result = [\"general\"];\r\n    for (let [key,] of resultDamage.creatureBonus) {\r\n        result.push(key);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getResult(resultDamage, damageData, additionalBonus=0) {\r\n    const damageValue = damageData.damage * ((damageData.time > 0) ? damageData.time : 1);\r\n    let bonusMult = resultDamage.bonusMult[damageData.type] - 1 + getAnyCreatureBonus(resultDamage) + additionalBonus;\r\n    if (damageData.kind === \"explosive\") {\r\n        bonusMult += resultDamage.expDTypeBonus;\r\n    }\r\n    const bonusDamage = damageValue * bonusMult;\r\n    const bonusText = \"+\" + (bonusMult * 100).toFixed(1) + \"% (+\" + bonusDamage.toFixed(1) + \")\";\r\n    const crit = resultDamage.displayedCrit / 100.0;\r\n    const critValue = damageValue * crit;\r\n    const critText = \"+\" + resultDamage.displayedCrit.toFixed(1) + \"%  (+\" + critValue.toFixed(1) + \")\";\r\n    const sneak = (resultDamage.isSneak) ? resultDamage.displayedSneak / 100.0 : 0;\r\n    const totalSneakValue = sneak * damageValue;\r\n    const totalDamageBonusMin = resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer;\r\n    const totalDamageBonusMinValue = (damageValue + bonusDamage + totalSneakValue) * (totalDamageBonusMin - 1);\r\n    const totalDamageBonusMinPercent = (totalDamageBonusMin - 1) * 100;\r\n    const totalDamageBonusMax = resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer * resultDamage.totalBonus.executioner;\r\n    const totalDamageBonusMaxValue = (damageValue + bonusDamage + totalSneakValue) * (totalDamageBonusMax - 1);\r\n    const totalDamageBonusMaxPercent = (resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer * resultDamage.totalBonus.executioner - 1) * 100;\r\n    let totalDamageBonusText = \"\";\r\n    if (totalDamageBonusMin === totalDamageBonusMax) {\r\n        totalDamageBonusText = \"+\" + totalDamageBonusMinPercent.toFixed(1) + \"% (+\" + totalDamageBonusMinValue.toFixed(1) + \")\";\r\n    } else {\r\n        totalDamageBonusText = \"+\" + totalDamageBonusMinPercent.toFixed(1) + \"% / +\" + totalDamageBonusMaxPercent.toFixed(1) + \"%\"\r\n        + \" (+\" + totalDamageBonusMinValue.toFixed(1) + \" / +\" + totalDamageBonusMaxValue.toFixed(1) + \")\";\r\n    }\r\n    const sneakText = \"+\" + resultDamage.displayedSneak.toFixed(1) + \"% (+\" + totalSneakValue.toFixed(1) + \")\";\r\n    const resultSneakValue = (resultDamage.isSneak) ? totalSneakValue : 0;\r\n    const resultCritValue = (resultDamage.isCrit) ? critValue : 0;\r\n    const totalDamageMin = (damageValue + bonusDamage + resultSneakValue) * totalDamageBonusMin + resultCritValue;\r\n    const totalDamageMax = (damageValue + bonusDamage + resultSneakValue) * totalDamageBonusMax + resultCritValue;\r\n    const explosiveValueMin = (damageValue + bonusDamage) * totalDamageBonusMin * resultDamage.explosive / 100.0;\r\n    const explosiveValueMax = (damageValue + bonusDamage) * totalDamageBonusMax * resultDamage.explosive / 100.0;\r\n    let explosiveText = explosiveValueMin.toFixed(1);\r\n    const explosiveCritValueMin = critValue * resultDamage.explosive / 100.0 + explosiveValueMin;\r\n    const explosiveCritValueMax = critValue * resultDamage.explosive / 100.0 + explosiveValueMax;\r\n    let explosiveCritText = explosiveCritValueMin.toFixed(1);\r\n    let totalDamageText = totalDamageMin.toFixed(1);\r\n    if (totalDamageMin < totalDamageMax) {\r\n        totalDamageText += \" (\" + totalDamageMax.toFixed(1) + \")\";\r\n        explosiveText += \" (\" + explosiveValueMax.toFixed(1) + \")\";\r\n        explosiveCritText += \" (\" + explosiveCritValueMax.toFixed(1) + \")\";\r\n    }\r\n    if (damageData.time > 0) {\r\n        const tail = \" / \" + damageData.time.toFixed(0) + \" sec.\";\r\n        totalDamageText += tail;\r\n        explosiveText += tail;\r\n        explosiveCritText += tail;\r\n    }\r\n    return {\r\n        base: damageData.damage.toFixed(1),\r\n        bonus: bonusText,\r\n        totalBonus: totalDamageBonusText,\r\n        explosive: resultDamage.explosive.toFixed(1),\r\n        sneak: sneakText,\r\n        crit: critText,\r\n        total: totalDamageText,\r\n        totalExp: explosiveText,\r\n        totalExpCrit: explosiveCritText,\r\n    };\r\n}\r\n\r\nconst DamageDetailsCard = memo(function DamageDetailsCard({resultDamage, damageData}) {\r\n    const [creature, setCreature] = useState(\"general\");\r\n    if (creature !== \"general\" && !resultDamage.creatureBonus.get(creature)) {\r\n        setCreature(\"general\");\r\n    }\r\n    const numberEmoji = getNumberEmoji(damageData.index + 1);\r\n    const onDropdownSelect = (e) => {\r\n        setCreature(e);\r\n    };\r\n    const currentCreature = resultDamage.creatureBonus.get(creature);\r\n    let additionalBonus = 0;\r\n    if (currentCreature) {\r\n        additionalBonus = currentCreature.value / 100.0;\r\n    }\r\n    const result = getResult(resultDamage, damageData, additionalBonus);\r\n    const creatureNames = getCreatureNames(resultDamage);\r\n    let dropdownItems = [];\r\n    for (let i = 0; i < creatureNames.length; i++) {\r\n        const creatureName = creatureNames[i];\r\n        dropdownItems.push(<Dropdown.Item key={i} eventKey={creatureName}>{creatureName}</Dropdown.Item>);\r\n    }\r\n    return (\r\n        <div className=\"col d-flex justify-content-center mb-2\">\r\n            <Card className=\"main-display-adjustable shadow-outline-unselected\">\r\n                <Card.Header className=\"ps-3 p-1\">\r\n                    <div className=\"d-flex\">\r\n                        <div style={{width: '33%'}} className=\"d-flex justify-content-start center-text\">\r\n                            {getSymbolStyle(damageData.type, damageData.kind)[0]}\r\n                        </div>\r\n                        <div style={{width: '34%'}} className=\"d-flex justify-content-center\">\r\n                            <DropdownButton variant='default' size=\"sm\" onSelect={onDropdownSelect} title={<strong><small>{creature}</small></strong>}>\r\n                                {dropdownItems}\r\n                            </DropdownButton>\r\n                        </div>\r\n                        <div style={{width: '33%'}} className=\"d-flex justify-content-end me-2 center-text\">\r\n                            {numberEmoji}\r\n                        </div>\r\n                    </div>\r\n\r\n                </Card.Header>\r\n                <Card.Body className=\"pt-0 pb-0 ps-2 pe-2\">\r\n                    {getRow(\"Base Damage:\", result.base, \"default\", \"purple\")}\r\n                    {getRow(\"Bonus:\", result.bonus, \"default\", \"purple\")}\r\n                    {getRow(\"Sneak:\", result.sneak, \"default\", \"purple\", resultDamage.isSneak)}\r\n                    {getRow(\"Total Bonus:\", result.totalBonus, \"default\", \"purple\")}\r\n                    {getRow(\"Explosive:\", result.explosive + \"%\", \"default\", \"purple\", showExplosive(damageData, resultDamage))}\r\n                    {getRow(\"Crit:\", result.crit, \"default\", \"purple\", resultDamage.isCrit)}\r\n                </Card.Body>\r\n                <Card.Footer className=\"ps-2 pe-2 text-muted\">\r\n                    {getRow(\"Total Damage:\", result.total, \"default\", \"red\")}\r\n                    {getRow(\"Explosive:\", result.totalExp, \"default\", \"red\", showExplosive(damageData, resultDamage))}\r\n                    {getRow(\"Explosive Crit:\", result.totalExpCrit, \"default\", \"red\", showExplosive(damageData, resultDamage) && resultDamage.isCrit)}\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default DamageDetailsCard;\r\n","import CreaturesProduction from '../creature/CreaturesProduction';\r\n\r\n\r\nexport default class DamageEmulator {\r\n    constructor(weapon, creatureInfos) {\r\n        this.weapon = weapon;\r\n        this.creatureInfos = creatureInfos;\r\n    }\r\n\r\n    needToStopByTime(timeLimit, creatures) {\r\n        if (!timeLimit) {\r\n            return false;\r\n        }\r\n        const name = timeLimit[0];\r\n        const time = timeLimit[1];\r\n        if (name === \"average\") {\r\n            let totalTime = 0;\r\n            for (let i = 0; i < creatures.length; i++) {\r\n                const creature = creatures[i];\r\n                totalTime += creature.totalTime();\r\n            }\r\n            totalTime = Math.floor(totalTime / 4);\r\n            return totalTime > time;\r\n        }\r\n        for (let i = 0; i < creatures.length; i++) {\r\n            const creature = creatures[i];\r\n            if (creature.name === name) {\r\n                return (creature.totalTime() > time);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // timeLimit = [\"Average\", time], [\"creaturename\", time]\r\n    emulate(steps=10000, timeLimit=null) {\r\n        const creatures = CreaturesProduction.produce(this.creatureInfos, this.weapon.getAntiArmor());\r\n        let step = 0;\r\n        for (; step < steps; step++) {\r\n            let deadCount = 0;\r\n            const hit = this.weapon.hit();\r\n            for (let i = 0; i < creatures.length; i++) {\r\n                const creature = creatures[i];\r\n                if (creature.takeDamage(hit)) {\r\n                    creature.formDeadReport(this.weapon.getReloadsCount(), this.weapon.getReloadsTime());\r\n                    deadCount += 1;\r\n                }\r\n            }\r\n            if (deadCount === creatures.length || this.needToStopByTime(timeLimit, creatures)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Check death and form a report\r\n        const resultArmor = new Map();\r\n        for (let i = 0; i < creatures.length; i++) {\r\n            const creature = creatures[i];\r\n            if (!creature.isDead()) {\r\n                creature.formDeadReport(this.weapon.getReloadsCount(), this.weapon.getReloadsTime());\r\n            }\r\n            resultArmor.set(creature.getName(), creature.getArmor());\r\n        }\r\n\r\n        return  {\r\n            weaponName: this.weapon.getName(),\r\n            weaponType: this.weapon.getType(),\r\n            defaultWeaponName: this.weapon.getDefaultName(),\r\n            damageDetails: this.weapon.getDamages(),\r\n            expDTypeBonus: this.weapon.getExplosiveDamageTypeBonus(),\r\n            bonusMult: this.weapon.getBonusMult(),\r\n            totalBonus: this.weapon.getTotalBonus(),\r\n            tDamage: this.weapon.getDisplayedDamage(),\r\n            antiArmor: this.weapon.getAntiArmor(),\r\n            displayedCrit: this.weapon.getCritBonus(),\r\n            displayedSneak: this.weapon.getSneakBonus(),\r\n            isCrit: this.weapon.isCrit(),\r\n            isSneak: this.weapon.isSneak(),\r\n            creatureBonus: this.weapon.getCreatureBonus(),\r\n            strengthBonus: this.weapon.getStrengthBonus(),\r\n            explosive: this.weapon.getExplosiveBonus(),\r\n            shotSize: this.weapon.getShotSize(),\r\n            reloadTime: this.weapon.getReloadTime(),\r\n            fireRate: this.weapon.getFireRate(),\r\n            ammoCapacity: this.weapon.getAmmoCapacity(),\r\n            strength: this.weapon.getStrength(),\r\n            resultArmor: resultArmor,\r\n        };\r\n    }\r\n}","export default class Weapon {\r\n\r\n    constructor(weaponSpecsAssembler) {\r\n        this.damages = weaponSpecsAssembler.getDamages();\r\n        this.name = weaponSpecsAssembler.getWeaponName();\r\n        this.defaultName = weaponSpecsAssembler.getDefaultWeaponName();\r\n        this.critDamages = weaponSpecsAssembler.getCritDamages();\r\n        this.shotSize = weaponSpecsAssembler.getShotSize();\r\n        this.reloadTime = weaponSpecsAssembler.getReloadTime();\r\n        this.fireRate = weaponSpecsAssembler.getFireRate();\r\n        this.ammoCapacity = weaponSpecsAssembler.getAmmoCapacity();\r\n        this.antiArmor = weaponSpecsAssembler.getAntiArmor();\r\n        this.strengthBoost = weaponSpecsAssembler.getStrengthBoost();\r\n        this.strength = weaponSpecsAssembler.getStrength();\r\n        this.bonusMult = weaponSpecsAssembler.getBaseDamageMult();\r\n        this.critBoost = weaponSpecsAssembler.getCritBoost();\r\n        this.explosiveBonus = weaponSpecsAssembler.getExplosiveBonus();\r\n        this.explosiveDamageTypeBonus = weaponSpecsAssembler.getExplosivePhysicalBonus();\r\n        this.weaponType = weaponSpecsAssembler.getWeaponType();\r\n        this.headShotFrequency = weaponSpecsAssembler.getHeadShotFrequency();\r\n        this.critShotFrequency = weaponSpecsAssembler.getCritShotFrequency();\r\n        this.sneakShotFrequency = weaponSpecsAssembler.getSneakShotFrequency();\r\n        this.creatureDamageBonuses = weaponSpecsAssembler.getCreatureDamageBonuses();\r\n        this.firstBloodBonus = weaponSpecsAssembler.getFirstBloodBonus();\r\n        this.lastShotBonus = weaponSpecsAssembler.getLastShotBonus();\r\n        this.cripple = weaponSpecsAssembler.getCripple();\r\n        this.bash = weaponSpecsAssembler.getBash();\r\n        this.powerAttack = weaponSpecsAssembler.getPowerAttack();\r\n        this.chargeTime = weaponSpecsAssembler.getChargeTime();\r\n        this.chargePenalty = weaponSpecsAssembler.getChargePenalty();\r\n        this.sneak = weaponSpecsAssembler.getSneak();\r\n        this.totalDamageBonus = weaponSpecsAssembler.getTotalDamageBonus();\r\n        this.magazine = this.ammoCapacity;\r\n        this.resultDamage = {bulletCount: this.shotSize, expDTypeBonus: this.explosiveDamageTypeBonus, lastShotBonus: 0, firstBloodBonus: this.firstBloodBonus, creatureDamageBonuses: this.creatureDamageBonuses, headShot: false, critShot: false, sneakShot: false, weaponType: this.weaponType,\r\n            deltaTime: 0, powerAttack: this.powerAttack, bash: this.bash, cripple: 0, bonusMult: this.bonusMult,\r\n            expBonus: this.explosiveBonus, sneak: this.sneak, totalDamageBonus: this.totalDamageBonus.value, critBoost: this.critBoost,\r\n            tenderizer: this.totalDamageBonus.tenderizer, executionerBonus: this.totalDamageBonus.executioner, damages: [],\r\n            critDamages: this.critDamages};\r\n        this.reloadsCount = 0;\r\n        this.reloadTimeCounting = true;\r\n        this.alwaysMaxHit = false;\r\n        this.reloadsTotalTime = 0;\r\n        this.hitCount = 0;\r\n        this.hit();\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getDefaultName() {\r\n        return this.defaultName;\r\n    }\r\n\r\n    getType() {\r\n        return this.weaponType;\r\n    }\r\n\r\n    setLastShotBonus(value) {\r\n        this.lastShotBonus = value;\r\n    }\r\n\r\n    setFirstBloodBonus(value) {\r\n        this.firstBloodBonus = value;\r\n        this.resultDamage.firstBloodBonus = value;\r\n    }\r\n\r\n    getChargeTime() {\r\n        return this.chargeTime;\r\n    }\r\n\r\n    setChargeTime(value) {\r\n        this.chargeTime = value;\r\n    }\r\n\r\n    getDamages() {\r\n        return this.damages;\r\n    }\r\n\r\n    getCreatureBonus() {\r\n        return this.creatureDamageBonuses;\r\n    }\r\n\r\n    getExplosiveDamageTypeBonus() {\r\n        return this.explosiveDamageTypeBonus;\r\n    }\r\n\r\n    getBonusMult() {\r\n        return this.bonusMult;\r\n    }\r\n\r\n    getTotalBonus() {\r\n        return this.totalDamageBonus;\r\n    }\r\n\r\n    setFireRate(fireRate) {\r\n        this.fireRate = fireRate;\r\n    }\r\n\r\n    setAlwaysMaxHit(flag) {\r\n        this.alwaysMaxHit = flag;\r\n    }\r\n\r\n    disableReloadTimeCounting() {\r\n        this.reloadTimeCounting = false;\r\n    }\r\n\r\n    getMaxHit() {\r\n        return this.hit();\r\n    }\r\n\r\n    getShotSize() {\r\n        return this.shotSize;\r\n    }\r\n\r\n    getStrength() {\r\n        return this.strength;\r\n    }\r\n\r\n    getStrengthBonus() {\r\n        return this.strengthBoost;\r\n    }\r\n\r\n    getCritBonus() {\r\n        return parseInt(this.critBoost * 100.0);\r\n    }\r\n\r\n    getSneakBonus() {\r\n        return parseInt(this.sneak * 100.0);\r\n    }\r\n\r\n    getExplosiveBonus() {\r\n        return this.explosiveBonus * 100.0;\r\n    }\r\n\r\n    getFireRate() {\r\n        return this.fireRate;\r\n    }\r\n\r\n    getAmmoCapacity() {\r\n        return this.ammoCapacity;\r\n    }\r\n\r\n    getReloadTime() {\r\n        return this.reloadTime;\r\n    }\r\n\r\n    getAntiArmor() {\r\n        return this.antiArmor;\r\n    }\r\n\r\n    // Just to display total value as in pip boy (no time)\r\n    getDisplayedDamage() {\r\n        let result = 0;\r\n        let hitCount = (this.shotSize === 0) ? 1 : this.shotSize;\r\n        for (let i = 0; i < this.damages.length; i++) {\r\n            const damage = this.damages[i];\r\n            if (!damage.isUsed || damage.time > 0) {\r\n                continue;\r\n            }\r\n            let curDamage = damage.damage * this.bonusMult[damage.type];\r\n            let expDamage = 0;\r\n            if (damage.type === 'dtPhysical' && damage.kind === 'physical') {\r\n                expDamage = curDamage * this.explosiveBonus;\r\n            }\r\n            curDamage /= hitCount;\r\n            curDamage += expDamage;\r\n            result += curDamage;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getReloadsCount() {\r\n        return this.reloadsCount;\r\n    }\r\n\r\n    getReloadsTime() {\r\n        return this.reloadsTotalTime;\r\n    }\r\n\r\n    isSneak() {\r\n        return this.sneakShotFrequency !== 0;\r\n    }\r\n\r\n    isCrit() {\r\n        return this.critShotFrequency !== 0;\r\n    }\r\n\r\n    // Result array is reused every hit, editing is prohibited as it contains ref data\r\n    hit() {\r\n        this.resultDamage.damages.length = 0;\r\n        let dTime = 10 / this.fireRate;\r\n\r\n        // Charge\r\n        dTime += this.chargeTime;\r\n\r\n        // Reload\r\n        if (this.magazine === 0) {\r\n            this.magazine = this.ammoCapacity;\r\n            this.reloadsCount += 1;\r\n            this.reloadsTotalTime += this.reloadTime;\r\n            if (this.reloadTimeCounting) {\r\n                dTime += this.reloadTime;\r\n            }\r\n        }\r\n\r\n        // Last shot\r\n        if (this.magazine === 1 && this.chanceTriggered(25)) {\r\n            this.resultDamage.lastShotBonus = this.lastShotBonus;\r\n        } else {\r\n            this.resultDamage.lastShotBonus = 0;\r\n        }\r\n        this.magazine -= 1;\r\n        this.hitCount += 1;\r\n        this.resultDamage.deltaTime = dTime;\r\n\r\n        // Head shot\r\n        if (this.headShotFrequency === 0) {\r\n            this.resultDamage.headShot = false;\r\n        } else {\r\n            this.resultDamage.headShot = this.chanceTriggered(this.headShotFrequency);\r\n        }\r\n\r\n        // Crit shot\r\n        if (this.critShotFrequency === 0) {\r\n            this.resultDamage.critShot = false;\r\n        } else {\r\n            this.resultDamage.critShot = this.hitIfFrequency(this.critShotFrequency);\r\n        }\r\n\r\n        // Sneak\r\n        if (this.sneakShotFrequency === 0) {\r\n            this.resultDamage.sneakShot = false;\r\n        } else {\r\n            this.resultDamage.sneakShot = this.hitIfFrequency(this.sneakShotFrequency);\r\n        }\r\n\r\n        // Cripple\r\n        if (this.chanceTriggered(this.cripple.chance) || this.resultDamage.headShot) {\r\n            this.resultDamage.cripple = this.cripple.value;\r\n        } else {\r\n            this.resultDamage.cripple = 0;\r\n        }\r\n\r\n        // Damages\r\n        for (let i = 0; i < this.damages.length; i++) {\r\n            const damage = this.damages[i];\r\n            if (damage.damage > 0 && damage.isUsed && this.chanceTriggered(damage.finalAccuracy) && this.chanceTriggered(damage.chance)) {\r\n                damage.damage = damage.defDamage * this.chargePenalty;\r\n                this.resultDamage.damages.push(damage);\r\n            }\r\n        }\r\n        return this.resultDamage;\r\n    }\r\n\r\n    hitIfFrequency(frequency) {\r\n        if (this.alwaysMaxHit) {\r\n            return true;\r\n        }\r\n        return this.hitCount % frequency === 0;\r\n    }\r\n\r\n    // between 0 - 100\r\n    chanceTriggered(chance) {\r\n        if (this.alwaysMaxHit) {\r\n            return true;\r\n        }\r\n        return Math.random() < (chance / 100.0);\r\n    }\r\n}","import { intersects } from \"../helpers/Array\";\r\n\r\n\r\nexport default class StuffBoostsCollector {\r\n\r\n    static collectAllItems(stuffBoosts, property, collector) {\r\n        stuffBoosts.forEach((value, key) => {\r\n            const maxItem = StuffBoostsCollector.getMaxItem(value);\r\n            if (maxItem.property === property) {\r\n                collector(maxItem);\r\n            }\r\n        });\r\n    }\r\n\r\n    static weaponNameOrTypeSatisfied(weaponName, weaponType, maxItem) {\r\n        if (maxItem.name) {\r\n            return maxItem.name.split(\",\").includes(weaponName);\r\n        } else if (maxItem.type) {\r\n            let types = maxItem.type.split(\",\");\r\n            if (types.length === 0) {\r\n                return true;\r\n            }\r\n            const lastType = types[0];\r\n            let satisfyNameOrType;\r\n            if (lastType === \"!\") { // Not include\r\n                types = types.slice(1);\r\n                satisfyNameOrType = true;\r\n            } else {\r\n                satisfyNameOrType = false;\r\n            }\r\n            if (types.includes(weaponType)) {\r\n                satisfyNameOrType = !satisfyNameOrType;\r\n            }\r\n            return satisfyNameOrType;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static collect(weaponName, weaponType, weaponTags, stuffBoosts, property, customStacker=null) {\r\n        let result = 0.0;\r\n        stuffBoosts.forEach((value, key) => {\r\n            const maxItem = StuffBoostsCollector.getMaxItem(value);\r\n            const satisfyNameOrType = StuffBoostsCollector.weaponNameOrTypeSatisfied(weaponName, weaponType, maxItem);\r\n            let additional = [];\r\n            if (maxItem.tag) {\r\n                additional = maxItem.tag.split(\",\");\r\n            }\r\n            let satisfyTags = (additional.length > 0) ? intersects(additional, weaponTags) : true;\r\n            if (maxItem.property === property && satisfyTags && satisfyNameOrType) {\r\n                if (customStacker) {\r\n                    customStacker(maxItem.value);\r\n                } else {\r\n                    result += maxItem.value;\r\n                }\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    static getMaxItem(items) {\r\n        if (items.length === 1) {\r\n            return items[0];\r\n        }\r\n        let max = null;\r\n        let maxItem = null;\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n            if (max === null || item.value > max) {\r\n                maxItem = item;\r\n                max = item.value;\r\n            }\r\n        }\r\n        return maxItem;\r\n    }\r\n}","export function intersects(array1, array2) {\r\n    if (!array1 || array1 === null || array1.length === 0 || !array2 || array2 === null || array2.length === 0) {\r\n        return false;\r\n    }\r\n    let arrayLess = array1;\r\n    let arrayMore = array2;\r\n    if (array1.length > array2.length) {\r\n        arrayLess = array2;\r\n        arrayMore = array1;\r\n    }\r\n    for (let i = 0; i < arrayLess.length; i++) {\r\n        const value = arrayLess[i];\r\n        if (arrayMore.includes(value)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function deleteItemFromArray(array, index) {\r\n    array.splice(index, 1);\r\n}","\r\n// TODO: adjust accuracy by using default accuracy and possible effects from legendary, perks, consumables\r\n// Currently 100\r\nexport default class AccuracyAdjuster {\r\n\r\n    static adjustByLegendary(damages, legendary) {\r\n\r\n    }\r\n\r\n    static adjustByPerks(damages, legendary) {\r\n\r\n    }\r\n\r\n    static adjustByConsumables(damages, consumables) {\r\n\r\n    }\r\n}","import StuffBoostsCollector from '../../boostStuff/StuffBoostsCollector';\r\nimport { makeDamageItemCopy, buildBleedDamage } from '../../helpers/mods/DamageSetter';\r\nimport AccuracyAdjuster from '../../helpers/AccuracyAdjuster';\r\n\r\n\r\nexport default class WeaponSpecsAssembler {\r\n    \r\n    constructor(wSpec, perks, extraDamageSettings, additionalDamages, stuffBoost, playerStats) {\r\n        this.wSpec = wSpec;\r\n        this.perks = perks;\r\n        this.extraDamageSettings = extraDamageSettings;\r\n        this.additionalDamages = additionalDamages;\r\n        this.stuffBoost = stuffBoost;\r\n        this.playerStats = playerStats;\r\n    }\r\n    \r\n    getDamages() {\r\n        let result = [];\r\n        for (let i = 0; i < this.wSpec.damages.length; i++) {\r\n            const damage = makeDamageItemCopy(this.wSpec.damages[i]);\r\n            damage.defDamage = damage.damage;\r\n            result.push(damage);\r\n        }\r\n        result = result.concat(this.getDamageFromStuff());\r\n        this.setFinalAccuracy(result);\r\n        return result;\r\n    }\r\n\r\n    getCritBoost() {\r\n        let crit = this.perks.better_criticals.displayed_value + 100 + this.wSpec.crit + StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Crit\");\r\n        return crit / 100.0;\r\n    }\r\n\r\n    getCritDamages() {\r\n        let result = [];\r\n        for (let i = 0; i < this.wSpec.critDamages.length; i++) {\r\n            result.push(makeDamageItemCopy(this.wSpec.critDamages[i]));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    collectTags() {\r\n        let tags = [...this.wSpec.tags];\r\n        if (this.wSpec.ammoType.codeName !== \"\") {\r\n            tags.push(this.wSpec.ammoType.codeName);\r\n        }\r\n        return tags;\r\n    }\r\n\r\n    getStrengthBoost() {\r\n        return this.wSpec.strengthBoost * this.getStrength();\r\n    }\r\n\r\n    getStrength() {\r\n        let strength = this.wSpec.strPoints + this.playerStats.strength.value;\r\n        strength += StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Strength\");\r\n        if (strength < 0) {\r\n            strength = 0;\r\n        }\r\n        return strength;\r\n    }\r\n\r\n    collectFromLegendary(property) {\r\n        let result = 0;\r\n        for (let i = 0; i < this.wSpec.legendary.length; i++) {\r\n            const leg = this.wSpec.legendary[i];\r\n            if (leg[2] === property) {\r\n                result += leg[1];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getExplosiveBonus() {\r\n        return (this.wSpec.exp + this.wSpec.exp * this.perks.demolition_expert.displayed_value / 100.0) / 100.0;\r\n    }\r\n\r\n    getCreatureDamageBonuses() {\r\n        let result = new Map();\r\n\r\n        // User\r\n        if (this.additionalDamages.damageToCreature.is_used) {\r\n            result.set(\"any\", {name: \"any\", value: this.additionalDamages.damageToCreature.value});\r\n        }\r\n\r\n        // Perks\r\n        if (this.perks.glow_sight.displayed_value > 0) {\r\n            result.set(\"glowing\", {name: \"glowing\", value: this.perks.glow_sight.displayed_value});\r\n        }\r\n\r\n        // Weapon Effects\r\n        for (let i = 0; i < this.wSpec.creature.length; i++) {\r\n            const creature = this.wSpec.creature[i];\r\n            const name = creature.name.toLowerCase();\r\n            const item = result.get(name);\r\n            if (item) {\r\n                item.value += creature.value;\r\n            } else {\r\n                result.set(name, {name: name, value: creature.value});\r\n            }\r\n        }\r\n\r\n        // Consumables\r\n        function collector(item) {\r\n            let types = [];\r\n            if (item.name) {\r\n                types = item.name.split(\",\");\r\n            } else {\r\n                types = item.type.split(\",\");\r\n            }\r\n            for (let i = 0; i < types.length; i++) {\r\n                const type = types[i];\r\n                const exist = result.get(type);\r\n                if (exist) {\r\n                    exist.value += item.value;\r\n                } else {\r\n                    result.set(type, {name: type, value: item.value});\r\n                }\r\n            }\r\n        }\r\n        StuffBoostsCollector.collectAllItems(this.stuffBoost.creature, \"BDB\", collector);\r\n        return result;\r\n    }\r\n\r\n    getWeaponType() {\r\n        return this.wSpec.type;\r\n    }\r\n\r\n    getHeadShotFrequency() {\r\n        if (this.extraDamageSettings.useHead) {\r\n            return this.extraDamageSettings.headFreq;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getCritShotFrequency() {\r\n        if (this.extraDamageSettings.useCrit) {\r\n            return this.extraDamageSettings.critFreq;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getSneakShotFrequency() {\r\n        if (this.extraDamageSettings.useSneak) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getFirstBloodBonus() {\r\n        if (this.wSpec.legendary[0][0] === '004f6aa5') {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getLastShotBonus() {\r\n        if (this.wSpec.legendary[1][0] === '006069ec') {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getTotalDamageBonus() {\r\n        let tenderizer = this.perks.tenderizer.displayed_value > 0 ? (1 + this.perks.tenderizer.displayed_value / 100.0) : 1;\r\n        let result = 1.0;\r\n        result *= this.perks.toft.displayed_value > 0 ? (1 + this.perks.toft.displayed_value / 100.0) : 1.0;\r\n\r\n        // Seems that follow through works as TOFT only in sneak mode\r\n        if (this.wSpec.type === \"Heavy\" || this.wSpec.type === \"Thrown\") {\r\n            result *= this.perks.follow_through.displayed_value > 0 ? (1 + this.perks.follow_through.displayed_value / 100.0) : 1.0;\r\n        }\r\n        result *= (this.additionalDamages.tdb.is_used) ? (1 + this.additionalDamages.tdb.value / 100.0) : 1.0;\r\n        let exec = 1 + this.wSpec.totalD / 100.0;\r\n        return {value: result, tenderizer: tenderizer, executioner: exec};\r\n    }\r\n\r\n    getChargeTime() {\r\n        return this.wSpec.chargeTime;\r\n    }\r\n\r\n    getChargePenalty() {\r\n        if (this.wSpec.maxChargeTime === 0) {\r\n            return 1;\r\n        }\r\n        let part = this.wSpec.chargeTime / this.wSpec.maxChargeTime;\r\n        part = (part > 1) ? 1 : part;\r\n        part = part * 0.5;\r\n        return 0.5 + part;\r\n    }\r\n\r\n    getCripple() {\r\n        return {value: this.wSpec.cripple / 100.0, chance: this.wSpec.crippleChance};\r\n    }\r\n\r\n    getBash() {\r\n        return this.wSpec.bash / 100.0;\r\n    }\r\n\r\n    getPowerAttack() {\r\n        return this.wSpec.powerAttack / 100.0;\r\n    }\r\n\r\n    getWeaponName() {\r\n        return this.wSpec.weaponName;\r\n    }\r\n\r\n    getDefaultWeaponName() {\r\n        return this.wSpec.defaultName;\r\n    }\r\n\r\n    getSneak() {\r\n        let sneak = (this.perks.covert_operative.displayed_value > 0) ? (this.perks.covert_operative.displayed_value - 1.0) : 1.0;\r\n        let sandman = this.perks.mister_sandman.displayed_value / 100.0;\r\n        sandman = (this.wSpec.tags.includes(\"HasSilencer\")) ? sandman : 0;\r\n\r\n        // TODO: MeleeGeneral? (means including Unarmed) or just Melee type\r\n        const ninja = (this.wSpec.tags.includes(\"MeleeGeneral\")) ? this.perks.ninja.displayed_value / 100.0 : 0.0;\r\n        const weaponSneak = this.wSpec.sneak / 100.0;\r\n        const stuffSneak = (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Sneak\") / 100.0);\r\n        return sneak + sandman + ninja + weaponSneak + stuffSneak;\r\n    }\r\n\r\n    // This bonus increase physical explosive damage (bobble head explosive), not an explosive part from total damage (Legendary explosive)\r\n    getExplosivePhysicalBonus() {\r\n        return StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"EXP\") / 100.0;\r\n    }\r\n\r\n    getBaseDamageMult() {\r\n        let result = 100 + this.getBonusMultFromPerks() + this.getStrengthBoost() + this.wSpec.bonus + this.collectFromLegendary(\"BDB\");\r\n\r\n        result += StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"BDB\");\r\n        let bResult = result + ((this.additionalDamages.ballisticBDB.is_used) ? (this.additionalDamages.ballisticBDB.value) : 0.0);\r\n        let eResult = result + ((this.additionalDamages.energyBDB.is_used) ? (this.additionalDamages.energyBDB.value) : 0.0);\r\n        let fResult = result + ((this.additionalDamages.fireBDB.is_used) ? (this.additionalDamages.fireBDB.value) : 0.0);\r\n        let pResult = result + ((this.additionalDamages.poisonBDB.is_used) ? (this.additionalDamages.poisonBDB.value) : 0.0);\r\n        let cResult = result + ((this.additionalDamages.coldBDB.is_used) ? (this.additionalDamages.coldBDB.value) : 0.0);\r\n        let rResult = result + ((this.additionalDamages.radBDB.is_used) ? (this.additionalDamages.radBDB.value) : 0.0);\r\n        bResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"BBDB\"));\r\n        eResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"EBDB\"));\r\n        fResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"FBDB\"));\r\n        pResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"PBDB\"));\r\n        cResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"CBDB\"));\r\n        rResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"RBDB\"));\r\n        return {dtPhysical: bResult / 100.0, dtEnergy: eResult / 100.0, dtFire: fResult / 100.0, dtPoison: pResult / 100.0, dtCryo: cResult / 100.0, dtRadiationExposure: rResult / 100.0};\r\n    }\r\n\r\n    getDamageFromStuff() {\r\n        const damages = [];\r\n        function stacker(value) {\r\n            const values = value.split(\" - \");\r\n            const damageValue = parseFloat(values[0]);\r\n            const time = parseFloat(values[1].slice(0, values[1].length - 1));\r\n            const damage = buildBleedDamage(damageValue, time);\r\n            damage.defDamage = damageValue;\r\n            damages.push(damage);\r\n        }\r\n        StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Bleed\", stacker);\r\n        return damages;\r\n    }\r\n\r\n    getBonusMultFromPerks() {\r\n        let result = 0.0;\r\n        result += this.perks.nerd_rage.displayed_value\r\n        result += this.perks.bloody_mess.displayed_value;\r\n        result += this.perks.adrenaline.displayed_value;\r\n        result += this.perks.gun_fu.displayed_value;\r\n        if (this.perks.gladiator.displayed_value > 0 && this.wSpec.type === \"Melee\" && this.wSpec.hand === 1) {\r\n            result += this.perks.gladiator.displayed_value;\r\n        }\r\n        if (this.perks.heavy_gunner.displayed_value > 0 && this.wSpec.type === \"Heavy\" && !this.wSpec.tags.includes(\"Explosive\")) {\r\n            result += this.perks.heavy_gunner.displayed_value;\r\n        }\r\n        if (this.perks.shotgunner.displayed_value > 0 && (this.wSpec.type === \"Shotgun\" || this.wSpec.tags.includes(\"Shotgun\"))) {\r\n            result += this.perks.shotgunner.displayed_value;\r\n        }\r\n        if (this.perks.slugger.displayed_value > 0 && this.wSpec.type === \"Melee\" && this.wSpec.hand === 2) {\r\n            result += this.perks.slugger.displayed_value;\r\n        }\r\n        if (this.perks.iron_fist.displayed_value > 0 && this.wSpec.type === \"Unarmed\") {\r\n            result += this.perks.iron_fist.displayed_value;\r\n        }\r\n        if (this.perks.archer.displayed_value > 0 && this.wSpec.type === \"Bow\") {\r\n            result += this.perks.archer.displayed_value;\r\n        }\r\n        if (this.perks.commando.displayed_value > 0 && this.wSpec.type === \"Rifle\" && this.wSpec.is_auto === 1) {\r\n            result += this.perks.commando.displayed_value;\r\n        }\r\n        if (this.perks.rifleman.displayed_value > 0 && this.wSpec.type === \"Rifle\" && this.wSpec.is_auto === 0) {\r\n            result += this.perks.rifleman.displayed_value;\r\n        }\r\n        if (this.perks.guerrilla.displayed_value > 0 && this.wSpec.type === \"Pistol\" && this.wSpec.is_auto === 1) {\r\n            result += this.perks.guerrilla.displayed_value;\r\n        }\r\n        if (this.perks.gunslinger.displayed_value > 0 && this.wSpec.type === \"Pistol\" && this.wSpec.is_auto === 0) {\r\n            result += this.perks.gunslinger.displayed_value;\r\n        }\r\n        if (this.perks.science.displayed_value > 0 && this.wSpec.type !== \"Heavy\" && this.wSpec.tags.includes(\"Energy\")) {\r\n            result += this.perks.science.displayed_value;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getAntiArmor() {\r\n        let aa = 1 - this.wSpec.aa / 100.0;\r\n        let incisor = 1.0;\r\n        let weaponType = this.wSpec.type;\r\n        if (weaponType === \"All\" || weaponType === \"Melee\" || weaponType === \"Unarmed\") {\r\n            incisor = 1 - this.perks.incisor.displayed_value / 100.0;\r\n        }\r\n        let bow_before_me = 1.0;\r\n        if (weaponType === \"All\" || weaponType === \"Bow\") {\r\n            bow_before_me = 1 - this.perks.bow_before_me.displayed_value / 100.0;\r\n        }\r\n        let tank_killer = 1.0;\r\n        if (weaponType === \"All\" || weaponType === \"Pistol\" || weaponType === \"Rifle\") {\r\n            tank_killer = 1 - this.perks.tank_killer.displayed_value / 100.0;\r\n        }\r\n        let stabilized = 1.0;\r\n        if (weaponType === \"All\" || weaponType === \"Heavy\") {\r\n            stabilized = 1 - this.perks.stabilized.displayed_value / 100.0;\r\n        }\r\n        let bMult = 1;\r\n        StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"BAA\", (value) => bMult *= (1 - value / 100.0));\r\n        const result1 = (100 * (1 - bMult * incisor * bow_before_me * tank_killer * stabilized * aa));\r\n        const result2 = (100 * (1 - incisor * bow_before_me * tank_killer * stabilized * aa));\r\n        const resultAll = {b: result1, e: result2, f: result2, p: result2, c: result2, r: result2, insect: this.perks.exterminator.displayed_value};\r\n        return resultAll;\r\n    }\r\n\r\n    getAmmoCapacity() {\r\n        let ammoCapacity = this.wSpec.ammoCapacity;\r\n        let tags = this.collectTags(this.wSpec);\r\n        ammoCapacity += (ammoCapacity * (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, tags, this.stuffBoost.weapon, \"Ammo\") / 100.0));\r\n        if (this.perks.power_user.is_used) {\r\n            const mult = this.perks.power_user.displayed_value / 100.0 - 1;\r\n            if (this.wSpec.ammoType.codeName === \"FusionCore\" || tags.includes(\"FusionCore\")) {\r\n                ammoCapacity += (this.wSpec.ammoCapacity * mult);\r\n            }\r\n        }\r\n        return parseInt(ammoCapacity);\r\n    }\r\n\r\n    getShotSize() {\r\n        return this.wSpec.shot_size;\r\n    }\r\n\r\n    getFireRate() {\r\n        let fireRate = this.wSpec.fireRate;\r\n        let weaponSpeed = this.wSpec.speed;\r\n        if ((this.wSpec.type === \"Melee\" || this.wSpec.type === \"Unarmed\") && this.wSpec.is_auto === 0) {\r\n            weaponSpeed += (this.perks.martial_artist.displayed_value / 100.0);\r\n        }\r\n        fireRate = fireRate * weaponSpeed;\r\n        if (fireRate < 0.1) {\r\n            fireRate = 0.1;\r\n        }\r\n        return fireRate;\r\n    }\r\n\r\n    getReloadTime() {\r\n        let reloadSpeed = this.wSpec.reloadSpeed;\r\n        if (this.wSpec.type === \"Heavy\") {\r\n            reloadSpeed += (this.perks.lock_and_load.displayed_value / 100.0);\r\n        } else if (this.wSpec.type === \"Melee\" && this.wSpec.is_auto === 0) {\r\n            reloadSpeed += (this.perks.martial_artist.displayed_value / 100.0);\r\n        } else if (this.wSpec.type === \"Shotgun\") {\r\n            reloadSpeed += (this.perks.scattershot.displayed_value / 100.0);\r\n        } else if (this.wSpec.type === \"Rifle\" && this.wSpec.is_auto) {\r\n            reloadSpeed += (this.perks.ground_pounder.displayed_value / 100.0);\r\n        }\r\n        reloadSpeed += StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Reload\") / 100.0;\r\n        return this.wSpec.defReloadTime / reloadSpeed;\r\n    }\r\n\r\n    // TODO: Intended to adjust accuracy by consumables and perks (accuracy from legendary and mods is adjusted in wSPec or by user)\r\n    setFinalAccuracy(damages) {\r\n        const consumables = null; // StuffBoostCollector.collect()\r\n        AccuracyAdjuster.adjustByLegendary(damages, this.wSpec.legendary);\r\n        AccuracyAdjuster.adjustByPerks(damages, this.perks);\r\n        AccuracyAdjuster.adjustByConsumables(damages, consumables);\r\n    }\r\n}","import Weapon from './Weapon';\r\nimport WeaponSpecsAssembler from './WeaponSpecsAssembler';\r\n\r\n\r\nexport default class WeaponFactory {\r\n\r\n    DEFAULT = 0;\r\n\r\n    constructor(wSpec, perks, extraDamage, additionalDamages, stuffBoost, playerStats) {\r\n        this.wSpec = wSpec;\r\n        this.perks = perks;\r\n        this.extraDamage = extraDamage;\r\n        this.additionalDamages = additionalDamages;\r\n        this.stuffBoost = stuffBoost;\r\n        this.playerStats = playerStats;\r\n    }\r\n\r\n    build(type) {\r\n        switch(type) {\r\n            case type:\r\n            default:\r\n                return new Weapon(new WeaponSpecsAssembler(this.wSpec, this.perks, this.extraDamage, this.additionalDamages,\r\n                    this.stuffBoost, this.playerStats));\r\n        }\r\n    }\r\n}","export function defaultAdds() {\r\n    return {\r\n        tdb: {\r\n            name: \"TDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        ballisticBDB: {\r\n            name: \"Ballistic BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        energyBDB: {\r\n            name: \"Energy BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        fireBDB: {\r\n            name: \"Fire BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        poisonBDB: {\r\n            name: \"Poison BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        coldBDB: {\r\n            name: \"Cold BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        radBDB: {\r\n            name: \"Rad BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        damageToCreature: {\r\n            name: \"Damage To Creature\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n    };\r\n}","export function defaultBoosts() {\r\n    return {\r\n        bloody_mess: {\r\n            id: [\"00073680\"],\r\n            name: \"Bloody Mess\",\r\n            value: 5.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [5.0, 10.0, 15.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Luck\",\r\n            info: \"{1}% bonus damage means enemies may explode into a gory red paste.\",\r\n            cost: [1, 2, 3],\r\n            im_name: \"bloody_mess\",\r\n        },\r\n\r\n        adrenaline: {\r\n            id: [\"00397cc5\"],\r\n            name: \"Adrenaline\",\r\n            value: 6.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [6.0, 7.0, 8.0, 9.0, 10.0],\r\n            x: 1,\r\n            max_x: 6,\r\n            category: \"Agility\",\r\n            info: \"Gain {1}% damage for 30s per kill. Duration refreshes with kills.\",\r\n            cost: [1, 2, 3, 4, 5],\r\n            im_name: \"adrenaline\",\r\n        },\r\n\r\n        toft: {\r\n            id: [\"005a59c6\"],\r\n            name: \"TOFT\",\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10.0, 20.0, 30.0, 40.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Legendary\",\r\n            info: \"Enemies take {1}% more damage when they attack you, if you're on a team.\",\r\n            cost: [1, 2, 3, 4],\r\n            im_name: \"toft\",\r\n        },\r\n\r\n        tenderizer: {\r\n            name: \"Tenderizer\",\r\n            id: [\"003e2202\"],\r\n            value: 5.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [5.0, 7.0, 10.0],\r\n            x: 1,\r\n            max_x: 4,\r\n            category: \"Charisma\",\r\n            info: \"Make your target receive {1}% more damage for {1} seconds after you attack.\",\r\n            cost: [1, 2, 3],\r\n            im_name: \"tenderizer\",\r\n        },\r\n\r\n        glow_sight: {\r\n            name: \"Glow Sight\",\r\n            id: [\"00393f65\"],\r\n            value: 20.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [20.0, 40.0, 60.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Deal +{1}% damage to glowing enemies.\",\r\n            im_name: \"glow_sight\",\r\n        },\r\n\r\n        gun_fu: {\r\n            name: \"Gun Fu\",\r\n            id: [\"003701bf\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10.0, 30.0, 60.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 3],\r\n            info: \"V.A.T.S. swaps targets on kill with +{1}% damage to your next target.\",\r\n            im_name: \"gun_fu\",\r\n        },\r\n\r\n        incisor: {\r\n            name: \"Incisor\",\r\n            id: [\"003de58e\"],\r\n            value: 25.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [25.0, 50.0, 75.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your melee weapons ignore {1}% of your target's armor.\",\r\n            im_name: \"incisor\",\r\n        },\r\n\r\n        bow_before_me: {\r\n            name: \"Bow Before Me\",\r\n            id: [\"00563b9b\"],\r\n            value: 12.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [12.0, 24.0, 36.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your bows and crossbows ignore {1}% armor and have a {2}% chance to stagger.\",\r\n            im_name: \"bow_before_me\",\r\n        },\r\n\r\n        exterminator: {\r\n            name: \"Exterminator\",\r\n            id: [\"0032da6e\"],\r\n            value: 25.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [25.0, 50.0, 75.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your attacks ignore {1}% armor of any insect.\",\r\n            im_name: \"exterminator\",\r\n        },\r\n\r\n        tank_killer: {\r\n            name: \"Tank Killer\",\r\n            id: [\"001d6251\"],\r\n            value: 12.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [12.0, 24.0, 36.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your rifles and pistols ignore {1}% armor and have a {2}% chance to stagger.\",\r\n            im_name: \"tank_killer\",\r\n        },\r\n\r\n        stabilized: {\r\n            name: \"Stabilized\",\r\n            id: [\"00320167\"],\r\n            value: 15.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [15.0, 30.0, 45.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3],\r\n            info: \"In Power Armor, heavy guns gain more accuracy and ignore {1}% armor.\",\r\n            im_name: \"stabilized\",\r\n        },\r\n\r\n        covert_operative: {\r\n            name: \"Covert Operative\",\r\n            id: [\"002ebd26\"],\r\n            value: 2.15,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [2.15, 2.3, 2.5],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your ranged sneak attacks do {1}x normal damage.\",\r\n            im_name: \"covert_operative\",\r\n        },\r\n\r\n        mister_sandman: {\r\n            name: \"Mister Sandman\",\r\n            id: [\"0032992f\"],\r\n            value: 50.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [50.0, 100.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2],\r\n            info: \"At night your silenced weapons do an additional {1}% sneak attack damage.\",\r\n            im_name: \"mister_sandman\",\r\n        },\r\n\r\n        ninja: {\r\n            name: \"Ninja\",\r\n            id: [\"0025a7f9\"],\r\n            value: 30.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [30.0, 60.0, 90.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 3],\r\n            info: \"Sneak attacks with melee weapons do an additional {1}% sneak attack damage.\",\r\n            im_name: \"ninja\",\r\n        },\r\n\r\n        follow_through: {\r\n            name: \"Follow Through\",\r\n            id: [\"005a5d68\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10.0, 20.0, 30.0, 40.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Legendary\",\r\n            cost: [1, 2, 3, 4],\r\n            info: \"Ranged sneak damage increases damage to target by {1}% for 10 seconds.\",\r\n            im_name: \"follow_through\",\r\n        },\r\n\r\n        demolition_expert: {\r\n            name: \"Demolition Expert\",\r\n            id: [\"003440b9\"],\r\n            value: 20.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [20.0, 30.0, 40.0, 50.0, 60.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3, 4, 5],\r\n            info: \"Your explosives do +{1}% damage\",\r\n            im_name: \"demolition_expert\",\r\n        },\r\n\r\n        science: {\r\n            name: \"Science\",\r\n            id: [\"003440c4\", \"003440c5\", \"003440c6\"],\r\n            value: 5.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [5.0, 10.0, 15.0, 20.0, 25.0, 30.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3, 4, 5, 6],\r\n            info: \"Energy damage gains +{1}% bonus.\",\r\n            im_name: \"science\",\r\n        },\r\n\r\n        better_criticals: {\r\n            name: \"Better Criticals\",\r\n            id: [\"00287cd5\"],\r\n            value: 50.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [50.0, 75.0, 100.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Luck\",\r\n            cost: [1, 2, 3],\r\n            info: \"V.A.T.S. criticals now do +{1}% damage.\",\r\n            im_name: \"better_criticals\",\r\n        },\r\n\r\n        nerd_rage: {\r\n            name: \"Nerd Rage\",\r\n            id: [\"0025a22f\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10.0, 15.0, 20.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3],\r\n            info: \"While below 20% Health, gain {3} Damage Resist, {1}% damage and 15% AP regen.\",\r\n            im_name: \"nerd_rage\",\r\n        },\r\n\r\n        lock_and_load: {\r\n            name: \"Lock And Load\",\r\n            id: [\"0032016b\"],\r\n            value: 20.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [20, 40, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Heavy guns reload +{1}% faster.\",\r\n            im_name: \"lock_and_load\",\r\n        },\r\n\r\n        martial_artist: {\r\n            name: \"Martial Artist\",\r\n            id: [\"003e996d\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 20, 30],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your melee weapons weight {3}% less, and you can swing them {1}% faster.\",\r\n            im_name: \"martial_artist\",\r\n        },\r\n\r\n        scattershot: {\r\n            name: \"Scattershot\",\r\n            id: [\"0032235e\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 20, 30],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Shotguns now weight {4}% less and you reload them {1}% faster.\",\r\n            im_name: \"scattershot\",\r\n        },\r\n\r\n        ground_pounder: {\r\n            name: \"Ground Pounder\",\r\n            id: [\"000907e5\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 20, 30],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Automatic rifles now reload {1}% faster and have better hip fire accuracy.\",\r\n            im_name: \"ground_pounder\",\r\n        },\r\n\r\n        party_girl_boy: {\r\n            name: \"Party Girl / Boy\",\r\n            id: [\"000525df\"],\r\n            value: 2.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [2, 3],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Charisma\",\r\n            cost: [2, 3],\r\n            info: \"The effects of alcohol are {1}x.\",\r\n            im_name: \"party_girl_boy\",\r\n        },\r\n\r\n        power_user: {\r\n            name: \"Power User\",\r\n            id: [\"0027a876\"],\r\n            value: 130,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [130, 160, 200],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3],\r\n            info: \"Fusion Cores now last {1}% longer.\",\r\n            im_name: \"power_user\",\r\n        },\r\n\r\n        strange_in_numbers: {\r\n            name: \"Strange In Nums\",\r\n            id: [\"003860b7\"],\r\n            value: 25,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [25],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Charisma\",\r\n            cost: [1],\r\n            info: \"Positive mutation effects are {1}% stronger if teammates are mutated too.\",\r\n            im_name: \"strange_in_numbers\",\r\n        },\r\n\r\n        class_freak: {\r\n            name: \"Class Freak\",\r\n            id: [\"00391f13\"],\r\n            value: 25,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [25, 50, 75],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Luck\",\r\n            cost: [1, 2, 3],\r\n            info: \"The negative effects of your mutations are reduced by {1}%.\",\r\n            im_name: \"class_freak\",\r\n        },\r\n\r\n        gladiator: {\r\n            name: \"Gladiator\",\r\n            id: [\"003440ad\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your one-handed melee weapons now do +{1}% damage.\",\r\n            im_name: \"gladiator\",\r\n        },\r\n\r\n        heavy_gunner: {\r\n            name: \"Heavy Gunner\",\r\n            id: [\"0031af17\", \"0031af18\", \"001c9d2e\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your non-explosive heavy guns now do +{1}% damage.\",\r\n            im_name: \"heavy_gunner\",\r\n        },\r\n\r\n        shotgunner: {\r\n            name: \"Shotgunner\",\r\n            id: [\"00202049\", \"00223bab\", \"00202047\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your shotguns now do +{1}% damage.\",\r\n            im_name: \"shotgunner\",\r\n        },\r\n\r\n        slugger: {\r\n            name: \"Slugger\",\r\n            id: [\"0025a233\", \"00520bd8\", \"00520bd9\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your two-handed melee weapons now do +{1}% damage.\",\r\n            im_name: \"slugger\",\r\n        },\r\n\r\n        iron_fist: {\r\n            name: \"Iron Fist\",\r\n            id: [\"0035206d\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your punching attacks now do +{1}% damage.\",\r\n            im_name: \"iron_fist\",\r\n        },\r\n\r\n        archer: {\r\n            name: \"Archer\",\r\n            id: [\"00563b8f\", \"00563b93\", \"00563b97\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your bows and crossbows now do +{1}% damage.\",\r\n            im_name: \"archer\",\r\n        },\r\n\r\n        commando: {\r\n            name: \"Commando\",\r\n            id: [\"0031aef6\", \"0031aef7\", \"00005272\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Basic combat training means automatic rifles do +{1}% damage.\",\r\n            im_name: \"commando\",\r\n        },\r\n\r\n        rifleman: {\r\n            name: \"Rifleman\",\r\n            id: [\"000907c9\", \"002ebd2b\", \"002ebd31\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your non-automatic rifles now do +{1}% damage.\",\r\n            im_name: \"rifleman\",\r\n        },\r\n\r\n        guerrilla: {\r\n            name: \"Guerrilla\",\r\n            id: [\"0031af0d\", \"0031af0e\", \"0031af0f\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your automatic pistols now do +{1}% damage\",\r\n            im_name: \"guerrilla\",\r\n        },\r\n\r\n        gunslinger: {\r\n            name: \"Gunslinger\",\r\n            id: [\"0031aef8\", \"0031aef9\", \"0025a792\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your non-automatic pistols now do +{1}% damage.\",\r\n            im_name: \"gunslinger\",\r\n        },\r\n\r\n        special: {\r\n            strength: 0,\r\n            perception: 0,\r\n            endurance: 0,\r\n            charisma: 0,\r\n            intelligence: 0,\r\n            agility: 0,\r\n            luck: 0,\r\n        }\r\n    };\r\n}","import { millisToTime } from '../helpers/Time';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\n\r\n\r\nexport function getAverageTimeMillis(creatures) {\r\n    const sum = parseInt(creatures.creature1.lifeTime) + parseInt(creatures.creature2.lifeTime)\r\n     + parseInt(creatures.creature3.lifeTime) + parseInt(creatures.creature4.lifeTime);\r\n    if (sum === 0) {\r\n        return 0;\r\n    }\r\n    const result = parseInt(sum / 4.0);\r\n    return (result) ? result : Infinity;\r\n}\r\n\r\nexport function getAverageTime(creatures) {\r\n    return millisToTime(getAverageTimeMillis(creatures));\r\n}\r\n\r\nexport function getCreatureTime(creature) {\r\n    return millisToTime(creature.lifeTime);\r\n}\r\n\r\n/*\r\nsbq: {\r\n    gameId: \"003e2720\", // ? 00043c6f, 003e2720, 00043c75\r\n    radImmunePerk: \"000a2775\",\r\n    reductionSpell: \"004869f8\",\r\n    reductionPerk: \"00470daa\",\r\n    race: \"00019d95\",\r\n    bodyData: \"00017dd5\",\r\n},\r\n\r\nearle: {\r\n    gameId: \"0059e02f\", // ?\r\n    radImmunePerk: \"000a2775\",\r\n    reductionPerk: \"0057a663\",\r\n    race: \"00547992\",\r\n    bodyData: \"0055aec9\",\r\n},\r\n\r\ntitan: {\r\n    gameId: \"00661ebf\", // ?\r\n    radImmunePerk: \"000a2775\",\r\n    reductionPerk: \"0067d4be\",\r\n    reductionSpell: \"0066dbcd\",\r\n    race: \"00656cd6\",\r\n    bodyData: \"00656cd4\",\r\n}\r\n*/\r\n\r\nexport function getDummy(creature) {\r\n    const dummy = buildCreature(creature.name, creature.level, creature.fieldName);\r\n    dummy.h = 1000000000000;\r\n    dummy.curBody = creature.curBody;\r\n    dummy.headShot = creature.headShot;\r\n    dummy.bodyShot = creature.bodyShot;\r\n    dummy.averageShot = creature.averageShot;\r\n    dummy.damageReduction = creature.damageReduction;\r\n    dummy.damageReductionOnlyNotBleeding = creature.damageReductionOnlyNotBleeding;\r\n    return dummy;\r\n}\r\n\r\nfunction buildDefCreature(name, fieldName) {\r\n    return {\r\n        name: name,\r\n        fieldName: fieldName,\r\n        capName: \"\",\r\n        b: 1.0,\r\n        e: 1.0,\r\n        f: 1.0,\r\n        p: 1.0,\r\n        c: 1.0,\r\n        r: 1.0,\r\n        h: 100,\r\n        damageReduction: 0.0,\r\n        damageReductionOnlyNotBleeding: false,\r\n        headShot: 1,\r\n        bodyShot: 1,\r\n        averageShot: 1,\r\n        curBody: \"\",\r\n        defBody: \"\", // \"normal\", \"scorched\", \"glowing\"\r\n        bodyParts: {},\r\n        tags: [],\r\n        level: 1,\r\n        immuneToPoison: false,\r\n        immuneToRadiation: false,\r\n\r\n        damageToCreature: 0,\r\n        totalDamage: 0.0,\r\n        normalDamage: 0.0,\r\n        headShotDamage: 0.0,\r\n        headExpShotDamage: 0.0,\r\n        critNormalDamage: 0.0,\r\n        critHeadNormalDamage: 0.0,\r\n        explosiveDamage: 0.0,\r\n        critExplosiveDamage: 0.0,\r\n        critExplosiveHeadDamage: 0.0,\r\n        averageHit: 0.0,\r\n        maxHit: 0.0,\r\n        sneak: 0,\r\n        crit: 0,\r\n        dps: 0.0,\r\n        ammo: Infinity,\r\n        reloads: 0.0,\r\n        reloadsTime: 0.0,\r\n        lifeTime: Infinity,\r\n    };\r\n}\r\n\r\nexport function getCreatureByName(creatures, name) {\r\n    for(const fieldName in creatures) {\r\n        const creature = creatures[fieldName];\r\n        if (creature.name === name) {\r\n            return creature;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function defaultCreatures() {\r\n    return {\r\n        creature1: buildCreature(\"scorchbeastqueen\", \"Max\", \"creature1\"),\r\n        creature2: buildCreature(\"wendigocolossus\", \"Max\", \"creature2\"),\r\n        creature3: buildCreature(\"ultraciteabomination\", \"Max\", \"creature3\"),\r\n        creature4: buildCreature(\"stormboss\", \"Max\", \"creature4\"),\r\n    };\r\n}\r\n\r\nexport function defaultCreaturesAlt() {\r\n    return {\r\n        creature1: buildCreature(\"scorchbeastqueen(alt)\", \"Max\", \"creature1\"),\r\n        creature2: buildCreature(\"wendigocolossus(alt)\", \"Max\", \"creature2\"),\r\n        creature3: buildCreature(\"ultraciteabomination(alt)\", \"Max\", \"creature3\"),\r\n        creature4: buildCreature(\"stormboss\", \"Max\", \"creature4\"),\r\n    };\r\n}\r\n\r\nexport function buildCreatureNames(creatures) {\r\n    return {\r\n        creature1: [creatures.creature1.name, creatures.creature1.level, creatures.creature1.tags, creatures.creature1.curBody],\r\n        creature2: [creatures.creature2.name, creatures.creature2.level, creatures.creature2.tags, creatures.creature2.curBody],\r\n        creature3: [creatures.creature3.name, creatures.creature3.level, creatures.creature3.tags, creatures.creature3.curBody],\r\n        creature4: [creatures.creature4.name, creatures.creature4.level, creatures.creature4.tags, creatures.creature4.curBody],\r\n    }\r\n}\r\n\r\nexport function buildCreature(name, level, fieldName) {\r\n    const creature = buildDefCreature(name, fieldName);\r\n    if (level === 'Max') {\r\n        level = CreatureDataProvider.getMaxLevel(name);\r\n    } else {\r\n        level = parseInt(level);\r\n    }\r\n    const result = CreatureDataProvider.getCreatureParametersByName(name, level);\r\n    creature.name = name;\r\n    creature.capName = CreatureDataProvider.capitalizeCreatureName(name);\r\n    if (creature.name.includes(\"scorch\")) {\r\n        creature.defBody = \"scorched\";\r\n    } else if (creature.name.includes(\"glow\")) {\r\n        creature.defBody = \"glowing\";\r\n    } else {\r\n        creature.defBody = \"normal\";\r\n    }\r\n    creature.curBody = creature.defBody;\r\n    creature.level = level;\r\n    creature.tags = result.tags;\r\n    creature.headShot = result.headMult;\r\n    creature.bodyShot = result.normalMult;\r\n    creature.averageShot = parseFloat(result.averageMult.toFixed(2));\r\n    creature.damageReduction = result.reduction;\r\n    creature.immuneToPoison = result.immuneToPoison;\r\n    creature.immuneToRadiation = result.immuneToRad;\r\n    creature.damageReductions = result.reductions;\r\n    creature.damageReductionOnlyNotBleeding = result.reductionOnlyNotBleeding;\r\n    creature.bodyParts = result.body;\r\n    creature.bodyParts.average = {name: 'Average', damage_mult: creature.averageShot};\r\n    if (result.physical) {\r\n        creature.b = result.physical;\r\n        creature.e = result.energy;\r\n        creature.f = result.fire;\r\n        creature.p = result.poison;\r\n        creature.c = result.cold;\r\n        creature.r = result.radiation;\r\n        creature.h = result.health;\r\n    }\r\n    return creature;\r\n}","export function defaultPlayer() {\r\n    return {\r\n        team: false,\r\n        strange: 0.0,\r\n        freak: 0.0,\r\n        alcoholEffects: 1.0,\r\n        health: {\r\n            name: \"Health\",\r\n            value: 100.0,\r\n        }\r\n    };\r\n}","export function defaultPlayerStats() {\r\n    return {\r\n        strength: {\r\n            name: \"Strength\",\r\n            value: 5.0,\r\n        },\r\n        luck: {\r\n            name: \"Luck\",\r\n            value: 1.0,\r\n        },\r\n    };\r\n}","function getStrangeMult(player) {\r\n    return (player.team) ? (1 + player.strange / 100.0) : 1.0;\r\n}\r\n\r\nfunction getFreakReduction(player) {\r\n    return (1 - player.freak / 100.0);\r\n}\r\n\r\nexport const functions = {\r\n    nukeTheMan: (player) => {\r\n        return (player.team) ? 5 : 0;\r\n    },\r\n\r\n    partyGirlBoy: (player, defValue) => {\r\n        return parseInt(player.alcoholEffects * defValue);\r\n    },\r\n\r\n    adrenalineReaction: (player) => {\r\n        const health = player.health.value;\r\n        const mult = getStrangeMult(player);\r\n        let ar = 0.0;\r\n\r\n        // The data is hardcoded into a perk\r\n        if (mult > 1) {\r\n            if (health <= 20) {\r\n                ar = 63.0;\r\n            } else if (health <= 30) {\r\n                ar = 55.0;\r\n            } else if (health <= 40) {\r\n                ar = 48.0;\r\n            } else if (health <= 50) {\r\n                ar = 39.0;\r\n            } else if (health <= 60) {\r\n                ar = 31.0;\r\n            } else if (health <= 70) {\r\n                ar = 24.0;\r\n            } else if (health <= 80) {\r\n                ar = 16.0;\r\n            } else if (health <= 90) {\r\n                ar = 8.0;\r\n            }\r\n        } else {\r\n            if (health <= 20) {\r\n                ar = 50.0;\r\n            } else if (health <= 30) {\r\n                ar = 44.0;\r\n            } else if (health <= 40) {\r\n                ar = 38.0;\r\n            } else if (health <= 50) {\r\n                ar = 31.0;\r\n            } else if (health <= 60) {\r\n                ar = 25.0;\r\n            } else if (health <= 70) {\r\n                ar = 19.0;\r\n            } else if (health <= 80) {\r\n                ar = 13.0;\r\n            } else if (health <= 90) {\r\n                ar = 6.0;\r\n            }\r\n        }\r\n        return ar;\r\n    },\r\n\r\n    eagleEyes: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 003c4037\r\n        if (mult > 1) {\r\n            return 62.5\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    eagleEyesNegative: (player, defValue) => {\r\n        const mult = getFreakReduction(player);\r\n        return defValue * mult;\r\n    },\r\n\r\n    empathSerum: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n        if (mult > 1) {\r\n            return 2;\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    carnivoreSerum: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n        return mult * defValue;\r\n    },\r\n\r\n    herbivoreSerum: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n        return mult * defValue;\r\n    },\r\n\r\n    foodCalc: (player, defValue, foodPref, foodType) => {\r\n        if ((foodType === \"Meet\" && foodPref.herbivore) || (foodType === \"Plant\" && foodPref.carnivore)) {\r\n            return 0;\r\n        }\r\n        let mult = 1;\r\n        let strange = getStrangeMult(player);\r\n        if (foodType === \"Meet\" && foodPref.carnivore && !foodPref.herbivore) {\r\n            mult = 2 * strange;\r\n        } else if (foodType === \"Plant\" && foodPref.herbivore && !foodPref.carnivore) {\r\n            mult = 2 * strange;\r\n        }\r\n        return mult * defValue;\r\n    },\r\n\r\n    herdMentality: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n        const red = getFreakReduction(player);\r\n\r\n        // Positives is hardcoded inside 004e1f1e\r\n        let posValue = defValue;\r\n        if (mult > 1) {\r\n            posValue = 3;\r\n        }\r\n        return (player.team) ? posValue : -defValue * red;\r\n    },\r\n\r\n    speedDemonMove: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 004df1e0\r\n        if (mult > 1) {\r\n            return 25;\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    speedDemonReload: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 004df1e0\r\n        if (mult > 1) {\r\n            return 40;\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    talons1: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 0028d3bc\r\n        if (mult > 1) {\r\n            return 35;\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    talons2: (player, defValue) => {\r\n        return defValue;\r\n    },\r\n\r\n    twistedMuscles: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 00386acd\r\n        if (mult > 1) {\r\n            return 35;\r\n        }\r\n        return defValue;\r\n    }\r\n}","import { functions } from '../boostStuff/BoostFunctions';\r\n\r\n\r\nexport function convertStuffBoost(stuffBoost) {\r\n    const result = new Set();\r\n    collectBoosts(result, stuffBoost.creature);\r\n    collectBoosts(result, stuffBoost.weapon);\r\n    return Array.from(result);\r\n}\r\n\r\nfunction collectBoosts(result, boosts) {\r\n    boosts.forEach((value, key) => {\r\n        for (let i = 0; i < value.length; i++) {\r\n            result.add(value[i].parentId);\r\n        }\r\n    });\r\n}\r\n\r\nexport function prepareItems(items, loadedStuff=null) {\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        item.index = i;\r\n        if (loadedStuff && loadedStuff.has(item.id)) {\r\n            item.used = true;\r\n        } else {\r\n            item.used = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function applyBoost(foodPref, item, stuffBoost, player, anyway) {\r\n    let result = false;\r\n    for (let i = 0; i < item.boosts.length; i++) {\r\n        let boost = item.boosts[i];\r\n        const funcUsed = boost.func && boost.func.length > 0;\r\n        if (anyway || funcUsed) {\r\n            let id = item.id + \"_\" + i;\r\n            if (boost.id) {\r\n                id = boost.id;\r\n            }\r\n            result = true;\r\n            if (funcUsed) {\r\n                if (item.type === \"Meet\" || item.type === \"Plant\") {\r\n                    boost.value = functions[boost.func](player, boost.defValue, foodPref, item.type);\r\n                } else if (boost.defValue) {\r\n                    boost.value = functions[boost.func](player, boost.defValue);\r\n                } else {\r\n                    boost.value = functions[boost.func](player);\r\n                }\r\n            }\r\n            boost.parentId = item.id;\r\n            const stuff = stuffBoost[boost.category];\r\n            const things = stuff.get(id);\r\n\r\n            // Add things from the same category to apply the best (between Whiskey and Vodka the first will be applied)\r\n            if (things) {\r\n                things.push(boost);\r\n                stuff.set(id, things);\r\n            } else {\r\n                stuff.set(id, [boost]);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function loadBoosts(magazines, bobbles, food, drink, psycho, serums, others, foodPref, player) {\r\n    const stuffBoost = {\r\n        creature: new Map(),\r\n        weapon: new Map(),\r\n    }\r\n    applyAllStuff(foodPref, magazines, stuffBoost, player);\r\n    applyAllStuff(foodPref, bobbles, stuffBoost, player);\r\n    applyAllStuff(foodPref, food, stuffBoost, player);\r\n    applyAllStuff(foodPref, drink, stuffBoost, player);\r\n    applyAllStuff(foodPref, psycho, stuffBoost, player);\r\n    applyAllStuff(foodPref, serums, stuffBoost, player);\r\n    applyAllStuff(foodPref, others, stuffBoost, player);\r\n    return stuffBoost;\r\n}\r\n\r\nfunction applyAllStuff(foodPref, items, stuffBoost, player) {\r\n    for (let i = 0; i < items.length; i++) {\r\n        applyStuff(foodPref, items[i], stuffBoost, player);\r\n    }\r\n}\r\n\r\nfunction deleteBoost(item, stuffBoost) {\r\n    for (let i = 0; i < item.boosts.length; i++) {\r\n        let boost = item.boosts[i];\r\n        let id = item.id + \"_\" + i;\r\n        if (boost.id) {\r\n            id = boost.id;\r\n        }\r\n        let stuff = stuffBoost[boost.category].get(id);\r\n        if (!stuff) {\r\n            return;\r\n        }\r\n        const remainStuff = stuff.filter(b => b.parentId !== item.id);\r\n        if (!remainStuff || remainStuff.length === 0) {\r\n            stuffBoost[boost.category].delete(id);\r\n        } else {\r\n            stuffBoost[boost.category].set(id, remainStuff);\r\n        }\r\n    }\r\n}\r\n\r\nexport function applyStuff(foodPref, item, stuffBoost, player) {\r\n    if (item.used) {\r\n        applyBoost(foodPref, item, stuffBoost, player, true);\r\n    } else {\r\n        deleteBoost(item, stuffBoost);\r\n    }\r\n}\r\n","import getMods from '../helpers/Mods';\r\nimport { currentLegendaryIds } from '../helpers/Global';\r\nimport { getCritDamages } from '../helpers/CritView';\r\nimport { collectAllDamages, convertDamageDataToDamageItem } from '../helpers/mods/DamageSetter';\r\nimport { ModParser } from '../helpers/mods/ModParser';\r\n\r\n\r\nconst modParser = new ModParser();\r\n\r\n// Id, value, type (BDB, TDB...)\r\nexport function getDefaultLegs(legIds=null) {\r\n    if (legIds) {\r\n        return [[legIds[0], 0, \"\"], [legIds[1], 0, \"\"], [legIds[2], 0, \"\"], [legIds[3], 0, \"\"], [legIds[4], 0, \"\"]];\r\n    }\r\n    return [[\"\", 0, \"\"], [\"\", 0, \"\"], [\"\", 0, \"\"], [\"\", 0, \"\"], [\"\", 0, \"\"]];\r\n\r\n}\r\n\r\nexport function convertTemplateToSpecs(template, assignCurrentlyActiveUserLegendary=true) {\r\n    let fireRate = (template.isAuto[1]) ? template.defRate : ((10 / template.manualRate[1]) / template.speed[1]);\r\n    fireRate = parseFloat(fireRate.toFixed(3));\r\n    const defReloadTime = template.reloadTime[1] * template.reloadSpeed[1];\r\n    let mods = [];\r\n    for (const modCategoryName in template.allMods) {\r\n        if (modCategoryName.includes(\"Legendary\")) {\r\n            continue;\r\n        }\r\n        const categoryMods = template.allMods[modCategoryName];\r\n        for (let j = 0; j < categoryMods.length; j++) {\r\n            if (categoryMods[j][1]) {\r\n                let mod = getMods().get(categoryMods[j][0]);\r\n                mods.push({group: modCategoryName, id: mod.id, name: mod.name});\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    const leg1 = template.legendary1.id ? template.legendary1.id : \"\";\r\n    const leg2 = template.legendary2.id ? template.legendary2.id : \"\";\r\n    const leg3 = template.legendary3.id ? template.legendary3.id : \"\";\r\n    const leg4 = template.legendary4.id ? template.legendary4.id : \"\";\r\n    const leg5 = template.legendary5.id ? template.legendary5.id : \"\";\r\n    const legs = getDefaultLegs([leg1, leg2, leg3, leg4, leg5]);\r\n\r\n\r\n    let bonusMult = template.bonusMult[1] * 100;\r\n\r\n    // As damage bonus multiplier can be adjusted by legendary it will be calculated separately, so we need to remove\r\n    // this value from bonus multiplier\r\n    bonusMult = replaceAdjustableLegs(legs, bonusMult);\r\n\r\n    let creatures = [];\r\n    for (let i = 0; i < template.creature.length; i++) {\r\n        const creature = template.creature[i];\r\n        creatures.push({\"name\": creature.name, \"value\": creature.value})\r\n    }\r\n    const damages = collectAllDamages(template);\r\n\r\n    // Remove ignored (it can be useful later though (for now they are useless)\r\n    const sortedDamages = [];\r\n    let k = 0;\r\n    for (let i = 0; i < damages.length; i++) {\r\n        const d = damages[i];\r\n        if (!d.ignore) {\r\n            d.index = k++;\r\n            sortedDamages.push(d);\r\n        }\r\n    }\r\n\r\n    const critDamagesData = getCritDamages(template.crSpellId[1], template.id);\r\n    let critDamages = [];\r\n    for (let i = 0; i < critDamagesData.length; i++) {\r\n        const critDamageData = critDamagesData[i];\r\n        for (let j = 0; j < critDamageData.length; j++) {\r\n            const critItem = critDamageData[j];\r\n            critDamages.push(convertDamageDataToDamageItem(critItem));\r\n        }\r\n    }\r\n    let wSpec = {\r\n        weaponId: template.id,\r\n        shot_size: template.shotSize[1],\r\n        defReloadTime: defReloadTime,\r\n        reloadSpeed: template.reloadSpeed[1],\r\n        fireRate: fireRate,\r\n        is_auto: template.isAuto[1],\r\n        hand: template.hand[1],\r\n        ammoCapacity: template.capacity[1],\r\n        speed: template.speed[1],\r\n        totalD: template.totalD[1],\r\n        aa: template.antiArmor[1],\r\n        strengthBoost: template.strengthBoost[1],\r\n        crit: template.crit[1],\r\n        sneak: template.sneak[1],\r\n        cripple: template.cripple[1],\r\n        exp: template.exp[1],\r\n        bonus: bonusMult,\r\n        crippleChance: 50,\r\n        creature: creatures,\r\n        strPoints: template.strPoints[1],\r\n        powerAttack: template.powerAttack[1],\r\n        bash: template.bash[1],\r\n        type: template.type[1],\r\n        ammoType: {name: template.ammoType.name, type: template.ammoType.type, codeName: template.ammoType.codeName},\r\n        level: template.level,\r\n        defaultName: template.name,\r\n        weaponName: template.name,\r\n        chargeTime: template.chargeTime[1],\r\n        maxChargeTime: template.chargeTime[1],\r\n        iconName: template.iconName[template.type[1]],\r\n        tags: template.tags,\r\n        mods: mods,\r\n        legendary: legs,\r\n        damages: sortedDamages,\r\n        critDamages: critDamages,\r\n        legendaryHealthUpdated: false,\r\n    };\r\n\r\n    if (assignCurrentlyActiveUserLegendary) {\r\n\r\n        // Assign previous legs to not reset them if a weapon does not have legendary\r\n        for (let i = 0; i < currentLegendaryIds.length; i++) {\r\n            if (legs[i][0] === \"\") {\r\n                const current = currentLegendaryIds[i];\r\n                if (current[0] !== \"\") {\r\n                    modParser.applyLegendaryModToWSpec(current[0], wSpec, i, 100, false, true);\r\n                    legs[i] = [current[0], current[1], current[2]];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return wSpec;\r\n}\r\n\r\nexport function defaultWeaponSpecs() {\r\n    return {\r\n        shot_size: 1,\r\n        defReloadTime: 0,\r\n        reloadSpeed: 1,\r\n        fireRate: 20,\r\n        is_auto: 1,\r\n        hand: 1,\r\n        ammoCapacity: 1,\r\n        aa: 0,\r\n        strengthBoost: 0,\r\n        bonus: 0,\r\n        crit: 0,\r\n        speed: 1,\r\n        sneak: 0,\r\n        totalD: 0,\r\n        chargeTime: 0,\r\n        maxChargeTime: 0,\r\n        cripple: 0,\r\n        crippleChance: 50,\r\n        bash: 0,\r\n        strPoints: 0,\r\n        powerAttack: 0,\r\n        exp: 0,\r\n        creature: [],\r\n        level: 1,\r\n        ammoType: {name: \"\", type: \"\", codeName: \"\"},\r\n        defaultName: \"Weapon\",\r\n        weaponName: \"Weapon\",\r\n        imageName: \"Weapon\",\r\n        weaponId: \"\",\r\n        type: \"All\",\r\n        tags: [],\r\n        mods: [],\r\n        legendary: getDefaultLegs(),\r\n        damages: [],\r\n        critDamages: [],\r\n        legendaryHealthUpdated: true,\r\n    };\r\n}\r\n\r\n// TODO: get rid of hardcore values\r\n// This workaround is acceptable only for 'Damage Bonus' as it has\r\n// the special cell to be placed (only for legendary) because it can be adjusted by a user\r\nfunction replaceAdjustableLegs(legs, bonusMult) {\r\n    for (let i = 0; i < legs.length; i++) {\r\n        const leg = legs[i];\r\n        switch (leg[0]) {\r\n            case '004f6aab':\r\n            case '00606b71':\r\n            case '004f6aae':\r\n            case '004f6aa7':\r\n                bonusMult -= 50;\r\n                leg[1] = 50;\r\n                leg[2] = \"BDB\";\r\n                break;\r\n            case '004f6aa0':\r\n                bonusMult -= 95;\r\n                leg[1] = 95;\r\n                leg[2] = \"BDB\";\r\n                break;\r\n            case '0072a8c1':\r\n            case '006069f2':\r\n                bonusMult -= 24;\r\n                leg[1] = 24;\r\n                leg[2] = \"BDB\";\r\n                break;\r\n            case '00606b73':\r\n            case '005299f5':\r\n            case '004f6d76':\r\n            case '00606c8d':\r\n            case '0052414e':\r\n                bonusMult -= 25;\r\n                leg[1] = 25;\r\n                leg[2] = \"BDB\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return bonusMult;\r\n}","export function defaultExtraDamage() {\r\n    return {\r\n        useCrit: false,\r\n        useSneak: false,\r\n        useHead: false,\r\n        critFreq: 4.0,\r\n        headFreq: 80,\r\n    };\r\n}\r\n","import { keyValueBadge } from './RowBuilder';\r\nimport {  Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { collectAllDamages } from './mods/DamageSetter';\r\n\r\n\r\nexport function getSymbolStyle(dType, kind) {\r\n    switch(dType) {\r\n        case \"dtPhysical\":\r\n            if (kind === 'bleed') {\r\n                return [\"🩸\", \"badge bg-lite-shadow m-1\"];\r\n            } else if (kind === 'explosive') {\r\n                return [\"🧨\", \"badge bg-lite-shadow m-1\"];\r\n            }\r\n            return [\"💥\", \"badge bg-ballistic-shadow m-1\"];\r\n        case \"dtEnergy\":\r\n            return [\"⚡\", \"badge bg-energy-shadow m-1\"];\r\n        case \"dtFire\":\r\n            return [\"🔥\", \"badge bg-fire-shadow m-1\"];\r\n        case \"dtCryo\":\r\n            return [\"❄️\", \"badge bg-cold-shadow m-1\"];\r\n        case \"dtPoison\":\r\n            return [\"☣️\", \"badge bg-poison-shadow m-1\"];\r\n        case \"dtRadiationExposure\":\r\n            return [\"☢️\", \"badge bg-rad-shadow m-1\"];\r\n        default:\r\n            return [\"\", \"\"];\r\n    }\r\n}\r\n\r\nfunction getItems(adDamage, bonusMult, creatures) {\r\n    let result = [];\r\n    let k = 0;\r\n    for (let i = 0; i < adDamage.length; i++) {\r\n        const damage = adDamage[i];\r\n        if (damage.ignore) {\r\n            continue;\r\n        }\r\n        const [symbol, style] = getSymbolStyle(damage.type, damage.kind);\r\n        let value = damage.damage.toFixed(1);\r\n        if (bonusMult > 0) {\r\n            const bMult = (value * bonusMult).toFixed(1);\r\n            value += \" (+\" + bMult + \") \";\r\n        } else if (bonusMult < 0) {\r\n            const bMult = (value * bonusMult).toFixed(1);\r\n            value += \" (\" + bMult + \") \";\r\n        }\r\n        if (damage.time > 0) {\r\n            value += \" - \" + damage.time + \"s\";\r\n        }\r\n        if (damage.interval > 0) {\r\n            value += \" (\" + damage.interval.toFixed(1) + \")\";\r\n        }\r\n        if (damage.area > 0) {\r\n            value += \" (\" + damage.area.toFixed(0) + \" area)\";\r\n        }\r\n        result.push(keyValueBadge(style, '10rem', symbol, value, k++));\r\n    }\r\n    for (let i = 0; i < creatures.length; i++) {\r\n        const creature = creatures[i];\r\n        const value = \"+\" + creature.value + \"%\";\r\n        const name = \"🐵 \" + creature.name;\r\n        result.push(keyValueBadge(\"badge bg-lite-shadow m-1\", '10rem', name, value, k++));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function AdditionalDView({template}) {\r\n    const adDamage = collectAllDamages(template);\r\n\r\n    if (!adDamage || adDamage.length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className='m-1 p-1'>Damage</Divider>\r\n            <Row className=\"m-1 d-flex justify-content-center\">\r\n                {getItems(adDamage, template.bonusMult[1], template.creature)}\r\n            </Row>\r\n        </>\r\n    );\r\n}","import items from '../resources/ammo.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getAmmo() {\r\n    return iMap;\r\n}","const magazines = require.context('../resources/boostStuff/magazines', true, /\\.webp/);\r\nconst magazinesList = magazines.keys().map(magazine => magazines(magazine));\r\n\r\nconst bobbleHeads = require.context('../resources/boostStuff/bobbleHeads', true, /\\.webp/);\r\nconst bobbleHeadsList = bobbleHeads.keys().map(bobbleHead => bobbleHeads(bobbleHead));\r\n\r\nconst foods = require.context('../resources/boostStuff/food', true, /\\.webp/);\r\nconst foodsList = foods.keys().map(food => foods(food));\r\n\r\nconst drinks = require.context('../resources/boostStuff/drink', true, /\\.webp/);\r\nconst drinksList = drinks.keys().map(drink => drinks(drink));\r\n\r\nconst psychos = require.context('../resources/boostStuff/psycho', true, /\\.webp/);\r\nconst psychoList = psychos.keys().map(psycho => psychos(psycho));\r\n\r\nconst serums = require.context('../resources/boostStuff/serums', true, /\\.webp/);\r\nconst serumList = serums.keys().map(serum => serums(serum));\r\n\r\nconst others = require.context('../resources/boostStuff/others', true, /\\.webp/);\r\nconst othersList = others.keys().map(other => others(other));\r\n\r\n\r\nexport function getOther(name) {\r\n    return getItem(name, othersList);\r\n}\r\n\r\nexport function getBobbleHead(name) {\r\n    return getItem(name, bobbleHeadsList);\r\n}\r\n\r\nexport function getMagazine(name) {\r\n    return getItem(name, magazinesList);\r\n}\r\n\r\nexport function getFood(name) {\r\n    return getItem(name, foodsList);\r\n}\r\n\r\nexport function getDrink(name) {\r\n    return getItem(name, drinksList);\r\n}\r\n\r\nexport function getPsycho(name) {\r\n    return getItem(name, psychoList);\r\n}\r\n\r\nexport function getSerum(name) {\r\n    return getItem(name, serumList);\r\n}\r\n\r\nfunction getItem(name, nameList) {\r\n    for (let i = 0; i < nameList.length; i++) {\r\n        const item = nameList[i];\r\n        const firstIndex = item.lastIndexOf(\"/\") + 1;\r\n        const lastIndex = item.indexOf(\".\");\r\n        const mName = item.substring(firstIndex, lastIndex);\r\n        if (mName === name) {\r\n            return item;\r\n        }\r\n    }\r\n    return null;\r\n}","import WeaponFactory from '../damage/weapon/WeaponFactory';\r\nimport CreaturesProduction from '../creature/CreaturesProduction';\r\nimport DamageEmulator from '../damage/DamageEmulator';\r\nimport Global from './Global';\r\n\r\n\r\nexport function calcDamage(weaponFactory, creaturesInfo) {\r\n    return new DamageEmulator(weaponFactory.build(WeaponFactory.DEFAULT), creaturesInfo).emulate();\r\n}\r\n\r\nexport function graphDamage(creaturesInfo, weaponFactory) {\r\n    const weapon = weaponFactory.build(WeaponFactory.DEFAULT, creaturesInfo);\r\n    weapon.setAlwaysMaxHit(true);\r\n\r\n    // In case we have only 1 ammo to not count reloading\r\n    weapon.disableReloadTimeCounting();\r\n\r\n    // Actual shot per second + we need to care about reloading time\r\n    let fireRate = weapon.getFireRate() / 10.0;\r\n    fireRate = 1 / fireRate + weapon.getChargeTime();\r\n    fireRate = 1 / fireRate;\r\n    let ammoCapacity = weapon.getAmmoCapacity();\r\n    if (ammoCapacity === 0) { // Melee\r\n        ammoCapacity = 1;\r\n    }\r\n    const totalTime = ammoCapacity / fireRate + weapon.getReloadTime();\r\n    const shotTime = totalTime / ammoCapacity;\r\n    const shotsPerSecond = 1 / shotTime;\r\n\r\n    // 1 Hit per second which later will be multiplied by actual fire rate to get correct DPS\r\n    weapon.setFireRate(10);\r\n    weapon.setChargeTime(0);\r\n    weapon.setFirstBloodBonus(0);\r\n    weapon.setLastShotBonus(0);\r\n    let yValues = [];\r\n    let xValues = [];\r\n    const r = (creaturesInfo.immuneToRadiation) ? 0 : creaturesInfo.r;\r\n    const p = (creaturesInfo.immuneToPoison) ? 0 : creaturesInfo.p;\r\n\r\n    // Max resistance with armor penetration\r\n    let maxRes = Math.max(...[creaturesInfo.b, creaturesInfo.e, creaturesInfo.f, p, creaturesInfo.c, r]);\r\n    if (maxRes > 0) {\r\n        const creature = CreaturesProduction.produceByArmor(creaturesInfo, [maxRes, maxRes, maxRes, maxRes, maxRes, maxRes]);\r\n        const cArmor = creature.reduceArmor(weapon.getAntiArmor()).getArmor();\r\n        maxRes = Math.max(...cArmor);\r\n    }\r\n\r\n    let points = Global.graphPoints;\r\n    if (maxRes < 0) {\r\n        maxRes = 0;\r\n    }\r\n    if (maxRes < points) {\r\n        points = maxRes;\r\n    }\r\n    const coef = (points === 0) ? 0 : maxRes / points;\r\n    for (let i = 0; i <= points; i++) {\r\n        xValues.push(Math.ceil(coef * i));\r\n    }\r\n    for (let i = 0; i < xValues.length; i++) {\r\n        const xValue = xValues[i];\r\n        const armor = [xValue, xValue, xValue, xValue, xValue, xValue];\r\n        const creature = CreaturesProduction.produceByArmor(creaturesInfo, armor);\r\n        creature.reduceArmor(weapon.getAntiArmor());\r\n        creature.takeDamage(weapon.getMaxHit());\r\n        yValues.push(creature.getLastTotalDamage() * shotsPerSecond);\r\n    }\r\n\r\n    return {\r\n        xValues: xValues,\r\n        yValues: yValues,\r\n    }\r\n}\r\n\r\n\r\n","export function getColorsForHotMeter() {\r\n    let colors = []\r\n    let r = 64;\r\n    let g = 255;\r\n    let b = 255;\r\n    let s = 12;\r\n    for (let i = 0; i < 50; i++) {\r\n        if (b > 64) {\r\n            b = b - s;\r\n            b = (b < 64) ? 64 : b;\r\n        } else if (r < 255) {\r\n            r = r + s;\r\n            r = (r > 255) ? 255 : r;\r\n        } else if (g > 64) {\r\n            g = g - s;\r\n            g = (g < 64) ? 64 : g;\r\n        }\r\n        colors.push(\"rgb(\" + r + \", \" + g + \", \" + b + \")\");\r\n    }\r\n    return colors;\r\n}\r\n","import { keyValueBadge } from './RowBuilder';\r\nimport {  Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\nimport DamageExtractor from './mods/DamageExtractor';\r\nimport { getSymbolStyle } from './AdditionalDView';\r\n\r\n\r\nconst damageExtractor = new DamageExtractor();\r\n\r\n\r\n// It does not handle possible crit damages from enchantments (seems we do not have them)\r\nexport default function CritView({crits, weapId}) {\r\n    if (!crits || crits.length === 0) {\r\n        return (<></>);\r\n    }\r\n    let allItems = getCritDamages(crits, weapId, true);\r\n    if (allItems.length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className='m-1 p-1'>Critical Hit</Divider>\r\n            <Row className=\"m-1 d-flex justify-content-center\">\r\n                {allItems}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function getCritDamages(crits, weapId, visual=false) {\r\n    let allItems = [];\r\n    if (!crits) {\r\n        return allItems;\r\n    }\r\n    for (let i = 0; i < crits.length; i++) {\r\n        let result = {};\r\n        const ench = crits[i];\r\n        damageExtractor.extractEnch(ench, result, \"Base Crit\", false, weapId);\r\n        for (const property in result) {\r\n            const spells = result[property];\r\n            if (visual) {\r\n                allItems.push(getItems(spells));\r\n\r\n            } else {\r\n                allItems.push(spells);\r\n            }\r\n        }\r\n    }\r\n    return allItems;\r\n}\r\n\r\nfunction getItems(crits) {\r\n    let result = [];\r\n    for (let i = 0; i < crits.length; i++) {\r\n        const damage = crits[i];\r\n        const [symbol, style] = getSymbolStyle(damage.type_name);\r\n        let value = damage.curv;\r\n        if (value === 0) {\r\n            value = damage.value;\r\n            if (value === 0) {\r\n                value = damage.magnitude;\r\n            }\r\n        }\r\n        if (damage.time > 0) {\r\n            value += \" - \" + damage.time + \"s\";\r\n        }\r\n        if (damage.interval > 0) {\r\n            value += \" (\" + damage.interval.toFixed(1) + \")\";\r\n        }\r\n        result.push(keyValueBadge(style, '10rem', symbol,  value, i));\r\n    }\r\n    return result;\r\n}","import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n\r\nexport function getUniqueDropdownItemsByNames(names) {\r\n    const result = [];\r\n    for (let i = 0; i < names.length; i++) {\r\n        const name = names[i];\r\n        result.push(<Dropdown.Item key={name + i} eventKey={name}>{name}</Dropdown.Item>)\r\n    }\r\n    return result;\r\n}","import effects from '../resources/effects.json';\r\n\r\n\r\nconst vmadObjects = new Map();\r\n\r\n// PERK, SPEL, MGEF\r\nexport function getEffect(id) {\r\n    return effects[0][id];\r\n}\r\n\r\nexport function setVMADObject(id, object) {\r\n    vmadObjects.set(id, object);\r\n}\r\n\r\nexport function getVMADObject(id) {\r\n    return vmadObjects.get(id);\r\n}\r\n\r\nexport function clearVMADObjects() {\r\n    vmadObjects.clear();\r\n}\r\n\r\nexport function printVMADS() {\r\n    console.log(vmadObjects);\r\n}","import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { leftRightTag, leftRight2 } from './RowBuilder';\r\nimport { getEffect, setVMADObject } from './EffectProvider';\r\nimport { getItem } from '../consumables/view/ConsumableItems';\r\n\r\n\r\nconst darkBlue = {\r\n    backgroundColor: '#e6f7ff',\r\n    borderColor: '#0085c6',\r\n    color: '#003e5d',\r\n}\r\n\r\nexport function getNameByLabel(label) {\r\n    switch(label) {\r\n        case 'SPEL':\r\n            return \"Spell\";\r\n        case 'PERK':\r\n            return \"Perk\";\r\n        case 'PCRD':\r\n            return \"Card\";\r\n        case 'ENCH':\r\n            return \"Enchantment\";\r\n        case 'MGEF':\r\n            return \"Effect\";\r\n        case 'ALCH':\r\n            return \"Alchemy\";\r\n        case 'HZRD':\r\n            return \"Hazard\";\r\n        case 'QUST':\r\n            return \"Quest\";\r\n        case 'KYWD':\r\n            return \"Tag\";\r\n        case 'RACE':\r\n            return \"Race\";\r\n        default:\r\n            return label;\r\n    }\r\n}\r\n\r\nexport function getVMADButton(effectId, vmad, onEffectClick, buttonName='VMAD') {\r\n    const id = \"vmad\" + effectId;\r\n    const vmadObject = {label: \"VMAD\", vmad: vmad, id: id};\r\n    setVMADObject(id, vmadObject);\r\n    return (\r\n        <Button className=\"w-100 p-1 mt-1\" name={id} variant=\"blue-white-border\" onClick={onEffectClick}>\r\n            {buttonName}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport function getEffectButton(effectId, onEffectClick) {\r\n    let effect = getEffect(effectId);\r\n    if (!effect) {\r\n        effect = getItem(effectId);\r\n        if (!effect) {\r\n            return (<>Can not resolve effect: {effectId}</>);\r\n        }\r\n\r\n    }\r\n    const name = (effect.full === \"\") ? effect.name : effect.full;\r\n    return (\r\n        <Button className=\"w-100 p-0 mt-1\" name={effectId} variant=\"blue-white-border\" onClick={onEffectClick}>\r\n            <div><b><small>{name}</small></b></div>\r\n            {leftRight2(<div className=\"mt-0\" style={{fontSize: '.6rem'}}><b>{getNameByLabel(effect.label)}</b></div>,\r\n            <div className=\"mt-0\" style={{fontSize: '.6rem'}}>{effectId}</div>, -1, \"w-100 ps-1 pe-1 p-0\")}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport function vmadView(id, vmad, onEffectClick) {\r\n    if (!vmad || vmad.length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <div className=\"m-2\">\r\n            {getVMADButton(id, vmad, onEffectClick)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function buildRow(left, right, color, border=true, skipZero=false, skipEmpty=true) {\r\n    if (skipEmpty && (right === null || right === \"\")) {\r\n        return (<></>);\r\n    }\r\n    if (skipZero && right === 0) {\r\n        return (<></>);\r\n    }\r\n    return leftRightTag(<b className=\"ps-1\">{left}</b>, <b className=\"pe-1\">{right}</b>, color, border, -1, \"w-100 p-0 mt-1 mb-1\")\r\n}\r\n\r\nexport function buildConditionStrings(conditions, className=\"mt-1\", color='#332500', bgColor='#fffdf6') {\r\n    const conditionStrings = [];\r\n    if (!conditions) {\r\n        return conditionStrings;\r\n    }\r\n    for (let i = 0; i < conditions.length; i++) {\r\n        const cond = conditions[i];\r\n        conditionStrings.push(<div className={className} style={{fontSize: '0.7rem', textAlign: 'center', textWrap: 'balance', backgroundColor: bgColor, color: color}} key={i}><b>{cond}</b></div>);\r\n    }\r\n    return conditionStrings;\r\n}\r\n\r\nexport function buildTextBlock(text, header=null, footer=null, className=\"mt-2\", color=\"#003112\", borderColor=\"#effff5\", backgroundColor=\"#effff5\") {\r\n    if (!text || text === \"\") {\r\n        return (<></>);\r\n    }\r\n    if (typeof text === typeof \"\" && text.trim() === \"\") {\r\n        return (<></>);\r\n    }\r\n    const headerView = (header) ? (<div className=\"mb-1\"><b>{header}</b></div>) : (<></>);\r\n    return (\r\n        <div className={className} style={{fontSize: '0.7rem', borderWidth: '1px', borderStyle: 'solid', borderColor: borderColor, textAlign: 'center', textWrap: 'balance', backgroundColor: backgroundColor, color: color}}>\r\n            {headerView}\r\n            <div><b>{text}</b></div>\r\n            <div className=\"mt-1\">{footer}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function buildActor(actor, header=\"Actor\", footer=null) {\r\n    if (!actor || actor === \"\" || actor === \"00000000\") {\r\n        return (<></>);\r\n    }\r\n    const label = actor.label;\r\n    if (label === \"AVIF\") {\r\n        return (\r\n            <Card className=\"mt-1 mb-1 m-0\">\r\n                <Card.Header className='pt-0 pb-0'>\r\n                    <b><small>{header}</small></b>\r\n                </Card.Header>\r\n                <Card.Body className=\"p-1\">\r\n                    {buildTextBlock(actor.desc, null, null, \"p-1\")}\r\n                    {buildRow(\"Id:\", actor.id, 'purple')}\r\n                    {buildRow(\"Name:\", actor.name, 'purple')}\r\n                    {buildRow(\"Full:\", actor.full, 'purple')}\r\n                    {buildRow(\"Default value:\", actor.def, 'purple')}\r\n                    {buildRow(\"Min value:\", actor.min, 'purple')}\r\n                    {buildRow(\"Max value:\", actor.max, 'purple')}\r\n                    {footer}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    } else {\r\n        return (<>Unsupported label for actor: {label}</>);\r\n    }\r\n}\r\n\r\nexport function idNameRow(id, name) {\r\n    return (\r\n        <div className=\"d-flex flex-nowrap\" style={{width: '100%'}}>\r\n            <span className=\"pe-0 d-flex justify-content-start\" style={{width: 'auto'}}>\r\n                <b className=\"tag\">{id}</b>\r\n            </span>\r\n            <div className=\"d-flex justify-content-end ms-2\" style={{width: '100%', textWrap: 'nowrap', overflow: 'hidden'}}>\r\n                <b className=\"tag\" style={darkBlue}>{name}</b>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function getGlobDuration(effect) {\r\n    return getGlob(effect.glob_duration, \"duration\");\r\n}\r\n\r\nfunction getGlob(glob, name, footerView=null) {\r\n    const footer = (footerView) ? <Card.Footer className=\"bg-spell-header p-0 ps-2\">{footerView}</Card.Footer> : <></>;\r\n    if (glob !== '') {\r\n        return (\r\n            <Card className='mt-1 mb-1'>\r\n                <Card.Header className=\"bg-spell-header p-0 ps-2\"><small>Glob {name}</small></Card.Header>\r\n                <Card.Body className=\"p-1\">\r\n                    {buildRow(\"Id:\", glob.id, \"purple\")}\r\n                    {buildRow(\"Name:\", glob.name, \"purple\")}\r\n                    {buildRow(\"Value:\", glob.value, \"purple\")}\r\n                </Card.Body>\r\n                {footer}\r\n            </Card>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\nexport function getGlobMagnitude(effect) {\r\n    return getGlob(effect.glob_magnitude, \"magnitude\");\r\n}\r\n\r\nexport function getGlobValue(obj, name=\"value\", footerView=null) {\r\n    return getGlob(obj, name, footerView);\r\n}\r\n\r\nexport function buildEffect(index, body) {\r\n    return (\r\n        <Card key={index} className=\"mt-1 mb-1 m-0\">\r\n            <Card.Header className='pt-0 pb-0'>\r\n                <b><small>E{index + 1}</small></b>\r\n            </Card.Header>\r\n            <Card.Body className='p-1'>\r\n                {body}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport function buildCurve(curve, maxValue, className=\"mt-1\") {\r\n    if (!curve || curve === \"\") {\r\n        return (<></>);\r\n    }\r\n\r\n    const pathCurve = curve.split(\"\\n\");\r\n    return (\r\n        <>\r\n            {buildTextBlock(\r\n                <>\r\n                    <div className=\"pb-1\">\r\n                        Curve magnitude\r\n                    </div>\r\n                    <div className=\"pb-1\">\r\n                        {pathCurve[0]}\r\n                    </div>\r\n                    <div>\r\n                        {pathCurve[1]}\r\n                    </div>\r\n                    <div className=\"pt-1\">\r\n                        Curve magnitude max: {maxValue}\r\n                    </div>\r\n                </>, null, null, className, \"#7b3b00\", \"#fff9f3\", \"#fff9f3\"\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport function buildBadge(name, color=\"#000\", backgroundColor=\"#fff\") {\r\n    return (<div className=\"badge p-1 ps-2 pe-2 bg-lite-shadow2\" style={{backgroundColor: backgroundColor, color: color}}>{name}</div>)\r\n}\r\n\r\nexport function buildBadge2(name, color=\"#000\", backgroundColor=\"#fff\") {\r\n    return (<div className=\"badge p-1 ps-2 pe-2\" style={{borderStyle: 'solid', borderColor: backgroundColor, borderWidth: '0.5px', backgroundColor: backgroundColor, color: color}}>{name}</div>)\r\n}","import iBullet from '../resources/icons/bullet3.webp';\r\nimport iAmmo from '../resources/icons/ammo5.webp';\r\nimport iFireRate from '../resources/icons/fireRate.webp';\r\nimport iTAmmo from '../resources/icons/tAmmo.webp';\r\nimport iGun from '../resources/icons/gun.webp';\r\nimport iRifle from '../resources/icons/rifle.webp';\r\nimport iShotgun from '../resources/icons/shotgun.webp';\r\nimport iBow from '../resources/icons/bow.webp';\r\nimport iMelee from '../resources/icons/melee.webp';\r\nimport iHeavy from '../resources/icons/heavy.webp';\r\nimport iUnarmed from '../resources/icons/unarmed.webp';\r\nimport iThrown from '../resources/icons/thrown.webp';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\n\r\nexport function getNumberEmoji(number) {\r\n    switch(number) {\r\n        case 0:\r\n            return \"0️⃣\";\r\n        case 1:\r\n            return \"1️⃣\";\r\n        case 2:\r\n            return \"2️⃣\";\r\n        case 3:\r\n            return \"3️⃣\";\r\n        case 4:\r\n            return \"4️⃣\";\r\n        case 5:\r\n            return \"5️⃣\";\r\n        case 6:\r\n            return \"6️⃣\";\r\n        case 7:\r\n            return \"7️⃣\";\r\n        case 8:\r\n            return \"8️⃣\";\r\n        case 9:\r\n            return \"9️⃣\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nexport function getSymbolText(symbol, text) {\r\n    switch (symbol) {\r\n        case \"B\":\r\n            return <>💥 {text}</>\r\n        case \"E\":\r\n            return <>⚡ {text}</>\r\n        case \"F\":\r\n            return <>🔥 {text}</>;\r\n        case \"P\":\r\n            return <>☣️ {text}</>;\r\n        case \"C\":\r\n            return <>❄️ {text}</>;\r\n        case \"R\":\r\n            return <>☢️ {text}</>;\r\n        default:\r\n            return <> {text}</>\r\n    }\r\n}\r\n\r\nfunction image(maxHeight, src, text) {\r\n    return (<Image className=\"mt-auto mb-auto m-0\" style={{ maxHeight: maxHeight }} src={src} fluid />);\r\n}\r\n\r\nexport function bullet(maxHeight) {\r\n    return image(maxHeight, iBullet);\r\n}\r\n\r\nexport function ammo(maxHeight) {\r\n    return image(maxHeight, iAmmo);\r\n}\r\n\r\nexport function fireRate(maxHeight) {\r\n    return image(maxHeight, iFireRate);\r\n}\r\n\r\nexport function tAmmo(maxHeight) {\r\n    return image(maxHeight, iTAmmo);\r\n}\r\n\r\nexport function gun(maxHeight) {\r\n    return image(maxHeight, iGun);\r\n}\r\n\r\nexport function rifle(maxHeight) {\r\n    return image(maxHeight, iRifle);\r\n}\r\n\r\nexport function shotgun(maxHeight) {\r\n    return image(maxHeight, iShotgun);\r\n}\r\n\r\nexport function bow(maxHeight) {\r\n    return image(maxHeight, iBow);\r\n}\r\n\r\nexport function melee(maxHeight) {\r\n    return image(maxHeight, iMelee);\r\n}\r\n\r\nexport function heavy(maxHeight) {\r\n    return image(maxHeight, iHeavy);\r\n}\r\n\r\nexport function unarmed(maxHeight) {\r\n    return image(maxHeight, iUnarmed);\r\n}\r\n\r\nexport function thrown(maxHeight) {\r\n    return image(maxHeight, iThrown);\r\n}\r\n\r\nexport function addText(imageF, maxHeight, marginLeft, text) {\r\n    return (<>{imageF(maxHeight)} <span style={{marginLeft: marginLeft}}>{text}</span></>)\r\n}","export const currentLegendaryIds = [[\"\", 0, \"\"], [\"\", 0, \"\"], [\"\", 0, \"\"], [\"\", 0, \"\"], [\"\", 0, \"\"]];\r\n\r\nexport function setCurrentLegendaryIds(wSpec) {\r\n    for (let i = 0; i < 5; i++) {\r\n        currentLegendaryIds[i] = [wSpec.legendary[i][0], wSpec.legendary[i][1], wSpec.legendary[i][2]];\r\n    }\r\n}\r\n\r\nexport default class Global {\r\n\r\n    // static version1 = \"Patch 1.7.16.13 - Update 56\";\r\n    // static version2 = \"Gleaming Depths - December 3, 2024\";\r\n    static version1 = \"Patch 1.7.14.15 - Update 54\";\r\n    static version2 = \"Milepost Zero - September 3, 2024\";\r\n    static versionMessage = \"Version of game from which weapon / legendary / mod data were parsed.\";\r\n    static webVersion = \"ver.66\";\r\n    static creatureParseVersion = \"Patch 1.7.16.13 - Update 56\";\r\n    static creatureParseVersionName = \"Gleaming Depths - December 3, 2024\";\r\n    static raceParseVersion = \"Patch 1.7.16.13 - Update 56\";\r\n    static raceParseVersionName = \"Gleaming Depths - December 3, 2024\";\r\n    static consumablesParseVersion = \"Patch 1.7.16.13 - Update 56\";\r\n    static consumablesParseVersionName = \"Gleaming Depths - December 3, 2024\";\r\n    static perkCardParseVersion = \"Patch 1.7.16.13 - Update 56\";\r\n    static perkCardParseVersionName = \"Gleaming Depths - December 3, 2024\";\r\n    static graphPoints = 50;\r\n}","export function checkLength(e) {\r\n    if (e.target.value === \"\" || e.target.value === null) {\r\n        e.currentTarget.value = 0;\r\n        return true;\r\n    }\r\n    const val = parseFloat(e.currentTarget.value);\r\n    if (val < 0) {\r\n         e.currentTarget.value = 0;\r\n    } else if (e.currentTarget.value.length > e.currentTarget.maxLength) {\r\n         e.currentTarget.value = e.currentTarget.value.slice(0, e.currentTarget.maxLength);\r\n    } else if (val > e.currentTarget.max) {\r\n        e.currentTarget.value = e.currentTarget.max;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function truncate(str, maxLength) {\r\n    if (!str || str.length <= maxLength) {\r\n        return str;\r\n    }\r\n    return str.slice(0, maxLength) + \"…\";\r\n}\r\n\r\nexport function truncateLongWords(str, maxLength) {\r\n    if (!str || str.length <= maxLength) {\r\n        return str;\r\n    }\r\n    const words = str.split(' ');\r\n    for (let i = 0; i < words.length; i++) {\r\n        let word = words[i];\r\n        if (word.length > maxLength) {\r\n            words[i] = truncate(word, maxLength);\r\n        }\r\n    }\r\n    return words.join(' ');\r\n}","import { convertStuffBoost } from \"../entities/EStuffBoost\";\r\nimport {getAverageTimeMillis } from \"../entities/ECreatures\";\r\n\r\n\r\nexport function getHotPercentage(creatures) {\r\n    const time = getAverageTimeMillis(creatures);\r\n    let percent = 0;\r\n    if (time <= 30000) {\r\n        percent = 100;\r\n    } else {\r\n        percent = (3000000 / time).toFixed(0);\r\n    }\r\n    return percent;\r\n}\r\n\r\nexport function buildItem(id, name, player, playerStats, creatures, boostDamage, wSpec, extraDamage, additionalDamages, resultDamage, stuffBoost) {\r\n    const stuff = convertStuffBoost(stuffBoost);\r\n    const wSpecCopy = JSON.parse(JSON.stringify(wSpec));\r\n    wSpecCopy.weaponName = name;\r\n    return {\r\n        id: id,\r\n        name: name,\r\n        averageTime: getAverageTimeMillis(creatures),\r\n        player: JSON.parse(JSON.stringify(player)),\r\n        playerStats: JSON.parse(JSON.stringify(playerStats)),\r\n        boostDamage: JSON.parse(JSON.stringify(boostDamage)),\r\n        wSpec: wSpecCopy,\r\n        extraDamage: JSON.parse(JSON.stringify(extraDamage)),\r\n        additionalDamages: JSON.parse(JSON.stringify(additionalDamages)),\r\n        creatures: JSON.parse(JSON.stringify(creatures)),\r\n        resultDamage: JSON.parse(JSON.stringify(resultDamage)),\r\n        stuff: JSON.parse(JSON.stringify(stuff)),\r\n    }\r\n};","import items from '../resources/legendary.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    let legendary = [[{name: \"None\", id: \"1\"}], [{name: \"None\", id: \"2\"}], [{name: \"None\", id: \"3\"}], [{name: \"None\", id: \"4\"}], [{name: \"None\", id: \"5\"}]];\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item.id, item);\r\n        legendary[item.star - 1].push(item);\r\n    }\r\n    return [map, legendary];\r\n}\r\n\r\nconst [iMap, legendary] = createMap();\r\n\r\nexport function getLegendary(id) {\r\n    return iMap.get(id);\r\n}\r\n\r\nexport function getLegendaryByStar() {\r\n    return legendary;\r\n}\r\n\r\nexport function getLegendaryNameFromSpec(wSpec, star) {\r\n    if (wSpec && wSpec.legendary) {\r\n        const leg = wSpec.legendary[star - 1][0];\r\n        if (leg && leg !== \"\") {\r\n            const legObj = getLegendary(leg);\r\n            if (legObj) {\r\n                return legObj.name;\r\n            }\r\n            return \"\";\r\n        }\r\n    }\r\n    return \"\";\r\n}","import items from '../resources/mods.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getMods() {\r\n    return iMap;\r\n}","import items from '../resources/perk.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getPerks() {\r\n    return iMap;\r\n}\r\n\r\nexport function getPerk(id) {\r\n    return getPerks().get(id);\r\n}","import items from '../resources/proj.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getProj() {\r\n    return iMap;\r\n}","import getProj from '../helpers/Proj';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Collapse } from 'antd';\r\nimport { getField, getResolvedField } from './ViewHelper';\r\nimport { getCardSpell } from './SpellView';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { WeaponPopoverOverlay, renderWeaponPopover } from './WeaponPopoverOverlay';\r\n\r\n\r\nfunction getProjectileOverlay(proj) {\r\n    const overlayButton = (<Button className=\"d-flex justify-content-center mb-1 m-auto\" size='sm' style={{width: '15rem'}}>Projectile: {proj['id']}</Button>);\r\n    return (\r\n        <WeaponPopoverOverlay popoverHeader={\"Projectile\"} popoverContent={buildProjView(proj)} itemToOverly={overlayButton}></WeaponPopoverOverlay>\r\n    );\r\n}\r\n\r\nfunction getHazardOverlay(hazard) {\r\n    const overlayButton = (<Button className=\"d-flex justify-content-center mt-1 mb-1 m-auto\" variant=\"success\" size='sm' style={{width: '15rem'}}>Hazard: {hazard['id']}</Button>);\r\n    return (\r\n        <WeaponPopoverOverlay popoverHeader={\"Hazard\"} popoverContent={buildHazardView(hazard)} itemToOverly={overlayButton}></WeaponPopoverOverlay>\r\n    );\r\n}\r\n\r\nfunction getProjButton(proj) {\r\n    function onClick(e) {\r\n        renderWeaponPopover(buildProjView(proj, true));\r\n    }\r\n    return (\r\n        <Button className=\"d-flex justify-content-center mb-1 m-auto\" size='sm' onClick={onClick} style={{width: '15rem'}}>Projectile: {proj['id']}</Button>\r\n    );\r\n}\r\n\r\nexport function getExpView(expl, header=\"Explosive\", popover=false) {\r\n    let projectile = (<></>);\r\n    let hazard = (<></>);\r\n    let objectExplosion = (<></>);\r\n    let placedWeapon = '';\r\n    let combined = (<></>);\r\n    if (expl && expl !== '' && expl !== '00000000') {\r\n        if (expl.projectile !== '00000000') {\r\n            if (expl.projectile === 'Same') {\r\n                projectile = getResolvedField('Projectile:', 'Same', 'default', '20rem');\r\n            } else {\r\n                const proj = getProj().get(expl.projectile);\r\n\r\n                // If it is not a popover we need to create a button to open a pover, otherwise we need to create a content for an opened popover\r\n                if (!popover) {\r\n                    projectile = getProjectileOverlay(proj);\r\n                } else {\r\n                    projectile = getProjButton(proj);\r\n                }\r\n            }\r\n        }\r\n        if (expl.object !== '') {\r\n            if (expl.object.type === 'HAZD') {\r\n                hazard = getHazardOverlay(expl.object.value);\r\n            } else if (expl.object.type === 'WEAP') {\r\n                placedWeapon = expl.object.value.id + \" / \" + expl.object.value.name;\r\n            } else if (expl.object.type === 'EXPL') {\r\n                objectExplosion = getExpView(expl.object.value, \"Explosive\", true);\r\n            } else if (expl.object.type === 'MSTT') {\r\n                combined = (\r\n                    <>\r\n                        {getExpView(expl.object.value.expl, \"Explosive\", true)}\r\n                        <div className='pb-2'></div>\r\n                        {getHazardOverlay(expl.object.value.hazd)}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        let dType = expl.d_type;\r\n        if (dType && dType !== '' && dType !== '00000000') {\r\n            dType = dType.id + \" - \" + dType.name + \" / \" + dType.full;\r\n        }\r\n        return (\r\n            <Card className=\"m-0 mt-2 p-0\">\r\n                <Card.Header className='m-0 p-1 ps-2 bg-proj-header'><small>{header}</small></Card.Header>\r\n                <Card.Body className=\"p-1\">\r\n                    <Row>\r\n                        {getField(expl, 'Id:', 'id', 'default', '20rem')}\r\n                        {getField(expl, 'Name:', 'name', 'purple', '20rem')}\r\n                        {getField(expl, 'Damage:', 'damage', 'blue', '20rem', false)}\r\n                        {getField(expl, 'Force:', 'force', 'blue', '20rem', false)}\r\n                        {getField(expl, 'ExpCurv:', 'exp_curv', 'blue', '20rem', false)}\r\n                        {getField(expl, 'DMult:', 'damage_mult', 'blue', '20rem', false, 3)}\r\n                        {getResolvedField('DType:', dType, 'blue', '20rem')}\r\n                        {getResolvedField('Placed Weapon:', placedWeapon, 'blue', '20rem')}\r\n                        {getField(expl, 'DValue:', 'd_value', 'blue', '20rem', false)}\r\n                        {getField(expl, 'DCurv:', 'd_curv', 'blue', '20rem', false)}\r\n                    </Row>\r\n                    <div className=\"m-1\" />\r\n                    {projectile}\r\n                    {getCardSpell(expl.enchantment)}\r\n                    {hazard}\r\n                    {objectExplosion}\r\n                    {combined}\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\n// It should have resolved data object already or '' / '00000000' for empty\r\nexport function getExplosiveForPopover(expl, header=\"Explosive\") {\r\n    return getExpView(expl, header, true);\r\n}\r\n\r\nexport function buildProjViewById(projId) {\r\n    const proj = getProj().get(projId);\r\n    if (!proj || proj === '' || proj === '00000000') {\r\n        return (<></>);\r\n    }\r\n    return buildProjView(proj)\r\n}\r\n\r\nfunction buildProjView(proj, popover=false) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                {getField(proj, 'Id:', 'id', 'default', '20rem')}\r\n                {getField(proj, 'Code Name:', 'name', 'pink', '20rem')}\r\n                {getField(proj, 'Full Name:', 'full', 'pink', '20rem')}\r\n                {getField(proj, 'Gravity:', 'gravity', 'blue', '20rem', true, 3)}\r\n                {getField(proj, 'Range:', 'range', 'blue', '20rem')}\r\n                {getField(proj, 'Relaunch:', 'relaunch', 'blue', '20rem', true, 3)}\r\n                {getField(proj, 'Speed:', 'speed', 'blue', '20rem')}\r\n            </Row>\r\n            {getExpView(proj.expl, \"Explosive\", popover)}\r\n            {getExpView(proj.destructible, \"Destructible\", popover)}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction buildHazardView(hazard) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                {getField(hazard, 'Id:', 'id', 'default', '20rem')}\r\n                {getField(hazard, 'Code Name:', 'name', 'pink', '20rem')}\r\n                {getField(hazard, 'Full Name:', 'full', 'pink', '20rem')}\r\n                {getField(hazard, 'Radius:', 'radius', 'blue', '20rem')}\r\n                {getField(hazard, 'Life Time:', 'lifeTime', 'blue', '20rem')}\r\n                {getField(hazard, 'Interval:', 'interval', 'blue', '20rem', true, 3)}\r\n            </Row>\r\n            {getCardSpell(hazard.effect)}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction buildProjViewByIds(ids) {\r\n    const result = [];\r\n    for (let i = 0; i < ids.length; i++) {\r\n        const proj = getProj().get(ids[i]);\r\n        result.push(<Card key={ids[i]} className=\"p-1 mb-1\">{buildProjView(proj)}</Card>);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction projInfo(className, ids) {\r\n    if (!ids || ids.length === 0) {\r\n        return (<></>);\r\n    }\r\n\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>Additional Projectile</strong>,\r\n            children: <>{buildProjViewByIds(ids)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Collapse size='small' items={items} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function ProjView({className, projId}) {\r\n    return projInfo(className, projId);\r\n}","import items from '../resources/spel.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getSpell() {\r\n    return iMap;\r\n}","import { getField, getResolvedField } from './ViewHelper';\r\nimport getPerks from './PerkProvider';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { getSpellHeader, getEffectsForPopover } from './SpellView';\r\nimport { getActorData } from '../templates/EffectPopover';\r\nimport getSpell from './Spell';\r\n\r\n// TODO: Deprecated. Must be deleted in the future.\r\n\r\nconst kind = {1: \"Float\", 3: \"List\", 4: \"Activate\", 5: \"Spell\", 8: \"Actor\", 9: \"Item\"};\r\n\r\nexport default function perkPopover(perk) {\r\n    return (\r\n        <div>Perk</div>\r\n    );\r\n}\r\n\r\nexport function getEffects(effects, width) {\r\n    const result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        const vType = effect.v_type;\r\n        if (vType === 8) {\r\n            result.push(buildEightEffect(effect, width, kind[vType]));\r\n        } else if (vType === 5 || vType === 0) {\r\n            result.push(buildFifthEffect(effect, width, kind[vType]));\r\n        } else if (vType === 1) {\r\n            result.push(buildFirstEffect(effect, width, kind[vType]));\r\n        } else {\r\n            throw new Error(\"Unsupported vType: \" + vType);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction buildFirstEffect(effect, width, kind) {\r\n    return (\r\n        <Card border=\"secondary\" className=\"mt-1 mb-1 p-0 m-0\">\r\n            <Row className=\"pt-1 pb-2\">\r\n                {getResolvedField('Kind:', kind, 'pink', width)}\r\n                {getField(effect, 'Type:', 'e_type', 'pink', width)}\r\n                {getField(effect, 'Entry:', 'entry', 'pink', width)}\r\n                {getField(effect, 'Operation:', 'op', 'pink', width)}\r\n                {getField(effect, 'Value:', 'value', 'pink', width, false)}\r\n            </Row>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction buildFifthEffect(effect, width, kind) {\r\n    let spell = effect.value;\r\n    if (typeof spell === typeof '') {\r\n        spell = getSpell().get(spell);\r\n    }\r\n    return (\r\n        <Card border=\"secondary\" className=\"mt-1 mb-1 p-0 m-0\">\r\n            <Row className=\"pt-1 pb-2\">\r\n                {getResolvedField('Kind:', kind, 'purple', width)}\r\n                {getField(effect, 'Type:', 'e_type', 'purple', width)}\r\n                {getField(effect, 'Entry:', 'entry', 'purple', width)}\r\n                {getField(effect, 'Operation:', 'op', 'purple', width)}\r\n            </Row>\r\n            {getSpellHeader(spell)}\r\n            <div className=\"pt-1\" />\r\n            {getEffectsForPopover(spell.mag_effects)}\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction buildEightEffect(effect, width, kind) {\r\n    const actor1 = getActorData(effect.value.actor1);\r\n    const actor2 = getActorData(effect.value.actor2);\r\n    return (\r\n        <Card border=\"secondary\" className='mt-1 mb-1 p-0 m-0'>\r\n            <Row className=\"pt-1 pb-2\">\r\n                {getResolvedField('Kind:', kind, 'blue', width)}\r\n                {getField(effect, 'Type:', 'e_type', 'blue', width)}\r\n                {getField(effect, 'Entry:', 'entry', 'blue', width)}\r\n                {getField(effect, 'Operation:', 'op', 'blue', width)}\r\n                {getField(effect.value, 'Value:', 'value', 'blue', width, false, 3)}\r\n                {getResolvedField(\"Actor1:\", actor1, 'blue', width)}\r\n                {getResolvedField(\"Actor2:\", actor2, 'blue', width)}\r\n            </Row>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport function getPerkContent(perkId, width='20rem') {\r\n    const perk = getPerks().get(perkId);\r\n    return (\r\n        <Row>\r\n            {getField(perk, 'Id:', 'id', 'default', width)}\r\n            {getField(perk, 'Code Name:', 'name', 'purple', width)}\r\n            {getField(perk, 'Name:', 'full', 'purple', width)}\r\n            {getEffects(perk.effects, width)}\r\n        </Row>\r\n    );\r\n}\r\n","import Card from 'react-bootstrap/Card';\r\nimport { keyValueTag } from '../helpers/RowBuilder';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { getPerkContent } from '../helpers/PerkPopover';\r\nimport { renderWeaponPopover } from '../helpers/WeaponPopoverOverlay';\r\nimport { getNameValueField } from '../helpers/ViewHelper';\r\nimport { getExplosiveForPopover } from '../helpers/ProjView';\r\nimport { truncate } from '../helpers/Input';\r\n\r\n\r\nfunction getField(lValue, rValue, color) {\r\n    if (rValue && typeof rValue === typeof '') {\r\n        rValue = rValue.toString();\r\n        rValue = truncate(rValue, 30);\r\n    }\r\n    return (\r\n        <Row className=\"d-flex justify-content-center ps-1 pe-1\">\r\n            {keyValueTag(lValue, rValue, color)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport function getActorData(actor) {\r\n    if (actor === \"\" || actor === '00000000' || actor === '00000392') {\r\n        return '';\r\n    }\r\n    return actor.id + \" / \" + actor.name;\r\n}\r\n\r\nexport function getActor(name, actor, color, width, under_row=true) {\r\n    const actorData = getActorData(actor);\r\n    if (actorData === '') {\r\n        return (<></>);\r\n    }\r\n    if (under_row) {\r\n        return getField(name, actorData, color);\r\n    }\r\n    return getNameValueField(name, actorData, color);\r\n}\r\n\r\nexport function getPerkButton(perkId) {\r\n    if (!perkId || perkId === '00000000') {\r\n        return (<></>)\r\n    }\r\n    function onClick(e) {\r\n        renderWeaponPopover(getPerkContent(perkId));\r\n    }\r\n    return (\r\n        <Row className=\"d-flex justify-content-center ps-1 pe-1\">\r\n            <Button size='sm' onClick={onClick} style={{width: '15rem'}}>Perk: {perkId}</Button>\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction getGlobDuration(effect) {\r\n    const dur = effect.glob_duration;\r\n    if (dur !== '') {\r\n        return (\r\n            <Card className='mt-1 mb-1'>\r\n                <Card.Header className=\"bg-spell-header p-0 ps-2\">Glob Duration</Card.Header>\r\n                <Card.Body>\r\n                    {getField(\"Id:\", dur.id, \"purple\")}\r\n                    {getField(\"Name:\", dur.name, \"purple\")}\r\n                    {getField(\"Value:\", dur.value, \"purple\")}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return getField(\"GlobDuration:\", \"0\", \"purple\")\r\n}\r\n\r\nfunction getGlobMagnitude(effect) {\r\n    const mag = effect.glob_magnitude;\r\n    if (mag !== '') {\r\n        return (\r\n            <Card className='mt-1 mb-1'>\r\n                <Card.Header className=\"bg-spell-header p-0 ps-2\">Glob Magnitude</Card.Header>\r\n                <Card.Body>\r\n                    {getField(\"Id:\", mag.id, \"purple\")}\r\n                    {getField(\"Name:\", mag.name, \"purple\")}\r\n                    {getField(\"Value:\", mag.value, \"purple\")}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return getField(\"GlobMagnitude:\", \"0\", \"purple\");\r\n}\r\n\r\nexport function getEffectContent(effect) {\r\n    const mEffect = effect['m_effect'];\r\n    const id = mEffect.id;\r\n    if (mEffect.projectile !== '00000000')\r\n        throw new Error('Projectile Found in spell: ' + id);\r\n    if (mEffect.ability !== '00000000')\r\n        throw new Error('Ability Found in spell: ' + id);\r\n    const resist = (mEffect.resist === '00000000') ? mEffect.resist : mEffect.resist.full;\r\n    return (\r\n        <>\r\n            {getField(\"Id:\", mEffect.id, 'indigo')}\r\n            {getField(\"Name:\", mEffect.full, \"purple\")}\r\n            {getField(\"CodeName:\", mEffect.name, \"purple\")}\r\n            {getActor(\"SpellActor:\", effect.actor, \"purple\")}\r\n            {getField(\"Type:\", mEffect.a_type, \"purple\")}\r\n            {getField(\"Ability:\", mEffect.ability, \"purple\")}\r\n            {getField(\"Resistance:\", resist, \"purple\")}\r\n            {getField(\"Target:\", mEffect.target, \"purple\")}\r\n            {getField(\"Activity:\", mEffect.e_type, \"purple\")}\r\n            {getField(\"Magnitude:\", effect.magnitude, \"purple\")}\r\n            {getField(\"Area:\", effect.area, \"purple\")}\r\n            {getField(\"OnlyForPlayer:\", effect.only_player, \"purple\")}\r\n            {getField(\"Duration:\", effect.duration, \"purple\")}\r\n            {getField(\"DCurv:\", effect.d_curv, \"purple\")}\r\n            {getExplosiveForPopover(mEffect.explosion)}\r\n            {getField(\"Projectile:\", mEffect.projectile, \"purple\")}\r\n            {getActor(\"Actor1:\", mEffect.actor_value1, \"purple\")}\r\n            {getActor(\"Actor2:\", mEffect.actor_value2, \"purple\")}\r\n            {getGlobDuration(effect)}\r\n            {getGlobMagnitude(effect)}\r\n            {getPerkButton(mEffect.perk)}\r\n        </>\r\n    );\r\n}\r\n","import Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Divider } from 'antd';\r\nimport { getField } from './ViewHelper';\r\nimport getSpell from '../helpers/Spell';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { getPerkButton, getEffectContent } from '../templates/EffectPopover';\r\nimport { WeaponPopoverOverlay, renderWeaponPopover } from '../helpers/WeaponPopoverOverlay';\r\n\r\n// TODO: This class is Deprecated\r\nfunction getOverlay(effect, buttonStyle, key) {\r\n    const mEffect = effect['m_effect'];\r\n    const overlayButton = (<Button className=\"d-flex justify-content-center m-1\" size='sm' style={buttonStyle}>Effect: {mEffect['id']}</Button>);\r\n    return (\r\n        <WeaponPopoverOverlay key={key} popoverHeader={mEffect.full} popoverContent={getEffectContent(effect)} itemToOverly={overlayButton}></WeaponPopoverOverlay>\r\n    );\r\n}\r\n\r\nfunction getEffectButton(effect, key) {\r\n    function onClick(e) {\r\n        renderWeaponPopover(getEffectContent(effect));\r\n    }\r\n    const mEffect = effect['m_effect'];\r\n    return (\r\n        <Button key={key} className=\"d-flex justify-content-center mb-1 m-auto\" size='sm' onClick={onClick} style={{width: '15rem'}}>Effect: {mEffect['id']}</Button>\r\n    );\r\n}\r\n\r\nexport function getEffectsForPopover(effects) {\r\n    let result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        result.push(getEffectButton(effect, i));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getEffects(effects, buttonStyle={width: '15rem'}) {\r\n    let result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        result.push(getOverlay(effect, buttonStyle, i));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getSpellHeader(spell, width='20rem') {\r\n    return (\r\n        <>\r\n            {getField(spell, 'Id:', 'id', 'default', width)}\r\n            {getField(spell, 'Code Name:', 'name', 'purple', width)}\r\n            {getField(spell, 'Name:', 'full', 'purple', width)}\r\n            {getField(spell, 'Type:', 'type', 'blue', width)}\r\n            {getField(spell, 'Activity:', 'e_type', 'blue', width)}\r\n            {getField(spell, 'Target:', 'target', 'blue', width)}\r\n            {getPerkButton(spell.perk)}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction buildSpellView(spell) {\r\n    const effects = spell['mag_effects'];\r\n    return (\r\n        <>\r\n            <Row>\r\n                {getSpellHeader(spell)}\r\n            </Row>\r\n            <Divider className='m-0 pt-2 pb-1 ps-4 pe-4'>Effects</Divider>\r\n            <Row className='d-flex justify-content-center ps-1 pe-1'>\r\n                {getEffects(effects)}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function getCardSpell(spellId, header) {\r\n    const spell = getSpell().get(spellId);\r\n    if (!spell) {\r\n        return (<></>);\r\n    }\r\n    if (!header) {\r\n        header = \"Spell\"\r\n    }\r\n    return (\r\n        <Card className=\"bg-spell-body\">\r\n            <Card.Header className=\"bg-spell-header m-0 ps-2 p-1\">\r\n                <small>{header}</small>\r\n            </Card.Header>\r\n            <Card.Body className=\"p-0 ms-1 me-1\">\r\n                {buildSpellView(spell)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function SpellView({spellId, header}) {\r\n    return getCardSpell(spellId, header);\r\n}","export function numberToString(number, round=0) {\r\n    if (round > 0) {\r\n        return (+number.toFixed(round)).toString();\r\n    }\r\n    return number.toString();\r\n}\r\n\r\nconst emojis = ['🍦', '🍧', '🍨', '🍩', '🍪', '🎂', '🍰', '🧁', '🥧', '🍫', '🍬', '🍭', '🥨', '🥯',\r\n                '🥞', '🧇', '🧀', '🍖', '🍗', '🥩', '🥓', '🍔', '🍮', '🍯'];\r\n\r\nexport function getRandomNumber(max) {\r\n    return Math.floor(Math.random() * max);\r\n}\r\n\r\nexport function getRandomEmoji() {\r\n    return emojis[getRandomNumber(emojis.length)];\r\n}\r\n\r\nexport function buildRandomEmojiString(length, space=1) {\r\n    const spaceChar = '\\xa0';\r\n    let spaceChars = \"\";\r\n    if (space > 0) {\r\n        spaceChars = spaceChar.repeat(space);\r\n    }\r\n    let result = \"\";\r\n    const eSize = emojis.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += emojis[getRandomNumber(eSize)];\r\n        if (i < (length - 1)) {\r\n            result += spaceChars;\r\n        }\r\n    }\r\n    return result;\r\n}","export default class Strings {\r\n    static Melee = \"Melee\";\r\n    static Unarmed = \"Unarmed\";\r\n\r\n    static getFireRate(wType=null) {\r\n        return (wType && (wType === Strings.Melee || wType === Strings.Unarmed)) ? \"Hit Rate\" : \"Fire Rate\";\r\n    }\r\n}","const templates = require.context('../resources/weaponTemplates', true, /\\.json$/);\r\nconst templateList = templates.keys().map(template => templates(template)[0]);\r\n\r\n\r\nexport default function getTemplates() {\r\n    return templateList;\r\n}\r\n\r\n// Returns a copy of a template with specified id.\r\nexport function getTemplateCopyById(id) {\r\n\r\n    // The amount of templates will never exceed several hundreds, so it is ok.\r\n    for (let i = 0; i < templateList.length; i++) {\r\n        const template = templateList[i];\r\n        if (template.id === id) {\r\n            return JSON.parse(JSON.stringify(template));\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n// Only for reading purposes\r\nexport function getTemplateById(id) {\r\n    for (let i = 0; i < templateList.length; i++) {\r\n        const template = templateList[i];\r\n        if (template.id === id) {\r\n            return template;\r\n        }\r\n    }\r\n    return null;\r\n}","export function millisToTime(value) {\r\n    if ((!value && value !== 0) || value === Infinity) {\r\n        return \"Infinity\";\r\n    } else if (value > 3599999999) {\r\n        return \"+999:59:59:999\";\r\n    }\r\n    const t = [3600000, 60000, 1000];\r\n    let time = [];\r\n    for (let i = 0; i < t.length; i++) {\r\n        let r = value % t[i];\r\n        let q = (value - r) / t[i];\r\n        time.push(q);\r\n        value = r;\r\n    }\r\n    let strTime = \"\";\r\n    strTime += (time[0] < 10) ? (\"00\" + time[0] + \":\") : ((time[0] < 100) ? (\"0\" + time[0] + \":\") : time[0] + \":\");\r\n    strTime += (time[1] < 10) ? (\"0\" + time[1] + \":\") : time[1] + \":\";\r\n    strTime += (time[2] < 10) ? (\"0\" + time[2] + \":\") : time[2] + \":\";\r\n    if (value < 10) {\r\n        strTime += ( \"00\" + value);\r\n    } else if (value < 100) {\r\n        strTime += (\"0\" + value);\r\n    } else {\r\n        strTime += value;\r\n    }\r\n    return strTime;\r\n}","import Col from 'react-bootstrap/Col';\r\nimport { keyValueTag } from '../helpers/RowBuilder';\r\nimport { truncate } from '../helpers/Input';\r\n\r\n// TODO: DEPRECATED, HAS TO BE DELETED\r\nexport function getField(data, name, id, color, width, hideEmpty=true, round=0, cell=-1, css=\"\") {\r\n    let value = data[id];\r\n    return getResolvedField(name, value, color, width, hideEmpty, round, cell, css);\r\n}\r\n\r\nexport function getResolvedField(name, value, color, width, hideEmpty=true, round=0, cell=-1, css=\"\") {\r\n    if (cell > -1) {\r\n        value = value[cell];\r\n    }\r\n    if (round > 0) {\r\n        value = value.toFixed(round);\r\n    }\r\n    if (hideEmpty) {\r\n        if (!value || value === 0 || value === '00000000' || value === '') {\r\n            return <></>;\r\n        }\r\n    }\r\n    return getNameValueField(name, value, color, width, css);\r\n}\r\n\r\nexport function getNameValueField(value1, value2, color, width, css=\"\") {\r\n    if (value2 && typeof value2 === typeof '') {\r\n        value2 = truncate(value2, 30);\r\n    }\r\n    return (\r\n        <Col className={'d-flex justify-content-center ' + css} >\r\n            {keyValueTag(value1,  value2, color, {width: width})}\r\n        </Col>\r\n    );\r\n}\r\n\r\n\r\n","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport { memo } from 'react';\r\nimport { addText, gun, rifle, shotgun, bow, melee, heavy, unarmed, thrown } from '../helpers/Emoji';\r\n\r\n\r\nconst WTypeDropdown = memo(function WTypeDropdown({weaponType, setWeaponType, resetPage=null, onSelect=null, title=null}) {\r\n    function onSelectCustom(e) {\r\n        setWeaponType(e);\r\n        if (resetPage) {\r\n            resetPage();\r\n        }\r\n        if (onSelect) {\r\n            onSelect(e);\r\n        }\r\n    }\r\n    const customTitle = (title) ? title : weaponType;\r\n    return (\r\n        <DropdownButton onSelect={onSelectCustom} id=\"dropdown-basic-button\" title={customTitle}>\r\n            <Dropdown.Item eventKey=\"All\">All</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Heavy\">{addText(heavy, '1.1rem', '0.27rem', \"Heavy\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Shotgun\">{addText(shotgun, '1.1rem', '0.27rem', \"Shotgun\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Rifle\">{addText(rifle, '1.1rem', '0.27rem', \"Rifle\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Pistol\">{addText(gun, '1.1rem', '0.27rem', \"Pistol\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Bow\">{addText(bow, '1.1rem', '0.27rem', \"Bow\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Melee\">{addText(melee, '1.1rem', '0.27rem', \"Melee\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Unarmed\">{addText(unarmed, '1.1rem', '0.27rem', \"Unarmed\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Thrown\">{addText(thrown, '1.1rem', '0.27rem', \"Thrown\")}</Dropdown.Item>\r\n        </DropdownButton>\r\n    );\r\n});\r\n\r\nexport default WTypeDropdown;\r\n\r\nexport function getRowWithImage(name, customName=null, maxHeight='1.1rem', space='0.27rem') {\r\n    if (!customName) {\r\n        customName = name;\r\n    }\r\n    switch(name) {\r\n        case \"Heavy\":\r\n            return addText(heavy, maxHeight, space, customName);\r\n        case \"Shotgun\":\r\n            return addText(shotgun, maxHeight, space, customName);\r\n        case \"Rifle\":\r\n            return addText(rifle, maxHeight, space, customName);\r\n        case \"Pistol\":\r\n            return addText(gun, maxHeight, space, customName);\r\n        case \"Bow\":\r\n            return addText(bow, maxHeight, space, customName);\r\n        case \"Melee\":\r\n            return addText(melee, maxHeight, space, customName);\r\n        case \"Unarmed\":\r\n            return addText(unarmed, maxHeight, space, customName);\r\n        case \"Thrown\":\r\n            return addText(thrown, maxHeight, space, customName);\r\n        default:\r\n            return customName;\r\n    }\r\n};\r\n\r\nexport function getImage(name, maxHeight='1.3rem') {\r\n    switch(name) {\r\n        case \"Heavy\":\r\n            return heavy(maxHeight);\r\n        case \"Shotgun\":\r\n            return shotgun(maxHeight);\r\n        case \"Rifle\":\r\n            return rifle(maxHeight);\r\n        case \"Pistol\":\r\n            return gun(maxHeight);\r\n        case \"Bow\":\r\n            return bow(maxHeight);\r\n        case \"Melee\":\r\n            return melee(maxHeight);\r\n        case \"Unarmed\":\r\n            return unarmed(maxHeight);\r\n        case \"Thrown\":\r\n            return thrown(maxHeight);\r\n        default:\r\n            return \"\";\r\n    }\r\n}","import Popover from 'react-bootstrap/Popover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\n\r\nfunction buildWarning(message, header, className=null) {\r\n    if (!className) {\r\n        className = \"popover-adjustable\";\r\n    }\r\n    return (\r\n        <Popover className={className}>\r\n            <Popover.Header as=\"h3\"><strong>{header}</strong></Popover.Header>\r\n            <Popover.Body className=\"popover-body3\">\r\n                {message}\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport function WarningPopover({element, message, className, header='Warning', placement='top'}) {\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement={placement} overlay={buildWarning(message, header, className)}>\r\n            {element}\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nexport function WarningPopoverBadge({className, variant, message, sign, header, placement='top'}) {\r\n    if (!variant) {\r\n        variant = \"primary\";\r\n    }\r\n    if (!sign) {\r\n        sign = \"!\";\r\n    }\r\n    if (!header) {\r\n        header='Warning';\r\n    }\r\n    if (!className) {\r\n        className = \"ps-2 pe-2 m-1\";\r\n    }\r\n    return (\r\n        <OverlayTrigger className={className} rootClose='true' trigger=\"click\" placement={placement} overlay={buildWarning(message, header)}>\r\n            <Badge className={className} bg={variant} style={{cursor: \"pointer\"}} pill>{sign}</Badge>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nexport function CustomPopover({variant, popoverBuilder, sign}) {\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={popoverBuilder}>\r\n            <Badge className=\"ps-2 pe-2 mb-auto mt-auto\" bg={variant} pill>{sign}</Badge>\r\n        </OverlayTrigger>\r\n    );\r\n}","import React from 'react';\r\nimport Image from 'react-bootstrap/Image';\r\nconst images = require.context('../resources/weapon_icons', true, /\\.webp$/);\r\nconst imageList = images.keys().map(image => images(image));\r\n\r\n\r\nexport function getImageElement(name, maxHeight='1.5rem', className=\"\") {\r\n    for (let i = 0; i < imageList.length; i++) {\r\n        const firstIndex = imageList[i].lastIndexOf(\"/\") + 1;\r\n        const lastIndex = imageList[i].indexOf(\".\");\r\n        const wName = imageList[i].substring(firstIndex, lastIndex);\r\n        if (wName === name) {\r\n            return (<Image className={\"p-0 m-0 \" + className} style={{ maxHeight: maxHeight }} src={imageList[i]} fluid />)\r\n        }\r\n    }\r\n    return (\r\n        <></>\r\n    );\r\n}","import OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ReactDOM from 'react-dom/client';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nlet number = 0;\r\nlet popoverContent = [];\r\n\r\nexport function WeaponPopoverOverlay({popoverHeader, popoverContent, itemToOverly}) {\r\n    const popover = weaponPopover(popoverHeader, popoverContent);\r\n    function openPopover(e) {\r\n        if (e) {\r\n            initWeaponPopover(popoverContent);\r\n        }\r\n    }\r\n    return (\r\n        <OverlayTrigger onToggle={openPopover} trigger=\"click\" placement=\"top\" rootClose='true' overlay={popover}>\r\n            {itemToOverly}\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nfunction weaponPopover(header, content) {\r\n    return (\r\n        <Popover className=\"popover-adjustable2\">\r\n            <Popover.Header>\r\n                <Row style={{minHeight: '2rem'}}>\r\n                    <Col className=\"col-10 d-flex justify-content-start\">\r\n                        <strong className=\"m-auto ms-2\">{header}</strong>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button className=\"\" style={{display: 'none', borderRadius: '1rem', height: '2.0rem', paddingTop: '0.22rem', paddingLeft: '0.4rem'}} variant=\"blue-white-border\" id=\"WeaponDetailsPopoverBackButton\" onClick={popoverBack}>\r\n                            <h6>⇜</h6>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Popover.Header>\r\n            <Popover.Body className=\"popover-body2\">\r\n                <div id=\"WeaponDetailsPopover\">\r\n                    {content}\r\n                </div>\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nfunction initWeaponPopover(content) {\r\n    number = 0;\r\n    popoverContent = [content];\r\n}\r\n\r\n// Use this method if you want to render specific content in the popover (after tap on button for example)\r\n// content - a batch of html tags which will be rendered by ReactDom.render\r\nexport function renderWeaponPopover(content) {\r\n    number += 1;\r\n    popoverContent[number] = content;\r\n    document.getElementById(\"WeaponDetailsPopoverBackButton\").style.display = 'inline';\r\n    ReactDOM.createRoot(document.getElementById(\"WeaponDetailsPopover\")).render(content);\r\n}\r\n\r\nfunction popoverBack(e) {\r\n    number -= 1;\r\n    if (number < 1) {\r\n        document.getElementById(\"WeaponDetailsPopoverBackButton\").style.display = 'none';\r\n    }\r\n    ReactDOM.createRoot(document.getElementById(\"WeaponDetailsPopover\")).render(popoverContent[number]);\r\n}","import getAmmo from '../Ammo';\r\nimport getProj from '../Proj';\r\nimport getSpell from '../Spell';\r\nimport getPerks from '../PerkProvider';\r\nimport { getTemplateCopyById } from '../TemplatesRegister';\r\n\r\nexport default class DamageExtractor {\r\n\r\n    damageTypes = {\r\n        \"electrical\": {\r\n            \"id\": \"00060a80\",\r\n            \"name\": \"dtElectrical\",\r\n            \"full\": \"Electrical Damage\"\r\n        },\r\n        \"energy\": {\r\n            \"id\": \"00060a81\",\r\n            \"name\": \"dtEnergy\",\r\n            \"full\": \"Energy Damage\"\r\n        },\r\n        \"radiation\": {\r\n            \"id\": \"00060a85\",\r\n            \"name\": \"dtRadiationExposure\",\r\n            \"full\": \"Radiation Damage\"\r\n        },\r\n        \"fire\": {\r\n            \"id\": \"00060a82\",\r\n            \"name\": \"dtFire\",\r\n            \"full\": \"Fire Damage\"\r\n        },\r\n        \"cryo\": {\r\n            \"id\": \"00060a83\",\r\n            \"name\": \"dtCryo\",\r\n            \"full\": \"Cryo Damage\"\r\n        },\r\n        \"poison\": {\r\n            \"id\": \"00060a84\",\r\n            \"name\": \"dtPoison\",\r\n            \"full\": \"Poison Damage\"\r\n        },\r\n        \"physical\": {\r\n            \"id\": \"00060a87\",\r\n            \"name\": \"dtPhysical\",\r\n            \"full\": \"Physical Damage\"\r\n        },\r\n        \"pure\": {\r\n            \"id\": \"00060a8d\",\r\n            \"name\": \"dtPureDamage\",\r\n            \"full\": \"Pure Damage\"\r\n        },\r\n    };\r\n\r\n    // Based on resistance\r\n    resTypes = {\r\n        '000002ea': this.damageTypes['radiation'],\r\n        '000002eb': this.damageTypes['energy'],\r\n        '000002e7': this.damageTypes['cryo'],\r\n        '000002e4': this.damageTypes['poison'],\r\n        '000002e5': this.damageTypes['fire'],\r\n        '000002e6': this.damageTypes['electrical'],\r\n        '000002e3': 'DamageResistance',\r\n    };\r\n\r\n    constructor(extractPlacedObjects=true) {\r\n\r\n        // Some of the weapon's projectiles contain weapons inside\r\n        if (extractPlacedObjects) {\r\n            this.tomahawk = getTemplateCopyById('000042f2');\r\n            this.throwingKnife = getTemplateCopyById('003879a3');\r\n            this.extractFromTemplate(this.tomahawk);\r\n            this.extractFromTemplate(this.throwingKnife);\r\n        }\r\n    }\r\n\r\n    extract(templates) {\r\n        for (let i = 0; i < templates.length; i++) {\r\n            this.extractFromTemplate(templates[i]);\r\n        }\r\n    }\r\n\r\n    extractFromTemplate(template) {\r\n\r\n        // Ammo\r\n        const ammoId = template.ammoId[1];\r\n        const curWeapId = template.id;\r\n        if (!curWeapId) {\r\n            throw new Error(\"Weapon has no id\");\r\n        }\r\n        if (ammoId && ammoId !== '00000000' && ammoId !== '') {\r\n            const ammoData = getAmmo().get(ammoId);\r\n            this.extractAmmo(ammoData, template.damageData, \"Ammo: \" + ammoId, curWeapId);\r\n        }\r\n\r\n        // Additional Proj\r\n        const projIds = template.projId[1];\r\n        for (let i = 0; i < projIds.length; i++) {\r\n            const projId = projIds[i];\r\n            if (projId !== '00000000' && projId !== '') {\r\n                if (typeof projId !== typeof '') {\r\n                    throw new Error(\"ProjId is not an Id\");\r\n                }\r\n                const projData = getProj().get(projId);\r\n                this.extractProj(projData, template.damageData, \"Projectile: \" + projId, false, curWeapId);\r\n            }\r\n        }\r\n\r\n        // Additional Mod Effects\r\n        const effectIds = template.adEffects[1];\r\n        for (let i = 0; i < effectIds.length; i++) {\r\n            const effectId = effectIds[i];\r\n            if (effectId !== '00000000' && effectId !== '') {\r\n                if (typeof effectId !== typeof '') {\r\n                    throw new Error(\"EffectId is not an Id\");\r\n                }\r\n                this.extractEnch(effectId, template.damageData, \"Spell: \" + effectId, false, curWeapId, 0, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    extractAmmo(ammo, result, parent, curWeapId) {\r\n        const ammoDamage = ammo.damage;\r\n        const ammoId = ammo.id;\r\n        if (!parent) {\r\n            parent = \"Ammo: \" + ammoId;\r\n        }\r\n        if (ammoDamage > 0) {\r\n            if (ammo.ammo_type !== 'Ballistic') {\r\n                throw new Error(\"Ammo type is not 'Ballistic'\");\r\n            }\r\n            const dTypes = this.damageTypes.physical;\r\n            this.addDamageNode(result, \"Ammo\", false, \"Ammo Damage\", dTypes.name, dTypes.id, dTypes.full, 0,\r\n                                 ammoDamage, 0, 0, 0, 0, parent, ammoId, curWeapId, \"No\", false, false, false);\r\n        }\r\n        const projId = ammo.projectile;\r\n        if (projId && projId !== '' && projId !== '00000000') {\r\n            const projData = getProj().get(projId);\r\n            this.extractProj(projData, result, parent, false, curWeapId);\r\n        }\r\n    }\r\n\r\n    extractProj(proj, result, parent, destructible, curWeapId) {\r\n        this.extractExp(proj.destructible, result, parent, true, curWeapId);\r\n        this.extractExp(proj.expl, result, parent, destructible, curWeapId); // In case if some inner proj comes from destructible parent\r\n    }\r\n\r\n    resolveAndExtractProj(projId, result, parent, destructible, curWeapId) {\r\n        if (projId !== '' && projId !== '00000000') {\r\n            if (typeof projId !== typeof '') {\r\n                throw new Error(\"Proj id is not an id\");\r\n            }\r\n            const projData = getProj().get(projId);\r\n            this.extractProj(projData, result, parent, destructible, curWeapId);\r\n        }\r\n    }\r\n\r\n    extractEnch(ench, result, parent, destructible, curWeapId, time = 0, interval = 0) {\r\n        if (ench && typeof ench !== typeof '') {\r\n            throw new Error(\"Enchantment is not an id\");\r\n        }\r\n        ench = getSpell().get(ench);\r\n        let perk = ench.perk;\r\n        this.extractPerk(perk, result, parent, destructible, curWeapId);\r\n        let duration = ench.duration;\r\n        if (duration && duration > 0) {\r\n            throw new Error(\"Enchantment has duration\");\r\n        }\r\n        let enchTime = ench.time;\r\n        if (!enchTime) {\r\n            enchTime = 0;\r\n        }\r\n        if (enchTime === 0) {\r\n            enchTime = time;\r\n        }\r\n        this.extractEffects(ench.mag_effects, ench.id, result, parent, destructible, curWeapId, enchTime, interval);\r\n    }\r\n\r\n    extractEffects(effects, enchId, result, parent, destructible, curWeapId, time, interval) {\r\n        if (!effects) {\r\n            return;\r\n        }\r\n        let existedEffects = new Set();\r\n        for (let e = 0; e < effects.length; e++) {\r\n            const effect = effects[e];\r\n\r\n            // Effect part\r\n            let magnitude = effect.magnitude;\r\n            let curv = effect.d_curv;\r\n            let area = effect.area;\r\n            let duration = effect.duration;\r\n            let globMagnitude = effect.glob_magnitude;\r\n            let globDuration = effect.glob_duration;\r\n            let onlyPlayer = effect.only_player;\r\n            if (!onlyPlayer) {\r\n                onlyPlayer = 'No';\r\n            }\r\n\r\n            // MEffect\r\n            const mEffect = effect.m_effect;\r\n            if (existedEffects.has(mEffect.id)) {\r\n                continue;\r\n            }\r\n            // Crit check\r\n            const name = mEffect.name;\r\n            const full = mEffect.full;\r\n            let crit = false;\r\n            if (name.toLowerCase().includes(\"crit\") || full.toLowerCase().includes(\"crit\")) {\r\n                crit = true;\r\n            }\r\n\r\n            // Blood check\r\n            let blood = false;\r\n            if (name.toLowerCase().includes(\"bleed\") || full.toLowerCase().includes(\"bleed\")) {\r\n                blood = true;\r\n            }\r\n            existedEffects.add(mEffect.id);\r\n            this.extractPerk(mEffect.perk, result, parent, destructible, curWeapId);\r\n            this.extractExp(mEffect.explosion, result, parent, destructible, curWeapId);\r\n            const proj = mEffect.projectile;\r\n            if (proj !== '00000000') {\r\n                throw new Error(\"Proj / Expl found in mag effects\");\r\n            }\r\n            if (magnitude !== 0 || (curv !== '' && curv !== 0) || globMagnitude !== '') {\r\n                if (globDuration && globDuration !== '' && globDuration !== '00000000') {\r\n                    globDuration = globDuration.value;\r\n                } else {\r\n                    globDuration = 0\r\n                }\r\n                if (globDuration > 0) {\r\n                    duration = globDuration;\r\n                }\r\n                if (duration > 0) {\r\n                    time = duration;\r\n                }\r\n                if (globMagnitude && globMagnitude !== '' && globMagnitude !== '00000000') {\r\n                    globMagnitude = globMagnitude.value;\r\n                } else {\r\n                    globMagnitude = 0;\r\n                }\r\n                if (globMagnitude > 0) { // Override magnitude by glob\r\n                    magnitude = globMagnitude;\r\n                }\r\n                curv = this.resolveCurv(curv);\r\n                if (curv === 0 && magnitude === 0) {\r\n                    continue;\r\n                }\r\n                let dType = this.findEffectDamageType(mEffect, enchId, curWeapId);\r\n                if (dType && onlyPlayer === 'No') {\r\n                    let name = '';\r\n                    if (destructible) {\r\n                        name = \"Destructible Spell\";\r\n                    } else {\r\n                        name = \"Spell\";\r\n                    }\r\n\r\n                    // Armor penetration\r\n                    if (dType.id === '00097341') {\r\n                        name = \"Armor Penetration\";\r\n                    } else if (dType.id === '0018eee1' || dType.id === '00312d66') {\r\n                        name = \"Damage Bonus\";\r\n                    }\r\n                    let source = '';\r\n                    if (crit) {\r\n                        source = \"Crit Spell\";\r\n                    } else {\r\n                        source = \"Spell\";\r\n                    }\r\n                    this.addDamageNode(result, source, destructible, name, dType['name'], dType['id'],\r\n                                         dType['full'], curv, 0, magnitude, time, interval, area, parent, mEffect.id, curWeapId, onlyPlayer, false, crit, blood);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findEffectDamageType(mEffect, enchId, curWeapId) {\r\n        if (mEffect['id'] === '00239552' || mEffect['id'] === '00239550') { // Radiation healing damage\r\n            return null;\r\n        }\r\n        let result = mEffect['d_type']['id'];\r\n        if (result) {\r\n            return mEffect['d_type'];\r\n        }\r\n        let resId = mEffect['resist']['id'];\r\n        if (resId) {\r\n            return this.resTypes[resId];\r\n        }\r\n        let actor1 = mEffect['actor_value1']['id'];\r\n        if (actor1 === '000002e3') { // Damage resistance\r\n            return null;\r\n        } else if (actor1 === '00097341') { // Armor Penetration\r\n            return mEffect['actor_value1'];\r\n        } else if (actor1 === '0018eee1') { // STAT_DmgAll this is bonus mult\r\n            return mEffect['actor_value1'];\r\n        } else if (actor1 === '00312d66') { // STAT_DmgMelee this is bonus mult\r\n            return mEffect['actor_value1'];\r\n        } else if (actor1 === '000002d4') { // Health\r\n            console.log(\"Actor: \" + mEffect.actor_value1.name + \" WId: \" + curWeapId + \" AId: \" + mEffect.actor_value1.id + \" EId: \" + enchId);\r\n        }\r\n        let actor2 = mEffect['actor_value2']['name'];\r\n        if (actor2) {\r\n            throw new Error(\"Actor2 Exists\");\r\n        }\r\n        return null;\r\n    }\r\n\r\n    extractObject(obj, result, parent, destructible, curWeapId) {\r\n        if (!obj || obj === '' || obj === '00000000' || obj === '0017a580') {\r\n            return;\r\n        }\r\n\r\n        if (obj['type'] === 'WEAP') {\r\n            const wId = obj['value']['id'];\r\n            let damageData = null;\r\n            if (curWeapId === wId) {\r\n                return;\r\n            } else if (wId === '000042f2') {\r\n                damageData = this.tomahawk.damageData;\r\n            } else if (wId === '003879a3') {\r\n                damageData = this.throwingKnife.damageData;\r\n            } else {\r\n                throw new Error(\"Unknown weapon id: \" + wId);\r\n            }\r\n            for (const property in damageData) {\r\n                const damages = damageData[property];\r\n                for (let i = 0; i < damages.length; i++) {\r\n                    const damage = damages[i];\r\n                    this.addDamageNode(result, damage['source'], damage['destructible'], damage['view_name'],\r\n                                             damage['type_name'],\r\n                                             damage['type_id'], damage['type_full_name'], damage['curv'], damage['value'],\r\n                                             damage['magnitude'], damage['time'], damage['interval'], 0, parent, wId, curWeapId, \"No\", false, false, false);\r\n                }\r\n            }\r\n        } else if (obj['type'] === 'HAZD') {\r\n            const hazd = obj['value'];\r\n            this.extractEnch(hazd['effect'], result, parent, destructible, curWeapId, hazd['lifeTime'], hazd['interval']);\r\n        } else if (obj['type'] === 'MSTT') {\r\n            const value = obj['value'];\r\n            const spell = value['spell'];\r\n            if (spell && spell !== '' && spell !== '00000000') {\r\n                throw new Error(\"Spell in explosive object\");\r\n            }\r\n            this.extractExp(value['expl'], result, parent, destructible, curWeapId);\r\n            const hazd = value['hazd'];\r\n            this.extractEnch(hazd['effect'], result, parent, destructible, curWeapId, hazd['lifeTime'], hazd['interval']);\r\n        } else if (obj['type'] === 'EXPL') {\r\n            this.extractExp(obj['value'], result, parent, destructible, curWeapId);\r\n        } else {\r\n            throw new Error(\"Unknown object type\");\r\n        }\r\n    }\r\n\r\n    e_type_name = {256: \"Ability\", 512: \"Function\"}\r\n\r\n    v_type_name = {1: \"Float\", 3: \"List\", 4: \"Activate\", 5: \"Spell\", 8: \"Actor\", 9: \"Item\"}\r\n\r\n    operation = {\r\n        1: \"SetValue\", 2: \"AddValue\", 3: \"MulValue\", 5: \"MulAddValue\", 6: \"Abs\", 8: \"AddItem\",\r\n        9: \"AddActivate\", 10: \"SetSpell\", 12: \"AddValueToActor\", 13: \"MultiplyActorValueMultiply\",\r\n        14: \"MulAddValueToActor\", 16: \"SetItem\"\r\n    }\r\n\r\n    // TODO: LimbBash and WeaponAttackDamage for v_type 1 - 'Float'\r\n    // 3 - 'List' is not presented, 4 - 'Activate' is not presented, 9 - 'Item' is not presented\r\n    // 5 - 'Spell' is solved, 8 - 'Actor' is solved.\r\n    // Check this - 00621a92 0077176b 198 1 (Zeta's Revenge)\r\n    skipFunctions = [\"198\", \"OutgoingLimbBashDamage\", \"OutgoingLimbDamage\", \"MaxConsecutiveHits\",\r\n        \"SetDamageOnConsecutiveHits\", \"LossCondition\", \"WeaponAttackDamage\"];\r\n\r\n    extractPerk(perkId, result, parent, destructible, curWeapId) {\r\n        if (perkId && perkId !== '00000000' && perkId !== '') {\r\n            const perk = getPerks().get(perkId);\r\n            const effects = perk.effects;\r\n            for (let i = 0; i < effects.length; i++) {\r\n                const effect = effects[i];\r\n\r\n                if (effect.v_type === 1) {\r\n                    // if (this.skipFunctions.includes(effect.entry)) {\r\n                    //     continue;\r\n                    // }\r\n                } else if (effect.v_type === 3) {\r\n                    throw new Error(\"Found v_type 3\");\r\n                } else if (effect.v_type === 4) {\r\n                    throw new Error(\"Found v_type 4\");\r\n                } else if (effect.v_type === 5) {\r\n                    this.extractEnch(effect.value, result, parent, destructible, curWeapId)\r\n                } else if (effect.v_type === 8) { // Do we really need this 1% what is the purpose of it?\r\n                    // console.log(\"Perk8: \" + curWeapId + \" \" + perkId + \" \" + effect.entry + \" \" + effect.value.value);\r\n                } else if (effect.v_type === 9) {\r\n                    throw new Error(\"Found v_type 9\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    extractExp(exp, result, parent, destructible, curWeapId) {\r\n        if (!exp || exp === '' || exp === '00000000') {\r\n            return;\r\n        }\r\n        if (typeof exp !== typeof {}) {\r\n            throw new Error(\"Explosive is not an object but id: \" + exp);\r\n        }\r\n        const ench = exp.enchantment;\r\n        if (ench && ench !== '' && ench !== '00000000') {\r\n            this.extractEnch(ench, result, parent, destructible, curWeapId);\r\n        }  \r\n        this.resolveAndExtractProj(exp.projectile, result, parent, destructible, curWeapId);\r\n        this.extractObject(exp.object, result, parent, destructible, curWeapId);\r\n        this.dDamage(exp, result, destructible, parent, curWeapId);\r\n        const damageType = this.damageTypes.physical;\r\n        const damage = exp.damage;\r\n        const expCurv = exp.exp_curv;\r\n        let curv = 0;\r\n        if (expCurv !== '' && expCurv !== '00000000') {\r\n            curv = this.resolveCurv(expCurv);\r\n        }\r\n        let name = '';\r\n        if (destructible) {\r\n            name = \"Destructible Explosive Damage\";\r\n        } else {\r\n            name = \"Explosive Damage\";\r\n        }\r\n        this.addDamageNode(result, \"Projectile\", destructible, name, damageType.name, damageType.id, damageType.full, curv,\r\n            damage, 0, 0, 0, 0, parent, exp.id, curWeapId, \"No\", true, false, false);\r\n\r\n        if (exp.damage_mult > 0) {\r\n            this.addDamageNode(result, \"Projectile\", destructible, \"Explosive Damage Multiplier\", \"ExpDamageMult\", \"\", \"\", 0,\r\n                exp.damage_mult, 0, 0, 0, 0, parent, exp.id, curWeapId, \"No\", true, false, false);\r\n        }\r\n    }\r\n\r\n    addDamageNode(result, source, destructible, view_name, type_name, type_id, type_full_name, curv, value,\r\n                    magnitude, time, interval, area, parent, directParent, weapId, only_player, exp, crit, blood) {\r\n        if (curv === 0 && magnitude === 0 && value === 0) {\r\n            return;\r\n        }\r\n        if (crit && parent !== \"Base Crit\") {\r\n            console.log(\"Spell Crit is found\");\r\n        }\r\n        const obj = {\r\n            \"destructible\": destructible,\r\n            \"source\": source,\r\n            \"view_name\": view_name,\r\n            \"type_name\": type_name,\r\n            \"type_id\": type_id,\r\n            \"weaponId\": weapId,\r\n            \"type_full_name\": type_full_name,\r\n            \"curv\": curv,\r\n            \"value\": value,\r\n            \"magnitude\": magnitude,\r\n            \"time\": time,\r\n            \"area\": area,\r\n            \"interval\": interval,\r\n            \"parent\": parent,\r\n            \"directParent\": directParent,\r\n            \"only_player\": only_player,\r\n            \"exp\": exp,\r\n            \"crit\": crit,\r\n            \"blood\": blood,\r\n        };\r\n        const entries = result[source];\r\n        if (!entries) {\r\n            result[source] = [obj];\r\n        } else {\r\n            entries.push(obj);\r\n        }\r\n    }\r\n\r\n    resolveCurv(expCurv) {\r\n        if (expCurv !== '' && expCurv !== '00000000') {\r\n            if (typeof expCurv === typeof '') {\r\n                console.log(\"ExpCurv: \" + expCurv);\r\n                throw new Error(\"expCurv must be already evaluated: \" + expCurv);\r\n                /*\r\n                let curv = expCurv.split(\"\\n\");\r\n                try {\r\n                    curv = eval(curv[1])[\"curve\"];\r\n                    return curv[curv.length - 1]['y'];\r\n                } catch(error) {\r\n                    return 0;\r\n                }\r\n                */\r\n            } else {\r\n                return expCurv; // Consider it is a number.\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    dDamage(explosive, result, destructible, parent, weaponId) {\r\n        let value = explosive['d_value'];\r\n        if (Math.abs(value) < 0.01) {\r\n            value = 0;\r\n        }\r\n        let curv = explosive['d_curv'];\r\n        if (value > 0 || (curv !== '' && curv !== '00000000')) {\r\n            curv = this.resolveCurv(curv);\r\n            let dType = explosive.d_type;\r\n            if (dType === '' || dType === '00000000') {\r\n                dType = this.damageTypes.physical;\r\n            }\r\n            let name = '';\r\n            if (destructible) {\r\n                name = \"Destructible Damage\";\r\n            } else {\r\n                name = \"Damage\";\r\n            }\r\n            this.addDamageNode(result, \"Projectile\", destructible, name, dType.name, dType.id, dType.full, curv, value,\r\n                                 0, 0, 0, 0, parent, explosive.id, weaponId, \"No\", true, false, false);\r\n        }\r\n    }\r\n}","export default class DamageBlackList {\r\n    static ignoreMap = {\r\n        \"0055c152\": [\"005894a9\", \"005894a7\"],\r\n        \"0060e0ef\": [\"000fd3aa\"],\r\n        \"0055c166\": [\"000fd3aa\"],\r\n        \"0042b0cc\": [\"001b5edc\"],\r\n        \"0001ec47\": [\"000fd3aa\"],\r\n        \"00646880\": [\"001b5edc\"],\r\n        \"0001f669\": [\"001b5edc\"],\r\n        \"00011bf6\": [\"001b5edc\"],\r\n        \"001109cf\": [\"00215e08\"],\r\n        \"0042b0d0\": [\"00215e08\"],\r\n        \"000fe268\": [\"00215e08\"],\r\n        \"002fd97a\": [\"000fd3aa\"],\r\n        \"00100ae9\": [\"000fd3aa\"],\r\n        \"005a366e\": [\"000fd3aa\"],\r\n        \"005ea441\": [\"000fd3aa\"],\r\n    }\r\n\r\n    static check(weaponId, damageId) {\r\n        const list = DamageBlackList.ignoreMap[weaponId];\r\n        if (list) {\r\n            return list.includes(damageId);\r\n        }\r\n        return false;\r\n    }\r\n}","import DamageBlackList from \"../../damage/DamageBlackList\";\r\n\r\n\r\nexport function buildDamageItem(weaponId, damageId, type, kind, name, damage, time, interval, area, chance, accuracy, stack, index=0, isUsed=true) {\r\n    const ignore = DamageBlackList.check(weaponId, damageId);\r\n    return {\r\n        \"isUsed\": isUsed,\r\n        \"type\": type,\r\n        \"kind\": kind,\r\n        \"name\": name,\r\n        \"damage\": damage,\r\n        \"time\": time,\r\n        \"interval\": interval,\r\n        \"area\": area,\r\n        \"chance\": chance,\r\n        \"accuracy\": accuracy, // Accuracy from weapon and mods or from user\r\n        \"finalAccuracy\": accuracy, // Final accuracy with perks, consumables, legendary\r\n        \"stack\": stack,\r\n        \"index\": index,\r\n        \"weaponId\": weaponId,\r\n        \"damageId\": damageId,\r\n        \"ignore\": ignore,\r\n    };\r\n}\r\n\r\nexport function buildBleedDamage(damage, time, chance=100, accuracy=100, stack=false) {\r\n    return buildDamageItem(\"\", \"\", \"dtPhysical\", \"bleed\", \"Bleed\", damage, time, 0, 0, chance, accuracy, stack, -1, true);\r\n}\r\n\r\nexport function convertDamageDataToDamageItem(damageData) {\r\n    const type = getDamageTypeFromCellName(damageData.type_name);\r\n    const damage = getDamageValue(damageData);\r\n    return buildDamageItem(damageData.weaponId, damageData.directParent, type[0], type[1], type[2], damage, damageData.time, damageData.interval, damageData.area, 100, 100, false);\r\n}\r\n\r\nexport function makeDamageItemCopy(damageItem) {\r\n    return buildDamageItem(damageItem.weaponId, damageItem.damageId, damageItem.type, damageItem.kind, damageItem.name, damageItem.damage, damageItem.time,\r\n        damageItem.interval, damageItem.area, damageItem.chance, damageItem.accuracy, damageItem.stack, damageItem.index, damageItem.isUsed);\r\n}\r\n\r\nfunction getDamageValue(damage) {\r\n    if (damage.curv > 0) {\r\n        return damage.curv;\r\n    } else if (damage.value > 0) {\r\n        return damage.value;\r\n    }\r\n    return damage.magnitude;\r\n}\r\n\r\nconst cellNames = ['bbDamage', 'ebDamage', 'fbDamage', 'pbDamage', 'cbDamage', 'rbDamage', 'projExp', 'bleed'];\r\n\r\nexport function collectAllDamages(template) {\r\n    let result = [];\r\n    for (let i = 0; i < template.adDamage.length; i++) {\r\n        result.push(makeDamageItemCopy(template.adDamage[i]));\r\n    }\r\n\r\n    for (let i = 0; i < cellNames.length; i++) {\r\n        const name = cellNames[i];\r\n        let damage = template[name][1];\r\n        let damageId = template[name][2];\r\n        if (typeof damage === typeof '') {\r\n            const split = damage.split(\" / \");\r\n            damage = parseFloat(split[0]);\r\n            const time = parseFloat(split[1].slice(0, -1));\r\n            const type = getDamageTypeFromCellName(name);\r\n            const obj = buildDamageItem(template.id, damageId, type[0], type[1], type[2], damage, time, 0, 0, 100, 100, false);\r\n            result.push(obj);\r\n        } else if (damage > 0) {\r\n            const type = getDamageTypeFromCellName(name);\r\n            const obj = buildDamageItem(template.id, damageId, type[0], type[1], type[2], damage, 0, 0, 0, 100, 100, false);\r\n            result.push(obj);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getDamageTypeFromCellName(cellName) {\r\n    switch(cellName) {\r\n        case 'bleed':\r\n            return ['dtPhysical', 'bleed', \"Bleed\"];\r\n        case 'projExp':\r\n            return ['dtPhysical', 'explosive', \"Explosive\"];\r\n        case 'bbDamage':\r\n        case 'dtPhysical':\r\n            return ['dtPhysical', 'physical', \"Physical\"];\r\n        case 'ebDamage':\r\n        case 'dtEnergy':\r\n        case 'dtElectrical':\r\n            return ['dtEnergy', 'energy', \"Energy\"];\r\n        case 'fbDamage':\r\n        case 'dtFire':\r\n            return ['dtFire', 'fire', \"Fire\"];\r\n        case 'pbDamage':\r\n        case 'dtPoison':\r\n            return ['dtPoison', 'poison', \"Poison\"];\r\n        case 'cbDamage':\r\n        case 'dtCryo':\r\n            return ['dtCryo', 'cryo', \"Cryo\"];\r\n        case 'rbDamage':\r\n        case 'dtRadiationExposure':\r\n            return ['dtRadiationExposure', 'radiation', \"Radiation\"];\r\n        default:\r\n            console.log(\"Can't determine appropriate damate type by cell name: \" + cellName);\r\n            return ['dtPhysical', 'ballistic', \"Physical\"];\r\n    }\r\n}\r\n\r\nexport default class DamageSetter {\r\n\r\n    setDamages(templates) {\r\n        for (let i = 0; i < templates.length; i++) {\r\n            this.setDamage(templates[i]);\r\n        }\r\n    }\r\n\r\n    setDamage(template) {\r\n        template.adDamage = []; // Additional damages\r\n        this.setDamageForCategory(template, \"Base\");\r\n        this.setDamageForCategory(template, \"Ammo\");\r\n        this.setDamageForCategory(template, \"Projectile\");\r\n        this.setDamageForCategory(template, \"Base Spell\");\r\n        this.setDamageForCategory(template, \"Spell\");\r\n    }\r\n\r\n    setDamageForCategory(template, category) {\r\n        const damageData = template.damageData;\r\n        for (const property in damageData) {\r\n            if (property !== category) {\r\n                continue;\r\n            }\r\n            const damages = damageData[property];\r\n            for (let i = 0; i < damages.length; i++) {\r\n                const damage = damages[i];\r\n                this.setCurrent(template, damage);\r\n            }\r\n        }\r\n    }\r\n\r\n    setCurrent(template, damage) {\r\n        if (damage.destructible === false && damage.only_player === \"No\") {\r\n            const damageValue = getDamageValue(damage);\r\n            if (damageValue === 0) {\r\n                return;\r\n            }\r\n            this.placeValueByType(template, damage, damageValue);\r\n        }\r\n    }\r\n\r\n    placeValueByType(template, damageData, damageValue) {\r\n        const damage = [damageValue, damageValue];\r\n        const exp = damageData.exp;\r\n        const blood = damageData.blood;\r\n        switch(damageData.type_name) {\r\n            case \"ArmorPenetration\":\r\n                template.antiArmor = damage;\r\n                break;\r\n            case \"ExpDamageMult\":\r\n                template.exp[1] = damage[1] * 100;\r\n                break;\r\n            case \"STAT_DmgAll\":\r\n            case \"STAT_DmgMelee\":\r\n                template.bonusMult[1] += damage[1] / 100;\r\n                break;\r\n            case \"dtPhysical\":\r\n                if (exp) {\r\n                    this.putDamage(template, \"projExp\", damage, damageData);\r\n                } else if (blood) {\r\n                    const type = getDamageTypeFromCellName(\"bleed\");\r\n                    template.adDamage.push(buildDamageItem(template.id, damageData.directParent, type[0], type[1], type[2], damageValue, damageData.time, 0, 0, 100, 100, false));\r\n                } else {\r\n                    this.putDamage(template, \"bbDamage\", damage, damageData);\r\n                }\r\n                break;\r\n            case \"dtEnergy\":\r\n            case \"dtElectrical\":\r\n                this.putDamage(template, \"ebDamage\", damage, damageData);\r\n                break;\r\n            case \"dtFire\":\r\n                this.putDamage(template, \"fbDamage\", damage, damageData);\r\n                break;\r\n            case \"dtPoison\":\r\n                this.putDamage(template, \"pbDamage\", damage, damageData);\r\n                break;\r\n            case \"dtCryo\":\r\n                this.putDamage(template, \"cbDamage\", damage, damageData);\r\n                break;\r\n            case \"dtRadiationExposure\":\r\n                this.putDamage(template, \"rbDamage\", damage, damageData);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    putDamage(template, field, damage, damageData) {\r\n        const type = getDamageTypeFromCellName(field);\r\n        if (template[field][0] > 0 || damageData.time > 0 || damageData.interval > 0) { // We already have this type of damage, add it as additional\r\n\r\n            // Will be modified only by boost multiplier independently\r\n            template.adDamage.push(buildDamageItem(template.id, damageData.directParent, type[0], type[1], type[2], damage[1], damageData.time, damageData.interval, damageData.area, 100, 100, false));\r\n        } else {\r\n\r\n            // Later can be modified by boosts (current architecture does not allow to push it to adDamage\r\n            const newDamage = [damage[0], damage[1], damageData.directParent];\r\n            template[field] = newDamage;\r\n        }\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class DamageBonusMult extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const mult = super.getValue(mod);\r\n        super.addSetMullAdd(template.bonusMult, mult, mod.op, apply, true);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        super.checkOp(mod, \"legendary\", \"Add\");\r\n        const value = super.getValue(mod);\r\n        if (update) {\r\n            return false;\r\n        }\r\n\r\n        // Expected that every particular legendary has only one damage bonus multiplier\r\n        wSpec.legendary[starIndex][1] = (apply) ? value * 100 : 0;\r\n        wSpec.legendary[starIndex][2] = (apply) ? \"BDB\" : \"\";\r\n    }\r\n}","import { Apply } from './Apply';\r\nimport getAmmo from '../../Ammo';\r\n\r\n\r\nexport class Ammo extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Set\");\r\n        if (apply) {\r\n            template.ammoId[1] = mod.val1.split(\" / \")[0];\r\n        } else {\r\n            template.ammoId[1] = template.ammoId[0];\r\n        }\r\n        const ammoData = getAmmo().get(template.ammoId[1]);\r\n        template.ammoType = {name: ammoData.full, type: ammoData.ammo_type, codeName: ammoData.name};\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return true;\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n        // Expected we do not have legendary which changes ammo type\r\n        throw new Error(\"Legendary changes ammo type\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class IsAutomatic extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Set\");\r\n        if (apply) {\r\n            template.isAuto[1] = parseInt(mod.val1);\r\n        } else {\r\n            template.isAuto[1] = template.isAuto[0];\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        throw new Error(\"Legendary changes auto fire\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class Speed extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.speed, value, mod.op, apply);\r\n        template.autoRate[1] = template.defRate * template.speed[1];\r\n        template.manualRate[1] = template.manualRate[1] / template.speed[1];\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        super.checkOp(mod, \"Legendary\", \"MullAdd\");\r\n        const value = super.getValue(mod);\r\n        super.mullAddToProperty(wSpec, \"speed\", value, apply);\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class APCost extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.ap, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        // Currently there is no reason to change ap\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class Weight extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.weight, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        // Currently there is no reason to change weight\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class AttackDelay extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.manualRate, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n        // Expected we do not have legendary which changes attack delay\r\n        throw new Error(\"Legendary changes attack delay\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class CriticalDamageMult extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Add\");\r\n        const value = super.getValue(mod) * 100.0;\r\n        if (apply) {\r\n            template.crit[1] += value;\r\n        } else {\r\n            template.crit[1] -= value;\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        super.checkOp(mod, \"Legendary\", \"Add\");\r\n        const value = super.getValue(mod) * 100;\r\n        super.addToProperty(wSpec, \"crit\", value, apply);\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class AmmoCapacity extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.capacity, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        super.checkOp(mod, \"Legendary\", \"MullAdd\");\r\n        const value = super.getValue(mod);\r\n        super.mullAddToProperty(wSpec, \"ammoCapacity\", value, apply);\r\n\r\n        // Protect if a user change the number\r\n        wSpec.ammoCapacity = parseInt(wSpec.ammoCapacity);\r\n        if (wSpec.ammoCapacity < 1) {\r\n            wSpec.ammoCapacity = 1;\r\n        }\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class ReloadSpeed extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.reloadSpeed, value, mod.op, apply);\r\n        template.reloadTime[1] = template.reloadTime[0] / template.reloadSpeed[1];\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        super.checkOp(mod, \"Legendary\", \"MullAdd\");\r\n        const value = super.getValue(mod);\r\n        super.mullAddToProperty(wSpec, \"reloadSpeed\", value, apply);\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class OverrideProjectile extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const field = template.projId;\r\n        const value = mod.val1.split(\" / \")[0];\r\n        if (mod.op === \"Set\") {\r\n            if (apply) {\r\n                field[1] = [value];\r\n            } else {\r\n                field[1] = [...field[0]];\r\n            }\r\n        } else if (mod.op === \"MullAdd\" || mod.op === \"Add\") {\r\n            if (apply) {\r\n                field[1].push(value);\r\n            } else {\r\n\r\n                // Avoid removing default one if it is previously was overridden by 'set'\r\n                if (field[1].toString() === field[0].toString()) {\r\n                    return;\r\n                }\r\n                const index = field[1].indexOf(value);\r\n                if (index > -1) {\r\n                    field[1].splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return true;\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        throw new Error(\"Legendary changes projectile\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class HasRepeatableSingleFire extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Set\");\r\n        if (apply) {\r\n            template.isAuto[1] = 1;\r\n        } else {\r\n            template.isAuto[1] = template.isAuto[0];\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        throw new Error(\"Legendary changes auto fire\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class ActorValues extends Apply {\r\n\r\n    getValue(mod, weapId) {\r\n        super.checkOp(mod, weapId, \"Add\");\r\n        let value = super.getCurvValue(mod);\r\n        if (value === 0) {\r\n            value = parseFloat(mod.val2);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    applyValue(mod, obj, name, value, apply, isLegendary=false) {\r\n        switch(mod.val1) {\r\n            case '00058d36 / STAT_DmgVsScorched':\r\n                this.damageToCreature(obj, name, value, apply, \"Scorched\");\r\n                break;\r\n            case '0018eeee / STAT_DmgVsGhouls':\r\n                this.damageToCreature(obj, name, value, apply, \"Ghoul\");\r\n                break;\r\n            case '00674c85 / STAT_DmgVsMoleMiners':\r\n                this.damageToCreature(obj, name, value, apply, \"MoleMiner\");\r\n                break;\r\n            case '0018eef2 / STAT_DmgVsHumans':\r\n                this.damageToCreature(obj, name, value, apply, \"Human\");\r\n                break;\r\n            case '004f5775 / STAT_DmgVsBugs':\r\n                this.damageToCreature(obj, name, value, apply, \"Bug\");\r\n                break;\r\n            case '0018eeed / STAT_DmgVsSuperMutants':\r\n                this.damageToCreature(obj, name, value, apply, \"SuperMutant\");\r\n                break;\r\n            case '0018eeef / STAT_DmgVsRobots':\r\n                this.damageToCreature(obj, name, value, apply, \"Robot\");\r\n                break;\r\n            case '00674c84 / STAT_DmgVsMolerats':\r\n                this.damageToCreature(obj, name, value, apply, \"Molerat\");\r\n                break;\r\n            case '00690c78 / STAT_DmgVsCryptids':\r\n                this.damageToCreature(obj, name, value, apply, \"Cryptid\");\r\n                break;\r\n            case '0018eeec / STAT_DmgVsMirelurks':\r\n                this.damageToCreature(obj, name, value, apply, \"Mirelurk\");\r\n                break;\r\n            case '0018eeeb / STAT_DmgVsAnimals':\r\n                this.damageToCreature(obj, name, value, apply, \"Animal\");\r\n                break;\r\n            case '00097341 / ArmorPenetration':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"aa\", value, apply);\r\n                } else {\r\n                    super.add(obj.antiArmor, value, apply);\r\n                }\r\n                break;\r\n            case '006e1052 / STAT_SneakAttackBonus':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"sneak\", value, apply);\r\n                } else {\r\n                    super.add(obj.sneak, value, apply);\r\n                }\r\n                break;\r\n            case '007a6c35 / LGND_ExplosivePayload':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"exp\", value, apply);\r\n                } else {\r\n                    this.checkZero(obj.exp, obj.id);\r\n                    obj.exp[1] = (apply) ? value : obj.exp[0];\r\n                }\r\n                break;\r\n            case '001ef5d9 / STAT_DmgLimbs':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"cripple\", value, apply);\r\n                } else {\r\n                    super.add(obj.cripple, value, apply);\r\n                }\r\n                break;\r\n\r\n            case '006c1fa9 / STAT_DmgPowerAttack':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"powerAttack\", value, apply);\r\n                } else {\r\n                    super.add(obj.powerAttack, value, apply);\r\n                }\r\n                break;\r\n            case '006c2221 / STAT_DmgBash':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"bash\", value, apply);\r\n                } else {\r\n                    super.add(obj.bash, value, apply);\r\n                }\r\n                break;\r\n            case '00527f83 / LGND_ExecuteDmg':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"totalD\", value, apply);\r\n                } else {\r\n                    super.add(obj.totalD, value, apply);\r\n                }\r\n                break;\r\n            case '000002c2 / Strength':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"strPoints\", value, apply);\r\n                } else {\r\n                    super.add(obj.strPoints, value, apply);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    apply(template, mod, apply) {\r\n        const value = this.getValue(mod, template.id);\r\n        this.applyValue(mod, template, \"creature\", value, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        const value = this.getValue(mod, \"Legendary\");\r\n        this.applyValue(mod, wSpec, \"creature\", value, apply, true);\r\n    }\r\n\r\n    damageToCreature(obj, property, value, apply, name) {\r\n        const creatures = obj[property];\r\n        let applied = false;\r\n        let needToRemove = -1;\r\n\r\n        // Apply to existing one\r\n        for (let i = 0; i < creatures.length; i++) {\r\n            const creature = creatures[i];\r\n            if (creature.name === name) {\r\n                applied = true;\r\n                if (apply) {\r\n                    creature.value += value;\r\n                } else {\r\n                    creature.value -= value;\r\n                }\r\n                if (creature.value <= 0) {\r\n                    needToRemove = i;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Remove existed because the value of it less than or equal to zero\r\n        if (needToRemove > -1) {\r\n            creatures.splice(needToRemove, 1);\r\n        }\r\n\r\n        // Add new one\r\n        if (apply && !applied) {\r\n            creatures.push({ \"name\": name, \"value\": value });\r\n        }\r\n    }\r\n\r\n    checkZero(field, weaponId) {\r\n        if (field[1] > 0) {\r\n            console.log(\"ActorValues already has a value: \" + weaponId);\r\n        }\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class Keywords extends Apply {\r\n\r\n    addTag(template, tag, apply) {\r\n        if (apply) {\r\n            template.tags.push(tag);\r\n        } else {\r\n            let k = -1;\r\n            for (let i = 0; i < template.tags.length; i++) {\r\n                if (template.tags[i] === tag) {\r\n                    k = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (k > -1) {\r\n                template.tags.splice(k, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    print(name) {\r\n        if (!name.includes(\"IsAmmoType\") && !name.includes(\"dn_Has\") && !name.includes(\"HasS\") && !name.includes(\"legendary\")\r\n            && !name.includes(\"s_30\") && !name.includes(\"Anims\") && !name.includes(\"remapNode\") && !name.includes(\"CustomItem\")\r\n            && !name.includes(\"Legendary\") && !name.includes(\"ATX\") && !name.includes(\"UI_\") && !name.includes(\"s_35\")\r\n            && !name.includes(\"ma_\") && !name.includes(\"s_20\") && !name.includes(\"FeaturedItem\") && !name.includes(\"00000000\")\r\n            && !name.includes(\"WeaponTypePistol\") && !name.includes(\"WeaponTypeRifle\") && !name.includes(\"VATSWeaponLongBurst\")\r\n            && !name.includes(\"DamageType\") && !name.includes(\"s_00\")) {\r\n            console.log(\"Keywords: \" + name);\r\n        }\r\n    }\r\n\r\n    apply(template, mod, apply) {\r\n        const name = mod.val1;\r\n        switch(name) {\r\n            case '005c3874 / IsAmmoType_FusionCore':\r\n            case '005dc32d / IsAmmoType_FusionCore_AntiScorchBeast':\r\n                this.addTag(template, \"FusionCore\", apply);\r\n                return;\r\n            case '00060a81 / dtEnergy':\r\n            case '0033a7c9 / WeaponTypeEnergy':\r\n                this.addTag(template, \"Energy\", apply);\r\n                return;\r\n            case '001e05d6 / HasSilencer':\r\n                this.addTag(template, \"HasSilencer\", apply);\r\n                return;\r\n            case '0004a0a2 / WeaponTypeAutomatic':\r\n            case '0034087a / WeaponTypeAutomaticRifle':\r\n                this.addTag(template, \"Automatic\", apply);\r\n                if (apply) {\r\n                    template.isAuto[1] = 1;\r\n                } else {\r\n                    template.isAuto[1] = template.isAuto[0];\r\n                }\r\n                return;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // Some weapons like MG-42 can have 'Rifle' keyword we skip it to not change its type\r\n        if (template.type[0] !== 'Rifle' && template.type[0] !== 'Pistol') {\r\n            return;\r\n        }\r\n        switch(name) {\r\n            case '0004a0a1 / WeaponTypeRifle':\r\n                template.type[1] = (apply) ? \"Rifle\" : template.type[0];\r\n                break;\r\n            case '0004a0a0 / WeaponTypePistol':\r\n                template.type[1] = (apply) ? \"Pistol\" : template.type[0];\r\n                break;\r\n             default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        const name = mod.val1;\r\n        if (name.includes(\"dt\") || name.includes(\"WeaponType\")) {\r\n            throw new Error(\"Legendary changes weapon or damage type\");\r\n        }\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class CritEffect extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const field = template.crSpellId;\r\n        const value = mod.val1.split(\" / \")[0];\r\n        if (mod.op === \"Set\") {\r\n            if (apply) {\r\n                field[1] = [value];\r\n            } else {\r\n                field[1] = [...field[0]];\r\n            }\r\n        } else if (mod.op === \"Add\" || mod.op === \"MullAdd\") {\r\n            if (apply) {\r\n                field[1].push(value);\r\n            } else {\r\n\r\n                // Avoid removing default one if it is previously was overridden by 'set'\r\n                if (field[1].toString() === field[0].toString()) {\r\n                    return;\r\n                }\r\n                const index = field[1].indexOf(value);\r\n                if (index > -1) {\r\n                    field[1].splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return true;\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n        // Expected we do not have legendary which changes crit effect\r\n        throw new Error(\"Legendary changes crit effect\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class AttackDamage extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.bbDamage, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n        // Expected we do not have legendary which changes attack damage\r\n        throw new Error(\"Legendary changes attack damage\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class DamageTypeValues extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        let value = super.getCurvValue(mod);\r\n        if (value === 0) {\r\n            value = parseFloat(mod.val2);\r\n        }\r\n        let from = null;\r\n        switch (mod.val1) {\r\n            case '00060a81 / dtEnergy':\r\n                from = template.ebDamage[0] === 0 ? template.bbDamage : template.ebDamage;\r\n                this.setDamage(template.ebDamage, from, value, mod.op, apply);\r\n                break;\r\n            case '00060a82 / dtFire':\r\n                from = template.fbDamage[0] === 0 ? template.bbDamage : template.fbDamage;\r\n                this.setDamage(template.fbDamage, from, value, mod.op, apply);\r\n                break;\r\n            case '00060a84 / dtPoison':\r\n                from = template.pbDamage[0] === 0 ? template.bbDamage : template.pbDamage;\r\n                this.setDamage(template.pbDamage, from, value, mod.op, apply);\r\n                break;\r\n            case '00060a83 / dtCryo':\r\n                from = template.cbDamage[0] === 0 ? template.bbDamage : template.cbDamage;\r\n                this.setDamage(template.cbDamage, from, value, mod.op, apply);\r\n                break;\r\n            case '00060a85 / dtRadiationExposure':\r\n                from = template.rbDamage[0] === 0 ? template.bbDamage : template.rbDamage;\r\n                this.setDamage(template.rbDamage, from, value, mod.op, apply);\r\n                break;\r\n            default:\r\n                throw new Error(\"New damage type values: \" + mod.val1);\r\n        }\r\n    }\r\n\r\n    setDamage(to, from, value, op, apply) {\r\n        if (op === 'MullAdd') {\r\n            super.mullAddFromTo(from, to, value, apply);\r\n        } else if (op === 'Set') {\r\n            super.set(to, value, apply);\r\n        } else if (op === 'Add') {\r\n            super.add(to, value, apply);\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        throw new Error(\"Legendary changes damage type values\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class WeightReduction extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Add\");\r\n        const value = super.getValue(mod);\r\n        super.mullAdd(template.weight, value, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        // Currently there is no reason to change weight\r\n    }\r\n}","import { Apply } from './Apply';\r\nimport DamageExtractor from '../DamageExtractor';\r\n\r\n\r\nexport class Enchantments extends Apply {\r\n\r\n    constructor() {\r\n        super();\r\n        this.damageExtractor = new DamageExtractor();\r\n    }\r\n    apply(template, mod, apply) {\r\n        const field = template.adEffects;\r\n        const value = mod.val1.split(\" / \")[0];\r\n        if (mod.op === \"Set\") {\r\n            if (apply) {\r\n                field[1] = [value];\r\n            } else {\r\n                field[1] = [...field[0]];\r\n            }\r\n        } else if (mod.op === \"MullAdd\" || mod.op === \"Add\") {\r\n            if (apply) {\r\n                field[1].push(value);\r\n            } else {\r\n                // Possibly useless cause now any changes lead to full recalculation.\r\n                // Avoid removing default one if it is previously was overridden by 'set'\r\n                if (field[1].toString() === field[0].toString()) {\r\n                    return;\r\n                }\r\n                const index = field[1].indexOf(value);\r\n                if (index > -1) {\r\n                    field[1].splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return true;\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        let result = [];\r\n        const ench = mod.val1.split(\" / \")[0];\r\n        this.damageExtractor.extractEnch(ench, result, \"Legendary\", false, \"\");\r\n        for (const property in result) {\r\n            const effects = result[property];\r\n            for (let i = 0; i < effects.length; i++) {\r\n                const effect = effects[i];\r\n                if (effect.type_name === 'STAT_DmgAll' || effect.type_name === \"STAT_DmgMelee\") {\r\n                    let value = effect.curv;\r\n                    if (value === 0) {\r\n                        value = effect.magnitude;\r\n                        if (value === 0) {\r\n                            throw new Error(\"Effect damage for legendary is 0\");\r\n                        }\r\n                    }\r\n                    const [newValue, depend] = this.adjustValueByHealth(modId, value, health);\r\n\r\n                    // We do not want to update values which do not depend on health\r\n                    // because they can be adjusted by user and updating just reset them to default.\r\n                    if (!depend && update) {\r\n                        continue;\r\n                    }\r\n\r\n                    wSpec.legendary[starIndex][1] = (apply) ? newValue : 0;\r\n                    wSpec.legendary[starIndex][2] = (apply) ? \"BDB\" : \"\";\r\n                } else {\r\n                    // throw new Error(\"Not known effect type for legendary: \" + effect.type_name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    adjustValueByHealth(modId, value, health) {\r\n        switch(modId) {\r\n            case '00606b73': // Juggernaut's\r\n                if (health > 95) {\r\n                    health = 95;\r\n                }\r\n                health -= 5;\r\n                return [parseInt(24 / 90 * health + 1), true];\r\n            case '004f6aa0': // Bloodied\r\n                return [100 - health, true];\r\n            default:\r\n                return [value, false];\r\n        }\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class NumProjectiles extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.shotSize, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        const value = super.getValue(mod);\r\n        super.checkOp(mod, \"legendary\", \"Add\");\r\n        super.addToProperty(wSpec, \"shot_size\", value, apply);\r\n\r\n        // Protect projectile if a user change the value\r\n        if (wSpec.shot_size === 0) {\r\n            wSpec.shot_size = 1;\r\n        }\r\n    }\r\n}","import { DamageBonusMult } from './DamageBonusMult';\r\nimport { Ammo } from './Ammo';\r\nimport { IsAutomatic } from './IsAutomatic';\r\nimport { Speed } from './Speed';\r\nimport { APCost } from './APCost';\r\nimport { Weight } from './Weight';\r\nimport { AttackDelay } from './AttackDelay';\r\nimport { CriticalDamageMult } from './CriticalDamageMult';\r\nimport { AmmoCapacity } from './AmmoCapacity';\r\nimport { ReloadSpeed } from './ReloadSpeed';\r\nimport { OverrideProjectile } from './OverrideProjectile';\r\nimport { HasRepeatableSingleFire } from './HasRepeatableSingleFire';\r\nimport { ActorValues } from './ActorValues';\r\nimport { Keywords } from './Keywords';\r\nimport { CritEffect } from './CritEffect';\r\nimport { AttackDamage } from './AttackDamage';\r\nimport { DamageTypeValues } from './DamageTypeValues';\r\nimport { WeightReduction } from './WeightReduction';\r\nimport { Enchantments } from './Enchantments';\r\nimport { NumProjectiles } from './NumProjectiles';\r\nimport { ConIronSight } from './ConIronSight';\r\nimport { SightedTransition } from './SightedTransition';\r\nimport { MaxConDegree } from './MaxConDegree';\r\nimport { MinConDegree } from './MinConDegree';\r\nimport { RecoilMaxDegree } from './RecoilMaxDegree';\r\nimport { RecoilMinDegree } from './RecoilMinDegree';\r\n\r\n\r\nexport default class Appliers {\r\n    \r\n    constructor() {\r\n        \r\n        // TODO: Has to be generated and set automatically via names instead of manual setting\r\n        this.appliers = new Map();\r\n        this.appliers.set(\"DamageBonusMult\", new DamageBonusMult());\r\n        this.appliers.set(\"Ammo\", new Ammo());\r\n        this.appliers.set(\"IsAutomatic\", new IsAutomatic());\r\n        this.appliers.set(\"Speed\", new Speed());\r\n        this.appliers.set(\"APCost\", new APCost());\r\n        this.appliers.set(\"Weight\", new Weight());\r\n        this.appliers.set(\"AttackDelay\", new AttackDelay());\r\n        this.appliers.set(\"CriticalDamageMult\", new CriticalDamageMult());\r\n        this.appliers.set(\"AmmoCapacity\", new AmmoCapacity());\r\n        this.appliers.set(\"ReloadSpeed\", new ReloadSpeed());\r\n        this.appliers.set(\"OverrideProjectile\", new OverrideProjectile());\r\n        this.appliers.set(\"HasRepeatableSingleFire\", new HasRepeatableSingleFire());\r\n        this.appliers.set(\"ActorValues\", new ActorValues());\r\n        this.appliers.set(\"Keywords\", new Keywords());\r\n        this.appliers.set(\"CritEffect\", new CritEffect());\r\n        this.appliers.set(\"AttackDamage\", new AttackDamage());\r\n        this.appliers.set(\"DamageTypeValues\", new DamageTypeValues());\r\n        this.appliers.set(\"WeightReduction\", new WeightReduction());\r\n        this.appliers.set(\"Enchantments\", new Enchantments());\r\n        this.appliers.set(\"NumProjectiles\", new NumProjectiles());\r\n        this.appliers.set(\"ConIronSight\", new ConIronSight());\r\n        this.appliers.set(\"SightedTransition\", new SightedTransition());\r\n        this.appliers.set(\"MaxConDegree\", new MaxConDegree());\r\n        this.appliers.set(\"MinConDegree\", new MinConDegree());\r\n        this.appliers.set(\"RecoilMaxDegree\", new RecoilMaxDegree());\r\n        this.appliers.set(\"RecoilMinDegree\", new RecoilMinDegree());\r\n    }\r\n}","import Appliers from './appliers/Appliers';\r\nimport getMods from '../Mods';\r\n\r\n\r\nexport class ModParser {\r\n\r\n    constructor() {\r\n        this.appliers = new Appliers().appliers;\r\n        this.skip_legendary = [\"0040bd7c\", \"004f577d\", \"004f5776\", \"004f5778\", \"004ed02f\", \"004e89af\", \"00529a02\"];\r\n    }\r\n\r\n    // mutatingDamage is used when default damages like (ammo, projectile) must be overridden\r\n    // this types of modes must be applied separately to correctly multiply buffs.\r\n    applyOrRevoke(modData, template, apply, mutatingDamage=false) {\r\n        for (let i = 0; i < modData.modifiers.length; i++) {\r\n            const mod = modData.modifiers[i];\r\n            const applier = this.appliers.get(mod.prop);\r\n            if (applier) {\r\n                const changeDefault = applier.isChangingDefaultDamage();\r\n                if ((mutatingDamage && changeDefault) || (!mutatingDamage && !changeDefault)) {\r\n                    applier.apply(template, mod, apply);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static applySpecific(template, modData, modEffects) {\r\n        for (let i = 0; i < modData.modifiers.length; i++) {\r\n            const mod = modData.modifiers[i];\r\n            const applier = modEffects.get(mod.prop);\r\n            if (applier) {\r\n                applier.apply(template, mod, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Update means that it can be applied to legendary which reset their value according to health\r\n    // Effects which add and remove their static values can not be updated (otherwise they will stack values up every time)\r\n    applyLegendaryModToWSpec(modId, wSpec, starIndex, health, update, apply) {\r\n        if (this.skip_legendary.includes(modId)) {\r\n            return;\r\n        }\r\n        const modData = getMods().get(modId);\r\n        if (modData) {\r\n            for (let i = 0; i < modData.modifiers.length; i++) {\r\n                const mod = modData.modifiers[i];\r\n                const applier = this.appliers.get(mod.prop);\r\n                if (applier) {\r\n                    applier.applyLegendary(wSpec, mod, modId, starIndex, health, update, apply);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import getMods from '../Mods';\r\n\r\n\r\nexport class ModTools {\r\n\r\n    static hasSilencerById(modId) {\r\n        return ModTools.hasSilencer(getMods().get(modId));\r\n    }\r\n\r\n    static hasSilencer(modData) {\r\n        for (let i = 0; i < modData.modifiers.length; i++) {\r\n            const val = modData.modifiers[i].val1;\r\n            if (val === '001e05d6 / HasSilencer') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","export class Apply {\r\n\r\n    checkOp(mod, weaponId, expected) {\r\n        if (mod.op !== expected) {\r\n            throw new Error(\"Mult must have '\" + expected + \"' op, but not '\" + mod.op + \"', \" +\r\n            \"WeaponId: \" + weaponId + \" Prop: \" + mod.prop);\r\n        }\r\n    }\r\n\r\n    getCurvValue(mod) {\r\n        if (!mod.curv || mod.curv === '') {\r\n            return 0;\r\n        } else {\r\n            const val1 = parseFloat(mod.curv);\r\n            if (!val1) {\r\n                return 0;\r\n            }\r\n            return val1;\r\n        }\r\n    }\r\n\r\n    getValue(mod) {\r\n        const val1 = this.getCurvValue(mod);\r\n        const val2 = parseFloat(mod.val1);\r\n        const val3 = parseFloat(mod.val2);\r\n        if (val1 !== 0) {\r\n            return val1;\r\n        } else if (val2 !== 0) {\r\n            return val2;\r\n        } else {\r\n            return val3;\r\n        }\r\n    }\r\n\r\n    mullAddFromTo(from, to, value, apply, allowNegative=false) {\r\n        if (apply) {\r\n            to[1] += (from[0] * value);\r\n        } else {\r\n            to[1] -= (from[0] * value);\r\n        }\r\n        if (to[1] < 0 && !allowNegative) {\r\n            to[1] = 0;\r\n        }\r\n    }\r\n\r\n    mullAdd(field, value, apply, allowNegative=false) {\r\n        this.mullAddFromTo(field, field, value, apply, allowNegative);\r\n    }\r\n\r\n    add(field, value, apply, allowNegative=false, index=1) {\r\n        if (apply) {\r\n            field[index] += value;\r\n        } else {\r\n            field[index] -= value;\r\n        }\r\n        if (field[index] < 0 && !allowNegative) {\r\n            field[index] = 0;\r\n        }\r\n    }\r\n\r\n    addToProperty(obj, property, value, apply, allowNegative=false) {\r\n        if (apply) {\r\n            obj[property] += value;\r\n        } else {\r\n            obj[property] -= value;\r\n        }\r\n        if (obj[property] < 0 && !allowNegative) {\r\n            obj[property] = 0;\r\n        }\r\n    }\r\n\r\n    mullAddToProperty(obj, property, value, apply) {\r\n        if (apply) {\r\n            obj[property] += (obj[property] * value);\r\n        } else {\r\n            obj[property] /= (value + 1);\r\n        }\r\n    }\r\n\r\n    setToProperty(obj, property, value) {\r\n        obj[property] = value;\r\n    }\r\n\r\n    set(field, value, apply, allowNegative=false) {\r\n        if (apply) {\r\n            field[1] = value;\r\n            if (field[1] < 0 && !allowNegative) {\r\n                field[1] = 0;\r\n            }\r\n        } else {\r\n            field[1] = field[0];\r\n        }\r\n    }\r\n\r\n    mullSet(field, value, apply, allowNegative=false) {\r\n        if (apply) {\r\n            field[1] = field[0] * value;\r\n            if (field[1] < 0 && !allowNegative) {\r\n                field[1] = 0;\r\n            }\r\n        } else {\r\n            field[1] = field[0];\r\n        }\r\n    }\r\n\r\n    addSetMullAdd(field, value, op, apply, allowNegative=false) {\r\n        if (op === 'Add') {\r\n            this.add(field, value, apply, allowNegative);\r\n        } else if (op === 'MullAdd') {\r\n            this.mullAdd(field, value, apply, allowNegative);\r\n        } else if (op === 'Set') {\r\n            this.set(field, value, apply, allowNegative);\r\n        }\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return false;\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class ConIronSight extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.conIronSight, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class MaxConDegree extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.maxConDegree, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class MinConDegree extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.minConDegree, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class RecoilMaxDegree extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.recoilMaxDegree, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class RecoilMinDegree extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.recoilMinDegree, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class SightedTransition extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.sightedTransition, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","function getButtons(pairs, selectedValue, onClick, small) {\r\n    const result = [];\r\n    let style = null;\r\n    for(const name in pairs) {\r\n        const value = pairs[name];\r\n        if (selectedValue === value) {\r\n            style = {color: '#0068ae', borderColor: '#0098ff', marginRight: '1px'};\r\n        } else {\r\n            style = {marginRight: '1px'};\r\n        }\r\n        let tail = \"\";\r\n        if (small) {\r\n            tail = \"-small\";\r\n        }\r\n        result.push(<button key={name} type=\"button\" value={value} style={style} onClick={onClick} className={\"btn btn-blue-white\" + tail}>{name}</button>);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n    pairs={{Name1: value1, Name2: value2, ...}}\r\n    selectedValue={currentValue}\r\n    setSelectedValue={setSelectedValue} can be null if onClick is set\r\n    onClick, if null then setSelectedValue is used\r\n*/\r\nexport default function BSRadio(props) {\r\n    let onClick = null;\r\n    if (!props.onClick) {\r\n        onClick = onClick = (e) => {\r\n            if (props.setSelectedValue) {\r\n                if (props.parseValueInt) {\r\n                    props.setSelectedValue(parseInt(e.target.value));\r\n                } else {\r\n                    props.setSelectedValue(e.target.value);\r\n                }\r\n            }\r\n        };\r\n    } else {\r\n        onClick = props.onClick;\r\n    }\r\n    return (\r\n        <div className={props.className}>\r\n            <div className=\"btn-group\" role=\"group\">\r\n                {getButtons(props.pairs, props.selectedValue, onClick, props.small)}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { getUniqueDropdownItemsByNames } from '../DropdownHelpers';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\n\r\nexport default function SimpleNameDropdown(props) {\r\n    return (\r\n        <DropdownButton variant={props.variant} size={props.size} onSelect={props.onSelect} title={props.title}>\r\n            {getUniqueDropdownItemsByNames(props.names)}\r\n        </DropdownButton>\r\n    );\r\n}\r\n","import { idNameRow, buildTextBlock } from '../../helpers/EffectViewHelper';\r\nimport { getPerkCard } from '../PerkCardProvider';\r\nimport PerkCardTools from '../PerkCardTools';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Divider } from 'antd';\r\nimport { getEffect } from '../../helpers/EffectProvider';\r\n\r\n\r\nfunction perkButtons(perk, onPerkClick) {\r\n    const result = [];\r\n    const perkData = [];\r\n    const costs = [];\r\n    for (const fieldName in perk) {\r\n        if (fieldName.startsWith(\"rankCost\")) {\r\n            costs.push(fieldName);\r\n        }\r\n    }\r\n    for (let i = 0; i < costs.length; i++) {\r\n        const fieldName = costs[i];\r\n        const number = fieldName.slice(8, 9);\r\n        const cost = perk[fieldName];\r\n        const mPerkId = perk['mPerk' + number];\r\n        const fPerkId = perk['fPerk' + number];\r\n        const mPerk = getEffect(mPerkId);\r\n        const fPerk = getEffect(fPerkId);\r\n        if (mPerk) {\r\n            perkData.push({name: mPerk.name, id: mPerk.id, cost: cost});\r\n        }\r\n        if (fPerk) {\r\n            perkData.push({name: fPerk.name, id: fPerk.id, cost: cost});\r\n        }\r\n    }\r\n    function getCostView(cost, legendary) {\r\n        if (legendary) {\r\n            return (<></>);\r\n        }\r\n        return (\r\n            <div className=\"ps-1 pe-1 pt-0 pb-0\" style={{color: '#fff', backgroundColor: '#ffb000', borderColor: '#ffb000', borderWidth: '1px', borderRadius: '2px', borderStyle: 'solid'}}>\r\n                <b>{cost}</b>\r\n            </div>\r\n        );\r\n    }\r\n    for (let i = 0; i < perkData.length; i++) {\r\n        const data = perkData[i];\r\n        result.push(\r\n            <div key={data.id} className=\"d-flex justify-content-center m-1\">\r\n                <Button className=\"w-100\" name={data.id} variant=\"blue-white-border\" onClick={onPerkClick}>\r\n                    <div className=\"mt-1\"><b>{data.name}</b></div>\r\n                    <div className=\"mt-0 mb-0\" style={{display: 'flex', flexDirection: 'row'}}>\r\n                        <div className=\"w-100 d-flex justify-content-start mb-1\">\r\n                            {getCostView(data.cost, perk.legendary)}\r\n                        </div>\r\n                        <div className=\"w-100 d-flex justify-content-end mt-2\">\r\n                            <small><b style={{color: '#520021'}}>{data.id}</b></small>\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function PerkCardCompactView(props) {\r\n    let perkCard = props.perkCard;\r\n    if (!perkCard) {\r\n        perkCard = getPerkCard(props.perkCardId);\r\n    }\r\n    const desc = (perkCard.desc && perkCard.desc !== \"\") ? perkCard.desc : \"-\";\r\n    const bgColor = PerkCardTools.getColor(perkCard.type);\r\n    const legBadge = (perkCard.legendary) ? <div className=\"badge p-1 ps-2 pe-2 bg-lite-shadow2\" style={{backgroundColor: '#ffc700', color: '#513f00'}}>Legendary</div> : <></>;\r\n    return (\r\n        <div>\r\n            {idNameRow(perkCard.id, perkCard.name)}\r\n            {buildTextBlock(desc, null, null, \"mt-2 p-1\")}\r\n            <div className=\"mt-3 mb-3\" style={{display: 'flex', flexDirection: 'row'}}>\r\n                <div className=\"w-100 d-flex justify-content-start\">\r\n                    {legBadge}\r\n                </div>\r\n                <div className=\"w-100 d-flex justify-content-center\">\r\n                    <div className=\"badge p-1 ps-2 pe-2 bg-lite-shadow2\" style={{backgroundColor: bgColor, color: '#fff'}}>{perkCard.type}</div>\r\n                </div>\r\n                <div className=\"w-100 d-flex justify-content-end\">\r\n                    <div className=\"badge p-1 ps-2 pe-2 bg-lite-shadow2\">Lvl {perkCard.level}</div>\r\n                </div>\r\n            </div>\r\n            <Divider>Perks</Divider>\r\n            {perkButtons(perkCard, props.onEffectClick)}\r\n        </div>\r\n    );\r\n}","import { idNameRow, buildConditionStrings, buildRow, getEffectButton, buildActor, buildTextBlock, buildEffect, vmadView } from '../../helpers/EffectViewHelper';\r\nimport { Divider } from 'antd';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nfunction buildPerkEffect(effect, key, onEffectClick) {\r\n    const rows = getRows(effect, onEffectClick);\r\n    const conditions = buildConditionStrings(effect.conditions, \"mt-1 p-1\");\r\n    const indent = (conditions.length > 0) ? (<div className=\"m-1\" />) : null;\r\n    const body = (\r\n        <>\r\n            {conditions}\r\n            {indent}\r\n            {buildRow(\"Type:\", effect.e_type, 'blue')}\r\n            {rows}\r\n        </>\r\n    );\r\n    return buildEffect(key, body);\r\n}\r\n\r\nfunction getRows(effect, onEffectClick) {\r\n    const vType = effect.v_type;\r\n    if (vType === 0 && effect.e_type === \"Ability\") {\r\n        return (\r\n            <>\r\n                {getEffectButton(effect.spell, onEffectClick)}\r\n            </>\r\n        );\r\n    } else if (vType === 1) {\r\n        return (\r\n            <>\r\n                {buildRow(\"Name:\", effect.entry, 'blue')}\r\n                {buildRow(\"Operation:\", effect.op, 'blue')}\r\n                {buildRow(\"Value:\", effect.value, 'blue')}\r\n            </>\r\n        );\r\n    } else if (vType === 4) {\r\n        return (\r\n            <>\r\n                {buildRow(\"Name:\", effect.entry, 'blue')}\r\n                {buildRow(\"Operation:\", effect.op, 'blue')}\r\n            </>\r\n        )\r\n    } else if (vType === 5) {\r\n        return (\r\n            <>\r\n                {buildRow(\"Name:\", effect.entry, 'blue')}\r\n                {buildRow(\"Operation:\", effect.op, 'blue')}\r\n                {getEffectButton(effect.value, onEffectClick)}\r\n            </>\r\n        );\r\n    } else if (vType === 8) {\r\n        return (\r\n            <>\r\n                {buildRow(\"Name:\", effect.entry, 'blue')}\r\n                {buildRow(\"Operation:\", effect.op, 'blue')}\r\n                {buildActors(effect.value)}\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"d-flex justify-content-center\">\r\n                <b><small>Does not have a view for type: {vType}</small></b>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction buildActors(value) {\r\n    const actor1 = value.actor1;\r\n    const actor2 = value.actor2;\r\n    const val = value.value;\r\n    return (\r\n        <Card className=\"mt-1 mb-1 p-1 m-0\">\r\n            {buildActor(actor1)}\r\n            {buildActor(actor2)}\r\n            {buildRow(\"Value:\", val, 'blue')}\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction getEffects(effects, onEffectClick) {\r\n    const result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        result.push(buildPerkEffect(effect, i, onEffectClick));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function PerkCompactView(props) {\r\n    const perk = props.perk;\r\n    return (\r\n        <>\r\n            {idNameRow(perk.id, perk.name)}\r\n            {buildTextBlock(perk.desc, null, null, \"mt-2 p-1\")}\r\n            {buildConditionStrings(perk.conditions, \"mt-2 p-1\")}\r\n            {vmadView(perk.id, perk.vmad, props.onEffectClick)}\r\n            <Divider className=\"pt-0 mt-2 mb-2\">Effects</Divider>\r\n            {getEffects(perk.effects, props.onEffectClick)}\r\n        </>\r\n    );\r\n}","import { idNameRow, buildRow, buildActor, buildConditionStrings, buildCurve, buildEffect, getGlobDuration, getGlobMagnitude, getEffectButton, vmadView } from '../../helpers/EffectViewHelper';\r\nimport { Divider } from 'antd';\r\n\r\n\r\nfunction getEffects(effects, onEffectClick) {\r\n    const result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        const body = (\r\n            <>\r\n                {buildConditionStrings(effect.conditions, \"mt-1 p-1\")}\r\n                {buildCurve(effect.d_curv, effect.curve_max_value)}\r\n                {getGlobMagnitude(effect)}\r\n                {buildRow(\"Magnitude:\", effect.magnitude, 'magenta', true, true)}\r\n                {buildRow(\"Area:\", effect.area, 'blue', true, true)}\r\n                {buildActor(effect.actor)}\r\n                {getGlobDuration(effect)}\r\n                {buildRow(\"Duration:\", effect.duration, 'purple', true, true)}\r\n                {getEffectButton(effect.m_effect, onEffectClick)}\r\n            </>\r\n        );\r\n        result.push(buildEffect(i, body));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getPerk(perkId, onEffectClick) {\r\n    if (!perkId || perkId === \"\" || perkId === \"00000000\") {\r\n        return (<></>);\r\n    }\r\n    return getEffectButton(perkId, onEffectClick);\r\n}\r\n\r\nexport default function SpellCompactView(props) {\r\n    const spell = props.spell;\r\n    return (\r\n        <>\r\n            {idNameRow(spell.id, spell.name)}\r\n            <Divider className=\"pt-0 mt-2 mb-2\">Properties</Divider>\r\n            {buildRow(\"Name:\", spell.full, 'purple', false)}\r\n            {buildRow(\"Type:\", spell.type, 'blue', false)}\r\n            {buildRow(\"Target:\", spell.target, 'purple', false)}\r\n            {buildRow(\"Charge Time:\", spell.time, 'blue', false)}\r\n            {buildRow(\"Range:\", spell.range, 'purple', false)}\r\n            {buildRow(\"Duration:\", spell.duration, 'blue', false)}\r\n            {buildRow(\"Duration type:\", spell.e_type, 'purple', false)}\r\n            {vmadView(spell.id, spell.vmad, props.onEffectClick)}\r\n            {getPerk(spell.perk, props.onEffectClick)}\r\n            <Divider className=\"pt-0 mt-2 mb-2\">Effects</Divider>\r\n            {getEffects(spell.mag_effects, props.onEffectClick)}\r\n        </>\r\n    );\r\n}","import { idNameRow, buildRow, buildActor, buildConditionStrings, buildTextBlock, getEffectButton, vmadView } from '../../helpers/EffectViewHelper';\r\nimport { Divider } from 'antd';\r\nimport { getExpView } from '../../helpers/ProjView';\r\n\r\n\r\nfunction checkEmpty(obj) {\r\n    return (!obj || obj === \"\" || obj === \"00000000\");\r\n}\r\nfunction getPerk(perkId, onEffectClick) {\r\n    if (checkEmpty(perkId)) {\r\n        return (<></>);\r\n    }\r\n    return getEffectButton(perkId, onEffectClick);\r\n}\r\n\r\nfunction getAbility(spellId, onEffectClick) {\r\n    if (checkEmpty(spellId)) {\r\n        return (<></>);\r\n    }\r\n    return getEffectButton(spellId, onEffectClick);\r\n}\r\n\r\nfunction getDamageType(damageType) {\r\n    if (checkEmpty(damageType)) {\r\n        return (<></>);\r\n    }\r\n    if (typeof damageType === typeof \"\") {\r\n        return buildRow(\"Value:\", damageType, 'purple', false);\r\n    }\r\n    return (<>View for damage is not implemented</>);\r\n}\r\n\r\nfunction getExplosion(explosion) {\r\n    if (checkEmpty(explosion)) {\r\n        return (<></>);\r\n    }\r\n    return getExpView(explosion);\r\n}\r\n\r\nfunction getProjectile(projectile) {\r\n    if (checkEmpty(projectile)) {\r\n        return (<></>);\r\n    }\r\n    return (<>View for projectile is not implemented</>);\r\n}\r\n\r\nfunction getResistance(resistance) {\r\n    return buildActor(resistance, \"Resistance\");\r\n}\r\n\r\nexport default function EffectCompactView(props) {\r\n    const effect = props.effect;\r\n    return (\r\n        <>\r\n            {idNameRow(effect.id, effect.name)}\r\n            {vmadView(effect.id, effect.vmad, props.onEffectClick)}\r\n            <Divider className=\"pt-0 mt-2 mb-2\">Properties</Divider>\r\n            {buildTextBlock(effect.desc, null, null, \"mt-1 p-1\")}\r\n            {buildConditionStrings(effect.conditions, \"mt-1 p-1\")}\r\n            {buildRow(\"Name:\", effect.full, 'purple', false)}\r\n            {buildRow(\"Type:\", effect.a_type, 'blue', false)}\r\n            {buildRow(\"Duration type:\", effect.e_type, 'purple', false)}\r\n            {buildRow(\"Target:\", effect.target, \"blue\", false)}\r\n            {buildActor(effect.actor_value1)}\r\n            {buildActor(effect.actor_value2)}\r\n            {getAbility(effect.ability, props.onEffectClick)}\r\n            {getPerk(effect.perk, props.onEffectClick)}\r\n            {getDamageType(effect.d_type)}\r\n            {getExplosion(effect.explosion)}\r\n            {getProjectile(effect.projectile)}\r\n            {getResistance(effect.resist)}\r\n        </>\r\n    );\r\n}","import { mainView, detailsView } from '../../consumables/view/ConsumableToast';\r\nimport { Divider, Tag } from 'antd';\r\n\r\n\r\nexport default function AlchemyCompactView(props) {\r\n    const alchemy = props.alchemy;\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-center mb-3\">\r\n                <Tag bordered={false} color=\"volcano\"><b>{alchemy.full}</b></Tag>\r\n            </div>\r\n            {mainView(alchemy)}\r\n            <Divider><small>Details</small></Divider>\r\n            {detailsView(alchemy)}\r\n        </>\r\n    );\r\n}","import { buildTextBlock, getEffectButton, getNameByLabel, buildActor, getVMADButton, getGlobValue } from '../../helpers/EffectViewHelper';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n// float, bool, int, string, object, array_obj, array_int, struct, struct_array\r\nfunction buildBody(vmad, id, onEffectClick) {\r\n    const result = [];\r\n    for (let i = 0; i < vmad.length; i++) {\r\n        const obj = vmad[i];\r\n        const type = obj.type;\r\n        const vmadId = obj.name + i + id;\r\n        if (type === \"float\" || type === \"bool\" || type === \"int\" || type === \"string\") {\r\n            result.push(<div key={i}>{textBlock(obj.name, obj.value, obj.script_name)}</div>);\r\n        } else if (type === \"obj\") {\r\n            result.push(<div key={i}>{objView(obj, onEffectClick)}</div>);\r\n        } else if (type === \"struct\") {\r\n            result.push(<div key={i}><b>{obj.name} {obj.type}</b></div>);\r\n        } else if (type === \"struct_array\") {\r\n            result.push(<div key={i}>{structArrayView(obj, vmadId, onEffectClick)}</div>);\r\n        } else {\r\n            result.push(<div key={i}><b>{obj.name} {obj.type}</b></div>);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction textBlock(header, text, footer) {\r\n    return buildTextBlock(text, header, <div className=\"d-flex justify-content-end pe-1\">{footer}</div>, \"mt-1 mb-1\", \"#003112\", \"#c8ffdc\");\r\n}\r\n\r\n/* TODO: Integrate Struct View\r\nfunction vmadStruct(obj, vmad, id, onEffectClick) {\r\n    return (\r\n        <div key={id} className=\"mt-1 mb-1 p-1\" style={{borderWidth: '1px', borderStyle: 'solid', borderColor: '#ffd560', backgroundColor: '#fff4d7'}}>\r\n            <div className=\"d-flex justify-content-center\"><small><b style={{color: '#5e4500'}}>{obj.name}</b></small></div>\r\n            {getVMADButton(id, vmad, onEffectClick)}\r\n        </div>\r\n    )\r\n}*/\r\n\r\nfunction structArrayView(obj, id, onEffectClick) {\r\n    const result = [];\r\n    const vmads = obj.value;\r\n    for (let i = 0; i < vmads.length; i++) {\r\n        const vmad = vmads[i];\r\n        const key = id + i;\r\n        result.push(<div key={key}>{getVMADButton(key, vmad, onEffectClick, \"VMAD \" + (i + 1))}</div>);\r\n    }\r\n    return (\r\n        <div className=\"mt-1 mb-1 p-1 pb-0\" style={{borderWidth: '1px', borderStyle: 'solid', borderColor: '#61faff', backgroundColor: '#eafdff'}}>\r\n            <div className=\"d-flex justify-content-center\"><small><b style={{color: '#003e3e'}}>{obj.name}</b></small></div>\r\n            {result}\r\n            <div style={{fontSize: '0.7rem'}} className=\"d-flex justify-content-end pt-1\">{obj.script_name}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction effectButtonView(obj, value, onEffectClick) {\r\n    return (\r\n        <div className=\"mt-1 mb-1 p-1 pb-0\" style={{borderWidth: '1px', borderStyle: 'solid', borderColor: '#ffd560', backgroundColor: '#fff4d7'}}>\r\n            <div className=\"d-flex justify-content-center\"><small><b style={{color: '#5e4500'}}>{obj.name}</b></small></div>\r\n            {getEffectButton(value.id, onEffectClick)}\r\n            {getScriptName(obj)}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getScriptName(obj) {\r\n    return (<div style={{fontSize: '0.7rem'}} className=\"d-flex justify-content-end pt-1\">{obj.script_name}</div>);\r\n}\r\nfunction objView(obj, onEffectClick) {\r\n    const value = obj.value;\r\n    if (value.label === 'SPEL' || value.label === 'MGEF' || value.label === 'PERK' || value.label === 'ALCH') {\r\n        return effectButtonView(obj, value, onEffectClick);\r\n    } else if (value.label === 'AVIF') {\r\n        return buildActor(value, obj.name, getScriptName(obj));\r\n    } else if (value.label === 'GLOB') {\r\n        return getGlobValue(obj.value, obj.name,<div className=\"d-flex justify-content-end pe-1\"><small>{obj.script_name}</small></div>);\r\n    }\r\n    return textBlock(obj.name, getNameByLabel(value.label) + \" - (\" + value.name + \" / \" + value.id + \")\", obj.script_name);\r\n}\r\n\r\nfunction buildView(vmad, id, onEffectClick) {\r\n    return (\r\n        <Card className=\"mt-1 mb-1 m-0\">\r\n            <Card.Header className='pt-0 pb-0'>\r\n                <b><small>VMAD</small></b>\r\n            </Card.Header>\r\n            <Card.Body className='p-1'>\r\n                {buildBody(vmad, id, onEffectClick)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function VMADCompactView(props) {\r\n    const vmad = props.vmad.vmad;\r\n    const id = props.vmad.id;\r\n    return (\r\n        <>\r\n            {buildView(vmad, id, props.onEffectClick)}\r\n        </>\r\n    );\r\n}","import { getEffect, getVMADObject, clearVMADObjects } from '../EffectProvider';\r\nimport { useState, useRef } from 'react';\r\nimport PerkCardCompactView from '../../perkCard/view/PerkCardCompactView';\r\nimport PerkCompactView from '../../perk/view/PerkCompactView';\r\nimport SpellCompactView from '../../spell/view/SpellCompactView';\r\nimport EffectCompactView from '../../effect/view/EffectCompactView';\r\nimport AlchemyCompactView from '../../consumables/view/AlchemyCompactView';\r\nimport VMADCompactView from '../../vmad/view/VMADCompactView';\r\nimport { getItem } from '../../consumables/view/ConsumableItems';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nfunction effectView(effect, onEffectClick, backButton) {\r\n    const label = effect['label'];\r\n    if (label === \"PCRD\") {\r\n        return (\r\n            <div>\r\n                <PerkCardCompactView perkCard={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </div>\r\n        );\r\n    } else if (label === \"PERK\") {\r\n        return (\r\n            <>\r\n                <PerkCompactView perk={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"SPEL\") {\r\n        return (\r\n            <>\r\n                <SpellCompactView spell={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"MGEF\") {\r\n        return (\r\n            <>\r\n                <EffectCompactView effect={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"VMAD\") {\r\n        return (\r\n             <>\r\n                <VMADCompactView vmad={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"ENCH\") {\r\n        return (\r\n            <>\r\n                ENCHANTMENT\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"ALCH\") {\r\n        return (\r\n            <>\r\n                <AlchemyCompactView alchemy={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        )\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getEffectItem(viewIdStackRef, startItem) {\r\n    const lastViewIdIndex = viewIdStackRef.current.length - 1;\r\n    if (lastViewIdIndex > -1) {\r\n        const id = viewIdStackRef.current[lastViewIdIndex];\r\n        if (id.startsWith(\"vmad\")) {\r\n            return getVMADObject(id);\r\n        }\r\n        const effect = getEffect(id);\r\n        if (!effect) {\r\n            return getItem(id);\r\n        }\r\n        return effect;\r\n    }\r\n    if (typeof startItem === typeof '') {\r\n        return getEffect(startItem);\r\n    }\r\n    return startItem;\r\n}\r\n\r\nfunction getBackButton(viewIdStackRef, onBackClick) {\r\n    if (viewIdStackRef.current.length > 0) {\r\n        return (<Button className=\"w-100 mt-2 mb-0 p-1\" variant=\"blue-white-border\" onClick={onBackClick}>Back</Button>);\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nexport default function StackEffectView(props) {\r\n    const [,setRedraw] = useState(null);\r\n    const viewIdStackRef = useRef([]);\r\n    const startItemIdRef = useRef(null);\r\n    if (!startItemIdRef.current) { // Was closed and opened\r\n        clearVMADObjects();\r\n        startItemIdRef.current = props.item.id;\r\n    } else if (startItemIdRef.current !== props.item.id) { // Re-Rendered but new item was chosen\r\n        startItemIdRef.current = props.item.id;\r\n        clearVMADObjects();\r\n        viewIdStackRef.current = [];\r\n    }\r\n    \r\n    function onBackClick(e) {\r\n        const newLength = viewIdStackRef.current.length - 1;\r\n        viewIdStackRef.current.length = (newLength < 0) ? 0 : newLength;\r\n        setRedraw({});\r\n    }\r\n    function onEffectClick(e) {\r\n        const id = e.currentTarget.name;\r\n        viewIdStackRef.current.push(id);\r\n        setRedraw({});\r\n    }\r\n    const effect = getEffectItem(viewIdStackRef, props.item);\r\n    const backButton = getBackButton(viewIdStackRef, onBackClick);\r\n    return effectView(effect, onEffectClick, backButton);\r\n}","import Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ADRow from \"./ADRow\";\r\nimport { memo } from 'react';\r\n\r\n\r\nconst marks100P = {\r\n    marks: {\r\n        0: '0%',\r\n        20: '20%',\r\n        40: '40%',\r\n        60: '60%',\r\n        80: '80%',\r\n        100: '100%'\r\n    },\r\n    min: 0,\r\n    max: 100,\r\n    step: 1,\r\n    defaultValue: 0,\r\n};\r\n\r\nconst marks200 = {\r\n    marks: {\r\n        0: '0%',\r\n        40: '40%',\r\n        80: '80%',\r\n        120: '120%',\r\n        160: '160%',\r\n        200: '200%',\r\n    },\r\n    min: 0,\r\n    max: 200,\r\n    step: 1,\r\n    defaultValue: 0,\r\n};\r\n\r\nconst qTDB = \"Effect that increases your total damage like (Executioner, Tenderizer, TOFT). For example: a weapon with 43 base damage \" +\r\n\" and 200 its total damage will be boosted by +50% BDB up to 221.5 whereas +50% TDB gives 300.\"\r\n\r\nconst AdditionalTable = memo(function AdditionalTable({additionalDamages, setAdditionalDamages}) {\r\n    console.log(\"AdditionalTable\");\r\n    function updateAdditionalDamages() {\r\n        setAdditionalDamages({\r\n            ...additionalDamages,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"ps-0 pe-0\">\r\n            <Card className=\"text-center mb-2\">\r\n                <Card.Body>\r\n                    <ADRow additionalDamage={additionalDamages.tdb} updateAdditionalDamages={updateAdditionalDamages} marks={marks100P} text={qTDB}></ADRow>\r\n                    <ADRow additionalDamage={additionalDamages.ballisticBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n                    <ADRow additionalDamage={additionalDamages.energyBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n                    <ADRow additionalDamage={additionalDamages.fireBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n                    <ADRow additionalDamage={additionalDamages.poisonBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n                    <ADRow additionalDamage={additionalDamages.coldBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n                    <ADRow additionalDamage={additionalDamages.radBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n                    <ADRow additionalDamage={additionalDamages.damageToCreature} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default AdditionalTable;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport AdditionalTable from \"../additional/AdditionalTable\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst AdditionalDamage = memo(function AdditionalDamage({additionalDamages, setAdditionalDamages, showStatRef, setShowStat}) {\r\n    console.log(\"AdditionalDamage\");\r\n    const openStat = (e) => {\r\n        setShowStat(!showStatRef.current);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"3\">\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">Additional Damage</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <AdditionalTable additionalDamages={additionalDamages} setAdditionalDamages={setAdditionalDamages}></AdditionalTable>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default AdditionalDamage;\r\n","import { useState } from 'react';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\n\r\nfunction buildOverlay(show, setShow, target, props) {\r\n    function onHide(e) {\r\n        setShow(false);\r\n    };\r\n    const body = (show) ? props.bodyBuilder(props.id) : (<></>);\r\n    const header = (show) ? props.headerBuilder(props.title) : (<></>);\r\n    return (\r\n        <Overlay\r\n            show={show}\r\n            target={target}\r\n            rootClose='true'\r\n            onHide={onHide}\r\n            placement={props.placement}>\r\n            <Popover id=\"info-popover\" className=\"popover-adjustable2\">\r\n                <Popover.Header>\r\n                    {header}\r\n                </Popover.Header>\r\n                <Popover.Body className=\"p-2\" style={props.popoverBodyStyle}>\r\n                    {body}\r\n                </Popover.Body>\r\n            </Popover>\r\n        </Overlay>\r\n    );\r\n\r\n}\r\n\r\nexport default function InfoPopover(props) {\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n    let sign = \"!\";\r\n    if (props.sign) {\r\n        sign = props.sign;\r\n    }\r\n    function handleClick(e) {\r\n        setShow(!show);\r\n        setTarget(e.target);\r\n    };\r\n    const overlay = (show) ? buildOverlay(show, setShow, target, props) : (<></>);\r\n    return (\r\n        <div className={props.className}>\r\n            <Badge bg=\"danger\" pill onClick={handleClick} style={{cursor: \"pointer\"}}>{sign}</Badge>\r\n            {overlay}\r\n        </div>\r\n    );\r\n}","import Card from 'react-bootstrap/Card';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport { useEffect, memo, useState } from 'react';\r\nimport { applyBoost, applyStuff } from '../entities/EStuffBoost';\r\nimport InfoPopover from '../viewComponents/popover/InfoPopover';\r\nimport { getItem } from '../consumables/view/ConsumableItems';\r\nimport { mainView, detailsView } from '../consumables/view/ConsumableToast';\r\nimport { Divider, Tag } from 'antd';\r\nimport { buildRandomEmojiString, getRandomEmoji } from '../helpers/StringHelpers';\r\n\r\n\r\n// Find dynamically used items to recalculate them\r\nfunction recalculateDynamicItems(foodPref, item, stuffBoost, setStuffBoost, player) {\r\n    if (item.used && applyBoost(foodPref, item, stuffBoost, player, false)) {\r\n        setStuffBoost({...stuffBoost});\r\n    }\r\n}\r\n\r\nfunction getPopoverInfoBody(popoverId) {\r\n    const item = getItem(popoverId);\r\n    if (item) {\r\n        return (\r\n            <>\r\n                <div className=\"d-flex justify-content-center mb-3\">\r\n                    <Tag bordered={false} color=\"volcano\"><b>{item.full}</b></Tag>\r\n                </div>\r\n                {mainView(item)}\r\n                <Divider><small>Details</small></Divider>\r\n                {detailsView(item)}\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getPopoverInfoHeader(title) {\r\n    return (<b>{title}</b>);\r\n}\r\n\r\nconst EffectItem = memo(function EffectItem({categoryName, foodPref, setFoodPref, player, item, height, picHeight, imPadding, items, setItems, colorName, colorValue, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched}) {\r\n    const [, setUpdate] = useState([]);\r\n    useEffect(() => {\r\n        recalculateDynamicItems(foodPref, item, stuffBoost, setStuffBoost, player);\r\n    }, [player, foodPref]);\r\n    function cardClick(e) {\r\n        item.used = !item.used;\r\n        setUpdate([]);\r\n        if (item.id === \"carnivore_serum\") {\r\n            foodPref.carnivore = item.used;\r\n            setFoodPref({...foodPref});\r\n        } else if (item.id === \"herbivore_serum\") {\r\n            foodPref.herbivore = item.used;\r\n            setFoodPref({...foodPref});\r\n        }\r\n        applyStuff(foodPref, item, stuffBoost, player);\r\n\r\n        // Say to parent to recalculate\r\n        setConsumableTouched([]);\r\n\r\n        // Do not say to react to update view for every boost item\r\n        setItems(items);\r\n        setStuffBoost(stuffBoost);\r\n    }\r\n    const boosts = item.boosts.map((boost) => {\r\n        let tail = \"\";\r\n        if (boost.valueType === \"percent\") {\r\n            tail = \"%\"\r\n        } else if (boost.valueType === \"multiplier\") {\r\n            tail = \"x\"\r\n        }\r\n        let sign = \"\";\r\n        if (boost.value > 0 && boost.valueType !== \"multiplier\") {\r\n            sign = \"+\";\r\n        }\r\n        const value = (item.used) ? sign + boost.value + tail : \"-\";\r\n        return keyValueRow(boost.description, value, colorName, colorValue, 0);\r\n    });\r\n    const emptyRows = maxRows - boosts.length;\r\n    //if (!item.emojiStrings) {\r\n    const result = []\r\n    for (let i = 0; i < emptyRows; i++) {\r\n        result.push(buildRandomEmojiString(3, 3));\r\n    }\r\n    item.emojiStrings = result;\r\n    //}\r\n    const secondEmoji = (item.used) ? getRandomEmoji() : \"-\";\r\n    for (let i = 0; i < item.emojiStrings.length; i++) {\r\n        boosts.push(keyValueRow(item.emojiStrings[i], secondEmoji, colorName, colorValue, 0));\r\n    }\r\n    const filter = item.used ? \"grayscale(0%)\" : \"grayscale(90%)\";\r\n    const outline = item.used ? \"shadow-outline-gold\" : \"shadow-outline-unselected\";\r\n    const head = (useHeader) ? (<Card.Header className='d-flex justify-content-center p-0 m-0 pt-1 pb-1'><div style={{textWrap: 'nowrap', overflow: 'hidden', textAlign: 'center', width: '100%', fontSize: '0.75rem', backgroundColor: '#f2efe1', fontWeight: 'bold'}}>{item.name}</div></Card.Header>) : (<></>);\r\n    const maxPopoverHeight = document.documentElement.style.getPropertyValue('--screen-modal-body-height-60');\r\n    return (\r\n        <Card key={item.id} className={outline} style={{width: '10.5rem', height: height, filter: filter }}>\r\n            <Card.Img variant='top' style={{cursor: \"pointer\", height: picHeight, padding: imPadding}} src={getPicture(item.imName)} onClick={cardClick} />\r\n                {head}\r\n            <Card.Body onClick={cardClick} style={{cursor: \"pointer\"}} className=\"ps-1 pe-1 p-0 mb-1\">\r\n                {boosts}\r\n            </Card.Body>\r\n            <Card.Footer className=\"p-1\">\r\n                <InfoPopover id={item.gameId} title={item.name} sign='?' className=\"d-flex justify-content-end\" popoverBodyStyle={{maxHeight: maxPopoverHeight, overflow: 'auto'}} headerBuilder={getPopoverInfoHeader} bodyBuilder={getPopoverInfoBody} placement='top' />\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default EffectItem;\r\n","import Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport EffectItem from '../boostStuff/EffectItem';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { memo } from 'react';\r\n\r\n\r\nfunction couple(key, categoryName, foodPref, setFoodPref, player, first, second, items, setItems, colorName, colorValue, cardHeight, picHeight, imPadding, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched) {\r\n    if (first === null && second === null) {\r\n        return(<></>);\r\n    } else if (second === null) {\r\n        return (\r\n            <Col key={key} className='p-0 ms-1 me-1 m-0 d-flex justify-content-center'>\r\n                <Stack className='pb-2 m-auto' direction=\"horizontal\" gap={2}>\r\n                    <EffectItem key={first.id} categoryName={categoryName} foodPref={foodPref} setFoodPref={setFoodPref} player={player} item={first} height={cardHeight} picHeight={picHeight} imPadding={imPadding} items={items} setItems={setItems} colorName={colorName} colorValue={colorValue} getPicture={getPicture} useHeader={useHeader} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={maxRows} setConsumableTouched={setConsumableTouched} />\r\n                </Stack>\r\n            </Col>\r\n        );\r\n    }\r\n    return (\r\n        <Col key={key} className='p-0 ms-1 me-1 m-0 d-flex justify-content-center'>\r\n            <Stack className='pb-2 m-auto' direction=\"horizontal\" gap={2}>\r\n                <EffectItem key={first.id} categoryName={categoryName} foodPref={foodPref} setFoodPref={setFoodPref} player={player} item={first} height={cardHeight} picHeight={picHeight} imPadding={imPadding} items={items} setItems={setItems} colorName={colorName} colorValue={colorValue} getPicture={getPicture} useHeader={useHeader} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={maxRows} setConsumableTouched={setConsumableTouched} />\r\n                <EffectItem key={second.id} categoryName={categoryName} foodPref={foodPref} setFoodPref={setFoodPref} player={player} item={second} height={cardHeight} picHeight={picHeight} imPadding={imPadding} items={items} setItems={setItems} colorName={colorName} colorValue={colorValue} getPicture={getPicture} useHeader={useHeader} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={maxRows} setConsumableTouched={setConsumableTouched} />\r\n            </Stack>\r\n        </Col>\r\n    );\r\n}\r\n\r\nconst EffectItems = memo(function EffectItems({categoryName, foodPref, setFoodPref, player, items, setItems, colorName, colorValue, cardHeight, picHeight, imPadding, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched}) {\r\n    console.log(\"EffectItems \" + categoryName);\r\n    const size = items.length;\r\n    let k = 0;\r\n    let rItems = [];\r\n    let key = 0;\r\n    while (size > 0 && true) {\r\n        const item1 = items[k++];\r\n        let item2 = null;\r\n        if (k < size) {\r\n            item2 = items[k++];\r\n        }\r\n        rItems.push(couple(key++, categoryName, foodPref, setFoodPref, player, item1, item2, items, setItems, colorName, colorValue, cardHeight, picHeight, imPadding, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched));\r\n        if (k >= size) {\r\n            break;\r\n        }\r\n    }\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"pb-0 mb-0\">\r\n                {rItems}\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default EffectItems;","import Accordion from 'react-bootstrap/Accordion';\r\nimport EffectItems from \"./EffectItems\";\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nexport default function EffectView({foodPref, setFoodPref, player, showStat, setShowStat, eventKey, categoryName, items, setItems, colorName, colorValue, cardHeight, picHeight, imPadding, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched}) {\r\n    const openStat = (e) => {\r\n        setShowStat(!showStat);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey={eventKey}>\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">{categoryName}</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1 pb-1\">\r\n                    <EffectItems categoryName={categoryName} foodPref={foodPref} setFoodPref={setFoodPref} player={player} items={items} setItems={setItems} colorName={colorName} colorValue={colorValue} cardHeight={cardHeight} picHeight={picHeight} imPadding={imPadding} getPicture={getPicture} useHeader={useHeader} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={maxRows} setConsumableTouched={setConsumableTouched}></EffectItems>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\n\r\n\r\nfunction buildPopover() {\r\n    return (\r\n        <Popover className=\"popover-adjustable\">\r\n            <Popover.Header as=\"h3\"><strong>Team</strong></Popover.Header>\r\n            <Popover.Body>\r\n                <p>When 'Strange in numbers' is activated the calculator considers that you have at least one teammate and your teammates have mutations you have.</p>\r\n                <p>Not all effects are presented in consumables section, usually only those whose values are important for damage. More comprehensive list of consumables with details can be seen under 'Main' section.</p>\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nfunction qa() {\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={buildPopover()}>\r\n            <Button variant=\"danger\">?</Button>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nfunction ANRow({player, setPlayer, boostDamage, setBoostDamage}) {\r\n    function changeTeam(e) {\r\n        player.team = !player.team;\r\n        boostDamage.toft.displayed_value = (player.team) ? boostDamage.toft.value : 0.0;\r\n        setPlayer({...player});\r\n        setBoostDamage({...boostDamage});\r\n    }\r\n    const value = (player.team && boostDamage.strange_in_numbers.is_used) ? 25.0: 0;\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Card className=\"mb-2 pt-2 pb-2 ps-3 pe-3\">\r\n                <Col>\r\n                    <InputGroup className=\"mb-1\">\r\n                        <InputGroup.Text style={{ width: '2.5rem' }} >\r\n                            <UCheckbox onChange={changeTeam} checked={player.team}></UCheckbox>\r\n                        </InputGroup.Text>\r\n                        <InputGroup.Text style={{ width: '6.9rem' }}>\r\n                            <strong>👨‍👩‍👧‍👦 Team</strong>\r\n                        </InputGroup.Text>\r\n                        {qa()}\r\n                        <InputGroup.Text style={{width: '4.6rem'}}>\r\n                            <div className=\"badge bg-info\" style={{width: '3rem'}}>{value}</div>\r\n                        </InputGroup.Text>\r\n                    </InputGroup>\r\n                </Col>\r\n                </Card>\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ANRow;","import Accordion from 'react-bootstrap/Accordion';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { Button } from 'react-bootstrap';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ANRow from \"./ANRow\";\r\nimport ADRow from \"../additional/ADRow\";\r\n\r\n/*\r\nconst marks100 = {\r\n    marks: {\r\n        5: '5',\r\n        20: '20',\r\n        40: '40',\r\n        60: '60',\r\n        80: '80',\r\n        100: '100'\r\n    },\r\n    min: 5,\r\n    max: 100,\r\n    step: 0.25,\r\n    defaultValue: 5,\r\n};\r\n*/\r\n\r\nconst marks50 = {\r\n    marks: {\r\n        5: '5',\r\n        10: '10',\r\n        20: '20',\r\n        30: '30',\r\n        40: '40',\r\n        50: '50'\r\n    },\r\n    min: 5,\r\n    max: 50,\r\n    step: 0.25,\r\n    defaultValue: 5,\r\n};\r\n\r\nconst marksH = {\r\n    marks: {\r\n        5: '5%',\r\n        20: {\r\n            style: {\r\n                color: '#f50',\r\n            },\r\n            label: <strong>20%</strong>,\r\n        },\r\n        40: '40%',\r\n        60: '60%',\r\n        80: '80%',\r\n        100: '100%'\r\n    },\r\n    min: 5,\r\n    max: 100,\r\n    step: 1,\r\n    defaultValue: 100,\r\n};\r\n\r\nconst General = function General({eventKey, categoryName, showStat, setShowStat, player, setPlayer, boostDamage, setBoostDamage, playerStats, setPlayerStats}) {\r\n    const openStat = (e) => {\r\n        setShowStat(!showStat);\r\n        e.stopPropagation();\r\n    }\r\n    function updateAdditionalDamages() {\r\n        setPlayerStats({\r\n            ...playerStats,\r\n        });\r\n    };\r\n\r\n    function changeHealth() {\r\n        boostDamage.nerd_rage.displayed_value = (boostDamage.nerd_rage.is_used && player.health.value <= 20.0) ? boostDamage.nerd_rage.value : 0.0;\r\n        setPlayer({...player});\r\n        setBoostDamage({...boostDamage});\r\n    };\r\n\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey={eventKey}>\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">{categoryName}</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1 pb-1\">\r\n                    <Container fluid className=\"ps-0 pe-0\">\r\n                        <Card className=\"text-center mb-2\">\r\n                            <Card.Body className=\"pb-2\">\r\n                                <ANRow player={player} setPlayer={setPlayer} boostDamage={boostDamage} setBoostDamage={setBoostDamage}></ANRow>\r\n                                <ADRow additionalDamage={player.health} updateAdditionalDamages={changeHealth} marks={marksH}></ADRow>\r\n                                <ADRow additionalDamage={playerStats.strength} updateAdditionalDamages={updateAdditionalDamages} marks={marks50}></ADRow>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Container>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default General;","import { memo } from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport EffectView from '../boostStuff/EffectView';\r\nimport General from '../boostStuff/General';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { getMagazine, getBobbleHead, getFood, getDrink, getPsycho, getSerum, getOther } from '../helpers/BoostStuffProvider';\r\n\r\n\r\nfunction buildLicense() {\r\n    return (\r\n        <Popover className=\"popover-adjustable\">\r\n            <Popover.Header as=\"h3\"><strong>Licensing</strong></Popover.Header>\r\n            <Popover.Body>\r\n                Image files from 'Magazines' / 'Bobble Heads' / 'Chemicals' / 'Food' / 'Drink' / 'Serums' / 'Others' sections were taken from the video game Fallout 76 or from websites created and owned by Bethesda Softworks, the copyright of which is held by Bethesda Softworks, or were released to the press for promotional purposes by the same.\r\n                The use of images to illustrate items of the game concerning the subject of the images in question is believed to qualify as fair use under United States copyright law, as such display does not significantly impede the right of the copyright holder to sell the copyrighted material and is not being used to generate profit.\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nconst BoostStuff = memo(function BoostStuff({foodPref, setFoodPref, magazines, setMagazines, bobbleHeads, setBobbleHeads, food, setFood, drink, setDrink, psycho, setPsycho, serum, setSerum, others, setOthers, player, setPlayer, stuffBoost, setStuffBoost, showStat, setShowStat, boostDamage, setBoostDamage, playerStats, setPlayerStats, setConsumableTouched}) {\r\n    return (\r\n        <Accordion className=\"accordion\">\r\n            <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={buildLicense()}>\r\n                <Badge className=\"mb-3 ms-4\" variant=\"black\" pill>!</Badge>\r\n            </OverlayTrigger>\r\n            <General eventKey=\"0\" categoryName={\"General\"} showStat={showStat} setShowStat={setShowStat} player={player} setPlayer={setPlayer} boostDamage={boostDamage} setBoostDamage={setBoostDamage} playerStats={playerStats} setPlayerStats={setPlayerStats}></General>\r\n            <EffectView eventKey=\"1\" player={player} showStat={showStat} setShowStat={setShowStat} categoryName={\"Magazines\"} items={magazines} setItems={setMagazines} colorName={\"orange\"} colorValue={\"orange\"} cardHeight={'17.2rem'} picHeight={'12rem'} getPicture={getMagazine} useHeader={false} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={2} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"2\" showStat={showStat} setShowStat={setShowStat} categoryName={\"Bobble Heads\"} items={bobbleHeads} setItems={setBobbleHeads} colorName={\"blue\"} colorValue={\"blue\"} cardHeight={'13.4rem'} picHeight={'8rem'} getPicture={getBobbleHead} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={1} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"3\" showStat={showStat} setShowStat={setShowStat} categoryName={\"Chemicals\"} items={psycho} setItems={setPsycho} colorName={\"magenta\"} colorValue={\"magenta\"} cardHeight={'16.9rem'} picHeight={'8.5rem'} getPicture={getPsycho} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={3} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"4\" foodPref={foodPref} player={player} showStat={showStat} setShowStat={setShowStat} categoryName={\"Food\"} items={food} setItems={setFood} colorName={\"volcano\"} colorValue={\"volcano\"} cardHeight={'14.3rem'} picHeight={'9rem'} getPicture={getFood} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={1} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"5\" player={player} showStat={showStat} setShowStat={setShowStat} categoryName={\"Drink\"} items={drink} setItems={setDrink} colorName={\"volcano\"} colorValue={\"volcano\"} cardHeight={'15.9rem'} picHeight={'9rem'} getPicture={getDrink} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={2} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"6\" foodPref={foodPref} setFoodPref={setFoodPref} player={player} showStat={showStat} setShowStat={setShowStat} categoryName={\"Serums\"} items={serum} setItems={setSerum} colorName={\"green\"} colorValue={\"green\"} cardHeight={'14.7rem'} picHeight={'8rem'} imPadding='1rem 2.5rem' getPicture={getSerum} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={2} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"7\" showStat={showStat} setShowStat={setShowStat} categoryName={\"Others\"} items={others} setItems={setOthers} colorName={\"default\"} colorValue={\"indigo\"} cardHeight={'13.3rem'} picHeight={'8rem'} getPicture={getOther} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={1} setConsumableTouched={setConsumableTouched} />\r\n        </Accordion>\r\n    );\r\n});\r\n\r\nexport default BoostStuff;","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport '../css/style.css'\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { WarningPopover } from '../helpers/WarningPopover';\r\nimport { calculateSpecial } from './BoostHelpers';\r\nimport getPerkImage from './PerkImageProvider';\r\nimport { getMark } from '../templates/calc/view/EmblemCalcRowView';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport StackEffectView from '../helpers/views/StackEffectView';\r\nimport { getPerkCard } from '../perkCard/PerkCardProvider';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\n\r\n\r\nfunction getPerkColor(category) {\r\n    return \"bg-\" + category.toLowerCase() + \"-card\";\r\n}\r\n\r\nfunction badgeIf(value, condition, onClick, style) {\r\n    if (condition) {\r\n        return (<Button className={\"p-1\" + style} onClick={onClick} style={{width: '2.5rem'}} variant=\"warning\">{value}</Button>)\r\n    }\r\n    return (<></>)\r\n}\r\n\r\nfunction checkCardConditions(card, player, setPlayer, extraDamage) {\r\n    if (card.name === \"Nerd Rage\") {\r\n        card.displayed_value = (card.is_used && player.health.value <= 20.0) ? card.value : 0.0;\r\n    } else if (card.name === \"TOFT\") {\r\n        card.displayed_value = (card.is_used && player.team) ? card.value : 0.0;\r\n    } else if (card.name === \"Follow Through\") {\r\n        card.displayed_value = (card.is_used && extraDamage.useSneak) ? card.value : 0.0;\r\n    } else {\r\n        card.displayed_value = (card.is_used) ? card.value : 0.0;\r\n    }\r\n    if (card.name === \"Party Girl / Boy\") {\r\n        if (card.displayed_value === 0) {\r\n            player.alcoholEffects = 1.0;\r\n        } else {\r\n            player.alcoholEffects = card.displayed_value;\r\n        }\r\n        setPlayer({...player});\r\n    } else if (card.name === \"Strange In Nums\") {\r\n        player.strange = card.displayed_value;\r\n        setPlayer({...player});\r\n    } else if (card.name === \"Class Freak\") {\r\n        player.freak = card.displayed_value;\r\n        setPlayer({...player});\r\n    }\r\n}\r\n\r\nfunction getItem(card, setBoostDamage, boostDamage, cardType, setCardType, xBadge=false, symbol='%', player=null, setPlayer=null, extraDamage=null) {\r\n    function onClick(e) {\r\n        changeRank();\r\n        calculateSpecial(boostDamage);\r\n        setBoostDamage({\r\n            ...boostDamage,\r\n        });\r\n    }\r\n\r\n    function changeRank() {\r\n        const rank_len = card.rank_values.length;\r\n        card.rank = card.rank % rank_len + 1;\r\n        card.value = card.rank_values[card.rank - 1] * card.x;\r\n        checkCardConditions(card, player, setPlayer, extraDamage);\r\n    }\r\n\r\n    function onClickX(e) {\r\n        card.x = card.x % card.max_x + 1;\r\n        card.value = card.rank_values[card.rank - 1] * card.x;\r\n        card.displayed_value = (card.is_used) ? card.value : 0.0;\r\n        setBoostDamage({\r\n            ...boostDamage,\r\n        });\r\n    }\r\n\r\n    function isUsed(e) {\r\n        card.is_used = e.target.checked;\r\n        checkCardConditions(card, player, setPlayer, extraDamage);\r\n        calculateSpecial(boostDamage);\r\n        setBoostDamage({\r\n            ...boostDamage,\r\n        });\r\n    }\r\n    function getInfo() {\r\n        // let info = card.info.replaceAll(\"{1}\", number).replace(\"{2}\", parseInt(number / 4)).replace(\"{3}\", parseInt(number * 2));\r\n        // info = info.replaceAll(\"{4}\", number * 3);\r\n        function onRadioClick(e) {\r\n            console.log(e);\r\n            setCardType(parseInt(e.target.value));\r\n        }\r\n        function getTypeRadio() {\r\n            if (card.id.length > 1) {\r\n                return (\r\n                    <div className=\"pt-0 pb-2 d-flex justify-content-center\">\r\n                        <BSRadio small='true' pairs={{Basic: 0, Expert: 1, Master: 2}} selectedValue={cardType} onClick={onRadioClick} />\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (<></>);\r\n            }\r\n        }\r\n        const index = (card.id.length > 1) ? cardType : 0;\r\n        return (\r\n            <>\r\n                {getTypeRadio()}\r\n                <StackEffectView item={getPerkCard(card.id[index])} />\r\n            </>\r\n        );\r\n    }\r\n    const outline = card.is_used ?  \" shadow-outline\" : \"\";\r\n    const w = (xBadge) ? '9rem' : '11.5rem';\r\n    const perkColor = getPerkColor(card.category);\r\n    const cName = \"btn text-start \" + perkColor;\r\n    const filter = card.is_used ? \"grayscale(0%)\" : \"grayscale(40%)\";\r\n    const imagePath = getPerkImage(card.im_name);\r\n    const header = <div className=\"d-flex center-text\">{getMark(card.im_name, imagePath, \"mt-0 mb-0 ms-0 me-3 shadow-outline-gold2\", '2rem', '1.8rem', '4px')}{card.name}</div>\r\n    const bgCardColor = getComputedStyle(document.documentElement).getPropertyValue(\"--\" + perkColor + \"-color\");\r\n    return (\r\n        <Col className=\"ps-1 pe-1\">\r\n            <InputGroup className=\"justify-content-center mb-1 mt-1 flex-nowrap\" style={{filter: filter}}>\r\n                <InputGroup.Text className={\"ps-2 pe-2\" + outline} >\r\n                    <UCheckbox onChange={isUsed} checked={card.is_used} checkBorderColor={bgCardColor} checkBgColor={bgCardColor}></UCheckbox>\r\n                </InputGroup.Text>\r\n                <Button className={cName + outline} style={{width: w}} onClick={onClick}>\r\n                    <Badge className=\"ms-0 me-2\" bg=\"warning\">{card.cost[card.rank - 1]}</Badge>\r\n                    {card.name}\r\n                </Button>\r\n                {badgeIf(\"x\" + card.x, xBadge, onClickX, outline)}\r\n                <InputGroup.Text className={\"justify-content-center p-0\" + outline} style={{width: '3.5rem'}}>\r\n                    <div className={\"badge \" + perkColor} style={{width: '2.7rem'}}>{card.displayed_value}{symbol}</div>\r\n                </InputGroup.Text>\r\n                <InputGroup.Text className={\"ps-1 pe-1 p-0\" + outline}>\r\n                    <WarningPopover element={infoButton()} message={getInfo()} header={header} className=\"popover-adjustable2\" />\r\n                </InputGroup.Text>\r\n            </InputGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction infoButton() {\r\n    return (\r\n        <Button className=\"p-1\" variant=\"white\">\r\n            <strong><small>❗</small></strong>\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction BRow1({setBoostDamage, boostDamage, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.incisor, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.lock_and_load, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.martial_artist, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.scattershot, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow2({setBoostDamage, boostDamage, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.gladiator, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.heavy_gunner, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.shotgunner, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.slugger, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow3({setBoostDamage, boostDamage, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.iron_fist, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.archer, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.commando, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.rifleman, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow4({setBoostDamage, boostDamage, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.glow_sight, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.bow_before_me, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.exterminator, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.tank_killer, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow5({setBoostDamage, boostDamage, player, setPlayer, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.ground_pounder, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.tenderizer, setBoostDamage, boostDamage, cardType, setCardType, true)}\r\n            {getItem(boostDamage.party_girl_boy, setBoostDamage, boostDamage, cardType, setCardType, false, \"x\", player, setPlayer)}\r\n            {getItem(boostDamage.strange_in_numbers, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", player, setPlayer)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow6({setBoostDamage, boostDamage, player, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.stabilized, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.demolition_expert, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.science, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.nerd_rage, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", player)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow7({setBoostDamage, boostDamage, player, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.power_user, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.adrenaline, setBoostDamage, boostDamage, cardType, setCardType, true)}\r\n            {getItem(boostDamage.gun_fu, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.covert_operative, setBoostDamage, boostDamage, cardType, setCardType, false, 'x')}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction BRow8({setBoostDamage, boostDamage, player, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.mister_sandman, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.ninja, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.guerrilla, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.gunslinger, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction BRow9({setBoostDamage, boostDamage, player, setPlayer, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.bloody_mess, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.better_criticals, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.class_freak, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", player, setPlayer)}\r\n            {getItem(boostDamage.toft, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", player, setPlayer)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction BRow10({setBoostDamage, boostDamage, cardType, setCardType, extraDamage}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.follow_through, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", null, null, extraDamage)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport {BRow1, BRow2, BRow3, BRow4, BRow5, BRow6, BRow7, BRow8, BRow9, BRow10};","import Container from 'react-bootstrap/Container';\r\nimport {BRow1, BRow2, BRow3, BRow4, BRow5, BRow6, BRow7, BRow8, BRow9, BRow10} from \"./BRows\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport { memo } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport { getRowWithImage } from '../helpers/WTypeDropdown';\r\nimport PerkCardBuilder from './PerkCardBuilder';\r\nimport { useState } from 'react';\r\n\r\nconst popover = (\r\n    <Popover className=\"popover-adjustable\">\r\n        <Popover.Header as=\"h3\">Perks</Popover.Header>\r\n        <Popover.Body>\r\n            'Incisor' is applied to 'All / Melee / Unarmed' weapon's type.\r\n            'Stabilized' is applied to 'All / Heavy' weapon's type.\r\n            'Tank Killer' is applied to 'All / Pistol / Rifle' weapon's type.\r\n            'TOFT' can reduce ballistic resistance of a creature when it hits back so you have to handle this manually\r\n            under the 'Creature' section if you want to see the exact damage number as in the game.\r\n        </Popover.Body>\r\n    </Popover>\r\n);\r\n\r\nfunction getStatBadge(name, value) {\r\n    const cParams = 'ms-1 me-1 mt-0 mb-0 pt-1 pb-1 bg-' + name + \"-card shadow-outline\";\r\n    const letter = name.charAt(0).toUpperCase();\r\n    const color = (value > 15) ? \"red\" : \"black\";\r\n    return (\r\n        <Badge className={cParams} style={{width: '2.5rem'}}><div style={{fontSize: '1rem' , fontWeight: 'bold'}}>{letter}</div>\r\n            <Badge className=\"mt-1 p-auto\" bg=\"white\" text=\"black\"><div style={{fontSize: '0.75rem' , fontWeight: 'bold', color: color}}>{value}</div></Badge>\r\n        </Badge>\r\n    );\r\n}\r\n\r\nfunction getDropdown(setBoostDamage, player, setPlayer) {\r\n    function onSelect(e) {\r\n        PerkCardBuilder.build(e, setBoostDamage, player, setPlayer);\r\n    }\r\n    return (\r\n        <DropdownButton className=\"d-flex justify-content-center mb-3\" onSelect={onSelect} title={<small><b>Choose a build</b></small>} variant=\"warning\">\r\n        <Dropdown.Item eventKey=\"Reset\">{getRowWithImage(\"Reset\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Heavy\">{getRowWithImage(\"Heavy\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Heavy Explosive\">{getRowWithImage(\"Heavy\", \"Heavy Explosive\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Heavy FullHouse\">{getRowWithImage(\"Heavy\", \"Heavy FullHouse\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Shotgun\">{getRowWithImage(\"Shotgun\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Automatic Rifle\">{getRowWithImage(\"Rifle\", \"Automatic Rifle\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Non-Automatic Rifle\">{getRowWithImage(\"Rifle\", \"Non-Automatic Rifle\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Automatic Pistol\">{getRowWithImage(\"Pistol\", \"Automatic Pistol\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Non-Automatic Pistol\">{getRowWithImage(\"Pistol\", \"Non-Automatic Pistol\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Bow\">{getRowWithImage(\"Bow\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Melee One-Handed\">{getRowWithImage(\"Melee\", \"Melee One-Handed\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Melee Two-Handed\">{getRowWithImage(\"Melee\", \"Melee Two-Handed\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Unarmed\">{getRowWithImage(\"Unarmed\")}</Dropdown.Item>\r\n        </DropdownButton>\r\n    );\r\n}\r\n\r\nconst BoostTable = memo(function BoostTable({player, setPlayer, setBoostDamage, boostDamage, extraDamage}) {\r\n    console.log(\"BoostTable\");\r\n    const [cardType, setCardType] = useState(0); // Basic Expert Master\r\n    return (\r\n        <Container className=\"ps-0 pe-0\">\r\n            {getDropdown(setBoostDamage, player, setPlayer)}\r\n            <Card className=\"mb-3\">\r\n                <Card.Header className='ps-3'>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        {getStatBadge(\"strength\", boostDamage.special.strength)}\r\n                        {getStatBadge(\"perception\", boostDamage.special.perception)}\r\n                        {getStatBadge(\"endurance\", boostDamage.special.endurance)}\r\n                        {getStatBadge(\"charisma\", boostDamage.special.charisma)}\r\n                        {getStatBadge(\"intelligence\", boostDamage.special.intelligence)}\r\n                        {getStatBadge(\"agility\", boostDamage.special.agility)}\r\n                        {getStatBadge(\"luck\", boostDamage.special.luck)}\r\n                    </div>\r\n                </Card.Header>\r\n\r\n                <Card.Body className=\"bg-lite p-1 m-0\">\r\n                    <Container className=\"p-0 m-0\">\r\n                        <BRow1 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow1>\r\n                        <BRow2 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow2>\r\n                        <BRow3 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow3>\r\n                        <BRow4 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow4>\r\n                        <BRow5 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow5>\r\n                        <BRow6 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow6>\r\n                        <BRow7 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow7>\r\n                        <BRow8 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow8>\r\n                        <BRow9 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow9>\r\n                        <BRow10 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType} extraDamage={extraDamage}></BRow10>\r\n                    </Container>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={popover}>\r\n                        <Badge className='ms-3 mt-0 mb-1 p-auto' bg=\"danger\" style={{cursor: 'pointer'}} pill>?</Badge>\r\n                    </OverlayTrigger>\r\n                </Card.Footer>\r\n            </Card>\r\n\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default BoostTable;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport BoostTable from \"../perkCardBoosts/BoostTable\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst DamageBoosts = memo(function DamageBoosts({player, setPlayer, boostDamage, extraDamage, setBoostDamage, showStatRef, setShowStat}) {\r\n    const openStat = (e) => {\r\n        setShowStat(!showStatRef.current);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"1\">\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">Card Boosts</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <BoostTable player={player} setPlayer={setPlayer} extraDamage={extraDamage} setBoostDamage={setBoostDamage} boostDamage={boostDamage}></BoostTable>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default DamageBoosts;\r\n","import Card from 'react-bootstrap/Card';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { Progress } from 'antd';\r\nimport ResistanceChart from './ResistanceChart';\r\n\r\n\r\nexport default function GraphInfoView(props) {\r\n    return (\r\n        <Card className={props.className}>\r\n            <Card.Header>\r\n                <span className=\"d-flex m-0 p-0 w-100\">\r\n                    <div className=\"m-auto p-0 w-100 d-flex justify-content-start\">\r\n                        <Badge className=\"bg-orange-outline\" bg=\"warning\" text=\"dark\">\r\n                            <strong>DPS: {props.graphValues.yValues[0].toFixed(1)}</strong>\r\n                        </Badge>\r\n                    </div>\r\n                    <div className=\"m-0 p-0 w-100\">\r\n                        <Progress\r\n                            type=\"dashboard\"\r\n                            steps={50}\r\n                            percent={props.percent}\r\n                            format={(percent) => percent}\r\n                            size={28}\r\n                            strokeColor={props.colors}\r\n                            trailColor=\"rgba(0, 0, 0, 0.06)\"\r\n                            strokeWidth={20} />\r\n                    </div>\r\n                    <div className=\"m-auto p-0 w-100 d-flex justify-content-end\">\r\n                        <Badge bg=\"warning\" className=\"bg-orange-outline\" text=\"dark\">\r\n                            <strong>DPS: {props.graphValues.yValues[props.graphValues.yValues.length - 1].toFixed(1)}</strong>\r\n                        </Badge>\r\n                    </div>\r\n                </span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center p-1 pt-0\">\r\n                <ResistanceChart graphValues={props.graphValues} chartId={\"mainResChart\"} creatures={props.creatures} creatureNumber={props.creatureChartNumber} setCreatureNumber={props.setCreatureChartNumber} />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","import { Progress } from 'antd';\r\nimport { getHotPercentage } from '../helpers/Item';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nexport default function HotMeter({creatures, steps, colors}) {\r\n    const [index, setIndex] = useState(0);\r\n    let copyColors = [...colors];\r\n    let shiftIndex = index + 20;\r\n    shiftIndex = (shiftIndex > 49) ? 49 : shiftIndex;\r\n    copyColors[index] = copyColors[shiftIndex];\r\n    const percent = getHotPercentage(creatures);\r\n    const limit = percent / 2;\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            let newIndex = index + 1;\r\n            if (newIndex > limit) {\r\n                newIndex = 0;\r\n            }\r\n            setIndex(newIndex);\r\n        }, 200);\r\n    }); // Depends on index automatically\r\n    return (\r\n        <div className='input-group d-flex justify-content-center p-0'>\r\n            <InputGroup.Text>\r\n                &#128293;\r\n            </InputGroup.Text>\r\n            <InputGroup.Text>\r\n                <Progress showInfo={false} percent={percent} steps={steps} type=\"line\" size=\"small\" strokeColor={copyColors} />\r\n            </InputGroup.Text>\r\n        </div>\r\n    );\r\n}","import { memo } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport HotMeter from './HotMeter';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport { getColorsForHotMeter } from '../helpers/Colors';\r\nimport { getHotPercentage } from '../helpers/Item';\r\nimport DamageDetails from '../damage/DamageDetails';\r\nimport { getImageElement } from '../helpers/WeaponImages';\r\nimport CreaturesCardView from '../creature/CreaturesCardView';\r\nimport GraphInfoView from './GraphInfoView';\r\nimport SummaryView from './SummaryView';\r\nimport Container from 'react-bootstrap/Container';\r\nimport StaticPopoverRenderer from '../viewComponents/popover/StaticPopoverRenderer';\r\n\r\n\r\nconst colors = getColorsForHotMeter();\r\n\r\nconst imagePopover = new StaticPopoverRenderer(<></>, <></>, \"mainWeaponImage\", \"right\");\r\n\r\nconst MainCardsDisplay = memo(function MainCardsDisplay(props) {\r\n    console.log(\"MainCardsDisplay\");\r\n    const wSpec = props.wSpecRef.current;\r\n    if (!wSpec) {\r\n        return (<></>);\r\n    }\r\n    let weaponIcon = wSpec.iconName;\r\n    if (!weaponIcon) {\r\n        weaponIcon = \"default\";\r\n    }\r\n    const mWidth = \"19rem\";\r\n    const percentC = getHotPercentage(props.creatures);\r\n    const weaponTitleName = truncateLongWords(wSpec.weaponName, 25);\r\n    function onImageClick(e) {\r\n        imagePopover.renderToggleNewContent(e.target, <b>{wSpec.defaultName}</b>, <div className=\"d-flex justify-content-center\">{getImageElement(weaponIcon, \"12rem\")}</div>);\r\n    }\r\n    return (\r\n        <Card style={{minWidth: mWidth}} className=\"d-flex justify-content-center text-center mb-0 ms-1 me-1\">\r\n            <div id=\"mainWeaponImage\"></div>\r\n            <Card.Header className='p-0 m-0'>\r\n                <Row className='p-0 m-0'>\r\n                    <Col className=\"col-2 d-flex justify-content-start p-0 m-0 ps-2\">\r\n                        <div style={{cursor: 'pointer'}} onClick={onImageClick}>\r\n                            {getImageElement(weaponIcon, \"4rem\", \"main-weapon-image\")}\r\n                        </div>\r\n                    </Col>\r\n                    <Col className=\"col-8 d-flex justify-content-center\">\r\n                       <div className=\"m-auto p-0 weapon-label-text\"> {weaponTitleName} </div>\r\n                    </Col>\r\n                    <Col className=\"col-2 d-flex justify-content-end p-0 m-0 pe-2\">\r\n                    </Col>\r\n                </Row>\r\n            </Card.Header>\r\n            <Card.Body className=\"pt-2 bg-lite ps-1 pe-1 pb-1\">\r\n                <Container className=\"p-1 pb-0 mb-0\">\r\n                    <Row>\r\n                        <div className=\"col d-flex justify-content-center mb-2\">\r\n                            <SummaryView className=\"main-display-adjustable\" resultDamage={props.resultDamage} extraDamage={props.extraDamage} boostDamageRef={props.boostDamageRef} setBoostDamage={props.setBoostDamage} setExtraDamage={props.setExtraDamage} />\r\n                        </div>\r\n                        <div className=\"col d-flex justify-content-center mb-2\">\r\n                            <GraphInfoView className=\"main-display-adjustable\" graphValues={props.graphValues} percent={percentC} creatures={props.creatures} creatureChartNumber={props.creatureChartNumber} setCreatureChartNumber={props.setCreatureChartNumber} colors={colors} />\r\n                        </div>\r\n                        <div className=\"col d-flex justify-content-center mb-2\">\r\n                            <CreaturesCardView className=\"main-display-adjustable\" creatureNamesRef={props.creatureNamesRef} creatures={props.creatures} setCreatures={props.setCreatures} resultDamage={props.resultDamage} weaponName={wSpec.weaponName} />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted p-1\">\r\n                <Accordion className=\"accordion p-0 m-0\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header className=\"m-0 p-0\">\r\n                            <HotMeter creatures={props.creatures} steps={50} colors={colors} />\r\n                        </Accordion.Header>\r\n                        <Accordion.Body style={{backgroundColor: \"#fafcff\"}} >\r\n                            <DamageDetails resultDamage={props.resultDamage}></DamageDetails>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default MainCardsDisplay;\r\n","import { useEffect } from 'react';\r\nimport BaseDropdown from '../viewComponents/dropdown/BaseDropdown';\r\nimport Badge from 'react-bootstrap/Badge';\r\nconst { Chart } = await import('chart.js/auto');\r\n\r\n\r\nfunction getConfig(graphValues) {\r\n    return {\r\n        type: \"line\",\r\n        data: {\r\n            labels: graphValues.xValues,\r\n            datasets: [{\r\n                data: graphValues.yValues,\r\n                borderColor: \"red\",\r\n                borderWidth: \"2\",\r\n                pointRadius: \"1\",\r\n                fill: true\r\n            }]\r\n        },\r\n        options: {\r\n            plugins: {\r\n                legend: {\r\n                    display: false\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Resistance',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                },\r\n                y: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Damage / sec',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                }\r\n            },\r\n            animation: false,\r\n        }\r\n    };\r\n}\r\n\r\nfunction drawChart(graphValues, chartId) {\r\n    const curChart = Chart.getChart(chartId);\r\n    if (curChart) {\r\n        curChart.destroy();\r\n    }\r\n    new Chart(document.getElementById(chartId), getConfig(graphValues));\r\n}\r\n\r\nfunction getDPS(need, yValues) {\r\n    if (need) {\r\n        return (\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <div className=\"m-auto p-0 ps-2 pt-2 w-100 d-flex justify-content-start\">\r\n                    <Badge className=\"bg-orange-outline\" bg=\"warning\" text=\"dark\">\r\n                        <strong>DPS: {yValues[0].toFixed(1)}</strong>\r\n                    </Badge>\r\n                </div>\r\n                <div className=\"m-auto p-0 pt-2 pe-2 w-100 d-flex justify-content-end\">\r\n                    <Badge bg=\"warning\" className=\"bg-orange-outline\" text=\"dark\">\r\n                        <strong>DPS: {yValues[yValues.length - 1].toFixed(1)}</strong>\r\n                    </Badge>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\nexport default function ResistanceChart(props) {\r\n    useEffect(() => {\r\n        drawChart(props.graphValues, props.chartId);\r\n    });\r\n    const dict = {};\r\n    let number = 1;\r\n    for (const creatureField in props.creatures) {\r\n        const creature = props.creatures[creatureField];\r\n        dict[number++] = creature.capName;\r\n    }\r\n    const creature = props.creatures[\"creature\" + props.creatureNumber];\r\n    return (\r\n        <>\r\n            {getDPS(props.dps, props.graphValues.yValues)}\r\n            <div className=\"d-flex justify-content-center p-0 pt-2\">\r\n                <BaseDropdown variant='blue-label' size='sm' setValue={props.setCreatureNumber} dict={dict} title={<strong>{creature.capName}</strong>} />\r\n            </div>\r\n            <div className=\"ps-1 pe-1\">\r\n                <canvas id={props.chartId}></canvas>\r\n            </div>\r\n        </>\r\n    );\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { buildItem } from '../helpers/Item';\r\nimport { memo, useState } from 'react';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport { getLegendaryNameFromSpec } from '../helpers/LegendaryProvider';\r\n\r\n\r\nfunction getLegendaryPrefix(wSpec) {\r\n    let legendaryPrefix = \"\";\r\n    for (let i = 0; i < wSpec.legendary.length; i++) {\r\n        const curLegPrefix = getLegendaryNameFromSpec(wSpec, i + 1);\r\n        if (curLegPrefix !== \"\") {\r\n            legendaryPrefix += (curLegPrefix + \" \");\r\n        }\r\n    }\r\n    return legendaryPrefix;\r\n}\r\n\r\nconst ModalNewItem = memo(function ModalNewItem(props) {\r\n    console.log(\"ModalNewItem\");\r\n    const [legPrefixCheck, setLegPrefixCheck] = useState(false);\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n    let legendaryPrefix = \"\";\r\n    if (legPrefixCheck) {\r\n        legendaryPrefix = getLegendaryPrefix(props.wSpec);\r\n    }\r\n    const limit = props.items.map.size > 1000;\r\n    function createItem(e, name) {\r\n        if (name === '' || name === null) {\r\n            name = \"Weapon\";\r\n        }\r\n        const item = buildItem(props.id, name, props.player, props.playerStats, props.creatures, props.boostDamage, props.wSpec, props.extraDamage, props.additionalDamages, props.resultDamage, props.stuffBoost)\r\n        props.items.map.set(props.id, item);\r\n        const nextId = props.id + 1;\r\n        const newItems = {\r\n            map: props.items.map,\r\n        }\r\n        props.setItems(newItems);\r\n        props.setNextId(nextId);\r\n        props.setModalNewItemShow(false);\r\n    };\r\n    function onClick(e) {\r\n        createItem(e, document.getElementById(\"wName\").value);\r\n    };\r\n    function onHide(e) {\r\n        props.setModalNewItemShow(false);\r\n    };\r\n    function onPrefixChange(e) {\r\n        const useLegPrefix = e.target.checked\r\n        setLegPrefixCheck(useLegPrefix);\r\n        const element = document.getElementById(\"wName\");\r\n        let legendaryPrefix = getLegendaryPrefix(props.wSpec);\r\n        if (useLegPrefix) {\r\n            let name = legendaryPrefix + element.value;\r\n            name = name.slice(0, element.maxLength);\r\n            element.value = name;\r\n        } else if (legendaryPrefix !== \"\" && element.value.startsWith(legendaryPrefix)) {\r\n            let name = element.value.slice(legendaryPrefix.length);\r\n            element.value = name;\r\n        }\r\n    };\r\n    const message = (limit) ? \"Limit has been achieved\" : \"Weapon name\";\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    New Weapon\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap justify-content-center\">\r\n                    <InputGroup.Text style={{ minWidth: '9rem' }}>{message}</InputGroup.Text>\r\n                    {getInputText(limit, legendaryPrefix + props.wSpec.defaultName)}\r\n                </InputGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <div style={{width: '100%'}} className=\"d-flex\">\r\n                    <div style={{width: '50%'}} className=\"center-text\">\r\n                        <UCheckbox onChange={onPrefixChange} checked={legPrefixCheck}>Legendary Prefix</UCheckbox>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end\" style={{width: '50%'}}>\r\n                        <Button disabled={limit} onClick={onClick}>Add</Button>\r\n                    </div>\r\n                </div>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nfunction getInputText(limit, weaponName) {\r\n    if (limit) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <Form.Control id='wName' className='w-auto' defaultValue={weaponName} maxLength=\"70\" />\r\n    );\r\n}\r\n\r\nexport default ModalNewItem;","export function getTextFileRef(content) {\r\n    return URL.createObjectURL(new Blob([content], {type: 'text/plain'}));\r\n}\r\n\r\nexport function getFileRef(content) {\r\n    return URL.createObjectURL(new Blob([content], {type: 'application/json'}));\r\n}\r\n\r\nexport function getJsonFileRef(content) {\r\n    return getFileRef(JSON.stringify([...content]));\r\n}\r\n","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {getJsonFileRef} from '../helpers/Files';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalDownloadSnapshots = memo (function ModalDownloadSnapshots(props) {\r\n    console.log(\"ModalDownloadSnapshots\");\r\n    if (!props.modalDownloadSnapshots) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalDownloadSnapshots(false);\r\n    }\r\n    function downloadName() {\r\n        let name = \"snapshots\";\r\n        try {\r\n            name = document.getElementById(\"dName\").value;\r\n        } catch {\r\n            return name;\r\n        }\r\n        return (name === null || name === \"\") ? \"snapshots\" : name;\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.modalDownloadSnapshots}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Download Snapshots\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <InputGroup.Text style={{ width: '9rem' }}>File name</InputGroup.Text>\r\n                    <Form.Control id='dName' className='w-auto' defaultValue={\"snapshots\"} maxLength=\"70\" />\r\n                </InputGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <a href={getJsonFileRef(props.items.map.values())} download={downloadName()}>\r\n                <Button onClick={onHide}>Download</Button>\r\n            </a>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDownloadSnapshots;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {getJsonFileRef} from '../helpers/Files';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalDownloadSnapshot = memo (function ModalDownloadSnapshot(props) {\r\n    if (props.modalDownloadSnapshot.id < 0 || !props.modalDownloadSnapshot.show) {\r\n        return (<></>);\r\n    }\r\n    console.log(\"ModalDownloadSnapshot\");\r\n    function onHide(e) {\r\n        props.setModalDownloadSnapshot({id: -1, name: 'none', show: false});\r\n    }\r\n    function downloadName() {\r\n        const name = props.modalDownloadSnapshot.name;\r\n        return (name === null || name === \"\") ? \"snapshot.json\" : name + \".json\";\r\n    }\r\n    const item = [props.items.map.get(props.modalDownloadSnapshot.id)];\r\n    const fileName = props.modalDownloadSnapshot.name;\r\n    return (\r\n        <Modal\r\n            show = {props.modalDownloadSnapshot.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Download Weapon\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <InputGroup.Text style={{ width: '9rem' }}>File name</InputGroup.Text>\r\n                    <Form.Control id='snapshotName' className='w-auto' defaultValue={fileName} maxLength=\"70\" />\r\n                </InputGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <a href={getJsonFileRef(item)} download={downloadName()}>\r\n                <Button onClick={onHide}>Download</Button>\r\n            </a>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDownloadSnapshot;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { memo } from 'react';\r\nimport { truncateLongWords } from '../helpers/Input';\r\n\r\n\r\nconst ModalDeleteItem = memo(function ModalDeleteItem(props) {\r\n    console.log(\"ModalDeleteItem\");\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalDeleteItem({id: -1, name: 'none', show:  false});\r\n    }\r\n    function removeItem(e) {\r\n        try {\r\n            props.items.map.delete(parseInt(e.target.id));\r\n            const newItems = {\r\n                map: props.items.map,\r\n            }\r\n            props.setItems(newItems);\r\n        } catch {}\r\n        props.setModalDeleteItem({id: \"-1\", name: \"none\", show: false});\r\n    }\r\n    const name = truncateLongWords(props.name, 25);\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Delete Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to delete '{name}'?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={removeItem} id={props.itemId}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDeleteItem;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalDeleteAll = memo(function ModalDeleteAll(props) {\r\n    console.log(\"ModalDeleteAll\");\r\n    if (!props.modalDeleteAll) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalDeleteAll(false);\r\n    }\r\n\r\n    function removeAll(e) {\r\n        try {\r\n            props.items.map.clear();\r\n            const newItems = {\r\n                map: props.items.map,\r\n            }\r\n            props.setItems(newItems);\r\n            props.setNextId(0);\r\n        } catch {}\r\n        onHide();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show = {props.modalDeleteAll}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Delete All Snapshots\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to delete all snapshots?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={removeAll}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDeleteAll;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction modalView(loading, name, applyItem, onHide, itemId) {\r\n    if (loading) {\r\n        return (\r\n            <Modal.Body>\r\n                <b>Loading...</b>\r\n            </Modal.Body>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Apply Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to apply '{name}'? Current settings will be replaced.\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={applyItem} id={itemId}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function ModalApplyItem(props) {\r\n    console.log(\"ModalApplyItem\");\r\n    const [loading, setLoading] = useState(false);\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        setLoading(false);\r\n        props.setModalApplyItem({id: -1, name: 'none', show: false});\r\n    }\r\n    function applyItem(e) {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const item = props.items.map.get(parseInt(e.target.id));\r\n            const copy = JSON.parse(JSON.stringify(item));\r\n            props.applySnapshot(copy.boostDamage, copy.wSpec, copy.extraDamage, copy.additionalDamages, copy.creatures, copy.player, copy.playerStats, copy.stuff);\r\n            onHide(null);\r\n        }, 100);\r\n    }\r\n\r\n    const name = truncateLongWords(props.name, 25);\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            centered>\r\n           {modalView(loading, name, applyItem, onHide, props.itemId)}\r\n        </Modal>\r\n    );\r\n}","export function readSnapshotsFromInput(inputId, setIdCallback, setItemsCallback, oldItems=null, add=true, maxItems=1000) {\r\n\r\n    const file = document.getElementById(inputId).files[0];\r\n    readSnapshotsFrom(file, setIdCallback, setItemsCallback, oldItems, add, maxItems);\r\n};\r\n\r\nexport function readSnapshotsFromResources(file, setIdCallback, setItemsCallback, maxItems=1000) {\r\n    readSnapshotsJson(file, setIdCallback, setItemsCallback, null, true, maxItems=1000);\r\n};\r\n\r\nfunction readSnapshotsJson(items, setIdCallback, setItemsCallback, oldItems, add=true, maxItems=1000) {\r\n    let map = new Map();\r\n    let k = 0;\r\n    if (oldItems && add) {\r\n        for (const [, value] of oldItems.entries()) {\r\n            value.id = k;\r\n            map.set(k++, value);\r\n        }\r\n    }\r\n    let newMaxItems = maxItems - map.size;\r\n    newMaxItems = (newMaxItems < 0) ? 0 : newMaxItems;\r\n    const length = items.length > newMaxItems ? newMaxItems : items.length;\r\n    for (let i = 0; i < length; i++) {\r\n        items[i].id = i + k;\r\n        map.set(i + k, items[i]);\r\n    }\r\n    const newItems = {\r\n        map: map,\r\n    }\r\n    setIdCallback(map.size);\r\n    setItemsCallback(newItems);\r\n}\r\n\r\nfunction readSnapshotsFrom(file, setIdCallback, setItemsCallback, oldItems, add, maxItems=1000) {\r\n    try {\r\n        const reader = new FileReader();\r\n        reader.onload = e => {\r\n            let items = JSON.parse(e.target.result);\r\n            readSnapshotsJson(items, setIdCallback, setItemsCallback, oldItems, add, maxItems);\r\n        };\r\n        reader.readAsText(file);\r\n    } catch {\r\n        // Ok\r\n    }\r\n};","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { readSnapshotsFromInput } from '../helpers/FetchSnapshots';\r\nimport { memo, useState } from 'react';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\n\r\n\r\nconst radio = {Add: '0', Replace: '1'};\r\n\r\nconst ModalUploadSnapshots = memo(function ModalUploadSnapshots(props) {\r\n    console.log(\"ModalUploadSnapshots\")\r\n    const [addOld, setAddOld] = useState('0');\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide() {\r\n        props.setModalUploadSnapshots(false)\r\n    }\r\n    function readFile() {\r\n        const add = (addOld === '0');\r\n        readSnapshotsFromInput(\"snapshotsFile\", props.setNextId, props.setItems, props.items.map, add);\r\n        props.setModalUploadSnapshots(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Load Snapshots\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"formFile\" className=\"form-label\">\r\n                        <p className=\"mb-1\"> Choose a json file with snapshots.</p>\r\n                    </label>\r\n                    <input id=\"snapshotsFile\" className=\"form-control\" type=\"file\" readOnly accept=\".json\" />\r\n                    <BSRadio className=\"mt-4 d-flex justify-content-center\" pairs={radio} selectedValue={addOld} setSelectedValue={setAddOld} />\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={readFile} id={props.itemId}>Yes</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalUploadSnapshots;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalRenameItem = memo(function ModalRenameItem(props) {\r\n    console.log(\"ModalRenameItem\");\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n\r\n    function setItem(item) {\r\n        props.items.map.set(item.id, item);\r\n        const newItems = {\r\n            map: props.items.map,\r\n        }\r\n        props.setItems(newItems);\r\n    }\r\n\r\n    function onRename() {\r\n        let name = \"Weapon\";\r\n        try {\r\n            name = document.getElementById(\"weaponNameInput\").value;\r\n            name = (name === null || name === '') ? \"Weapon\" : name;\r\n            let item = props.items.map.get(props.id);\r\n            item.name = name;\r\n            item.wSpec.weaponName = name;\r\n            setItem(item);\r\n            onHide();\r\n        } catch {\r\n            // Ok (sometimes can happen on mobile devices if virtual keyboard is covering a dialog but somehow you managed\r\n            // tap Ok button).\r\n        }\r\n    };\r\n\r\n    let name = \"Weapon\";\r\n    try {\r\n        name = props.items.map.get(props.id).name;\r\n    } catch {\r\n        // Ok\r\n    }\r\n    function onHide(e) {\r\n        props.setModalRenameItem({id: -1, show: false});\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Rename Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InputGroup className=\"pb-2 flex-nowrap\">\r\n                    <InputGroup.Text>New name:</InputGroup.Text>\r\n                    <Form.Control id=\"weaponNameInput\" defaultValue={name} maxLength=\"70\" />\r\n                </InputGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={onRename}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalRenameItem;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { buildItem } from '../helpers/Item';\r\nimport { memo } from 'react';\r\nimport { truncateLongWords } from '../helpers/Input';\r\n\r\n\r\nconst ModalUpdateItem = memo (function ModalUpdateItem(props) {\r\n    console.log(\"ModalUpdateItem\");\r\n    if (!props.modalUpdateItem.show) {\r\n        return (<></>);\r\n    }\r\n    function onUpdateItem() {\r\n        const oldItem = props.items.map.get(props.modalUpdateItem.id);\r\n        const item = buildItem(oldItem.id, oldItem.name, props.player, props.playerStats, props.creatures, props.boostDamage, props.wSpec, props.extraDamage, props.additionalDamages, props.resultDamage, props.stuffBoost);\r\n        setItem(item);\r\n        props.setModalUpdateItem({id: -1, show: false});\r\n    }\r\n\r\n    function setItem(item) {\r\n        props.items.map.set(item.id, item);\r\n        const newItems = {\r\n            map: props.items.map,\r\n        }\r\n        props.setItems(newItems);\r\n    }\r\n    const name = truncateLongWords(props.name, 25);\r\n    const onHide = () => props.setModalUpdateItem({id: -1, show: false});\r\n    return (\r\n        <Modal\r\n            show = {props.modalUpdateItem.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Update Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to update '{name}'?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={onUpdateItem}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalUpdateItem;","import {UploadIcon, DownloadIcon} from '../icons/Icons';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst SnapshotsHeader = memo(function SnapshotsHeader({items, setModalDownloadSnapshots, setModalUploadSnapshots, uniqueCreatureNames, sortCreatureName, setSortCreatureName}) {\r\n    console.log(\"SnapshotsHeader\");\r\n    function downloadButton() {\r\n        return (\r\n            <Button onClick={()=>setModalDownloadSnapshots(true)}>\r\n                <UploadIcon />\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    function uploadButton(className) {\r\n        return (\r\n            <Button className={className} onClick={()=>setModalUploadSnapshots(true)}>\r\n                <DownloadIcon />\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    if (items.map.size === 0) {\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <div className='d-flex justify-content-end'>\r\n                        {uploadButton(\"ms-3\")}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else if (items.map.size === 1) {\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <div className='d-flex justify-content-end'>\r\n                        {downloadButton()}\r\n                        {uploadButton(\"ms-3\")}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    function onSelect(e) {\r\n        setSortCreatureName({name: e});\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"row d-flex justify-content-center mt-1 mb-3\">\r\n                <Col className=\"col\">\r\n                    <span>\r\n                        {downloadButton()}\r\n                        {uploadButton(\"ms-3\")}\r\n                    </span>\r\n                </Col>\r\n            </div>\r\n            <div className=\"row d-flex justify-content-center mb-1\">\r\n                <Col className=\"col\">\r\n                    <div>\r\n                        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelect} names={uniqueCreatureNames} title={<strong>{sortCreatureName.name}</strong>} />\r\n                    </div>\r\n                </Col>\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default SnapshotsHeader;","import { memo } from 'react';\r\nimport EmblemCalcRowView from '../templates/calc/view/EmblemCalcRowView';\r\nimport getPerkImage from '../perkCardBoosts/PerkImageProvider';\r\nimport ConsumablesBuilder from '../boostStuff/ConsumablesBuilder';\r\n\r\n\r\nconst BoostRowView = memo(function BoostRowView(props) {\r\n    const imNames = getUsedPerks(props.item);\r\n    return (\r\n        <>\r\n            <EmblemCalcRowView imNames={imNames} imageProvider={getPerkImage} iconSize='2.0rem' imageSize='1.864rem' borderRadius='5px' />\r\n            <EmblemCalcRowView imNames={props.item.stuff} imageProvider={ConsumablesBuilder.getImagePathById} iconSize='2.0rem' imageSize='1.864rem' />\r\n        </>\r\n    );\r\n});\r\n\r\nfunction getUsedPerks(item) {\r\n    const result = [];\r\n    for (const name in item.boostDamage) {\r\n        const perk = item.boostDamage[name];\r\n        if (perk.is_used) {\r\n            result.push(perk.im_name);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default BoostRowView;","import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Tag } from 'antd';\r\nimport { millisToTime } from '../helpers/Time';\r\nimport { TrashIcon, UpdateIcon, PlayIcon, RenameIcon, UploadIcon } from '../icons/Icons';\r\nimport '../css/style.css';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { getImage } from '../helpers/WTypeDropdown';\r\nimport { ammo, addText } from '../helpers/Emoji';\r\nimport { getImageElement } from '../helpers/WeaponImages';\r\nimport { getLegendaryNameFromSpec } from '../helpers/LegendaryProvider';\r\nimport { memo, useState, useEffect } from 'react';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport BoostRowView from './BoostRowView';\r\nimport { getFireRateLabel } from '../main/SummaryView';\r\n\r\n\r\nfunction row(name1, value1, colorName=\"default\", tagColor=\"default\", tagName=true) {\r\n    const line = (tagName) ? <Tag bordered={false} color={colorName}>{name1}</Tag> : name1;\r\n    return (\r\n       <Row className=\"flex-nowrap\">\r\n          <Col className=\"text-start text-nowrap\">\r\n            <strong>\r\n                 {line}\r\n            </strong>\r\n          </Col>\r\n\r\n          <Col className=\"text-end text-nowrap pb-1\">\r\n              <strong >\r\n                <Tag color={tagColor}>{value1}</Tag>\r\n              </strong>\r\n          </Col>\r\n       </Row>\r\n    );\r\n}\r\n\r\nfunction bodyContent(isOpen, index, size, item, setModalDownloadSnapshot, setModalUpdateItem, setModalRenameItem, setModalDeleteItem, setModalApplyItem) {\r\n    if (isOpen) {\r\n        const critUsed = (item.extraDamage.useCrit) ? \"(Yes 1/\" + item.extraDamage.critFreq + \")\" : \"(No)\";\r\n        const sneakUsed = (item.extraDamage.useSneak) ? \"(Yes)\" : \"(No)\";\r\n        const headUsed = (item.extraDamage.useHead) ? \"(Yes \" + item.extraDamage.headFreq + \"%)\" : \"(No)\";\r\n        const leg1Name = getLegendaryNameFromSpec(item.wSpec, 1);\r\n        const leg2Name = getLegendaryNameFromSpec(item.wSpec, 2);\r\n        const leg3Name = getLegendaryNameFromSpec(item.wSpec, 3);\r\n        const leg4Name = getLegendaryNameFromSpec(item.wSpec, 4);\r\n        const leg5Name = getLegendaryNameFromSpec(item.wSpec, 5);\r\n        let strength = (item.wSpec.strengthBoost > 0) ? item.playerStats.strength.value : \"-\";\r\n        const mods = item.wSpec.mods;\r\n        const modView = [];\r\n        for (let i = 0; i < mods.length; i++) {\r\n            const mod = mods[i];\r\n            modView.push(\r\n                <div key={mod.name} style={{width: 'auto'}} className=\"mod-item-shadow m-1 ps-1 pe-1\"><div style={{width: 'auto', textWrap: false, fontWeight: 'bold', textAlign: 'center', color: '#555555', fontSize: '0.7rem', overflow: 'hidden', textOverflow: 'ellipsis'}}>{mod.name}</div></div>\r\n            );\r\n        }\r\n        const creature1 = item.creatures.creature1;\r\n        const creature2 = item.creatures.creature2;\r\n        const creature3 = item.creatures.creature3;\r\n        const creature4 = item.creatures.creature4;\r\n        const fireRateLabel = getFireRateLabel(item.resultDamage.weaponType);\r\n        return (\r\n            <>\r\n                <Card.Body className=\"p-1 mt-1\">\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-center mb-1\">\r\n                            <Toast style={{ width: '34rem'}} show={true} className=\"bg-snapshot\">\r\n                                <Toast.Body className=\"m-0 p-2\">\r\n                                <Row>\r\n                                    <Col>\r\n                                        {row(\"💥 Damage:\", item.resultDamage.tDamage.toFixed(1) + \" x \" + item.resultDamage.shotSize)}\r\n                                        {row(\"☠️ Crit:\", critUsed + \" +\" + item.resultDamage.displayedCrit.toFixed(1) + \"%\")}\r\n                                        {row(\"🐍 Sneak:\", sneakUsed + \" +\" + item.resultDamage.displayedSneak.toFixed(1) + \"%\")}\r\n                                        {row(\"💣 Explosive:\", item.resultDamage.explosive.toFixed(1) + \"%\")}\r\n                                        {row(\"🤕 Head Shot:\", headUsed)}\r\n                                        {row(addText(ammo, '0.7rem', '0.27rem', \"Ammo:\"), item.resultDamage.ammoCapacity)}\r\n                                        {row(fireRateLabel, item.resultDamage.fireRate.toFixed(1))}\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {row(\"⌛ Reload:\", item.resultDamage.reloadTime.toFixed(2) + \" s\")}\r\n                                        {row(\"🎯 Accuracy:\", \"100%\")}\r\n                                        {row(\"⭐\", leg1Name, \"gold\")}\r\n                                        {row(\"⭐⭐\", leg2Name, \"gold\")}\r\n                                        {row(\"⭐⭐⭐\", leg3Name, \"gold\")}\r\n                                        {row(\"⭐⭐⭐⭐\", leg4Name, \"gold\")}\r\n                                        {row(\"⭐⭐⭐⭐⭐\", leg5Name, \"gold\")}\r\n                                    </Col>\r\n                                </Row>\r\n                                </Toast.Body>\r\n                            </Toast>\r\n                        </Col>\r\n                        <Col className=\"d-flex justify-content-center mb-1\">\r\n                            <Toast className=\"bg-snapshot\" style={{ width: '34rem' }} show={true}>\r\n                                <Toast.Body className=\"m-0 p-2\">\r\n                                <Row>\r\n                                    <Col>\r\n                                        {row(\"❤️ Health / 👨‍👩‍👧‍👦 Team:\", item.player.health.value.toFixed(0) + \"% / \" + ((item.player.team) ? \"Yes\" : \"No\"))}\r\n                                        {row(\"💪 Strength:\", strength, \"default\", \"default\")}\r\n                                        {row(creature1.capName + \" (\" + creature1.level + \"Lvl):\", millisToTime(creature1.lifeTime), \"red\", \"red\")}\r\n                                        {row(creature2.capName + \" (\" + creature2.level + \"Lvl):\", millisToTime(creature2.lifeTime), \"purple\", \"purple\")}\r\n                                        {row(creature3.capName + \" (\" + creature3.level + \"Lvl):\", millisToTime(creature3.lifeTime), \"pink\", \"pink\")}\r\n                                        {row(creature4.capName + \" (\" + creature4.level + \"Lvl):\", millisToTime(creature4.lifeTime), \"blue\", \"blue\")}\r\n                                        {row(\"Average:\", millisToTime(item.averageTime), \"default\", \"default\")}\r\n                                    </Col>\r\n                                </Row>\r\n                                </Toast.Body>\r\n                            </Toast>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row className=\"d-flex justify-content-center m-1\">\r\n                        {modView}\r\n                     </Row>\r\n                     <BoostRowView item={item} />\r\n                </Card.Body>\r\n                <div className='card-footer'>\r\n                    <Row>\r\n                        <div className=\"col d-flex justify-content-start\">\r\n                            <Badge className=\"mt-auto mb-auto\" pill='true' text='white' bg=\"secondary\">{index} / {size}</Badge>\r\n                            <Button variant=\"white\" className=\"m-auto ms-2 p-auto\" size='sm'>{getImage(item.wSpec.type)}</Button>\r\n                        </div>\r\n                        <div className=\"col d-flex justify-content-end\">\r\n                            <Button onClick={(e) => setModalDownloadSnapshot({id: item.id, name: item.name, show: true})} variant=\"outline-primary\" className=\"ms-1 me-2 pb-auto\" size=\"sm\">\r\n                                <UploadIcon />\r\n                            </Button>\r\n                            <Button onClick={(e) => setModalUpdateItem({id: item.id, name: item.name, show: true})} variant=\"outline-primary\" className=\"ms-1 me-2 pb-auto\" size=\"sm\">\r\n                                <UpdateIcon />\r\n                            </Button>\r\n                            <Button className=\"ms-1 me-2 pb-auto\" size=\"sm\" id={item.id} name={item.name} variant=\"outline-primary\" onClick={(e) => setModalApplyItem({id: e.currentTarget.id, name: e.currentTarget.name, show: true})}>\r\n                                <PlayIcon />\r\n                            </Button>\r\n                            <Button className=\"ms-1 pb-auto\" size=\"sm\" id={item.id} name={item.name} variant=\"outline-danger\" onClick={(e) => setModalDeleteItem({id: e.currentTarget.id, name: e.currentTarget.name, show: true})}>\r\n                                <TrashIcon />\r\n                            </Button>\r\n                        </div>\r\n                    </Row>\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nfunction headerBody(item, setModalRenameItem, isItemOpen, setIsItemOpen) {\r\n    let wName = item.wSpec.iconName;\r\n    if (!wName) {\r\n        wName = \"default\";\r\n    }\r\n    function onHeaderClick(e) {\r\n        setIsItemOpen(!isItemOpen);\r\n    }\r\n    function onRenameClick(e) {\r\n        setModalRenameItem({id: item.id, show: true});\r\n        e.stopPropagation();\r\n    }\r\n    const displayedWeaponName = truncateLongWords(item.name, 25);\r\n    return (\r\n        <Container className='ps-1 pe-1' style={{cursor: \"pointer\"}} onClick={onHeaderClick}>\r\n            <div className=\"row-12 d-flex\">\r\n                <div className='col-2 p-0 ps-2 d-flex m-auto justify-content-start'>\r\n                        {getImageElement(wName, '3rem')}\r\n                </div>\r\n                <div className=\"col-8 pt-1 pb-1 d-flex justify-content-center\">\r\n                    <h6 className='m-auto'>{displayedWeaponName}</h6>\r\n                </div>\r\n                <div className=\"col-2 d-flex pe-2 justify-content-end\">\r\n                    <div className=\"m-auto me-1\">\r\n                        <Button className=\"pb-1\" id={item.id} variant=\"outline-secondary\" onClick={onRenameClick} size=\"sm\">\r\n                            <RenameIcon />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nfunction header(item, setModalRenameItem, isOpen, setIsItemOpen) {\r\n    if (isOpen) {\r\n        return (\r\n            <div className='m-0 p-0 card-header'>\r\n                {headerBody(item, setModalRenameItem, isOpen, setIsItemOpen)}\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            headerBody(item, setModalRenameItem, isOpen, setIsItemOpen)\r\n        );\r\n    }\r\n}\r\n\r\nconst SnapshotItem = memo(function SnapshotItem({index, isOpen, size, item, setModalDownloadSnapshot, setModalUpdateItem, setModalRenameItem, setModalDeleteItem, setModalApplyItem}) {\r\n    console.log(\"SnapshotItem\");\r\n    const [isItemOpen, setIsItemOpen] = useState(isOpen);\r\n    useEffect(() => {\r\n        setIsItemOpen(isOpen);\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <Card className=\"mb-2\">\r\n            {header(item, setModalRenameItem, isItemOpen, setIsItemOpen)}\r\n            {bodyContent(isItemOpen, index, size, item, setModalDownloadSnapshot, setModalUpdateItem, setModalRenameItem, setModalDeleteItem, setModalApplyItem)}\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default SnapshotItem;","import { memo } from 'react';\r\nimport SnapshotItem from './SnapshotItem'\r\nimport { Pagination } from 'antd';\r\nimport { getCreatureByName } from '../entities/ECreatures';\r\n\r\n\r\nfunction compareCreatureGeneral(item1, item2, name) {\r\n    if (item1 == null || item2 == null) {\r\n        return 0;\r\n    }\r\n    const time1 = parseInt(getCreatureByName(item1.creatures, name).lifeTime);\r\n    const time2 = parseInt(getCreatureByName(item2.creatures, name).lifeTime);\r\n    if (time1 < time2) {\r\n        return -1;\r\n    } else if (time2 < time1) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction compareAverage(item1, item2) {\r\n    if (item1 == null || item2 == null) {\r\n        return 0;\r\n    }\r\n    const time1 = parseInt(item1.averageTime);\r\n    const time2 = parseInt(item2.averageTime);\r\n    if (time1 < time2) {\r\n        return -1;\r\n    } else if (time2 < time1) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst SnapshotItems = memo(function SnapshotItems({onPageChanged, startIndex, pageSize, page, items, isOpen, sortCreatureName, filterName, weaponType, setModalDownloadSnapshot, setModalUpdateItem, setModalRenameItem, setModalDeleteItem, setModalApplyItem}) {\r\n    console.log(\"SnapshotItems\");\r\n    function compareCreature(item1, item2) {\r\n        return compareCreatureGeneral(item1, item2, sortCreatureName.name);\r\n    }\r\n    const sortAlg = (!sortCreatureName || sortCreatureName.name === \"average\") ? compareAverage : compareCreature;\r\n    let index = 1;\r\n    const filterByName = (item) => {\r\n        if (filterName === \"\" || filterName === null) {\r\n            return true;\r\n        }\r\n        return item.name.includes(filterName);\r\n    };\r\n    const filterByType = (item) => {\r\n        if (weaponType === \"All\") {\r\n            return true;\r\n        }\r\n        return weaponType === item.wSpec.type;\r\n    };\r\n    const filterByCreature = (item) => {\r\n        if (!sortCreatureName || sortCreatureName.name === \"average\") {\r\n            return true;\r\n        }\r\n        return getCreatureByName(item.creatures, sortCreatureName.name) !== null;\r\n    }\r\n    const snapshots = [...items.map.values()].filter(filterByCreature).sort(sortAlg).filter(filterByType).filter(filterByName);\r\n    const size = snapshots.length;\r\n    function result(item) {\r\n        return (\r\n            <SnapshotItem key={item.id} title={item.name} index={index++} isOpen={isOpen} size={size} item={item} setModalDownloadSnapshot={setModalDownloadSnapshot} setModalUpdateItem={setModalUpdateItem} setModalRenameItem={setModalRenameItem} setModalDeleteItem={setModalDeleteItem} setModalApplyItem={setModalApplyItem}></SnapshotItem>\r\n        );\r\n    }\r\n    const values = snapshots.map((item) => (result(item)));\r\n    let paginated = [];\r\n    for (let i = startIndex; i < startIndex + pageSize; i++) {\r\n        const value = values[i];\r\n        if (!value) {\r\n            break;\r\n        }\r\n        paginated.push(values[i]);\r\n    }\r\n    return getPagination(page, pageSize, onPageChanged, paginated, values.length);\r\n});\r\n\r\nfunction getPagination(page, pageSize, onPageChanged, paginated, total) {\r\n    if (paginated.length > 0) {\r\n        return (\r\n            <>\r\n                {paginated}\r\n                <div className=\"p-1\" />\r\n                <Pagination align=\"center\" current={page} defaultPageSize={pageSize} onChange={onPageChanged} total={total} showSizeChanger={false} />\r\n            </>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\nexport default SnapshotItems;","import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ModalNewItem from '../snapshot/ModalNewItem';\r\nimport ModalDownloadSnapshots from '../snapshot/ModalDownloadSnapshots';\r\nimport ModalDownloadSnapshot from '../snapshot/ModalDownloadSnapshot';\r\nimport ModalDeleteItem from '../snapshot/ModalDeleteItem';\r\nimport ModalDeleteAll from '../snapshot/ModalDeleteAll';\r\nimport ModalApplyItem from '../snapshot/ModalApplyItem';\r\nimport ModalUploadSnapshots from '../snapshot/ModalUploadSnapshots';\r\nimport ModalRenameItem from '../snapshot/ModalRenameItem';\r\nimport ModalUpdateItem from '../snapshot/ModalUpdateItem';\r\nimport Form from 'react-bootstrap/Form';\r\nimport snapshotsFile from '../resources/snapshots.json';\r\nimport { readSnapshotsFromResources } from '../helpers/FetchSnapshots';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport SnapshotsHeader from '../snapshot/SnapshotsHeader';\r\nimport SnapshotItems from '../snapshot/SnapshotItems';\r\nimport '../css/style.css'\r\nimport { memo, useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport WTypeDropdown from '../helpers/WTypeDropdown';\r\nimport { TrashIcon, CollapseIcon, ExpandIcon } from '../icons/Icons';\r\nimport { FloatButton } from 'antd';\r\n\r\n\r\nlet id = 0;\r\n\r\nfunction setNextId(nextId) {\r\n    id = nextId;\r\n}\r\n\r\nconst Snapshots = memo(function Snapshots(props) {\r\n\r\n    console.log(\"Snapshots\");\r\n\r\n    const player = props.playerRef.current;\r\n\r\n    const playerStats = props.playerStatsRef.current;\r\n\r\n    const stuffBoost = props.stuffBoostRef.current;\r\n\r\n    const boostDamage = props.boostDamageRef.current;\r\n\r\n    const wSpec = props.wSpecRef.current;\r\n\r\n    const extraDamage = props.extraDamageRef.current;\r\n\r\n    const additionalDamages = props.additionalDamagesRef.current;\r\n\r\n    const creatures = props.creaturesRef.current;\r\n\r\n    const resultDamage = props.resultDamageRef.current;\r\n\r\n    const applySnapshot = props.applySnapshotRef.current;\r\n\r\n    const [items, setItems] = useState({map: new Map()});\r\n\r\n    const [modalNewItemShow, setModalNewItemShow] = useState(false);\r\n\r\n    const [modalDeleteAll, setModalDeleteAll] = useState(false);\r\n\r\n    const [modalDownloadSnapshots, setModalDownloadSnapshots] = useState(false);\r\n\r\n    const [modalDownloadSnapshot, setModalDownloadSnapshot] = useState({id: -1, name: 'none', show: false});\r\n\r\n    const [modalRenameItem, setModalRenameItem] = useState({id: -1, show: false});\r\n\r\n    const [modalUpdateItem, setModalUpdateItem] = useState({id: -1, name: '', show: false});\r\n\r\n    const [filterName, setFilterName] = useState(\"\");\r\n\r\n    const [modalUploadSnapshots, setModalUploadSnapshots] = useState(false);\r\n\r\n    const [modalDeleteItem, setModalDeleteItem] = useState({id: \"-1\", name: 'none', show: false});\r\n\r\n    const [modalApplyItem, setModalApplyItem] = useState({id: \"-1\", name: 'none', show: false});\r\n\r\n    const [weaponType, setWeaponType] = useState(\"All\");\r\n\r\n    const [isOpen, setIsOpen] = useState(true);\r\n\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [pageSize, setPageSize] = useState(10);\r\n\r\n    const [startIndex, setStartIndex] = useState(0);\r\n\r\n    const [sortCreatureName, setSortCreatureName] = useState({name: \"average\"});\r\n\r\n    useEffect(() => {\r\n        readSnapshotsFromResources(snapshotsFile, setNextId, setItems);\r\n    }, []);\r\n\r\n    function buildUniqueCreatureNames() {\r\n        const defaultItems = [\"average\"];\r\n        const uniqueNames = new Set(defaultItems);\r\n        if (!items || !items.map || items.map.size === 0) {\r\n            return defaultItems;\r\n        }\r\n        for (const [, item] of items.map) {\r\n            const creatures = item.creatures;\r\n            for (const fieldName in creatures) {\r\n                const creature = creatures[fieldName];\r\n                uniqueNames.add(creature.name);\r\n            }\r\n        }\r\n        return [...uniqueNames];\r\n    }\r\n\r\n    const uniqueCreatureNames = buildUniqueCreatureNames();\r\n\r\n    // Set silently, no need to re-render\r\n    if (!uniqueCreatureNames.includes(sortCreatureName.name)) {\r\n        sortCreatureName.name = \"average\";\r\n    }\r\n\r\n    function trashAllButton() {\r\n        if (items === null || items.map === null || items.map.size < 2) {\r\n            return (<></>);\r\n        }\r\n        return (\r\n            <Button variant=\"outline-danger\" className=\"mb-2 me-0\" onClick={() => setModalDeleteAll(true)}>\r\n                <TrashIcon/> All\r\n            </Button>\r\n        );\r\n    };\r\n    const onClickOpen = () => setIsOpen(!isOpen);\r\n\r\n    function expandButton() {\r\n        if (items === null || items.map === null || items.map.size === 0) {\r\n            return (<></>);\r\n        }\r\n        if (isOpen) {\r\n            return (\r\n                <Button variant=\"outline-primary\" className=\"ms-0 mb-2\" onClick={onClickOpen}>\r\n                    <><CollapseIcon /> All</>\r\n                </Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <Button variant=\"outline-primary\" className=\"ms-0 mb-2\" onClick={onClickOpen}>\r\n                    <><ExpandIcon /> All</>\r\n                </Button>\r\n            );\r\n        }\r\n    };\r\n    function search() {\r\n        if (items === null || items.map === null || items.map.size < 2) {\r\n            return (<></>);\r\n        }\r\n        return (\r\n            <InputGroup className=\"pb-2 flex-nowrap\">\r\n                <WTypeDropdown weaponType={weaponType} setWeaponType={setWeaponType}></WTypeDropdown>\r\n                <Form.Control maxLength=\"70\" onChange={(e) => setFilterName(e.target.value)} />\r\n            </InputGroup>\r\n        );\r\n    }\r\n    function onPageChanged(page, pageSize) {\r\n        setStartIndex(pageSize * (page - 1));\r\n        setPage(page);\r\n        setPageSize(pageSize);\r\n    }\r\n\r\n    // <div className=\"overflow-auto wrapper\"></div>\r\n    return (\r\n        <Container className=\"p-1\">\r\n            <Card className=\"text-center mb-0\">\r\n                <div className='card-header'>\r\n                    <SnapshotsHeader items={items} sortCreatureName={sortCreatureName} setSortCreatureName={setSortCreatureName} uniqueCreatureNames={uniqueCreatureNames} setModalDownloadSnapshots={setModalDownloadSnapshots} setModalUploadSnapshots={setModalUploadSnapshots} />\r\n                </div>\r\n                <ModalDownloadSnapshots items={items} modalDownloadSnapshots={modalDownloadSnapshots} setModalDownloadSnapshots={setModalDownloadSnapshots}></ModalDownloadSnapshots>\r\n                <ModalDownloadSnapshot items={items} modalDownloadSnapshot={modalDownloadSnapshot} setModalDownloadSnapshot={setModalDownloadSnapshot}></ModalDownloadSnapshot>\r\n                <ModalUploadSnapshots items={items} setItems={setItems} setNextId={setNextId} show={modalUploadSnapshots} setModalUploadSnapshots={setModalUploadSnapshots}></ModalUploadSnapshots>\r\n                <ModalNewItem player={player} playerStats={playerStats} stuffBoost={stuffBoost} id={id} creatures={creatures} boostDamage={boostDamage} wSpec={wSpec} extraDamage={extraDamage} additionalDamages={additionalDamages} resultDamage={resultDamage} items={items} setItems={setItems} setNextId={setNextId} show={modalNewItemShow} setModalNewItemShow={setModalNewItemShow} />\r\n                <ModalDeleteItem items={items} setItems={setItems} itemId={modalDeleteItem.id} show={modalDeleteItem.show} name={modalDeleteItem.name} setModalDeleteItem={setModalDeleteItem} />\r\n                <ModalDeleteAll items={items} setItems={setItems} modalDeleteAll={modalDeleteAll} setModalDeleteAll={setModalDeleteAll} setNextId={setNextId} />\r\n                <ModalApplyItem applySnapshot={applySnapshot} items={items} itemId={modalApplyItem.id} show={modalApplyItem.show} name={modalApplyItem.name} setModalApplyItem={setModalApplyItem} />\r\n                <ModalRenameItem id={modalRenameItem.id} items={items} setItems={setItems} show={modalRenameItem.show} setModalRenameItem={setModalRenameItem}></ModalRenameItem>\r\n                <ModalUpdateItem player={player} playerStats={playerStats} stuffBoost={stuffBoost} name={modalUpdateItem.name} items={items} setItems={setItems} creatures={creatures} boostDamage={boostDamage} wSpec={wSpec} extraDamage={extraDamage} additionalDamages={additionalDamages} resultDamage={resultDamage} modalUpdateItem={modalUpdateItem} setModalUpdateItem={setModalUpdateItem}></ModalUpdateItem>\r\n                <Card.Body className=\"pt-2 ps-1 pe-1\">\r\n                    {search()}\r\n                    <div className=\"d-flex flex-row mt-1 mb-2\">\r\n                        <div className=\"col w-100 d-flex justify-content-start\">\r\n                            {expandButton()}\r\n                        </div>\r\n                        <div className=\"col w-100\">\r\n                            <Button className=\"mb-2\" onClick={() => setModalNewItemShow(true)}>+</Button>\r\n                        </div>\r\n                        <div className=\"col w-100 d-flex justify-content-end\">\r\n                            {trashAllButton()}\r\n                        </div>\r\n                    </div>\r\n                    <SnapshotItems onPageChanged={onPageChanged} startIndex={startIndex} pageSize={pageSize} page={page} items={items} isOpen={isOpen} sortCreatureName={sortCreatureName} filterName={filterName} weaponType={weaponType} setModalDownloadSnapshot={setModalDownloadSnapshot} setModalUpdateItem={setModalUpdateItem} setModalRenameItem={setModalRenameItem} setModalDeleteItem={setModalDeleteItem} setModalApplyItem={setModalApplyItem} />\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\">\r\n                </Card.Footer>\r\n            </Card>\r\n            <FloatButton.BackTop style={{ right: 120 }} duration={100} visibilityHeight={2000} />\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Snapshots;","import Popover from 'react-bootstrap/Popover';\r\n\r\nexport const mainInfoPopover = (\r\n    <Popover className=\"popover-adjustable\">\r\n        <Popover.Header as=\"h3\">\r\n            <strong>Note</strong>\r\n        </Popover.Header>\r\n        <Popover.Body className=\"my-popover ms-2 me-2\">\r\n            <p className=\"m-1\"><b>All data</b> presented in this calculator is parsed directly from .esm files. Be sure that the version of game you are playing corresponds to the version of data presented in this calculator that can be seen via '?' button for every particular data section.</p>\r\n            <p className=\"m-1\"><strong>CRIT</strong> calculates critical damage, <strong>☠️ Fr:</strong> means crit frequency (1 / 2 - every second shot is crit).</p>\r\n            <p className=\"m-1\"><strong>SNEAK</strong> calculates sneak damage (100% hits are sneak).</p>\r\n            <p className=\"m-1\"><strong>HEAD</strong> calculates head shot damage, <strong>🤕 Fr</strong> means head shot frequency (80% - 4 of 5 shots are head shots, kill time for each time can be slightly different due to randomness).</p>\r\n            <p className=\"m-1\"><strong>DPS</strong> (damage per second) is counting reload time also. If you have only 1 slot in a magazine, 1 shot per second, 10 damage per shot and 1 second to reload, then dps = 5 provided that resistance of a creature = 0.</p>\r\n            <p className=\"m-1\"><strong>Creatures.</strong> Real NPC's can have equipment or perks that can affect resistance / damage that not presented in the calculator.</p>\r\n            <p className=\"m-1\"><strong>This calculator</strong> does not represent your real game experience, it has some limitations and it calculates creature's life time\r\n                provided that a creature is standing still under the fire until death. </p>\r\n            <p className=\"m-1\">However when all else being equal you can rely on this numbers to compare efficiency\r\n                of weapons with a pretty good accuracy. Go to GitHub page via burger menu for details.</p>\r\n            <p className=\"m-1\"><b>Usage.</b> At the beginning, go to '<b>Weapons</b>' tab, unfold a weapon's section you like, tap - '<b>Calculate</b>' - '<b>Start</b>' - '<b>Apply</b>', enjoy.</p>\r\n            <p className=\"m-1\"><b>To choose</b> creature and its level, tap on <b className=\"creature-label-text\">Creature</b> label and <b className=\"creature-label-text\">Level</b> in the <b>Creature Details View</b>. </p>\r\n        </Popover.Body>\r\n    </Popover>\r\n);\r\n","import { mainInfoPopover } from './MainInfoPopover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nexport default function MainInfoButton(props) {\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"left\" overlay={mainInfoPopover}>\r\n            <Button variant=\"white-blue-border\" style={{cursor: 'help'}}><small><b>?</b></small></Button>\r\n        </OverlayTrigger>\r\n    );\r\n}","import Card from 'react-bootstrap/Card';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport MainInfoButton from './MainInfoButton';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport { ammo, fireRate, addText } from '../helpers/Emoji';\r\nimport Strings from '../helpers/Strings';\r\nimport Button from 'react-bootstrap/Button';\r\nimport TemplateTools from '../templates/TemplateTools';\r\n\r\n\r\nexport function buildExtraDamageView(extraDamage, setExtraDamage, boostDamageRef, setBoostDamage, info=false) {\r\n    function useCrit(e) {\r\n        extraDamage.useCrit = e.target.checked;\r\n        setExtraDamage({...extraDamage});\r\n    }\r\n\r\n    function useSneak(e) {\r\n        extraDamage.useSneak = e.target.checked;\r\n        const card = boostDamageRef.current.follow_through;\r\n        card.displayed_value = (card.is_used && extraDamage.useSneak) ? card.value : 0.0;\r\n        setExtraDamage({...extraDamage});\r\n        setBoostDamage({...boostDamageRef.current});\r\n    }\r\n\r\n    function useHead(e) {\r\n        extraDamage.useHead = e.target.checked;\r\n        setExtraDamage({...extraDamage});\r\n    }\r\n    const infoButton = (info) ? (<MainInfoButton />) : (<></>);\r\n    return (\r\n        <Stack className='p-0 m-0 justify-content-evenly' direction=\"horizontal\" gap={1}>\r\n            <UCheckbox onChange={useCrit} checked={extraDamage.useCrit}><strong className=\"ps-1\"><small>☠️ CRIT</small></strong></UCheckbox>\r\n            <UCheckbox onChange={useSneak} checked={extraDamage.useSneak}><strong className=\"ps-1\"><small>🐍 SNEAK</small></strong></UCheckbox>\r\n            <UCheckbox onChange={useHead} checked={extraDamage.useHead}><strong className=\"ps-1\"><small>🤕 HEAD</small></strong></UCheckbox>\r\n            {infoButton}\r\n        </Stack>\r\n    );\r\n}\r\n\r\nexport function getFireRateLabel(weaponType) {\r\n    const isRanged = TemplateTools.isWeaponRangedByType(weaponType);\r\n    const fireRateLabel = Strings.getFireRate(weaponType) + \":\";\r\n    return (isRanged) ? (addText(fireRate, '0.7rem', '0.27rem', fireRateLabel)) : ('👊🏼 ' + fireRateLabel);\r\n}\r\n\r\nexport function buildExtraDamageButtons(extraDamage, setExtraDamage) {\r\n    function crf(e) {\r\n        extraDamage.critFreq -= 1;\r\n        if (extraDamage.critFreq === 0) {\r\n            extraDamage.critFreq = 7;\r\n        }\r\n        setExtraDamage({...extraDamage});\r\n    }\r\n    function hef(e) {\r\n        extraDamage.headFreq += 10;\r\n        if (extraDamage.headFreq > 100) {\r\n            extraDamage.headFreq = 20;\r\n        }\r\n        setExtraDamage({...extraDamage});\r\n    }\r\n    return (\r\n        <div className=\"text-muted d-flex justify-content-between\">\r\n            <Button variant=\"blue-white-border\" style={{ width: '6.5rem', height: '2rem'}} className=\"ms-2 me-2\" onClick={crf}><strong>☠️ Fr: 1 / {extraDamage.critFreq}</strong></Button>\r\n            <Button variant=\"blue-white-border\" style={{ width: '6.5rem', height: '2rem'}} className=\"ms-2 me-2\" onClick={hef}><strong>🤕 Fr: {extraDamage.headFreq}%</strong></Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SummaryView(props) {\r\n    let damageText = \"\";\r\n    let fireRateText = \"\";\r\n    let displayedCrit = 0;\r\n    let displayedSneak = 0;\r\n    let reloadTime = 0;\r\n    let ammoCapacity = 0;\r\n    let tDamage = 0;\r\n    let shotSize = 1;\r\n    let fRate = 10;\r\n    if (props.resultDamage && Object.keys(props.resultDamage).length > 0) {\r\n        reloadTime = props.resultDamage.reloadTime;\r\n        displayedCrit = props.resultDamage.displayedCrit;\r\n        displayedSneak = props.resultDamage.displayedSneak;\r\n        tDamage = props.resultDamage.tDamage;\r\n        shotSize = props.resultDamage.shotSize;\r\n        damageText = tDamage.toFixed(1) + \" x \" + shotSize;\r\n        fRate = props.resultDamage.fireRate;\r\n        fireRateText = fRate.toFixed(0) + \" - \" + (fRate / 10.0).toFixed(2) + \" shots / sec\";\r\n        ammoCapacity = props.resultDamage.ammoCapacity;\r\n    }\r\n    const fireRateLabel = getFireRateLabel(props.resultDamage.weaponType);\r\n    return (\r\n        <Card className={props.className}>\r\n            <Card.Header className=\"pe-0 ps-0\">\r\n                {buildExtraDamageView(props.extraDamage, props.setExtraDamage, props.boostDamageRef, props.setBoostDamage, true)}\r\n            </Card.Header>\r\n            <Card.Body className=\"pt-0 pb-0\">\r\n                {keyValueRow((<span className=\"pt-0 pb-0\"><strong>💥 Damage:</strong></span>), (<span className=\"pt-0 pb-0\"><strong>{damageText}</strong></span>), \"default\", \"red\")}\r\n                {keyValueRow((<span className=\"mt-0 mb-0\"><strong>☠️ Crit:</strong></span>), (<span className=\"mt-1 mb-1\"><strong>{\"+\" + displayedCrit + \"%\"}</strong></span>), \"default\", \"magenta\")}\r\n                {keyValueRow((<span className=\"mt-0 mb-0\"><strong>🐍 Sneak:</strong></span>), (<span className=\"mt-1 mb-1\"><strong>{\"+\" + displayedSneak + \"%\"}</strong></span>), \"default\", \"green\")}\r\n                {keyValueRow((<span className=\"mt-0 mb-0\"><strong>{fireRateLabel}</strong></span>), (<span className=\"mt-1 mb-1\"><strong>{fireRateText}</strong></span>), \"default\", \"purple\")}\r\n                {keyValueRow((<div className=\"mt-0 mb-0\"><strong>{addText(ammo, '0.7rem', '0.27rem', \"Ammo:\")}</strong></div>), (<span className=\"mt-1 mb-1\"><strong>{ammoCapacity}</strong></span>), \"default\", \"default\")}\r\n                {keyValueRow((<span className=\"mt-0 mb-0\"><strong>⌛ Reload:</strong></span>), (<span className=\"mt-1 mb-1\"><strong>{reloadTime.toFixed(1) + \" s\"}</strong></span>), \"default\", \"blue\")}\r\n            </Card.Body>\r\n            <Card.Footer className=\"ps-0 pe-0\">\r\n                {buildExtraDamageButtons(props.extraDamage, props.setExtraDamage)}\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n}","import Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport { getHotPercentage } from '../helpers/Item';\r\nimport { Progress } from 'antd';\r\nimport { memo, useState } from 'react';\r\nimport { ammo, addText } from '../helpers/Emoji';\r\nimport { getImageElement } from '../helpers/WeaponImages';\r\nimport { getAverageTime } from \"../entities/ECreatures\";\r\nimport { getLegendary } from '../helpers/LegendaryProvider';\r\nimport Button from 'react-bootstrap/Button';\r\nimport AAView from '../damage/AAView';\r\nimport DamageDetailsCard from '../damage/DamageDetailsCard';\r\nimport Row from 'react-bootstrap/Row';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\nimport { buildCreatureInfo2 } from '../creature/CreatureInfoPopover';\r\nimport ResistanceChart from '../main/ResistanceChart';\r\nimport { buildExtraDamageView, getFireRateLabel } from './SummaryView';\r\n\r\n\r\nfunction getLegendaryRow(legendaryId, star) {\r\n    if (!legendaryId || legendaryId === \"\" || star > 5) {\r\n        return (<></>);\r\n    } else {\r\n        let stars = \"⭐\";\r\n        stars = stars.repeat(star);\r\n        const legData = getLegendary(legendaryId);\r\n        if (!legData) {\r\n            return (<></>);\r\n        }\r\n        return (<>{keyValueRow(stars, legData.name, \"default\", \"gold\")}</>)\r\n    }\r\n}\r\n\r\nconst ToastSpecs = memo(function ToastSpecs({creatures, legendary, iconName, weaponName, graphValues, resultDamage, showStat, setShowStat, creatureChartNumber, setCreatureChartNumber, extraDamage, setExtraDamage, boostDamageRef, setBoostDamage}) {\r\n    const [showView, setShowView] = useState(\"Main\");\r\n    const [detailIndex, setDetailIndex] = useState(-1);\r\n    const [creatureNumber, setCreatureNumber] = useState(1);\r\n    const dropdownNames = [\"Main\", \"Damage Stats\", \"Creature\", \"Chart\"];\r\n    if (resultDamage.damageDetails && (resultDamage.damageDetails.length - 1) < detailIndex) {\r\n        setDetailIndex(-1);\r\n    }\r\n    if (!resultDamage || Object.keys(resultDamage).length === 0) {\r\n        return (<></>);\r\n    }\r\n    let strengthTail = (resultDamage.strengthBonus > 0) ? \" (+\" + resultDamage.strengthBonus + \"%)\" : \"\";\r\n    const strength = resultDamage.strength + strengthTail;\r\n    let bonuses = [];\r\n    for(let property in resultDamage.bonusMult) {\r\n        bonuses.push((resultDamage.bonusMult[property] - 1) * 100);\r\n    }\r\n    const minBonus = Math.min(...bonuses).toFixed(0);\r\n    const maxBonus = Math.max(...bonuses).toFixed(0);\r\n    const bonusText = minBonus + \"% - \" + maxBonus + \"%\";\r\n    const totalBonusTextMin = (((resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer) - 1) * 100).toFixed(0) + \"%\";\r\n    const totalBonusTextMax = (((resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer * resultDamage.totalBonus.executioner) - 1) * 100).toFixed(0) + \"%\";\r\n    const totalBonusText = totalBonusTextMin + \" - \" + totalBonusTextMax;\r\n    let toastBody = null;\r\n    if (showView === \"Main\") {\r\n        toastBody = getMainToast(creatures, resultDamage, legendary, bonusText, totalBonusText, strength)\r\n    } else if (showView === \"Damage Stats\") {\r\n        toastBody = getDetails(resultDamage, detailIndex, setDetailIndex);\r\n    } else if (showView === \"Creature\") {\r\n        toastBody = getCreatures(resultDamage, creatures, creatureNumber);\r\n    } else {\r\n        toastBody = getChart(graphValues, creatures, creatureChartNumber, setCreatureChartNumber);\r\n    }\r\n    function onDropdownSelect(e) {\r\n        setShowView(e);\r\n    }\r\n    return (\r\n        <ToastContainer\r\n            className=\"position-fixed p-1\"\r\n            position={\"top-center\"}\r\n            role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\r\n            style={{ zIndex: 10 }}>\r\n            <Toast bg=\"light\" onClose={(e) => setShowStat(false)} show={showStat} animation={false}>\r\n                <Toast.Header className=\"pe-3\">\r\n                    {getImageElement(iconName, \"1.5rem\")}\r\n                    <strong className=\"ms-2 mt-auto mb-auto p-auto me-auto\">{weaponName}</strong>\r\n                    <small className=\"me-2\">\r\n                        <Progress\r\n                            type=\"dashboard\"\r\n                            steps={50}\r\n                            percent={getHotPercentage(creatures)}\r\n                            format={(percent) => percent}\r\n                            size={28}\r\n                            strokeColor=\"rgb(64, 255, 255)\"\r\n                            trailColor=\"rgba(0, 0, 0, 0.06)\"\r\n                            strokeWidth={20} />\r\n                    </small>\r\n                </Toast.Header>\r\n                <div className=\"m-1\" />\r\n                {buildExtraDamageView(extraDamage, setExtraDamage, boostDamageRef, setBoostDamage)}\r\n                {toastBody}\r\n                <Row className=\"pb-2\">\r\n                    <div className=\"col d-flex justify-content-start\">\r\n                        {getPrevButtonDetails(showView, resultDamage.damageDetails.length, detailIndex, setDetailIndex)}\r\n                        {getPrevButtonCreature(showView, creatureNumber, setCreatureNumber)}\r\n                    </div>\r\n                    <div className=\"col d-flex justify-content-center\">\r\n                        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onDropdownSelect} names={dropdownNames} title={<strong>{showView}</strong>} />\r\n                    </div>\r\n                    <div className=\"col d-flex justify-content-end\">\r\n                        {getNextButtonDetails(showView, resultDamage.damageDetails.length, detailIndex, setDetailIndex)}\r\n                        {getNextButtonCreature(showView, creatureNumber, setCreatureNumber)}\r\n                    </div>\r\n                </Row>\r\n            </Toast>\r\n        </ToastContainer>\r\n    );\r\n});\r\n\r\nfunction getChart(graphValues, creatures, creatureNumber, setCreatureNumber) {\r\n    return (<ResistanceChart graphValues={graphValues} chartId={\"toastResChart\"} dps='true' creatures={creatures} creatureNumber={creatureNumber} setCreatureNumber={setCreatureNumber} />);\r\n}\r\n\r\nfunction getPrevButtonDetails(showView, detailsLength, detailIndex, setDetailIndex) {\r\n    function onClick(e) {\r\n        let index = detailIndex - 1;\r\n        if (index < -1) {\r\n            index = detailsLength - 1;\r\n        }\r\n        setDetailIndex(index);\r\n    }\r\n    const symbol = \"<<\";\r\n    if (showView !== \"Damage Stats\" || detailsLength === 0) {\r\n        return (<></>);\r\n    } else {\r\n        return (<Button size=\"sm\" variant=\"blue-white-border\" className=\"ms-2\" onClick={onClick}>{symbol}</Button>);\r\n    }\r\n}\r\n\r\nfunction getNextButtonDetails(showView, detailsLength, detailIndex, setDetailIndex) {\r\n    function onClick(e) {\r\n        let index = detailIndex + 1;\r\n        if (index > (detailsLength - 1)) {\r\n            index = -1;\r\n        }\r\n        setDetailIndex(index);\r\n    }\r\n    if (showView !== \"Damage Stats\" || detailsLength === 0) {\r\n        return (<></>);\r\n    } else {\r\n        return (<Button size=\"sm\" variant=\"blue-white-border\" className=\"me-2\" onClick={onClick}>>></Button>);\r\n    }\r\n}\r\n\r\nfunction getNextButtonCreature(showView, creatureNumber, setCreatureNumber) {\r\n    function onClick(e) {\r\n        let number = creatureNumber + 1;\r\n        if (number > 4) {\r\n            number = 1;\r\n        }\r\n        setCreatureNumber(number);\r\n    }\r\n    if (showView !== \"Creature\") {\r\n        return (<></>);\r\n    } else {\r\n        return (<Button size=\"sm\" variant=\"blue-white-border\" className=\"me-2\" onClick={onClick}>>></Button>);\r\n    }\r\n}\r\n\r\nfunction getPrevButtonCreature(showView, creatureNumber, setCreatureNumber) {\r\n    function onClick(e) {\r\n        let number = creatureNumber - 1;\r\n        if (number < 1) {\r\n            number = 4;\r\n        }\r\n        setCreatureNumber(number);\r\n    }\r\n    if (showView !== \"Creature\") {\r\n        return (<></>);\r\n    } else {\r\n        return (<Button size=\"sm\" variant=\"blue-white-border\" className=\"ms-2\" onClick={onClick}>{\"<<\"}</Button>);\r\n    }\r\n}\r\n\r\nfunction getCreatures(resultDamage, creatures, creatureNumber) {\r\n    const creature = creatures[\"creature\" + creatureNumber];\r\n    return (\r\n        <Toast.Body className=\"p-2\">\r\n            {buildCreatureInfo2(creature, resultDamage)}\r\n        </Toast.Body>\r\n    );\r\n}\r\n\r\nfunction getDetails(resultDamage, detailIndex, setDetailIndex) {\r\n    let view = null;\r\n    if (detailIndex === -1) {\r\n        view = (<AAView resultDamage={resultDamage}></AAView>);\r\n    } else {\r\n        view = (<DamageDetailsCard resultDamage={resultDamage} damageData={resultDamage.damageDetails[detailIndex]}></DamageDetailsCard>);\r\n    }\r\n    return (\r\n        <Toast.Body className=\"p-2\">\r\n            {view}\r\n        </Toast.Body>\r\n    );\r\n}\r\n\r\n/*\r\n            {keyValueRow('💣 Explosive:', \"+\" + resultDamage.explosive.toFixed(0) + \"%\", \"default\", \"pink\")}\r\n            {keyValueRow('🚀️ Bonus:', bonusText, \"default\", \"blue\")}\r\n            {keyValueRow('⏫ Total Bonus:', totalBonusText, \"default\", \"blue\")}\r\n            {keyValueRow('🐍 Sneak:', \"+\" + resultDamage.displayedSneak + \"%\", \"default\", \"darkGreen\")}\r\n            {keyValueRow('☠️ Crit:', \"+\" + resultDamage.displayedCrit + \"%\", \"default\", \"black\")}\r\n            {keyValueRow('💪 Strength:', strength, \"default\", \"brown\")}\r\n*/\r\nfunction getMainToast(creatures, resultDamage, legendary, bonusText, totalBonusText, strength) {\r\n    const fireRateLabel = getFireRateLabel(resultDamage.weaponType);\r\n    return (\r\n        <Toast.Body className=\"p-2\">\r\n            {keyValueRow('💥 Damage:', resultDamage.tDamage.toFixed(1) + ' x ' + resultDamage.shotSize, \"default\", \"indigo\")}\r\n            {keyValueRow(fireRateLabel, resultDamage.fireRate.toFixed(2) + \" - \" + (resultDamage.fireRate / 10.0).toFixed(1) + \" shots / sec\", \"default\", \"purple\")}\r\n            {keyValueRow(addText(ammo, '0.7rem', '0.27rem', \"Ammo / Hit:\"), resultDamage.ammoCapacity, \"default\", \"purple\")}\r\n            {keyValueRow('⌛ Reload:', resultDamage.reloadTime.toFixed(1) + ' s', \"default\", \"purple\")}\r\n            {keyValueRow('💪 Strength:', strength, \"default\", \"brown\")}\r\n            {keyValueRow('💀 Average Time:', getAverageTime(creatures), \"default\", \"red\")}\r\n            {getLegendaryRow(legendary[0][0], 1)}\r\n            {getLegendaryRow(legendary[1][0], 2)}\r\n            {getLegendaryRow(legendary[2][0], 3)}\r\n            {getLegendaryRow(legendary[3][0], 4)}\r\n            {getLegendaryRow(legendary[4][0], 5)}\r\n        </Toast.Body>\r\n    );\r\n}\r\nexport default ToastSpecs;","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport '../css/style.css'\r\nimport { checkLength } from '../helpers/Input';\r\nimport { bullet, ammo, fireRate } from '../helpers/Emoji';\r\nimport { memo } from 'react';\r\nimport { WarningPopover } from '../helpers/WarningPopover';\r\nimport Strings from '../helpers/Strings';\r\nimport TemplateTools from '../templates/TemplateTools';\r\n\r\n\r\nfunction column2(wSpec, onChange1, onChange2, icon, name, id1, id2, max1, max2, message) {\r\n    const value1 = wSpec[id1];\r\n    const value2 = wSpec[id2];\r\n    return (\r\n        <Col>\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                <WarningPopover message={message} header={name} element={<InputGroup.Text color='red' style={{ width: '2.58rem', backgroundColor: '#ff5795', cursor: 'pointer' }}>{icon}</InputGroup.Text>} />\r\n                <InputGroup.Text style={{ width: '6rem' }}>{name}</InputGroup.Text>\r\n                <Form.Control style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={value1} max={max1} maxLength=\"5\" onChange={onChange1} id={id1} />\r\n                <InputGroup.Text style={{ width: '2rem' }}>/</InputGroup.Text>\r\n                <Form.Control style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={value2} max={max2} maxLength=\"5\" onChange={onChange2} id={id2} />\r\n            </InputGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction column(wSpec, onChange, icon, name, id, max) {\r\n    let value = 0;\r\n    if (id.includes(\"creature\")) {\r\n        const index = parseInt(id.split(\"_\")[1]);\r\n        value = wSpec[\"creature\"][index].value;\r\n    } else {\r\n        value = wSpec[id];\r\n    }\r\n    return (\r\n        <Col key={id}>\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                <InputGroup.Text style={{ width: '2.58rem' }}>{icon}</InputGroup.Text>\r\n                <InputGroup.Text style={{ width: '10rem' }}>{name}</InputGroup.Text>\r\n                <Form.Control style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={value} max={max} maxLength=\"5\" onChange={onChange} id={id} />\r\n            </InputGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nconst WRow = memo(function WRow({wSpec, setWSpec}) {\r\n\r\n    function onChange(e) {\r\n        checkLength(e);\r\n        let creatureIndex = -1;\r\n        if (e.target.id.includes(\"creature\")) {\r\n            creatureIndex = parseInt(e.target.id.split(\"_\")[1]);\r\n        } else if ((e.target.id === 'shot_size' || e.target.id === 'fireRate' || e.target.id === 'ammoCapacity') && e.target.value < 1) {\r\n            e.target.value = 1;\r\n        } else if (e.target.id === 'accuracy' && e.target.value < 10) {\r\n            e.target.value = 10;\r\n        } else if ((e.target.id === 'speed' || e.target.id === 'reloadSpeed') && e.target.value < 0.1) {\r\n            e.target.value = 0.1;\r\n        }\r\n        const val = parseFloat(e.target.value);\r\n        if (creatureIndex > -1) {\r\n            wSpec[\"creature\"][creatureIndex].value = val;\r\n        } else {\r\n            wSpec[e.target.id] = val;\r\n        }\r\n        setWSpec({\r\n            ...wSpec,\r\n        });\r\n    }\r\n    // const shotSize = (<>{bullet(\"1.1rem\")} <div style={{marginLeft: '0.35rem'}}>Shot Size</div></>);\r\n    // const fRate = (<>{fireRate(\"1.1rem\")} <div style={{marginLeft: '0.45rem'}}>Fire Rate</div></>);\r\n    // const iAmmo = (<>{ammo(\"1.1rem\")} <div style={{marginLeft: '0.42rem'}}>Ammo Capacity</div></>);\r\n    let creatureViews = [];\r\n    for (let i = 0; i < wSpec.creature.length; i++) {\r\n        const creature = wSpec.creature[i];\r\n        creatureViews.push(column(wSpec, onChange, \"🐵\", creature.name, \"creature_\" + i, 500));\r\n    }\r\n    const isRanged = TemplateTools.isWeaponRangedByType(wSpec.type);\r\n    const fireRateIcon = (isRanged) ? (fireRate(\"1.1rem\")) : ('👊🏼');\r\n    const defFireRateLabel = \"Def \" + Strings.getFireRate(wSpec.type);\r\n    return (\r\n        <Row>\r\n            {column(wSpec, onChange, bullet(\"1.1rem\"), \"Shot Size\", \"shot_size\", 16)}\r\n            {column(wSpec, onChange, '⌛', \"Def Reload Time\", \"defReloadTime\", 60)}\r\n            {column(wSpec, onChange, fireRateIcon, defFireRateLabel, \"fireRate\", 199)}\r\n            {column(wSpec, onChange, ammo(\"1.1rem\"), \"Ammo Capacity\", \"ammoCapacity\", 9999)}\r\n            {column(wSpec, onChange, \"🛡️\", \"Anti Armor\", \"aa\", 40)}\r\n            {column(wSpec, onChange, \"💪\", \"Strength Boost\", \"strengthBoost\", 25)}\r\n            {column(wSpec, onChange, \"☠️\", \"Crit\", \"crit\", 200)}\r\n            {column(wSpec, onChange, \"🐍\", \"Sneak\", \"sneak\", 100)}\r\n            {column(wSpec, onChange, \"🌪️\", \"Bash\", \"bash\", 200)}\r\n            {column(wSpec, onChange, \"💣\", \"Explosive\", \"exp\", 100)}\r\n            {creatureViews}\r\n            {column(wSpec, onChange, \"🚀\", \"Damage Bonus\", \"bonus\", 500)}\r\n            {column(wSpec, onChange, \"☄️\", \"Weapon Speed\", \"speed\", 5)}\r\n            {column(wSpec, onChange, \"💨\", \"Reload Speed\", \"reloadSpeed\", 5)}\r\n            {column(wSpec, onChange, \"🪓\", \"Power Attack\", \"powerAttack\", 200)}\r\n            {column2(wSpec, onChange, onChange, \"🦵\", \"Cripple\", \"cripple\", \"crippleChance\", 100, 100, \"% Damage Boost / Chance (100% if headshot)\")}\r\n            {column2(wSpec, onChange, onChange, \"🔋\", \"Charge\", \"chargeTime\", \"maxChargeTime\", 5, 5, \"Charge Time / Max Charge Time\")}\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default WRow;","import { setCurrentLegendaryIds } from '../helpers/Global';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { useState } from 'react';\r\nimport { Slider } from 'antd';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nconst allMarks = {\r\n\r\n    marks3: {\r\n        0: '0',\r\n        1: '1',\r\n        2: '2',\r\n        3: '3',\r\n    },\r\n\r\n    marks25: {\r\n        0: '0%',\r\n        5: '5%',\r\n        10: '10%',\r\n        15: '15%',\r\n        20: '20%',\r\n        25: '25%',\r\n    },\r\n\r\n    marks40: {\r\n        0: '0%',\r\n        10: '10%',\r\n        20: '20%',\r\n        30: '30%',\r\n        40: '40%',\r\n    },\r\n\r\n    marks50: {\r\n        0: '0%',\r\n        10: '10%',\r\n        20: '20%',\r\n        30: '30%',\r\n        40: '40%',\r\n        50: '50%',\r\n    },\r\n\r\n    marks95: {\r\n        0: '0%',\r\n        20: '20%',\r\n        40: '40%',\r\n        60: '60%',\r\n        80: '80%',\r\n        95: '95%',\r\n    },\r\n\r\n    marks100: {\r\n        0: '0%',\r\n        20: '20%',\r\n        40: '40%',\r\n        60: '60%',\r\n        80: '80%',\r\n        100: '100%',\r\n    },\r\n\r\n    marks20: {\r\n        0: '0%',\r\n        5: '5%',\r\n        10: '10%',\r\n        15: '15%',\r\n        20: '20%',\r\n    },\r\n\r\n    marks24: {\r\n        0: '0%',\r\n        6: '6%',\r\n        12: '12%',\r\n        18: '18%',\r\n        24: '24%',\r\n    },\r\n\r\n    marks300: {\r\n        0: '0%',\r\n        50: '50%',\r\n        100: '100%',\r\n        150: '150%',\r\n        200: '200%',\r\n        250: '250%',\r\n        300: '300%',\r\n    },\r\n\r\n    marks15: {\r\n        0: '0%',\r\n        3: '3%',\r\n        6: '6%',\r\n        9: '9%',\r\n        12: '12%',\r\n        15: '15%',\r\n    },\r\n};\r\n\r\nfunction LegSlider({legendaryInfo, marksName, wSpec, setWSpec, disabled=false}) {\r\n    const marks = allMarks[marksName];\r\n    const wSpecLeg = wSpec.legendary[legendaryInfo.star - 1];\r\n    const [redraw, setRedraw] = useState(false);\r\n\r\n    let value = legendaryInfo.max;\r\n\r\n    // Use adjustable value instead of default max\r\n    if (wSpecLeg[2] && wSpecLeg[2] !== \"\") {\r\n        value = wSpecLeg[1];\r\n    }\r\n\r\n    function slideChanged(e) {\r\n        wSpecLeg[1] = e;\r\n        setRedraw(!redraw);\r\n        setCurrentLegendaryIds(wSpec);\r\n    }\r\n\r\n    function slideFinished(e) {\r\n        setWSpec({...wSpec});\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Card className=\"mt-3 mb-2 pt-2 pb-2 ps-3 pe-3\">\r\n            <Col className=\"pt-2\">\r\n                <Slider disabled={!legendaryInfo.adjustable} open={true} onAfterChange={slideFinished} onChange={slideChanged} marks={marks} min={legendaryInfo.min} max={legendaryInfo.max} step={legendaryInfo.step} value={value} />\r\n            </Col>\r\n            </Card>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default LegSlider;","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { useEffect } from 'react';\r\nimport LegSlider from './LegSlider';\r\nimport { Collapse } from 'antd';\r\nimport { getLegendaryByStar, getLegendary } from '../helpers/LegendaryProvider';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport getMods from '../helpers/Mods';\r\nimport { setCurrentLegendaryIds } from '../helpers/Global';\r\nimport { popoverContent } from '../templates/ModPropsPopover';\r\nimport { WeaponPopoverOverlay } from '../helpers/WeaponPopoverOverlay';\r\nimport { ModParser } from '../helpers/mods/ModParser';\r\nimport { Tag } from 'antd';\r\n\r\n\r\nconst legendaryItems = getLegendaryByStar();\r\n\r\nconst modParser = new ModParser();\r\n\r\nfunction getQuestionMark() {\r\n    return (\r\n        <Badge className=\"ps-2 pe-2 mb-auto mt-auto\" bg={\"danger\"} pill>?</Badge>\r\n    );\r\n}\r\n\r\nfunction updateLegendary(wSpec, setWSpec, health) {\r\n    for (let i = 0; i < wSpec.legendary.length; i++) {\r\n        const legendary = wSpec.legendary[i];\r\n        modParser.applyLegendaryModToWSpec(legendary[0], wSpec, i, health, true, true);\r\n    }\r\n    setWSpec({...wSpec});\r\n}\r\n\r\n// health, important if a value of a legendary effect depends on health\r\nfunction getLegendaryDropdown(legendaryInfo, wSpec, setWSpec, health, index) {\r\n    function onSelectCustom(e) {\r\n        modParser.applyLegendaryModToWSpec(wSpec.legendary[index][0], wSpec, index, health, false, false);\r\n        modParser.applyLegendaryModToWSpec(e, wSpec, index, health, false, true);\r\n        wSpec.legendary[index][0] = e;\r\n        setWSpec({...wSpec});\r\n    }\r\n    let result = [];\r\n    const legs = legendaryItems[index];\r\n    for (let i = 0; i < legs.length; i++) {\r\n        const legName = legs[i].name;\r\n        const legId = legs[i].id;\r\n        result.push(<Dropdown.Item key={i} eventKey={legId}>{legName}</Dropdown.Item>);\r\n    }\r\n    const title = (legendaryInfo) ? legendaryInfo.name : \"Legendary\";\r\n    const mod = (legendaryInfo) ? getMods().get(legendaryInfo.id) : null;\r\n    function getQM(mod) {\r\n        if (mod) {\r\n            return (\r\n                <Col className=\"d-flex justify-content-end\">\r\n                    <WeaponPopoverOverlay popoverHeader={mod.name} popoverContent={popoverContent(mod)} itemToOverly={getQuestionMark()}></WeaponPopoverOverlay>\r\n                </Col>\r\n            );\r\n        }\r\n        return (<></>);\r\n    };\r\n    return (\r\n        <Row>\r\n            <Col className=\"d-flex justify-content-start\">\r\n                <DropdownButton variant='warning' size=\"sm\" onSelect={onSelectCustom} title={<strong>{title}</strong>}>\r\n                    {result}\r\n                </DropdownButton>\r\n            </Col>\r\n            {getQM(mod)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction getEffectTag(effect) {\r\n    return (\r\n        <div className=\"mt-2 d-flex justify-content-end\">\r\n            <strong>\r\n                <Tag bordered={false} color={\"indigo\"}>{effect}</Tag>\r\n            </strong>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getLegendaryAdjust(legendaryInfo, wSpec, setWSpec) {\r\n    if (legendaryInfo && legendaryInfo.type !== \"Not affect\" && legendaryInfo.type !== \"Not affect (not tested)\") {\r\n        const marksName = \"marks\" + legendaryInfo.max;\r\n        const effect = legendaryInfo.type;\r\n        return (\r\n            <>\r\n                <LegSlider legendaryInfo={legendaryInfo} marksName={marksName} wSpec={wSpec} setWSpec={setWSpec}></LegSlider>\r\n                {getEffectTag(effect)}\r\n            </>\r\n        );\r\n    } else if (legendaryInfo) {\r\n        return (<>{getEffectTag(legendaryInfo.type)}</>);\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getLegendaryDetails(legendaryInfo) {\r\n    if (legendaryInfo) {\r\n        return (\r\n            <div className=\"pt-3 m-3\"><strong>{legendaryInfo.description}</strong></div>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction legBody(legendaryInfo, wSpec, setWSpec, health, index) {\r\n    return (\r\n        <>\r\n            {getLegendaryDropdown(legendaryInfo, wSpec, setWSpec, health, index)}\r\n            {getLegendaryDetails(legendaryInfo)}\r\n            {getLegendaryAdjust(legendaryInfo, wSpec, setWSpec)}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction getCollapse(header, legendaryInfo, wSpec, setWSpec, health, index) {\r\n    const legName = (legendaryInfo) ? legendaryInfo.name : \"\";\r\n    const headerName = header + \" \" + legName;\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>{headerName}</strong>,\r\n            children: <>{legBody(legendaryInfo, wSpec, setWSpec, health, index)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"mt-2 mb-2\">\r\n            <Collapse items={items} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function LegendarySelector({header, wSpec, setWSpec, health, index}) {\r\n    useEffect(() => {\r\n        setCurrentLegendaryIds(wSpec);\r\n        if (!wSpec.legendaryHealthUpdated) {\r\n            wSpec.legendaryHealthUpdated = true;\r\n            updateLegendary(wSpec, setWSpec, health);\r\n        }\r\n    }, [wSpec, health]);\r\n    useEffect(() => {\r\n        updateLegendary(wSpec, setWSpec, health);\r\n    }, [health]);\r\n    let legendaryInfo = null;\r\n    if (wSpec.legendary[index]) {\r\n        legendaryInfo = getLegendary(wSpec.legendary[index][0]);\r\n    }\r\n    return (\r\n        <>{getCollapse(header, legendaryInfo, wSpec, setWSpec, health, index)}</>\r\n    );\r\n}","import { memo } from 'react';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\n\r\n\r\nfunction empty() {\r\n    return (\r\n        <></>\r\n    );\r\n}\r\n\r\nconst autoW = {\"Non Automatic\": 0, \"Automatic\": 1};\r\nconst handW = {\"One Handed\": 0, \"TwoHanded\": 1};\r\n\r\nfunction auto(wSpec, setWSpec) {\r\n    const onClick = (e) => {\r\n        wSpec.is_auto = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    };\r\n    return (\r\n        <BSRadio className=\"pt-2 pb-2 d-flex justify-content-center\" pairs={autoW} selectedValue={wSpec.is_auto} onClick={onClick} />\r\n    );\r\n}\r\n\r\nfunction hand(wSpec, setWSpec) {\r\n    const onClick = (e) => {\r\n        wSpec.hand = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    };\r\n    return (\r\n        <BSRadio className=\"pt-2 pb-2 d-flex justify-content-center\" pairs={handW} selectedValue={wSpec.hand} onClick={onClick} />\r\n    );\r\n}\r\n\r\nfunction content(wSpec, setWSpec) {\r\n    if (wSpec.type === \"Melee\") {\r\n        return hand(wSpec, setWSpec);\r\n    } else if (wSpec.type === \"Heavy\" || wSpec.type === \"Rifle\" || wSpec.type ===\"Shotgun\" || wSpec.type === \"Pistol\") {\r\n        return auto(wSpec, setWSpec);\r\n    }\r\n    return empty();\r\n}\r\n\r\nconst AutoHandSelector = memo(function AutoHandSelector({wSpec, setWSpec}) {\r\n    return (\r\n       <>{content(wSpec, setWSpec)}</>\r\n    );\r\n});\r\n\r\nexport default AutoHandSelector;","import { memo } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport { TrashIcon } from '../icons/Icons';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { checkLength } from '../helpers/Input';\r\n\r\n\r\nfunction getSymbolStyle(dType) {\r\n    switch(dType) {\r\n        case \"physical\":\r\n            return [\"💥\", \"small p-1 bg-ballistic\"];\r\n        case \"bleed\":\r\n            return [\"🩸\", \"small p-1 bg-bleed\"];\r\n        case \"explosive\":\r\n            return [\"🧨\", \"small p-1 bg-exp\"];\r\n        case \"energy\":\r\n            return [\"⚡\", \"small p-1 bg-energy\"];\r\n        case \"fire\":\r\n            return [\"🔥\", \"small p-1 bg-fire\"];\r\n        case \"cryo\":\r\n            return [\"❄️\", \"small p-1 bg-cold\"];\r\n        case \"poison\":\r\n            return [\"☣️\", \"small p-1 bg-poison\"];\r\n        case \"radiation\":\r\n            return [\"☢️\", \"small p-1 bg-rad\"];\r\n        default:\r\n            return [\"\", \"\"];\r\n    }\r\n}\r\n\r\nfunction getInputItem(dItem, wSpec, setWSpec, style) {\r\n    function onCheck(e) {\r\n        dItem.isUsed = e.target.checked;\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onDamageChange(e) {\r\n        checkLength(e);\r\n        dItem.damage = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onAccuracyChange(e) {\r\n        checkLength(e);\r\n        dItem.accuracy = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onChanceChange(e) {\r\n        checkLength(e);\r\n        dItem.chance = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onStackCheck(e) {\r\n        dItem.stack = e.target.checked;\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onTimeChange(e) {\r\n        checkLength(e);\r\n        dItem.time = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    }\r\n    return (\r\n        <>\r\n            <Col>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <InputGroup.Text style={{ width: '2.8rem'}}>\r\n                        <UCheckbox onChange={onCheck} checked={dItem.isUsed}></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text style={{ width: 'auto' }} className={style}>{\"💢\"}</InputGroup.Text>\r\n                    <Form.Control className=\"pe-1\" style={{ minWidth: '4rem'}} type=\"number\" min=\"0\" value={dItem[\"damage\"]} max={\"999\"} maxLength=\"6\" onChange={onDamageChange} />\r\n                    <InputGroup.Text style={{ width: '2.8rem' }} className={style}>{\"🎯\"}</InputGroup.Text>\r\n                    <Form.Control className=\"pe-1\" style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={dItem[\"accuracy\"]} max={\"100\"} maxLength=\"5\" onChange={onAccuracyChange} />\r\n                </InputGroup>\r\n            </Col>\r\n            <Col>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <InputGroup.Text style={{ width: '2.8rem' }} className={style}>{\"🎲\"}</InputGroup.Text>\r\n                    <Form.Control className=\"pe-1\" style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={dItem[\"chance\"]} max={\"100\"} maxLength=\"5\" onChange={onChanceChange} />\r\n                    <InputGroup.Text>\r\n                        <UCheckbox className=\"me-1\" onChange={onStackCheck} checked={dItem.stack}><small>Stack</small></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text style={{ width: '2.8rem' }} className={style}>{\"⌛\"}</InputGroup.Text>\r\n                    <Form.Control className=\"pe-1\" style={{ width: '4rem' }} type=\"number\" min=\"0\" value={dItem[\"time\"]} max={\"60\"} maxLength=\"4\" onChange={onTimeChange} />\r\n                </InputGroup>\r\n            </Col>\r\n        </>\r\n    );\r\n}\r\nconst DamageItem = memo(function DamageItem({item, wSpec, setWSpec, modalDeleteDamage, setModalDeleteDamage}) {\r\n    const [symbol, style] = getSymbolStyle(item.kind);\r\n    function onTrashClick(e) {\r\n        setModalDeleteDamage({id: item.index, name: item.name, show: true});\r\n    }\r\n    return (\r\n        <Card className=\"mt-2 mb-2 shadow-outline4\">\r\n            <Card.Header size=\"small\" className={style}>\r\n                <Row>\r\n                    <Col className=\"ms-3 m-auto p-0 d-flex justify-content-start\">\r\n                        {symbol + \" \" + item.name}\r\n                    </Col>\r\n                    <Col className=\"me-3 mt-0 mb-0 p-0 d-flex justify-content-end\">\r\n                        <Button className=\"ms-1 pb-auto\" size=\"sm\" id={item.id} name={item.name} onClick={onTrashClick} variant=\"white\">\r\n                            <TrashIcon />\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Header>\r\n            <Card.Body className=\"p-1\">\r\n                <Row>\r\n                    {getInputItem(item, wSpec, setWSpec, \"bg-lite\")}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default DamageItem;","import { useState } from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\n\r\nexport default function NotificationToast({toastState}) {\r\n    const [show, setShow] = useState(toastState);\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={2000} autohide>\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">Limit</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>\r\n                        Damage limit has been achieved\r\n                    </Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport NotificationToast from '../helpers/NotificationToast';\r\nimport { getDamageTypeFromCellName, buildDamageItem } from '../helpers/mods/DamageSetter';\r\nimport { useState } from 'react';\r\nimport { notification } from 'antd';\r\n\r\n\r\nfunction getDropdown(wSpec, setWSpec, toastState, setToastState, openNotification) {\r\n    function onSelectCustom(e) {\r\n        if (wSpec.damages.length >= 6) {\r\n            openNotification();\r\n            return;\r\n        }\r\n        const type = getDamageTypeFromCellName(e);\r\n        const damageItem = buildDamageItem(wSpec.weaponId, \"custom\", type[0], type[1], type[2], 0, 0, 0, 0, 100, 100, false, wSpec.damages.length, true);\r\n        wSpec.damages.push(damageItem);\r\n\r\n        // Reindex\r\n        for (let i = 0; i < wSpec.damages.length; i++) {\r\n            wSpec.damages[i].index = i;\r\n        }\r\n        setWSpec({...wSpec});\r\n    }\r\n    return (\r\n        <Row className=\"p-2 mb-2 mt-1\">\r\n            <NotificationToast toastState={toastState}></NotificationToast>\r\n            <Col className=\"d-flex justify-content-center\">\r\n                <DropdownButton variant='warning' size=\"sm\" onSelect={onSelectCustom} title={<strong>Add Damage</strong>}>\r\n                    <Dropdown.Item eventKey=\"bbDamage\">💥 Physical</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"bleed\">🩸 Bleed</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"projExp\">🧨 Explosive</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"ebDamage\">⚡ Energy</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"fbDamage\">🔥 Fire</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"cbDamage\">❄️ Cryo</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"pbDamage\">☣️ Poison</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"rbDamage\">☢️ Radiation</Dropdown.Item>\r\n                </DropdownButton>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\n\r\nexport default function DamageAdd({wSpec, setWSpec}) {\r\n    const [toastState, setToastState] = useState(false);\r\n    const [api, contextHolder] = notification.useNotification();\r\n\r\n    const openNotification = () => {\r\n        api.open({\r\n            key: \"limit\",\r\n            message: 'Warning',\r\n            description: 'Damage limit has been achieved',\r\n            duration: 2,\r\n        });\r\n    };\r\n    return (\r\n        <>\r\n            {contextHolder}\r\n            {getDropdown(wSpec, setWSpec, toastState, setToastState, openNotification)}\r\n        </>\r\n    );\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalDeleteDamage = memo(function ModalDeleteDamage(props) {\r\n    console.log(\"ModalDeleteDamage\");\r\n    if (!props.modalDeleteDamage.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalDeleteDamage({id: -1, name: 'none', show:  false});\r\n    }\r\n    function removeItem(e) {\r\n        try {\r\n            const index = props.modalDeleteDamage.id;\r\n            props.wSpec.damages.splice(index, 1);\r\n\r\n            // Reindex\r\n            for (let i = 0; i < props.wSpec.damages.length; i++) {\r\n                props.wSpec.damages[i].index = i;\r\n            }\r\n            props.setWSpec({...props.wSpec});\r\n        } catch {}\r\n        props.setModalDeleteDamage({id: -1, name: \"none\", show: false});\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.modalDeleteDamage.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Delete Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to delete '{props.modalDeleteDamage.name}' damage?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={removeItem}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDeleteDamage;","import { Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n\r\n\r\nexport default function AmmoInfoView({wSpec}) {\r\n    const name = wSpec.ammoType.name;\r\n    const type = wSpec.ammoType.type;\r\n    const codeName = wSpec.ammoType.codeName;\r\n    if (name && name !== \"\") {\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-3 mb-0\">Ammo</Divider>\r\n                <Row className=\"mt-2 mb-3\">\r\n                     <Col>\r\n                         <InputGroup className=\"mb-1 mt-1 d-flex justify-content-center\">\r\n                             <InputGroup.Text className=\"p-1 justify-content-center shadow-outline-ammo\" style={{ minWidth: '18rem' }}><small>{type}</small></InputGroup.Text>\r\n                         </InputGroup>\r\n                     </Col>\r\n                     <Col>\r\n                         <InputGroup className=\"mb-1 mt-1 d-flex justify-content-center\">\r\n                             <InputGroup.Text className=\"p-1 justify-content-center shadow-outline-ammo\" style={{ minWidth: '18rem' }}><small>{name}</small></InputGroup.Text>\r\n                         </InputGroup>\r\n                     </Col>\r\n                     <Col>\r\n                         <InputGroup className=\"mb-1 mt-1 d-flex justify-content-center\">\r\n                             <InputGroup.Text className=\"p-1 justify-content-center shadow-outline-ammo\" style={{ minWidth: '18rem' }}><small>{codeName}</small></InputGroup.Text>\r\n                         </InputGroup>\r\n                     </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag, Divider } from 'antd';\r\n\r\n\r\nfunction getTagView(tag) {\r\n    return (\r\n        <Col key={tag} className=\"m-1 ps-0 pe-0 d-flex justify-content-center\">\r\n            <Tag className=\"m-1\" bordered={true} color=\"volcano\">\r\n                {tag}\r\n            </Tag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function TagInfoView({tags}) {\r\n    if (tags && tags.length > 0) {\r\n        const result = [];\r\n        for (let i = 0; i < tags.length; i++) {\r\n            result.push(getTagView(tags[i]));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-3 mb-2\">Tags</Divider>\r\n                <Row className=\"ps-1 pe-1\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Container from 'react-bootstrap/Container';\r\nimport WRow from \"./WRow\";\r\nimport LegendarySelector from \"./LegendarySelector\";\r\nimport { memo, useState } from 'react';\r\nimport { Divider, Tag } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\nimport WTypeDropdown from '../helpers/WTypeDropdown';\r\nimport { getRowWithImage } from '../helpers/WTypeDropdown'\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport AutoHandSelector from '../damage/AutoHandSelector';\r\nimport DamageItem from './DamageItem';\r\nimport DamageAdd from './DamageAdd';\r\nimport ModalDeleteDamage from './ModalDeleteDamage';\r\nimport AmmoInfoView from './AmmoInfoView';\r\nimport TagInfoView from './TagInfoView';\r\n\r\n\r\nfunction modElement(mod) {\r\n    return (\r\n         <div key={mod.id} className=\"col d-flex\">\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap justify-content-center\">\r\n                <InputGroup.Text className='bg-mod-cat' style={{ width: '8rem' }}><small>{mod.group}</small></InputGroup.Text>\r\n                <InputGroup.Text className='bg-mod-name' style={{ minWidth: '12rem' }}><small>{mod.name}</small></InputGroup.Text>\r\n            </InputGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DamageTable = memo(function DamageTable({setWSpec, wSpec, health}) {\r\n    console.log(\"DamageTable\");\r\n    const [weaponType, setWeaponType] = useState(wSpec.type);\r\n    const [modalDeleteDamage, setModalDeleteDamage] = useState({id: -1, name: 'none', show: false});\r\n    function onWeaponChange(e) {\r\n        wSpec.type = e;\r\n        setWSpec({...wSpec});\r\n    }\r\n    const mods = wSpec.mods.map((mod) => (modElement(mod)));\r\n    let dItems = [];\r\n    for (let i = 0; i < wSpec.damages.length; i++) {\r\n        dItems.push(<DamageItem key={i} item={wSpec.damages[i]} wSpec={wSpec} setWSpec={setWSpec} setModalDeleteDamage={setModalDeleteDamage}></DamageItem>);\r\n    }\r\n    return (\r\n        <Container fluid className=\"p-0\">\r\n            <ModalDeleteDamage wSpec={wSpec} setWSpec={setWSpec} modalDeleteDamage={modalDeleteDamage} setModalDeleteDamage={setModalDeleteDamage}></ModalDeleteDamage>\r\n            <DamageAdd wSpec={wSpec} setWSpec={setWSpec}></DamageAdd>\r\n            {dItems}\r\n            <Divider className=\"p-0 mt-2 mb-2\">Specs</Divider>\r\n            <WRow wSpec={wSpec} setWSpec={setWSpec}></WRow>\r\n            <Divider className=\"p-0 mt-2 mb-2\"></Divider>\r\n            <Row>\r\n                <div className=\"col d-flex justify-content-start\">\r\n                    <WTypeDropdown weaponType={weaponType} setWeaponType={setWeaponType} onSelect={onWeaponChange} title={\"Type\"}></WTypeDropdown>\r\n                </div>\r\n                 <div className=\"col d-flex justify-content-end pe-1\">\r\n                    <Tag bordered={true} color=\"volcano\" className=\"pt-2\"><h6 className=\"m-auto p-auto\"><strong>{getRowWithImage(wSpec.type)}</strong></h6></Tag>\r\n               </div>\r\n            </Row>\r\n            <Divider className=\"p-0 mt-2 mb-2\"></Divider>\r\n            <AutoHandSelector wSpec={wSpec} setWSpec={setWSpec}></AutoHandSelector>\r\n            <Divider className=\"p-0 mt-2 mb-2\">Legendary Effects</Divider>\r\n            <LegendarySelector index={0} header={\"⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <LegendarySelector index={1} header={\"⭐⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <LegendarySelector index={2} header={\"⭐⭐⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <LegendarySelector index={3} header={\"⭐⭐⭐⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <LegendarySelector index={4} header={\"⭐⭐⭐⭐⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <Divider className=\"p-0 mt-2 mb-2\">Modifications</Divider>\r\n            <Row className=\"d-flex\">\r\n                {mods}\r\n            </Row>\r\n            <AmmoInfoView wSpec={wSpec}></AmmoInfoView>\r\n            <TagInfoView tags={wSpec.tags}></TagInfoView>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default DamageTable;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport DamageTable from \"../damage/DamageTable\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst WeaponSpecs = memo(function WeaponSpecs({wSpec, setWSpec, showStatRef, setShowStat, health}) {\r\n    console.log(\"WeaponSpecs\");\r\n    const openStat = (e) => {\r\n        setShowStat(!showStatRef.current);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"0\">\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">Weapon Specs</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"p-2\">\r\n                    <DamageTable setWSpec={setWSpec} wSpec={wSpec} health={health}></DamageTable>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default WeaponSpecs;\r\n","export function calculateSpecial(boostDamage) {\r\n    for (let key in boostDamage.special) {\r\n        boostDamage.special[key] = 0;\r\n    }\r\n    for (let key in boostDamage) {\r\n        if (key === \"special\") {\r\n            continue;\r\n        }\r\n        const card = boostDamage[key];\r\n        const special = boostDamage.special;\r\n        const type = card.category.toLowerCase();\r\n        if (card.is_used) {\r\n            special[type] += card.cost[card.rank - 1];\r\n        }\r\n    }\r\n}","import { defaultBoosts } from '../entities/EBoosts';\r\nimport { calculateSpecial } from './BoostHelpers';\r\n\r\n\r\nexport default class PerkCardBuilder {\r\n\r\n    static build(buildName, setBoostDamage, player, setPlayer) {\r\n        let boosts = defaultBoosts();\r\n        if (buildName !== \"Reset\") {\r\n            PerkCardBuilder.setupGeneral(boosts, player);\r\n        }\r\n        switch(buildName) {\r\n            case \"Heavy\":\r\n                PerkCardBuilder.setupCard(boosts.stabilized, 3);\r\n                PerkCardBuilder.setupCard(boosts.heavy_gunner, 11);\r\n                PerkCardBuilder.setupCard(boosts.lock_and_load, 3);\r\n                break;\r\n            case \"Heavy Explosive\":\r\n                PerkCardBuilder.setupCard(boosts.stabilized, 3);\r\n                PerkCardBuilder.setupCard(boosts.heavy_gunner, 11);\r\n                PerkCardBuilder.setupCard(boosts.lock_and_load, 3);\r\n                PerkCardBuilder.setupCard(boosts.demolition_expert, 5);\r\n                break;\r\n            case \"Heavy FullHouse\":\r\n                PerkCardBuilder.setupCard(boosts.stabilized, 3);\r\n                PerkCardBuilder.setupCard(boosts.heavy_gunner, 11);\r\n                PerkCardBuilder.setupCard(boosts.lock_and_load, 3);\r\n                PerkCardBuilder.setupCard(boosts.demolition_expert, 5);\r\n                PerkCardBuilder.setupCard(boosts.adrenaline, 5, 6);\r\n                PerkCardBuilder.setupCard(boosts.tenderizer, 3);\r\n                PerkCardBuilder.setupCard(boosts.toft, 4);\r\n                break;\r\n            case \"Shotgun\":\r\n                PerkCardBuilder.setupCard(boosts.shotgunner, 11);\r\n                PerkCardBuilder.setupCard(boosts.scattershot, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Automatic Rifle\":\r\n                PerkCardBuilder.setupCard(boosts.commando, 11);\r\n                PerkCardBuilder.setupCard(boosts.ground_pounder, 3);\r\n                PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Non-Automatic Rifle\":\r\n                PerkCardBuilder.setupCard(boosts.rifleman, 11);\r\n                PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Automatic Pistol\":\r\n                PerkCardBuilder.setupCard(boosts.guerrilla, 11);\r\n                PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Non-Automatic Pistol\":\r\n                PerkCardBuilder.setupCard(boosts.gunslinger, 11);\r\n                PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Bow\":\r\n                PerkCardBuilder.setupCard(boosts.archer, 11);\r\n                PerkCardBuilder.setupCard(boosts.bow_before_me, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Melee One-Handed\":\r\n                PerkCardBuilder.setupCard(boosts.incisor, 3);\r\n                PerkCardBuilder.setupCard(boosts.martial_artist, 3);\r\n                PerkCardBuilder.setupCard(boosts.gladiator, 11);\r\n                PerkCardBuilder.setupCard(boosts.party_girl_boy, 2);\r\n                break;\r\n            case \"Melee Two-Handed\":\r\n                PerkCardBuilder.setupCard(boosts.incisor, 3);\r\n                PerkCardBuilder.setupCard(boosts.martial_artist, 3);\r\n                PerkCardBuilder.setupCard(boosts.slugger, 11);\r\n                PerkCardBuilder.setupCard(boosts.party_girl_boy, 2);\r\n                break;\r\n            case \"Unarmed\":\r\n                PerkCardBuilder.setupCard(boosts.incisor, 3);\r\n                PerkCardBuilder.setupCard(boosts.martial_artist, 3);\r\n                PerkCardBuilder.setupCard(boosts.iron_fist, 3);\r\n                PerkCardBuilder.setupCard(boosts.party_girl_boy, 2);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        calculateSpecial(boosts);\r\n        player.strange = boosts.strange_in_numbers.displayed_value;\r\n        player.freak = boosts.class_freak.displayed_value;\r\n        player.alcoholEffects = (boosts.party_girl_boy.displayed_value) > 0 ? boosts.party_girl_boy.displayed_value : 1;\r\n        setPlayer({...player});\r\n        setBoostDamage(boosts);\r\n    }\r\n\r\n    static setupGeneral(boosts, player) {\r\n        PerkCardBuilder.setupCard(boosts.bloody_mess, 3);\r\n        PerkCardBuilder.setupCard(boosts.class_freak, 3);\r\n        PerkCardBuilder.setupCard(boosts.strange_in_numbers, 1);\r\n        PerkCardBuilder.setupCard(boosts.nerd_rage, 3);\r\n        boosts.nerd_rage.displayed_value = (player.health.value <= 20.0) ? boosts.nerd_rage.value : 0.0;\r\n    }\r\n\r\n    static setupCard(card, rank, x=1) {\r\n        if (rank === 0) {\r\n            x = 1;\r\n        }\r\n        card.rank = rank;\r\n        card.x = x;\r\n        card.value = card.rank_values[card.rank - 1] * x;\r\n        card.is_used = (rank !== 0);\r\n        card.displayed_value = card.value;\r\n    }\r\n\r\n    static getImageNamesForPickedCards(boosts) {\r\n        const result = [];\r\n        for (const name in boosts) {\r\n            const perk = boosts[name];\r\n            if (perk.is_used) {\r\n                result.push(perk.im_name);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static buildWithOptions(wType, automatic, energyTag, explosiveTag, fusionTag, oneHandedTag, twoHandedTag, silencerTag, shotgunTag, main, temp, leg, drink, team, lowHp, pa, explosive, crit, sneak, night, useSerums, player, bodyTags, creatureTags) {\r\n        let boosts = defaultBoosts();\r\n        if (main) {\r\n            PerkCardBuilder.setupCard(boosts.bloody_mess, 3);\r\n            if (bodyTags.includes(\"glowing\")) {\r\n                PerkCardBuilder.setupCard(boosts.glow_sight, 3);\r\n            }\r\n        }\r\n        if (silencerTag && sneak && night && main) {\r\n            PerkCardBuilder.setupCard(boosts.mister_sandman, 2);\r\n        }\r\n        if (useSerums && main) {\r\n            PerkCardBuilder.setupCard(boosts.class_freak, 3);\r\n        }\r\n        if (team && main) {\r\n            PerkCardBuilder.setupCard(boosts.strange_in_numbers, 1);\r\n        }\r\n        if (crit && main) {\r\n            PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n        }\r\n        if (lowHp && main) {\r\n            PerkCardBuilder.setupCard(boosts.nerd_rage, 3);\r\n            player.health.value = 20;\r\n        }\r\n        if (energyTag && wType !== \"Heavy\" && main) {\r\n            PerkCardBuilder.setupCard(boosts.science, 6);\r\n        }\r\n        if (fusionTag && main) {\r\n            PerkCardBuilder.setupCard(boosts.power_user, 3);\r\n        }\r\n        if (temp) {\r\n            PerkCardBuilder.setupCard(boosts.adrenaline, 5, 6);\r\n            PerkCardBuilder.setupCard(boosts.tenderizer, 3);\r\n        }\r\n        if (leg) {\r\n            if (sneak) {\r\n                PerkCardBuilder.setupCard(boosts.follow_through, 4);\r\n            } else {\r\n                PerkCardBuilder.setupCard(boosts.toft, 4);\r\n            }\r\n        }\r\n        if (sneak && main) {\r\n            if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n                PerkCardBuilder.setupCard(boosts.ninja, 3);\r\n            } else {\r\n                PerkCardBuilder.setupCard(boosts.covert_operative, 3);\r\n            }\r\n        }\r\n        if (explosive && main) { // Works with rockets / grenades?\r\n            PerkCardBuilder.setupCard(boosts.demolition_expert, 5);\r\n        }\r\n        if (main) {\r\n            switch(wType) {\r\n                case \"Heavy\":\r\n                    if (pa) {\r\n                        PerkCardBuilder.setupCard(boosts.stabilized, 3); // Works with rockets / grenades?\r\n                    }\r\n                    PerkCardBuilder.setupCard(boosts.lock_and_load, 3); // Works with rockets / grenades?\r\n                    if (!explosiveTag) { // Are rockets / grenades weapons boosted by heavy cards?\r\n                        PerkCardBuilder.setupCard(boosts.heavy_gunner, 11);\r\n                    }\r\n                    if (shotgunTag) {\r\n                        PerkCardBuilder.setupCard(boosts.lock_and_load, 2);\r\n                        PerkCardBuilder.setupCard(boosts.heavy_gunner, 9);\r\n                        PerkCardBuilder.setupCard(boosts.shotgunner, 8);\r\n                    }\r\n                    break;\r\n                case \"Shotgun\":\r\n                    PerkCardBuilder.setupCard(boosts.shotgunner, 11);\r\n                    PerkCardBuilder.setupCard(boosts.scattershot, 3);\r\n                    break;\r\n                case \"Rifle\":\r\n                    PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                    if (automatic) {\r\n                        PerkCardBuilder.setupCard(boosts.commando, 11);\r\n                        PerkCardBuilder.setupCard(boosts.ground_pounder, 3);\r\n\r\n                    } else {\r\n                        PerkCardBuilder.setupCard(boosts.rifleman, 11);\r\n                    }\r\n                    break;\r\n                case \"Pistol\":\r\n                    PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                    if (automatic) {\r\n                        PerkCardBuilder.setupCard(boosts.guerrilla, 11);\r\n                    } else {\r\n                        PerkCardBuilder.setupCard(boosts.gunslinger, 11);\r\n                    }\r\n                    break;\r\n                case \"Bow\":\r\n                    PerkCardBuilder.setupCard(boosts.archer, 11);\r\n                    PerkCardBuilder.setupCard(boosts.bow_before_me, 3);\r\n                    break;\r\n                case \"Melee\":\r\n                    PerkCardBuilder.setupCard(boosts.incisor, 3);\r\n                    if (!automatic) {\r\n                        PerkCardBuilder.setupCard(boosts.martial_artist, 3);\r\n                    }\r\n                    if (drink) {\r\n                        PerkCardBuilder.setupCard(boosts.party_girl_boy, 2);\r\n                    }\r\n                    if (oneHandedTag) {\r\n                        PerkCardBuilder.setupCard(boosts.gladiator, 11);\r\n                    } else if (twoHandedTag) {\r\n                        PerkCardBuilder.setupCard(boosts.slugger, 11);\r\n                    }\r\n                    break;\r\n                case \"Unarmed\":\r\n                    PerkCardBuilder.setupCard(boosts.incisor, 3);\r\n                    PerkCardBuilder.setupCard(boosts.martial_artist, 3);\r\n                    PerkCardBuilder.setupCard(boosts.iron_fist, 3);\r\n                    if (drink) {\r\n                        PerkCardBuilder.setupCard(boosts.party_girl_boy, 2);\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        calculateSpecial(boosts);\r\n        if (temp && boosts.special.agility > 15) {\r\n            const extra = boosts.special.agility - 15;\r\n            let adr = 5 - extra;\r\n            if (adr < 0) {\r\n                adr = 0;\r\n            }\r\n            PerkCardBuilder.setupCard(boosts.adrenaline, adr, 6);\r\n            calculateSpecial(boosts);\r\n        }\r\n        if (main && boosts.special.perception < 15 && creatureTags.includes(\"bug\")) {\r\n            let extra = 15 - boosts.special.perception;\r\n            if (extra > 3) {\r\n                extra = 3;\r\n            }\r\n            PerkCardBuilder.setupCard(boosts.exterminator, extra);\r\n            calculateSpecial(boosts);\r\n        }\r\n        player.strange = boosts.strange_in_numbers.displayed_value;\r\n        player.freak = boosts.class_freak.displayed_value;\r\n        player.team = team;\r\n        player.alcoholEffects = (boosts.party_girl_boy.displayed_value) > 0 ? boosts.party_girl_boy.displayed_value : 1;\r\n        return boosts;\r\n    }\r\n}","const perks = require.context('../resources/perks', true, /\\.webp/);\r\n\r\nexport default function getPerkImage(name) {\r\n    try {\r\n        return perks('./' + name + '.webp');\r\n    } catch {\r\n        return '';\r\n    }\r\n}","import perkCards from '../resources/perkCards.json';\r\nimport { getEffect } from '../helpers/EffectProvider';\r\n\r\n\r\nfunction prepareName(name, card) {\r\n    if (!card.legendary && name.startsWith(\"Expert\")) {\r\n        name = name.slice(7, name.length) + \" (Expert)\";\r\n    } else if (!card.legendary && name.startsWith(\"Master\")) {\r\n        name = name.slice(7, name.length) + \" (Master)\";\r\n    }\r\n    return name;\r\n}\r\n\r\nfor (let i = 0; i < perkCards.length; i++) {\r\n    const card = perkCards[i];\r\n    let name;\r\n    if (!card.mPerk1) {\r\n        name = card.mName;\r\n    } else {\r\n        const mPerk = getEffect(card.mPerk1);\r\n        name = mPerk.full;\r\n    }\r\n    name = prepareName(name, card);\r\n    if (card.fPerk1 && card.fPerk1 !== \"\") {\r\n        const fPerk = getEffect(card.fPerk1);\r\n        const name2 = prepareName(fPerk.full, card);\r\n        name = name + \" / \" + name2;\r\n    }\r\n    card[\"fullName\"] = name;\r\n}\r\n\r\nfunction nameComparator(item1, item2) {\r\n    return item1.fullName.localeCompare(item2.fullName);\r\n}\r\n\r\nconst sortedItems = perkCards.sort(nameComparator);\r\n\r\nexport function getSortedPerkCards() {\r\n    return sortedItems;\r\n}\r\n\r\nexport function getPerkCard(id) {\r\n    for (let i = 0; i < sortedItems.length; i++) {\r\n        const item = sortedItems[i];\r\n        if (item.id === id) {\r\n            return item;\r\n        }\r\n    }\r\n    return null;\r\n}","export default class PerkCardTools {\r\n\r\n    static getColor(type) {\r\n        return getComputedStyle(document.documentElement).getPropertyValue(\"--bg-\" + type.toLowerCase() + \"-card-color\");\r\n    }\r\n}","import Button from 'react-bootstrap/Button';\r\nimport PerkCardTools from '../PerkCardTools';\r\n\r\n\r\nexport default function PerkCardButton(props) {\r\n    const bgColor = PerkCardTools.getColor(props.item.type);\r\n    const desc = (props.item.desc && props.item.desc !== \"\") ? props.item.desc : \"-\";\r\n    const legBadge = (props.item.legendary) ? <div className=\"badge bg-lite-shadow2\" style={{backgroundColor: '#ffc700', color: '#513f00'}}>Legendary</div> : <></>;\r\n    return (\r\n        <div>\r\n            <Button id={props.item['id']} className=\"lite-shadow\" variant=\"blue-white-border\" style={{width: '100%', margin: '0.1rem', paddingTop: '0.2rem', paddingBottom: '0.1rem', padding: \"0.3rem\"}} onClick={props.onClick}>\r\n                <div className=\"mb-2\">\r\n                    <h6><b>{props.item.fullName}</b></h6>\r\n                </div>\r\n                <div className=\"p-1 perk-description\">\r\n                    {desc}\r\n                </div>\r\n                <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                    <div className=\"w-100 d-flex pt-2 justify-content-start\">\r\n                        {legBadge}\r\n                    </div>\r\n                    <div className=\"w-100 d-flex pt-2 justify-content-end\">\r\n                        <div className=\"badge bg-lite-shadow2\" style={{backgroundColor: bgColor, color: '#fff'}}>{props.item.type}</div>\r\n                    </div>\r\n                </div>\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import Container from 'react-bootstrap/Container';\r\nimport PerkCardButton from './PerkCardButton';\r\nimport { memo, useState } from 'react';\r\nimport { Pagination, FloatButton } from 'antd';\r\nimport { getPerkCard, getSortedPerkCards } from '../PerkCardProvider';\r\n\r\n\r\n\r\nconst PerkCardItems = memo(function PerkCardItems(props) {\r\n    console.log(\"Perk Card Items\");\r\n    const [pageSize, setPageSize] = useState(20);\r\n    function onItemClick(e) {\r\n        const id = e.currentTarget.id;\r\n        if (!props.currentItem) {\r\n            props.setShowToast(true);\r\n        } else {\r\n            props.setShowToast(!(props.currentItem.id === id && props.showToast));\r\n        }\r\n        props.setCurrentItem(getPerkCard(id));\r\n    }\r\n    const items = [];\r\n    const sortedItems = getSortedPerkCards();\r\n    const needTypeFilter = props.filterType !== 'All';\r\n    for (let i = 0; i < sortedItems.length; i++) {\r\n        const item = sortedItems[i];\r\n        if (needTypeFilter && item.type !== props.filterType) {\r\n            continue;\r\n        }\r\n        if (props.filterStatus === \"Legendary\" && !item.legendary) {\r\n            continue;\r\n        } else if (props.filterStatus === \"Ordinary\" && item.legendary) {\r\n            continue;\r\n        }\r\n        if (props.filterName && props.filterName !== \"\" && !item.fullName.toLowerCase().includes(props.filterName.toLowerCase())) {\r\n            continue;\r\n        }\r\n        items.push(\r\n            <PerkCardButton key={item.id} index={i} item={item} onClick={onItemClick} />\r\n        );\r\n    }\r\n    function onPageChanged(page, pageSize) {\r\n        props.setCurrentPage(page);\r\n        setPageSize(pageSize);\r\n    }\r\n    const paginated = [];\r\n    const start = (props.currentPage - 1) * pageSize;\r\n    const end = start + pageSize;\r\n    for (let i = start; i < end; i++) {\r\n        paginated.push(items[i]);\r\n    }\r\n    return (\r\n        <Container>\r\n            <Pagination className=\"pt-1 pb-3\" align=\"center\" current={props.currentPage} defaultPageSize={pageSize} onChange={onPageChanged} total={items.length} />\r\n            {paginated}\r\n            <Pagination className=\"pt-3\" align=\"center\" current={props.currentPage} defaultPageSize={pageSize} onChange={onPageChanged} total={items.length} />\r\n            <FloatButton.BackTop style={{ right: 60 }} duration={100} visibilityHeight={2000} />\r\n        </Container>\r\n\r\n    );\r\n});\r\n\r\nexport default PerkCardItems;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport BaseDropdown from '../../viewComponents/dropdown/BaseDropdown';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst typeDict = {All: 'All', Strength: 'Strength', Perception: 'Perception', Endurance: 'Endurance', Charisma: 'Charisma', Intelligence: 'Intelligence', Agility: 'Agility', Luck: 'Luck'};\r\nconst statusDict = {All: 'All', Legendary: 'Legendary', Ordinary: 'Ordinary'};\r\n\r\nexport default function PerkCardFilter(props) {\r\n    function nameChanged(e) {\r\n        props.setFilterName(e.target.value);\r\n        props.setCurrentPage(1);\r\n    }\r\n    function onSelectType(e) {\r\n        props.setFilterType(e);\r\n        props.setCurrentPage(1);\r\n    }\r\n    function onSelectStatus(e) {\r\n        props.setFilterStatus(e);\r\n        props.setCurrentPage(1);\r\n    }\r\n    return (\r\n        <div>\r\n            <InputGroup className=\"ps-1 pe-1 pb-2 flex-nowrap\">\r\n                <BaseDropdown title={'Type'} dict={typeDict} onSelect={onSelectType}></BaseDropdown>\r\n                <Form.Control style={{width: '10rem'}} maxLength=\"70\" onChange={nameChanged} />\r\n                <BaseDropdown title={'Status'} dict={statusDict} onSelect={onSelectStatus}></BaseDropdown>\r\n            </InputGroup>\r\n        </div>\r\n    );\r\n}","import Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport StackEffectView from '../../helpers/views/StackEffectView';\r\n\r\n\r\nexport default function PerkCardToast(props) {\r\n    if (!props.showToast || !props.item) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <ToastContainer\r\n            className=\"p-3 position-fixed p-3\"\r\n            position={\"top-center\"}\r\n            role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\r\n            style={{ zIndex: 10 }}>\r\n            <Toast bg=\"light\" onClose={(e) => props.setShowToast(false)} show={props.showToast} animation={false}>\r\n                <Toast.Header className=\"pe-3\">\r\n                    <strong className=\"ms-2 mt-auto mb-auto p-auto me-auto\">{props.item['fullName']}</strong>\r\n                </Toast.Header>\r\n                <Toast.Body className={\"pt-1 pb-2 modal-scroll-60 p-2\"}>\r\n                    <StackEffectView item={props.item} />\r\n                </Toast.Body>\r\n            </Toast>\r\n        </ToastContainer>\r\n    );\r\n}","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { memo, useState } from 'react';\r\nimport StaticPopoverRenderer from '../../viewComponents/popover/StaticPopoverRenderer';\r\nimport Global from '../../helpers/Global';\r\nimport Button from 'react-bootstrap/Button';\r\nimport PerkCardItems from './PerkCardItems';\r\nimport PerkCardFilter from './PerkCardFilter';\r\nimport PerkCardToast from './PerkCardToast';\r\nimport FilterDisplay from '../../consumables/view/FilterDisplay';\r\n\r\n\r\nconst questionPopoverHeader = (<b>Perk Cards</b>);\r\n\r\nconst questionPopoverBody = (\r\n    <>\r\n        <div><b>Items with next properties are not included:</b></div>\r\n        <div>⁃<i> Vault</i></div>\r\n        <div>⁃<i> CUT</i></div>\r\n        <div>⁃<i> zzz_Babylon</i></div>\r\n        <div className=\"mb-2\">⁃<i> zzz_deleted</i></div>\r\n        <div className=\"mb-2\"><b>Parsed from:</b></div>\r\n        <div><i>{Global.perkCardParseVersion}</i></div>\r\n        <div><i>{Global.perkCardParseVersionName}</i></div>\r\n    </>\r\n);\r\n\r\nconst questionPopover = new StaticPopoverRenderer(questionPopoverHeader, questionPopoverBody, 'PerkCardQuestionPopoverPlace');\r\n\r\nconst PerkCardView = memo(function PerkCardView() {\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [filterName, setFilterName] = useState(\"\");\r\n    const [filterType, setFilterType] = useState(\"All\");\r\n    const [filterStatus, setFilterStatus] = useState(\"All\"); // Legendary / Non Legendary\r\n    function onQClick(e) {\r\n        questionPopover.renderToggle(e.target);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"7\">\r\n                <Accordion.Header>\r\n                    <div id=\"PerkCardQuestionPopoverPlace\"></div>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '12rem'}}>\r\n                            <span className=\"ac-text\">Perk Cards</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '2rem'}} onClick={onQClick}>?</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <PerkCardToast item={currentItem} showToast={showToast} setShowToast={setShowToast} />\r\n                    <PerkCardFilter setFilterType={setFilterType} setFilterName={setFilterName} filterType={filterType} setCurrentPage={setCurrentPage} filterStatus={filterStatus} setFilterStatus={setFilterStatus} />\r\n                    <FilterDisplay filterType={filterType} filterEffect={filterStatus} />\r\n                    <PerkCardItems filterType={filterType} filterName={filterName} filterStatus={filterStatus} currentPage={currentPage} setCurrentPage={setCurrentPage} currentItem={currentItem} setCurrentItem={setCurrentItem} showToast={showToast} setShowToast={setShowToast} />\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PerkCardView;","import { useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nconst { Chart } = await import('chart.js/auto');\r\n\r\n\r\nfunction getData(values, label, color) {\r\n    return {\r\n        datasets: [{\r\n            label: label,\r\n            data: values,\r\n            borderColor: color,\r\n            pointRadius: 1.5,\r\n            borderWidth: 2,\r\n            fill: false,\r\n        }],\r\n    };\r\n}\r\n\r\nfunction getConfig(data) {\r\n    return {\r\n        type: 'line',\r\n        data: data,\r\n        options: {\r\n            plugins: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n            },\r\n            elements: {\r\n                line: {\r\n                    tension: 0,\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    position: 'bottom',\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Level',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                },\r\n                y: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Resistance',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                }\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\nfunction drawChart(config, chartId) {\r\n    const curChart = Chart.getChart(chartId);\r\n    if (curChart) {\r\n        curChart.destroy();\r\n    }\r\n    new Chart(document.getElementById(chartId), config);\r\n}\r\n\r\nfunction getCanvas(id) {\r\n    if (!id) {\r\n        return (<></>);\r\n    }\r\n    return (<canvas id={id}></canvas>);\r\n}\r\n\r\nexport default function ChartView(props) {\r\n    const config = getConfig(getData(props.values, props.title + \" Resistance\", props.color));\r\n    useEffect(() => {\r\n        drawChart(config, props.chartId);\r\n    });\r\n\r\n    return (\r\n        <Card className={props.className} style={{minWidth: '18rem'}}>\r\n            <Card.Header className={props.headerClassName}>\r\n                {props.title}\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex justify-content-center p-0\">\r\n                {getCanvas(props.chartId)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag } from 'antd';\r\n\r\n\r\nexport default function GeneralRaceView(props) {\r\n    if (!props.race) {\r\n        return (<></>)\r\n    }\r\n    const codeName = props.race.name;\r\n    const id = props.race.id;\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col className=\"d-flex justify-content-end p-0 me-1\">\r\n                    <Tag bordered={true} color=\"red\" className=\"shadow-outline m-0\"><strong>Id: {id}</strong></Tag>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mt-2\">\r\n                <Col className=\"d-flex justify-content-end p-0 me-1\">\r\n                    <Tag bordered={true} color=\"blue\" className=\"shadow-outline m-0\"><strong>Code: {codeName}</strong></Tag>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag, Divider } from 'antd';\r\nimport { numberToString } from '../../helpers/StringHelpers';\r\n\r\n\r\n// const colors = [\"volcano\", \"red\", \"magenta\", \"blue\", \"purple\"];\r\n\r\nfunction getColTagView(tag, index, position=\"center\") {\r\n    // colors[getRandomNumber(colors.length)]\r\n    return (\r\n        <Col key={tag + index} className={\"m-1 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <Tag className=\"m-0 shadow-outline\" bordered={true} color={\"purple\"}>\r\n                <b>{tag}</b>\r\n            </Tag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction getTagView(tag, index, position, color) {\r\n    return (\r\n        <div className={\"m-0 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <Tag className=\"shadow-outline m-1\" bordered={true} color={color}>\r\n                <b>{tag}</b>\r\n            </Tag>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function RaceBodyView({bodyData}) {\r\n    const body = bodyData.body;\r\n    if (body) {\r\n        const result = [];\r\n        let index = 0\r\n        for (const partName in body) {\r\n            index += 1;\r\n            const part = body[partName];\r\n            const partText = part.name + \" ‣ \" + numberToString(part.damage_mult, 2) + \"x\"\r\n            result.push(getColTagView(partText, index, \"center\"));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-4 mb-1\">Body Damage Multipliers</Divider>\r\n                {getTagView(\"Id: \" + bodyData.id, 0, \"end\", \"red\")}\r\n                {getTagView(\"Id: \" + bodyData.name, 0, \"end\", \"blue\")}\r\n                <div className=\"m-3\" />\r\n                <Row className=\"ps-1 pe-1 pb-2\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","export default class RaceTools {\r\n\r\n    static prepareRaceName(name) {\r\n        if (name.endsWith(\"_Race\")) {\r\n            name = name.substring(0, name.length - 5);\r\n        }\r\n        else if (name.endsWith(\"Race\")) {\r\n            name = name.substring(0, name.length - 4);\r\n        }\r\n        if (name.startsWith(\"ZZZ_\") || name.startsWith(\"zzz_\") || name.startsWith(\"ATX_\") || name.startsWith(\"XPD_\")) {\r\n            name = name.substring(4, name.length);\r\n        }\r\n        return name;\r\n    }\r\n}","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport RaceTools from '../RaceTools';\r\nimport { memo } from 'react';\r\n\r\n\r\nfunction getItems(pairs) {\r\n    const result = [];\r\n    for (let i = 0; i < pairs.length; i++) {\r\n        const pair = pairs[i];\r\n        const value = RaceTools.prepareRaceName(pair.value);\r\n        result.push(<Dropdown.Item key={pair.key} eventKey={pair.key}>{value}</Dropdown.Item>)\r\n    }\r\n    return result;\r\n}\r\n\r\nconst RaceDropdown = memo(function RaceDropdown(props) {\r\n    let raceName = \"Choose a race\";\r\n    if (props.raceName) {\r\n        raceName = RaceTools.prepareRaceName(props.raceName);\r\n    }\r\n    function onSelect(e) {\r\n        props.setRaceName(e);\r\n    }\r\n    return (\r\n        <Row className=\"p-1 mb-2 mt-0\">\r\n            <Col className=\"d-flex justify-content-center\">\r\n                <DropdownButton variant='warning' size=\"sm\" onSelect={onSelect} title={<strong>{raceName}</strong>}>\r\n                    {getItems(props.pairs)}\r\n                </DropdownButton>\r\n            </Col>\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default RaceDropdown;\r\n\r\n","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag, Divider } from 'antd';\r\n\r\n\r\nfunction getTagView(tag) {\r\n    return (\r\n        <Col key={tag} className=\"m-0 ps-0 pe-0 d-flex justify-content-center\">\r\n            <Tag className=\"m-1 shadow-outline\" bordered={true} color=\"default\">\r\n                <b>{tag}</b>\r\n            </Tag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function RaceTagView({tags}) {\r\n    if (tags && tags.length > 0) {\r\n        const result = [];\r\n        for (let i = 0; i < tags.length; i++) {\r\n            result.push(getTagView(tags[i]));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-3 mb-1\">Tags</Divider>\r\n                <Row className=\"ps-1 pe-1\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport ResistanceView from './ResistanceView';\r\nimport RaceTagView from './RaceTagView';\r\nimport RaceBodyView from './RaceBodyView';\r\nimport { memo, useState } from 'react';\r\nimport raceItems from '../../resources/race.json';\r\nimport RaceDropdown from './RaceDropdown';\r\nimport GeneralRaceView from './GeneralRaceView';\r\nimport Container from 'react-bootstrap/Container';\r\nimport StaticPopoverRenderer from '../../viewComponents/popover/StaticPopoverRenderer';\r\nimport Global from '../../helpers/Global';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst questionPopoverHeader = (<b>Races</b>);\r\n\r\nconst questionPopoverBody = (\r\n    <>\r\n        <div className=\"mb-2\"><b>Parsed from:</b></div>\r\n        <div><i>{Global.raceParseVersion}</i></div>\r\n        <div><i>{Global.raceParseVersionName}</i></div>\r\n    </>\r\n);\r\n\r\nconst questionPopover = new StaticPopoverRenderer(questionPopoverHeader, questionPopoverBody, 'RaceViewQuestionPopoverPlace');\r\n\r\nconst raceMap = new Map();\r\nconst racePairs = [];\r\n\r\nfunction raceComparator(race1, race2) {\r\n    const name1 = race1.key;\r\n    const name2 = race2.key;\r\n    return name1.localeCompare(name2)\r\n}\r\n\r\nfor (let i = 0; i < raceItems.length; i++) {\r\n        const item = raceItems[i];\r\n        const it = raceMap.get(item.full);\r\n        if (it) {\r\n            console.log(\"Same name: \" + it.id + \" \" + item.id);\r\n        }\r\n        raceMap.set(item.full, item);\r\n        racePairs.push({key: item.full, value: item.full});\r\n}\r\n\r\nracePairs.sort(raceComparator);\r\n\r\nfunction getRaceTagView(race) {\r\n    if (!race) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <RaceTagView tags={race.tags} />\r\n    );\r\n}\r\n\r\nfunction getRaceBodyView(race) {\r\n    if (!race) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <RaceBodyView bodyData={race.bodyData} />\r\n    );\r\n}\r\n\r\nconst RaceView = memo(function RaceView() {\r\n    const [raceName, setRaceName] = useState(null);\r\n    let race = null;\r\n    if (raceName) {\r\n        race = raceMap.get(raceName);\r\n    }\r\n    function onQClick(e) {\r\n        questionPopover.renderToggle(e.target);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"5\">\r\n                <Accordion.Header>\r\n                    <div id=\"RaceViewQuestionPopoverPlace\"></div>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '12rem'}}>\r\n                            <span className=\"ac-text\">Races</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '2rem'}} onClick={onQClick}>?</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <Container>\r\n                        <RaceDropdown pairs={racePairs} raceName={raceName} setRaceName={setRaceName} />\r\n                        <GeneralRaceView race={race} />\r\n                        {getRaceTagView(race)}\r\n                        {getRaceBodyView(race)}\r\n                        <ResistanceView race={race} />\r\n                    </Container>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default RaceView;","import ChartView from \"./ChartView\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Divider } from 'antd';\r\nimport CreatureDataProvider from '../../creature/CreatureDataProvider';\r\n\r\n\r\nfunction buildResCols(res) {\r\n    const result = [];\r\n    for (const name in res) {\r\n        const cRes = res[name];\r\n        const typeData = CreatureDataProvider.getStyle(name);\r\n        result.push(\r\n            <Col className=\"d-flex justify-content-center\" key={name}>\r\n                <ChartView className=\"d-flex justify-content-center m-1\" color={typeData[2]} headerClassName={typeData[1]} title={typeData[0]} chartId={name} values={cRes.curve} />\r\n            </Col>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function ResistanceView(props) {\r\n    if (!props.race || Object.keys(props.race.resistance).length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className=\"p-0 mt-3 mb-2\">Resistance</Divider>\r\n            <Row className=\"d-flex justify-content-center\">\r\n                {buildResCols(props.race.resistance)}\r\n            </Row>\r\n        </>\r\n    )\r\n}","import { Tag, Divider } from 'antd';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { keyValueTag } from '../helpers/RowBuilder';\r\nimport { getEffectsForPopover, getSpellHeader } from '../helpers/SpellView';\r\nimport getSpell from '../helpers/Spell';\r\nimport { truncate } from '../helpers/Input';\r\n\r\n\r\nfunction buildModCard(key, mod_e, color) {\r\n    if (mod_e.prop === \"Enchantments\") {\r\n        const spell = getSpell().get(mod_e.val1);\r\n        const effects = spell.mag_effects;\r\n        return (\r\n            <Card key={key} className=\"mb-1 mt-1\">\r\n                {keyValueTag(mod_e.op, mod_e.prop, color)}\r\n                {getSpellHeader(spell, '20rem')}\r\n                {getEffectsForPopover(effects)}\r\n            </Card>\r\n        );\r\n    } else {\r\n        const val1 = truncate(mod_e.val1, 30);\r\n        const val2 = truncate(mod_e.val2, 30);\r\n        return (\r\n            <Card key={key} className=\"mb-1 mt-1\">\r\n                {keyValueTag(mod_e.op, mod_e.prop, color)}\r\n                {keyValueTag('Val1:', val1, color)}\r\n                {keyValueTag('Val2:', val2, color)}\r\n                {keyValueTag('Curv:', mod_e.curv, color)}\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nfunction getMods(mods) {\r\n    let result = []\r\n    let color = 'purple';\r\n    for (let i = 0; i < mods.length; i++) {\r\n        const mod_e = mods[i];\r\n        result.push(buildModCard(i, mod_e, color));\r\n        if (color === 'purple') {\r\n            color = 'magenta';\r\n        } else {\r\n            color = 'purple';\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function popoverContent(modData) {\r\n    return (\r\n        <>\r\n            <Tag className=\"m-1\" color={'indigo'}><strong>{modData.id}</strong></Tag>\r\n            <Tag className=\"m-1\" color={'red'}>{modData.codeName}</Tag>\r\n            <Divider className='mt-1 mb-2'></Divider>\r\n            {getMods(modData.modifiers)}\r\n        </>\r\n    );\r\n}","import { ModTools } from '../helpers/mods/ModTools';\r\nimport Strings from '../helpers/Strings';\r\n\r\n\r\nexport default class TemplateTools {\r\n\r\n    // ATTENTION! Do not exclude activated by default\r\n    static excludedModIds = {\r\n        \"00693d37\" : [\"00496566\", \"001ac24e\", \"00147b02\", \"00496564\", \"00496565\"], // Blue flamer (Holy fire)\r\n        \"000e5881\" : [\"00496566\", \"001ac24e\", \"00147b02\", \"00496564\", \"00496565\", \"006e06a3\"],\r\n    }\r\n\r\n    static excludeMod(wId, mId) {\r\n        const eIds = TemplateTools.excludedModIds[wId];\r\n        if (eIds) {\r\n            for (let i = 0; i < eIds.length; i++) {\r\n                const eId = eIds[i];\r\n                if (eId === mId) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Get rid of mods which do not influence on damage or hidden\r\n    static getDamagedModIndexes(template, includeGroups, accuracyMods, silencerDamage) {\r\n        const result = {}\r\n        for (const categoryName in template.allMods) {\r\n            const mods = template.allMods[categoryName];\r\n            const exclude = includeGroups && !includeGroups.includes(categoryName);\r\n            let defaultIndex = -1;\r\n            let accuracyBestIndex = -1;\r\n            let indexes = [];\r\n            for (let i = 0; i < mods.length; i++) {\r\n                const mod = mods[i];\r\n                const modId = mod[0];\r\n                if (exclude) { // Care only about default if it is presented\r\n                    if (mod[1]) {\r\n                        defaultIndex = i;\r\n                        break;\r\n                    }\r\n                } else if (!TemplateTools.excludeMod(template.id, modId) && !mod[3]) { // 3-hidden\r\n\r\n                    // 4-useful (means directly affecting on damage)\r\n                    if (mod[4]) {\r\n                        if (ModTools.hasSilencerById(modId)) {\r\n                            if (silencerDamage) {\r\n                                indexes.push(i);\r\n                            }\r\n                        } else {\r\n                            indexes.push(i);\r\n                        }\r\n                    } else if (accuracyBestIndex === -1) {\r\n                        const bestMod = accuracyMods[categoryName];\r\n                        if (bestMod && bestMod === modId) {\r\n                            accuracyBestIndex = i;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (exclude) { // Can't choose, using only default one\r\n                indexes = [defaultIndex];\r\n            } else if (indexes.length === 0) { // All are damage useless, using best accuracy or default\r\n                if (accuracyBestIndex === -1) {\r\n                    indexes = [defaultIndex];\r\n                } else {\r\n                    indexes = [accuracyBestIndex];\r\n                }\r\n            }\r\n            result[categoryName] = indexes;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static resetMods(template) {\r\n        const modCategories = template.allMods;\r\n        for (const modCategory in modCategories) {\r\n            const mods = modCategories[modCategory];\r\n            for (let i = 0; i < mods.length; i++) {\r\n                const mod = mods[i];\r\n                mod[1] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getImage(template) {\r\n        return template.iconName[template.type[1]];\r\n    }\r\n\r\n    static hasDefaultLegendary(template) {\r\n        const leg1 = template.legendary1;\r\n        const leg2 = template.legendary2;\r\n        const leg3 = template.legendary3;\r\n        const leg4 = template.legendary4;\r\n        const leg5 = template.legendary5;\r\n        return (leg1.id || leg2.id || leg3.id || leg4.id || leg5.id);\r\n    }\r\n\r\n    static getDefaultLegendary(template, legendarySetter) {\r\n        const result = [];\r\n        const obj = legendarySetter.extractDefaultLegendary(template);\r\n        const leg1 = obj.legendary1;\r\n        const leg2 = obj.legendary2;\r\n        const leg3 = obj.legendary3;\r\n        const leg4 = obj.legendary4;\r\n        const leg5 = obj.legendary5;\r\n        if (leg1) {\r\n            result.push([leg1.id, 0]);\r\n        }\r\n        if (leg2) {\r\n            result.push([leg2.id, 1]);\r\n        }\r\n        if (leg3) {\r\n            result.push([leg3.id, 2]);\r\n        }\r\n        if (leg4) {\r\n            result.push([leg4.id, 3]);\r\n        }\r\n        if (leg5) {\r\n            result.push([leg5.id, 4]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static isWeaponRanged(template) {\r\n        return TemplateTools.isWeaponRangedByType(template.type[1]);\r\n    }\r\n\r\n    static isWeaponRangedByType(type) {\r\n        return !(type === Strings.Melee || type === Strings.Unarmed);\r\n    }\r\n\r\n    static isWeaponExplosive(template) {\r\n        return template['exp'][1] > 0;\r\n    }\r\n\r\n    static hasPhysicalDamage(template) {\r\n        return template['bbDamage'][1] > 0;\r\n    }\r\n\r\n    static getGroups(templates, set) {\r\n        for (let i = 0; i < templates.length; i++) {\r\n            for (const name in templates[i].allMods) {\r\n                set.add(name);\r\n            }\r\n        }\r\n    }\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { convertTemplateToSpecs } from '../entities/EWeaponSpecs';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction modalView(loading, name, applyTemplate, onHide) {\r\n    if (loading) {\r\n        return (\r\n            <Modal.Body>\r\n                <b>Loading...</b>\r\n            </Modal.Body>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Apply Template\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to apply '{name}' template? Current weapon properties will be replaced.\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={applyTemplate}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function ModalApplyTemplate(props) {\r\n    console.log(\"ModalApplyTemplate\");\r\n    const [loading, setLoading] = useState(false);\r\n    if (!props.modalTemplate.show) {\r\n        return (<></>);\r\n    }\r\n    let name = \"\";\r\n    if (props.modalTemplate.template) {\r\n        name = props.modalTemplate.template.name;\r\n    }\r\n    name = truncateLongWords(name, 25);\r\n    function onHide(e) {\r\n        setLoading(false);\r\n        props.setModalTemplate({template: null, show: false});\r\n    }\r\n\r\n    function applyTemplate(e) {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const template = props.modalTemplate.template;\r\n            const specItem = convertTemplateToSpecs(template, false);\r\n            props.setWSpec(specItem);\r\n            onHide(e);\r\n        }, 100);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show = {props.modalTemplate.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            {modalView(loading, name, applyTemplate, onHide)}\r\n        </Modal>\r\n    );\r\n}","import getAmmo from '../helpers/Ammo';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Collapse } from 'antd';\r\nimport { getField } from './ViewHelper';\r\nimport { buildProjViewById } from './ProjView';\r\n\r\n\r\nfunction buildProj(proj) {\r\n    const result = [];\r\n    if (proj && proj.length > 0) {\r\n        for (let i = 0; i < proj.length; i++) {\r\n            const projId = proj[i];\r\n            result.push(\r\n                <Card key={i} className=\"m-0 mt-2 p-0 bg-light-pink\">\r\n                    <Card.Header className='m-0 p-1 ps-2 bg-proj-header'><small>Projectile</small></Card.Header>\r\n                    <Card.Body className=\"p-1 m-0\">\r\n                        {buildProjViewById(projId)}\r\n                    </Card.Body>\r\n                </Card>\r\n            );\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction buildAmmoView(ammoData, proj) {\r\n    return (\r\n        <>\r\n            <Row className='bg-lite'>\r\n                {getField(ammoData, 'Id:', 'id', 'default', '20rem')}\r\n                {getField(ammoData, 'Code Name:', 'name', 'purple', '20rem')}\r\n                {getField(ammoData, 'Full Name:', 'full', 'purple', '20rem')}\r\n                {getField(ammoData, 'Type:', 'ammo_type', 'blue', '20rem')}\r\n                {getField(ammoData, 'Value:', 'value', 'blue', '20rem')}\r\n                {getField(ammoData, 'Weight:', 'weight', 'blue', '20rem', true, 3)}\r\n                {getField(ammoData, 'Damage:', 'damage', 'blue', '20rem', false)}\r\n                {getField(ammoData, 'Health:', 'health', 'blue', '20rem', false)}\r\n            </Row>\r\n            {buildProj(proj)}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction ammoInfo(className, id, overrideProj) {\r\n    if (id === '') {\r\n        return (<></>);\r\n    }\r\n    const ammoData = getAmmo().get(id);\r\n    let proj = [ammoData['projectile']];\r\n    if (overrideProj && overrideProj.length > 0) {\r\n        proj = overrideProj;\r\n    }\r\n\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>Ammo</strong>,\r\n            children: <>{buildAmmoView(ammoData, proj)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Collapse size='small' items={items} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// overrideProj is deprecated, only Additional projectile seems can be overridden\r\nexport default function AmmoView({className, ammoId, overrideProj}) {\r\n    return ammoInfo(className, ammoId, overrideProj);\r\n}","import { getField } from './ViewHelper';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nfunction getDamagesData(damageData, width='20rem') {\r\n    let result = [];\r\n    for (let i = 0; i < damageData.length; i++) {\r\n        result.push(getDamageData(i, damageData[i], width));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getDamageData(key, damageData, width='20rem') {\r\n    return (\r\n        <Card className='p-0 m-1' key={key}>\r\n            <Row>\r\n                {getField(damageData, 'Id:', 'type_id', 'default', width)}\r\n                {getField(damageData, 'Code Name:', 'type_name', 'purple', width)}\r\n                {getField(damageData, 'Name:', 'type_full_name', 'purple', width)}\r\n                {getField(damageData, 'DCurv:', 'curv', 'blue', width)}\r\n                {getField(damageData, 'Value:', 'value', 'blue', width)}\r\n                {getField(damageData, 'Magnitude:', 'magnitude', 'blue', width)}\r\n                {getField(damageData, 'Time:', 'time', 'blue', width)}\r\n                {getField(damageData, 'Interval:', 'interval', 'blue', width)}\r\n            </Row>\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction buildCard(damageData, header, className) {\r\n    if (damageData) {\r\n        return (\r\n            <Card className=\"bg-light-pink\">\r\n                <Card.Header className={className}>\r\n                    <small>{header}</small>\r\n                </Card.Header>\r\n                <Card.Body className=\"p-0 m-0\">\r\n                    {getDamagesData(damageData)}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nexport default function DamageView({damageData}) {\r\n    return (\r\n        <>\r\n            {buildCard(damageData.Base, \"Damage\", \"bg-damage-header m-0 p-1 ps-2\")}\r\n        </>\r\n    );\r\n}","import { keyValueTag } from '../helpers/RowBuilder';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Collapse } from 'antd';\r\nimport { getField, getResolvedField } from './ViewHelper';\r\nimport SpellView from './SpellView';\r\nimport DamageView from './DamageView';\r\n\r\n\r\nfunction getTags(template) {\r\n    let result = [];\r\n    const tagNames = template['tags'];\r\n    for (let i = 0; i < tagNames.length; i++) {\r\n        result.push(\r\n            (\r\n                <Col key={i} className='d-flex justify-content-center'>\r\n                    {keyValueTag(\"Tag: \",  tagNames[i], 'magenta', {width: '20rem'})}\r\n                </Col>\r\n            )\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction buildGeneralView(template) {\r\n    const auto = (template.isAuto[1] === 1) ? \"Yes\" : \"No\";\r\n    const crit = template.crMult + template.crit[1] / 100.0;\r\n    const crit_spells = template.crSpellId[1];\r\n    let crit_views = [];\r\n    for (let i = 0; i < crit_spells.length; i++) {\r\n        crit_views.push(<SpellView key={i} spellId={crit_spells[i]} header={\"Crit Spell\"}></SpellView>);\r\n    }\r\n    return (\r\n        <>\r\n            <Row className=\"mb-2 bg-lite\">\r\n                {getField(template, 'Id:', 'id', 'default', '20rem')}\r\n                {getField(template, 'Code Name:', 'cName', 'purple', '20rem')}\r\n                {getField(template, 'Full Name:', 'name', 'purple', '20rem')}\r\n                {getResolvedField(\"Automatic\", auto, 'blue', '20rem')}\r\n                {getField(template, 'AP:', 'ap', 'blue', '20rem', false, 3, 1)}\r\n                {getField(template, 'Weight:', 'weight', 'blue', '20rem', false, 3, 1)}\r\n                {getField(template, 'Levels:', 'levels', 'blue', '20rem')}\r\n                {getResolvedField('Crit Mult:', crit, 'blue', '20rem', false, 3)}\r\n                {getField(template, 'Crit Charge:', 'crChar', 'blue', '20rem')}\r\n                {getField(template, 'Crit Spell:', 'crSpellId', 'blue', '20rem', true, 0, 1)}\r\n                {getTags(template)}\r\n            </Row>\r\n            <DamageView damageData={template['damageData']}></DamageView>\r\n            <div className=\"mb-2\" />\r\n            <SpellView spellId={template.spellId} header={\"Base Spell\"}></SpellView>\r\n            <div className=\"mb-2\" />\r\n            {crit_views}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction general(template) {\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>General</strong>,\r\n            children: <>{buildGeneralView(template)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Collapse size='small' items={items} />\r\n    );\r\n}\r\n\r\nconst GeneralView = function GeneralView(props) {\r\n    return general(props.template);\r\n}\r\n\r\nexport default GeneralView;","import { keyValueBadge } from './RowBuilder';\r\nimport {  Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nfunction formatName(legendaryName) {\r\n    const tail = \" Legendary Mod\";\r\n    if (legendaryName.endsWith(tail)) {\r\n        return legendaryName.slice(0, legendaryName.length - tail.length);\r\n    }\r\n    return legendaryName;\r\n}\r\n\r\nexport default function LegendaryView({template}) {\r\n    const isLeg1 = (Object.keys(template.legendary1).length > 0);\r\n    const isLeg2 = (Object.keys(template.legendary2).length > 0);\r\n    const isLeg3 = (Object.keys(template.legendary3).length > 0);\r\n    const isLeg4 = (Object.keys(template.legendary4).length > 0);\r\n    const isLeg5 = (Object.keys(template.legendary5).length > 0);\r\n    if (isLeg1 || isLeg2 || isLeg3 || isLeg4 || isLeg5) {\r\n        const leg1 = (isLeg1) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐\", formatName(template.legendary1.name)) : (<></>);\r\n        const leg2 = (isLeg2) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐⭐\", formatName(template.legendary2.name)) : (<></>);\r\n        const leg3 = (isLeg3) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐⭐⭐\", formatName(template.legendary3.name)) : (<></>);\r\n        const leg4 = (isLeg4) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐⭐⭐⭐\", formatName(template.legendary4.name)) : (<></>);\r\n        const leg5 = (isLeg5) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐⭐⭐⭐⭐\", formatName(template.legendary5.name)) : (<></>);\r\n        return (\r\n            <>\r\n                <Divider className='m-1 p-1'>Legendary</Divider>\r\n                <Row className=\"m-1 d-flex justify-content-center\">\r\n                    {leg1}\r\n                    {leg2}\r\n                    {leg3}\r\n                    {leg4}\r\n                    {leg5}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import { getField, getResolvedField } from './ViewHelper';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Collapse } from 'antd';\r\n\r\n\r\nfunction getDamagesData(damageData, width='20rem') {\r\n    let result = [];\r\n    for (let i = 0; i < damageData.length; i++) {\r\n        result.push(getDamageData(i, damageData[i], width));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getDamageData(key, damageData, width='20rem') {\r\n    return (\r\n            <Card key={key} className=\"mt-1 mb-1 bg-lite\">\r\n                <Row>\r\n                    {getField(damageData, 'Damage From:', 'directParent', 'default', width, false)}\r\n                    {getField(damageData, 'Damage Type Id:', 'type_id', 'default', width, false)}\r\n                    {getField(damageData, 'Code Name:', 'type_name', 'purple', width, false)}\r\n                    {getField(damageData, 'Name:', 'type_full_name', 'purple', width, false)}\r\n                    {getField(damageData, 'DCurv:', 'curv', 'blue', width, false)}\r\n                    {getField(damageData, 'DValue:', 'value', 'blue', width, false)}\r\n                    {getField(damageData, 'Magnitude:', 'magnitude', 'blue', width, false)}\r\n                    {getField(damageData, 'Time:', 'time', 'blue', width, false)}\r\n                    {getField(damageData, 'Interval:', 'interval', 'blue', width, false, 3)}\r\n                    {getResolvedField('Destructible:', damageData.destructible.toString(), 'blue', width, false)}\r\n                    {getResolvedField('Parent:', damageData.parent, 'indigo', width, false)}\r\n                </Row>\r\n            </Card>\r\n    )\r\n}\r\n\r\nfunction buildCard(key, damageData, header, className) {\r\n    if (damageData) {\r\n        return (\r\n            <Card key={key} className=\"mt-1 mb-1\">\r\n                <Card.Header className={className}>\r\n                    <small>{header}</small>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    {getDamagesData(damageData)}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getDamageCards(damageData) {\r\n    let result = [];\r\n    let i = 0;\r\n    for (let key in damageData) {\r\n        const damage = damageData[key];\r\n        result.push(buildCard(i++, damage, key, \"bg-proj-header m-0 p-1 ps-2\"))\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction damageCollapse(damageData) {\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>Damage Overview</strong>,\r\n            children: <>{getDamageCards(damageData)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Collapse size='small' items={items} />\r\n    );\r\n}\r\n\r\nexport default function DamageOverview({damageData}) {\r\n    return (\r\n        <>{damageCollapse(damageData)}</>\r\n    );\r\n}","import getMods from '../helpers/Mods';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag } from 'antd';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport { popoverContent } from './ModPropsPopover';\r\nimport { WeaponPopoverOverlay } from '../helpers/WeaponPopoverOverlay';\r\n\r\n\r\nfunction getModRow(modData, def, isUsed) {\r\n    let color = (modData['useful']) ? 'purple' : 'grey';\r\n    if (def) {\r\n        color = 'blue';\r\n    }\r\n    if (isUsed) {\r\n        color = 'brown';\r\n    }\r\n    return (\r\n        <Tag.CheckableTag style={{width: '100%'}}>\r\n            <strong style={{color: color}}>{modData.name}</strong>\r\n        </Tag.CheckableTag>\r\n    );\r\n}\r\n\r\nexport default function ModRow({index, weaponId, modsSameType, checkMod, defMods}) {\r\n    const modSameType = modsSameType[index];\r\n    const modData = getMods().get(modSameType[0]);\r\n    let def = defMods.includes(modSameType[0]);\r\n    const isUsed = modSameType[1];\r\n    const modRow = getModRow(modData, def, isUsed);\r\n    const disabled = !modSameType[2];\r\n    if (modData['hide']) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <Row className=\"p-1\" key={modData.id} title={modData.codeName} id={modData.id}>\r\n            <Col>\r\n                <WeaponPopoverOverlay popoverHeader={modData.name} popoverContent={popoverContent(modData)} itemToOverly={modRow}></WeaponPopoverOverlay>\r\n            </Col>\r\n            <Col className=\"col-auto d-flex justify-content-end\">\r\n                <UCheckbox onChange={(e) => checkMod(e, weaponId, modData, modSameType, modsSameType)} disabled={disabled} checked={isUsed}></UCheckbox>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","const testImagePaths = require.context('../resources/forReadme/Tests', true, /\\.webp$/);\r\nconst versionPaths = require.context('../resources/forReadme/Tests', true, /\\.json$/);\r\n\r\n\r\nexport const testedWeapons = buildTestedWeapons();\r\n\r\nexport function isTested(wId) {\r\n    return (testedWeapons.get(wId)) ? true : false;\r\n}\r\n\r\nfunction buildTestedWeapons() {\r\n    const versions = buildMap(versionPaths);\r\n    const imagesMap = buildMap(testImagePaths);\r\n    let resultMap = new Map();\r\n    imagesMap.forEach((value, key) => {\r\n        const version = versions.get(key)[0];\r\n        const obj = {\r\n            img: value,\r\n            alt: version.alt,\r\n            version: version.version,\r\n        };\r\n        resultMap.set(key, obj);\r\n    });\r\n    return resultMap;\r\n}\r\n\r\nfunction buildMap(paths) {\r\n    let result = new Map();\r\n    paths.keys().map(key => {\r\n        const firstIndex = key.indexOf(\"/\") + 1;\r\n        const lastIndex = key.indexOf(\"/\", firstIndex);\r\n        const id = key.substring(firstIndex, lastIndex);\r\n        let array = result.get(id);\r\n        const path = paths(key);\r\n        if (!array) {\r\n            result.set(id, [path]);\r\n        } else {\r\n            array.push(path);\r\n        }\r\n        return result;\r\n    });\r\n    return result;\r\n}\r\n\r\n\r\n","export const weaponRestrictions = {\r\n    \"00646880\": \"Shredder mod will not add bash damage automatically\",\r\n    \"0001f669\": \"Shredder mod will not add bash damage automatically\",\r\n    \"000d1eb0\": \"Charging has to be setup manually for this weapon\",\r\n}","import Accordion from 'react-bootstrap/Accordion';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport '../css/style.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { bullet, ammo, fireRate } from '../helpers/Emoji';\r\nimport { Tag, Divider, Collapse } from 'antd';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { keyValueBadge } from '../helpers/RowBuilder';\r\nimport { getRowWithImage } from '../helpers/WTypeDropdown'\r\nimport { getImageElement } from '../helpers/WeaponImages'\r\nimport { useState, memo } from 'react';\r\nimport { getTemplateCopyById } from '../helpers/TemplatesRegister';\r\nimport AmmoView from '../helpers/AmmoView';\r\nimport ProjView from '../helpers/ProjView';\r\nimport GeneralView from '../helpers/GeneralView';\r\nimport AdditionalDView from '../helpers/AdditionalDView';\r\nimport LegendaryView from '../helpers/LegendaryView';\r\nimport CritView from '../helpers/CritView';\r\nimport DamageOverview from '../helpers/DamageOverview';\r\nimport ModRow from './ModRow';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { modsSetter } from '../templates/TemplateItems';\r\nimport { WarningPopover } from '../helpers/WarningPopover';\r\nimport { isTested } from './TestedWeapons';\r\nimport { weaponRestrictions } from '../helpers/WeaponRestrictions';\r\n\r\n\r\nfunction getApplyButton(template, setModalTemplate, setModalCalculate, onTestClick) {\r\n    function testedMedal(wId) {\r\n        if (isTested(wId)) {\r\n            return (\r\n                <Button id={wId} variant=\"white\" className=\"p-0 ps-2 pe-2 m-0\" onClick={onTestClick}>\r\n                    <div style={{fontSize: '1.5rem'}}>🎖️</div>\r\n                </Button>\r\n            );\r\n        }\r\n        return (<></>);\r\n    }\r\n    function restrictions(wId) {\r\n        const version = weaponRestrictions[wId];\r\n        if (version) {\r\n            return (\r\n                <WarningPopover element={(\r\n                    <Button variant=\"white\" className=\"p-0 ps-2 pe-2 m-0\">\r\n                        <div style={{fontSize: '1.5rem'}}>📛</div>\r\n                    </Button>\r\n                )} message={version} header={'Restrictions'} />\r\n            );\r\n        }\r\n        return (<></>);\r\n    }\r\n    if (template.apply) {\r\n        return (\r\n            <Row className=\"mt-3\">\r\n                <Col className=\"col-2 d-flex justify-content-center\">\r\n                    {restrictions(template.id)}\r\n                </Col>\r\n                <Col className=\"col-4 d-flex justify-content-center\">\r\n                    <Button style={{minWidth: '6rem'}} onClick={(e) => setModalTemplate({template: template, show: true})}>Choose</Button>\r\n                </Col>\r\n                <Col className=\"col-4 d-flex justify-content-center\">\r\n                    <Button style={{minWidth: '6rem'}} onClick={(e) => setModalCalculate({template: template, show: true})}>Calculate</Button>\r\n                </Col>\r\n                <Col className=\"col-2 justify-content-center center-text\">\r\n                    {testedMedal(template.id)}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getResetButton(template, itemsLength, resetButtonActive, setResetButtonActive) {\r\n    if (itemsLength === 0 || !resetButtonActive) {\r\n        return (<></>);\r\n    }\r\n    function onClick(e) {\r\n        const cleanTemplate = getTemplateCopyById(template.id);\r\n        for (const property in cleanTemplate) {\r\n            template[property] = cleanTemplate[property];\r\n        }\r\n        modsSetter.setTemplatesMods([template]);\r\n        setResetButtonActive(!resetButtonActive);\r\n    }\r\n    return (\r\n        <span className='d-flex justify-content-center'>\r\n            <Button size=\"sm\" variant=\"warning\" className='ms-0 mt-0 mb-3' onClick={onClick}>Reset</Button>\r\n        </span>\r\n    );\r\n}\r\n\r\nfunction buildInfoRows(info, badgeStyle, badgesRow) {\r\n    const filteredInfo = [];\r\n    const filteredMarks = [];\r\n    for (let i = 1; i < info.length; i += 2) {\r\n        if (info[i] !== \"\") {\r\n            filteredMarks.push(info[i - 1]);\r\n            filteredInfo.push(info[i]);\r\n        }\r\n    }\r\n    let size = filteredInfo.length;\r\n    let k = badgesRow.length;\r\n    for (let i = 0; i < size; i += 3) {\r\n        if ((i + 1) === size) {\r\n            badgesRow.push(resultBadges(k++, badgeStyle, \"-\", \"-\", filteredMarks[i], filteredInfo[i], \"-\", \"-\"));\r\n        } else if ((i + 2) === size) {\r\n            badgesRow.push(resultBadges(k++, badgeStyle, filteredMarks[i], filteredInfo[i], \"-\", \"-\", filteredMarks[i + 1], filteredInfo[i + 1]));\r\n        } else {\r\n            badgesRow.push(resultBadges(k++, badgeStyle, filteredMarks[i], filteredInfo[i], filteredMarks[i + 1], filteredInfo[i + 1], filteredMarks[i + 2], filteredInfo[i + 2]));\r\n        }\r\n    }\r\n    const badgesCols = [];\r\n    size = badgesRow.length;\r\n    for (let i = 0; i < size; i += 3) {\r\n        if ((i + 1) === size) {\r\n            badgesCols.push(\r\n                <Col key={i}>\r\n                    <Row>\r\n                        {badgesRow[i]}\r\n                    </Row>\r\n                </Col>\r\n            );\r\n        } else if ((i + 2) === size) {\r\n            badgesCols.push(\r\n                <Col key={i}>\r\n                    <Row>\r\n                        {badgesRow[i]}\r\n                        {badgesRow[i + 1]}\r\n                    </Row>\r\n                </Col>\r\n            );\r\n        } else {\r\n            badgesCols.push(\r\n                <Col key={i}>\r\n                    <Row>\r\n                        {badgesRow[i]}\r\n                        {badgesRow[i + 1]}\r\n                        {badgesRow[i + 2]}\r\n                    </Row>\r\n                </Col>\r\n            );\r\n        }\r\n    }\r\n    return badgesCols;\r\n}\r\n\r\nfunction resultBadges(key, style, left1, right1, left2, right2, left3, right3) {\r\n    return (\r\n        <div key={key} className=\"col d-flex justify-content-center\">\r\n            <Stack className='pb-1' direction=\"horizontal\" gap={1}>\r\n                {keyValueBadge(style, '6.5rem', left1,  right1)}\r\n                {keyValueBadge(style, '6.5rem', left2,  right2)}\r\n                {keyValueBadge(style, '6.5rem', left3,  right3)}\r\n            </Stack>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst WeaponTemplate = memo(function WeaponTemplate({modsSetter, template, setModalTemplate, setModalCalculate, onTestClick}) {\r\n    console.log(\"WeaponTemplate: \" + template.index);\r\n    const [changed, setChanged] = useState(false);\r\n    const [resetButtonActive, setResetButtonActive] = useState(false);\r\n    function modRow(index, modsSameType, checkMod) {\r\n        return (\r\n           <ModRow key={index} weaponId={template.id} index={index} modsSameType={modsSameType} checkMod={checkMod} defMods={template.defMods}>\r\n           </ModRow>\r\n        );\r\n    };\r\n\r\n    function checkMod(e, weaponId, modData, modSameType, modsSameType) {\r\n        const check = !modSameType[1];\r\n\r\n        // Disable mods because only one mod of the same type can be selected at the same time.\r\n        for (let i = 0; i < modsSameType.length; i++) {\r\n            modsSameType[i][1] = false;\r\n        }\r\n        modSameType[1] = check;\r\n        modsSetter.cleanTemplateAndApplyCurrentMods(template);\r\n        setChanged(!changed);\r\n        setResetButtonActive(true);\r\n    };\r\n    let result = [];\r\n    let items = [];\r\n\r\n    // All mods\r\n    if (!template.unverified) {\r\n        const mods = template.allMods;\r\n        let i = 0;\r\n        for (const property in mods) {\r\n            const modsSameType = mods[property];\r\n            let children = [];\r\n\r\n            // Modes of one type\r\n            for (let j = 0; j < modsSameType.length; j++) {\r\n                children.push(modRow(j, modsSameType, checkMod));\r\n            }\r\n            const item = {\r\n                    key: i,\r\n                    label: property,\r\n                    children: children,\r\n            }\r\n            items.push(item);\r\n            i += 1;\r\n        }\r\n    }\r\n    let divider = (<Divider className='m-1 p-1'>Modifications</Divider>);\r\n    if (items.length === 0) {\r\n        divider = (<></>);\r\n    } else {\r\n        result.push(<Collapse accordion key={template.index} items={items} />);\r\n    }\r\n    const fireRateText = (template.isAuto[1]) ? template.autoRate[1].toFixed(2) : (10 / template.manualRate[1]).toFixed(2);\r\n    const iSize = '0.75rem';\r\n    const badgeStyle = \"badge bg-lite-outline m-1\";\r\n    const critText = (template.crit[1] === 0) ? \"\" : \"+\" + template.crit[1].toFixed(1) + \"%\";\r\n    const expText = (template.exp[1] === 0) ? \"\" : \"+\" + template.exp[1].toFixed(1) +\"%\";\r\n    const strText = (template.strengthBoost[1] === 0) ? \"\" : \"+\" + template.strengthBoost[1].toFixed(1) + \"%\";\r\n    const sneakText = (template.sneak[1] === 0) ? \"\" : \"+\" + template.sneak[1].toFixed(1) + \"%\";\r\n    const bashText = (template.bash[1] === 0) ? \"\" : \"+\" + template.bash[1].toFixed(1) + \"%\";\r\n    const aaText = (template.antiArmor[1] === 0) ? \"\" : \"+\" + template.antiArmor[1].toFixed(1) + \"%\";\r\n    const bonusText = (template.bonusMult[1] === 0) ? \"\" : (((template.bonusMult[1] < 0) ? \"\" : \"+\") + (template.bonusMult[1] * 100).toFixed(1) + \"%\");\r\n    const crippleText = (template.cripple[1] === 0) ? \"\" : \"+\" + template.cripple[1].toFixed(1) + \"%\";\r\n    const batteryText = (template.chargeTime[1] === 0) ? \"\" : template.chargeTime[1].toFixed(2) + \" s\";\r\n    const powerText = (template.powerAttack[1] === 0) ? \"\" : \"+\" + (template.powerAttack[1]).toFixed(1) + \"%\";\r\n    const info = [\"☠️\", critText, \"💣\", expText, \"💪\", strText, \"🐍\", sneakText, \"🌪️\", bashText, \"🛡️\", aaText, \"🚀\", bonusText, \"🦵\", crippleText, \"🔋\", batteryText, \"🪓\", powerText];\r\n    let badgesRow = [];\r\n    badgesRow.push(resultBadges(0, badgeStyle, bullet(iSize), template.shotSize[1].toFixed(0), \"⌛\", template.reloadTime[1].toFixed(2) + \" s\", fireRate(iSize), fireRateText));\r\n    badgesRow.push(resultBadges(1, badgeStyle, ammo(iSize), template.capacity[1].toFixed(0), \"🏃\", template.ap[1].toFixed(2), \"🏋\", template.weight[1].toFixed(2)));\r\n    const infoRows = buildInfoRows(info, badgeStyle, badgesRow);\r\n    return (\r\n        <div className=\"p-1\" key={template.id} id={template.id} title={template.name}>\r\n            <Accordion.Item eventKey={template.id} className=\"p-1 m-0 out-accordion\">\r\n                <Accordion.Button className='p-0 ps-2 pe-3 m-0 out-accordion' style={{height: '3rem'}}>\r\n                    <Container fluid className=\"p-0 m-0\">\r\n                        <Row className=\"p-0 m-0\">\r\n                            <Col className=\"p-0 ps-0 m-0 center-text\">\r\n                                {getImageElement(template.iconName[template.type[1]], '2.9rem')}\r\n                                <strong className=\"ps-4\">{template.name}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Accordion.Button>\r\n                <Accordion.Body className=\"p-1\">\r\n                    <Row>\r\n                        <div className=\"col d-flex justify-content-start mb-2 pt-1\">\r\n                            <Tag bordered={true} color=\"default\" className=\"shadow-outline2\"><h6 className=\"m-0 p-1\"><strong>Level: {template.level}</strong></h6></Tag>\r\n                        </div>\r\n                         <div className=\"col d-flex justify-content-end mb-2 pt-1 pe-1\">\r\n                            <Tag bordered={true} color=\"volcano\" className=\"shadow-outline3\"><h6 className=\"m-0 p-1\"><strong>{getRowWithImage(template.type[1])}</strong></h6></Tag>\r\n                       </div>\r\n                    </Row>\r\n                    <Divider className='mt-1 mb-2'></Divider>\r\n                    <Row>\r\n                        {infoRows}\r\n                    </Row>\r\n                    <AdditionalDView template={template}></AdditionalDView>\r\n                    <CritView crits={template.crSpellId[1]} weapId={template.id}></CritView>\r\n                    <LegendaryView template={template}></LegendaryView>\r\n                    <Divider className='mt-2 mb-2'></Divider>\r\n                    <GeneralView template={template}></GeneralView>\r\n                    <AmmoView className=\"pt-2\" ammoId={template.ammoId[1]}></AmmoView>\r\n                    <ProjView className=\"pt-2\" projId={template.projId[1]}></ProjView>\r\n                    <div className=\"pt-2\" />\r\n                    <DamageOverview damageData={template.damageData}></DamageOverview>\r\n                    {divider}\r\n                    {getResetButton(template, items.length, resetButtonActive, setResetButtonActive)}\r\n                    {result}\r\n                    {getApplyButton(template, setModalTemplate, setModalCalculate, onTestClick)}\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default WeaponTemplate;","import getMods from '../Mods';\r\n\r\n\r\nexport default class LegendarySetter {\r\n\r\n    set(template, mod) {\r\n        this.privateSet(template, mod);\r\n    }\r\n\r\n    privateSet(obj, mod) {\r\n        const words = mod.ap.split(\"_\");\r\n        const lastWord = words[words.length - 1];\r\n        if (lastWord === \"Legendary1\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary1 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        } else if (lastWord === \"Legendary2\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary2 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        } else if (lastWord === \"Legendary3\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary3 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        } else if (lastWord === \"Legendary4\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary4 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        } else if (lastWord === \"Legendary5\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary5 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        }\r\n    }\r\n\r\n    extractDefaultLegendary(template) {\r\n        const result = {};\r\n        for (const property in template.allMods) {\r\n            const propMods = template.allMods[property];\r\n            for (let j = 0; j < propMods.length; j++) {\r\n                const mod = propMods[j];\r\n                const modId = mod[0];\r\n                const isUsed = mod[1];\r\n                const modData = getMods().get(modId);\r\n                if (modData) {\r\n                    if (isUsed) {\r\n                        this.privateSet(result, modData);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","import getTemplates from '../helpers/TemplatesRegister';\r\nimport WeaponTemplate from './WeaponTemplate';\r\nimport { memo, useState, useEffect } from 'react';\r\nimport { ModParser } from '../helpers/mods/ModParser';\r\nimport DamageExtractor from '../helpers/mods/DamageExtractor';\r\nimport DamageSetter from '../helpers/mods/DamageSetter';\r\nimport LegendarySetter from '../helpers/mods/LegendarySetter';\r\nimport ModsSetter from '../helpers/mods/ModsSetter';\r\nimport { Pagination } from 'antd';\r\nimport { Skeleton } from 'antd';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport TemplateTools from './TemplateTools';\r\n\r\n\r\nexport const modGroups = new Set();\r\n\r\nexport const weaponIds = {All: []};\r\n\r\nexport const modsSetter = new ModsSetter(new LegendarySetter(), new ModParser(), new DamageExtractor(),\r\n    new DamageSetter());\r\n\r\nfunction buildTemplates() {\r\n    console.log(\"BuildTemplates\");\r\n    const templates = JSON.parse(JSON.stringify(getTemplates()));\r\n    if (modGroups.size === 0) {\r\n        TemplateTools.getGroups(templates, modGroups);\r\n    }\r\n    const weaponIdsExists = (weaponIds.All.length > 0);\r\n    for (let i = 0; i < templates.length; i++) {\r\n        const template = templates[i];\r\n        template.index = i;\r\n        if (!weaponIdsExists) {\r\n            const type = template.type[0];\r\n            let weaponIdsByType = weaponIds[type];\r\n            if (!weaponIdsByType) {\r\n                weaponIdsByType = [];\r\n                weaponIds[type] = weaponIdsByType;\r\n            }\r\n            const obj = {id: template.id, apply: template.apply};\r\n            weaponIdsByType.push(obj);\r\n            weaponIds.All.push(obj);\r\n        }\r\n    }\r\n    modsSetter.setTemplatesMods(templates);\r\n    return templates;\r\n}\r\n\r\nfunction getSkeletons(size) {\r\n    let result = [];\r\n    for (let i = 0; i < size; i++) {\r\n        result.push(\r\n            <div key={i} className=\"p-1\">\r\n                <Accordion.Item className=\"p-1 m-0 out-accordion\">\r\n                    <div className=\"p-1\" style={{height: '3rem'}}>\r\n                        <Skeleton avatar paragraph={{ rows: 0, }} />\r\n                    </div>\r\n                </Accordion.Item>\r\n            </div>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nconst templates = buildTemplates();\r\n\r\nconst TemplateItems = memo(function TemplateItems(props) {\r\n    console.log(\"TemplateItems\");\r\n    const [wData, setWData] = useState({paginated: [], total: 0, loaded: false});\r\n\r\n    const filterByName = (item) => {\r\n        if (props.filterName === \"\" || props.filterName === null) {\r\n            return true;\r\n        }\r\n        return item.name.includes(props.filterName);\r\n    };\r\n\r\n    const filterByType = (item) => {\r\n        if (props.weaponType === \"All\") {\r\n            return true;\r\n        }\r\n        return item.type.includes(props.weaponType);\r\n    }\r\n\r\n    // TODO: Not correct as it re-renders trice instead of twice.\r\n    useEffect(() => {\r\n        setWData({paginated: [], current: wData.paginated.length, total: wData.total, loaded: false});\r\n\r\n        // Pray with might for those who called this 'setTimeout', 'setInterval' to be burning in hell as long as possible.\r\n        setTimeout(() => {\r\n                const [paginated, total] = prepareTemplates(props, filterByName, filterByType);\r\n                setWData({paginated: paginated, current: paginated.length, total: total, loaded: true});\r\n            }\r\n        );\r\n    }, [props.page, props.weaponType, props.filterName, props.pageSize, templates]);\r\n    function showData() {\r\n        if (!wData.loaded) {\r\n            return (\r\n                <>\r\n                    {getSkeletons(wData.total)}\r\n                    <div className=\"mb-2\" />\r\n                    <Pagination align=\"center\" disabled current={props.page} onChange={null} defaultPageSize={props.pageSize} total={wData.total} />\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                    {wData.paginated}\r\n                    <div className=\"mb-1\" />\r\n                    <Pagination className=\"mb-2\" align=\"center\" current={props.page} defaultPageSize={props.pageSize} onChange={props.onPageChanged} total={wData.total} />\r\n                </>\r\n            );\r\n        }\r\n    }\r\n    return (\r\n       <>{showData()}</>\r\n    );\r\n});\r\n\r\nexport default TemplateItems;\r\n\r\nfunction prepareTemplates(props, filterByName, filterByType) {\r\n    const items = templates.filter(filterByType).filter(filterByName).map((template) => <WeaponTemplate key={template.index} onTestClick={props.onTestClick} modsSetter={modsSetter} template={template} setModalTemplate={props.setModalTemplate} setModalCalculate={props.setModalCalculate}></WeaponTemplate>);\r\n    const lastIndex = items.length - 1;\r\n    let paginated = [];\r\n    for (let i = props.startIndex; i < props.startIndex + props.pageSize; i++) {\r\n        if (i > lastIndex) {\r\n            break;\r\n        }\r\n        paginated.push(items[i]);\r\n    }\r\n    return [paginated, items.length];\r\n}","import getMods from '../Mods';\r\nimport { getTemplateCopyById } from '../TemplatesRegister';\r\n\r\n\r\nexport default class ModsSetter {\r\n\r\n    constructor(legendarySetter, modParser, damageExtractor, damageSetter) {\r\n        this.legendarySetter = legendarySetter;\r\n        this.modParser = modParser;\r\n        this.damageExtractor = damageExtractor;\r\n        this.damageSetter = damageSetter;\r\n    }\r\n\r\n    // Probably deprecated (Current mods apparently have activated default mods at the beginning)\r\n    setTemplatesDefaultMods(templates) {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    cleanTemplateAndApplyCurrentMods(template) {\r\n        this.resetTemplate(template);\r\n        this.setTemplatesMods([template]);\r\n    }\r\n\r\n    // It will set mods on current template, use this only for clean ones.\r\n    setTemplatesMods(templates) {\r\n\r\n        // Apply default damage effects like (Ammo, Projectile) they will modify default damage values\r\n        // which later have to be modified by other buffs\r\n        this.applyModValues(templates, true, true);\r\n\r\n        // Extract all damages with current settings\r\n        this.damageExtractor.extract(templates);\r\n\r\n        this.damageSetter.setDamages(templates);\r\n\r\n        // Apply all buffs including those who boost damage\r\n        this.applyModValues(templates, false, false);\r\n    }\r\n\r\n    applyModValues(templates, mutatingDamage, setLegendary) {\r\n        for (let i = 0; i < templates.length; i++) {\r\n            const template = templates[i];\r\n            const allMods = template.allMods;\r\n            for (let property in allMods) {\r\n                const propMods = allMods[property];\r\n                for (let j = 0; j < propMods.length; j++) {\r\n                    const mod = propMods[j];\r\n                    const modId = mod[0];\r\n                    const isUsed = mod[1];\r\n                    if (isUsed) {\r\n                        const modData = getMods().get(modId);\r\n                        if (modData) {\r\n                            if (setLegendary) {\r\n                                this.legendarySetter.set(template, modData);\r\n                            }\r\n                            this.modParser.applyOrRevoke(modData, template, true, mutatingDamage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Forced measure due to bad-knee design\r\n    resetTemplate(template) {\r\n        const cleanTemplate = getTemplateCopyById(template.id);\r\n        for (const property in cleanTemplate) {\r\n            if (property !== \"allMods\") {\r\n                template[property] = cleanTemplate[property];\r\n            }\r\n        }\r\n    }\r\n}","\r\n// Iterate through {name11: ['A', 'B', 1], name12: [], name13: ['D', obj]}\r\n// Returning every possible combinations:\r\n// {name11: 'A', name13: 'D'}, {name11: 'B', name13: 'D'} ... {name11: 1, name13: obj}\r\nexport default class Combinator {\r\n\r\n    /*\r\n        Usage:\r\n            const comb = {name11: ['A', 'B', 'C'], name12: [], name13: ['D', 'E']};\r\n            const combinator = new Combinator(comb);\r\n            let result = combinator.current();\r\n            console.log(result); // First combination\r\n            while(combinator.next()) {\r\n                combinator.current();\r\n                console.log(result);\r\n            }\r\n    */\r\n    constructor(combinations) {\r\n        this.combinations = combinations;\r\n        this.currentCombination = {};\r\n        this.lastIndexes = [];\r\n        this.curIndexes = [];\r\n        this.names = [];\r\n        this.hbRead = false;\r\n        this.combinationsCount = 1;\r\n        for (const groupName in combinations) {\r\n            this.names.push(groupName);\r\n            const group = combinations[groupName];\r\n            const last = group.length - 1;\r\n            this.lastIndexes.push(last);\r\n            if (group.length > 0) {\r\n                this.combinationsCount *= group.length;\r\n                this.currentCombination[groupName] = this.combinations[groupName][0];\r\n                this.curIndexes.push(0);\r\n            } else {\r\n                this.curIndexes.push(-1);\r\n            }\r\n        }\r\n        this.currentNumber = 1;\r\n    }\r\n\r\n    getCombinationsCount() {\r\n        return this.combinationsCount;\r\n    }\r\n\r\n    getCurrentNumber() {\r\n        return this.currentNumber;\r\n    }\r\n\r\n    next() {\r\n        if (this.isLast()) {\r\n            return false;\r\n        }\r\n        this.currentNumber += 1;\r\n        this.nextCombination();\r\n        this.hbRead = false;\r\n        return true;\r\n    }\r\n\r\n    // Only for reading\r\n    current() {\r\n        if (this.hbRead) {\r\n            return this.currentCombinations;\r\n        } else {\r\n            for (let i = 0; i < this.curIndexes.length; i++) {\r\n                const rowPos = this.curIndexes[i];\r\n                const name = this.names[i];\r\n                if (rowPos > -1) {\r\n                    this.currentCombination[name] = this.combinations[name][rowPos];\r\n                }\r\n            }\r\n            this.hbRead = true;\r\n            return this.currentCombination;\r\n        }\r\n    }\r\n\r\n    isLast() {\r\n        let result = true;\r\n        for (let i = 0; i < this.curIndexes.length; i++) {\r\n            if (this.curIndexes[i] !== this.lastIndexes[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    nextCombination() {\r\n        for (let i = 0; i < this.curIndexes.length; i++) {\r\n            let next = false;\r\n            if (this.curIndexes[i] > -1) {\r\n                this.curIndexes[i] += 1;\r\n                if (this.curIndexes[i] > this.lastIndexes[i]) {\r\n                    this.curIndexes[i] = 0;\r\n                    next = true;\r\n                }\r\n            } else {\r\n                next = true;\r\n            }\r\n            if (!next) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import { ConIronSight } from './mods/appliers/ConIronSight';\r\nimport { SightedTransition } from './mods/appliers/SightedTransition';\r\nimport { MaxConDegree } from './mods/appliers/MaxConDegree';\r\nimport { MinConDegree } from './mods/appliers/MinConDegree';\r\nimport { RecoilMaxDegree } from './mods/appliers/RecoilMaxDegree';\r\nimport { RecoilMinDegree } from './mods/appliers/RecoilMinDegree';\r\nimport { ModParser } from './mods/ModParser';\r\nimport TemplateTools from '../templates/TemplateTools';\r\nimport { ModTools } from './mods/ModTools';\r\nimport getMods from './Mods';\r\n\r\n\r\nexport default class AccuracyHelper {\r\n    static RECOIL = 0;\r\n    static CON = 1;\r\n    static BALANCE = 2;\r\n\r\n    static ACCURACY_INFO = (\r\n        <>\r\n            <p>\r\n                <b>Only for range weapons.</b>\r\n            </p>\r\n            <p>\r\n                The calculator does not calculate accuracy from these parameters, hence it has no influence on damage,\r\n                but it still can choose the best among the raw values from mods.\r\n            </p>\r\n        </>\r\n    );\r\n\r\n    static ACC_PREFERENCE = {Recoil: AccuracyHelper.RECOIL, Spread: AccuracyHelper.CON, Balance: AccuracyHelper.BALANCE};\r\n\r\n    constructor() {\r\n        this.modEffects = new Map();\r\n        this.modEffects.set(\"ConIronSight\", new ConIronSight());\r\n        this.modEffects.set(\"SightedTransition\", new SightedTransition());\r\n        this.modEffects.set(\"MaxConDegree\", new MaxConDegree());\r\n        this.modEffects.set(\"MinConDegree\", new MinConDegree());\r\n        this.modEffects.set(\"RecoilMaxDegree\", new RecoilMaxDegree());\r\n        this.modEffects.set(\"RecoilMinDegree\", new RecoilMinDegree());\r\n    }\r\n\r\n    getCleanTemplate() {\r\n        const result = {};\r\n        result[\"maxConDegree\"] = [1, 1];\r\n        result[\"minConDegree\"] = [1, 1];\r\n        result[\"recoilMaxDegree\"] = [1, 1];\r\n        result[\"recoilMinDegree\"] = [1, 1];\r\n        result[\"conIronSight\"] = [1, 1];\r\n        result[\"sightedTransition\"] = [1, 1];\r\n        result[\"defaultMod\"] = false;\r\n        return result;\r\n    }\r\n\r\n    // Find best mods which do not affect on damage directly, not hidden and not excluded\r\n    // If all are equal then default is used.\r\n    getBestMods(template, includeGroups, preference) {\r\n        const result = {}\r\n        for (const categoryName in template.allMods) {\r\n            const mods = template.allMods[categoryName];\r\n            const resultMods = {};\r\n            if (!includeGroups.includes(categoryName)) {\r\n                continue;\r\n            }\r\n            for (let i = 0; i < mods.length; i++) {\r\n                const temp = this.getCleanTemplate();\r\n                const mod = mods[i];\r\n                const modId = mod[0]\r\n                const modData = getMods().get(modId);\r\n                if (!modData || modData.hide || !AccuracyHelper.hasAccuracyData(modData)) {\r\n                    continue;\r\n                }\r\n\r\n                // 4-useful (means directly affecting on damage, we skip them)\r\n                // Consider silencer does not affect damage except some conditions\r\n                const useful = (mod[4] && !ModTools.hasSilencer(modData));\r\n\r\n                // 3-hidden\r\n                if (!mod[3] && !useful && !TemplateTools.excludeMod(template.id, modId)) {\r\n                    temp[\"defaultMod\"] = mod[1];\r\n                    ModParser.applySpecific(temp, modData, this.modEffects);\r\n                    resultMods[modId] = temp;\r\n                }\r\n            }\r\n            result[categoryName] = resultMods;\r\n        }\r\n        return this.getTheBestModsForCategory(result, preference);\r\n    }\r\n\r\n    getTheBestModsForCategory(allMods, preference) {\r\n        const result = {};\r\n        let pFunc = null;\r\n        switch (preference) {\r\n            case AccuracyHelper.RECOIL:\r\n                pFunc = this.determineBestRecoilPriority;\r\n                break;\r\n            case AccuracyHelper.CON:\r\n                pFunc = this.determineBestConPriority;\r\n                break;\r\n            case AccuracyHelper.BALANCE:\r\n                pFunc = this.determineBestBalance;\r\n                break;\r\n            default:\r\n                pFunc = this.determineBestBalance;\r\n        }\r\n        for (const groupName in allMods) {\r\n            let best = null;\r\n            const mods = allMods[groupName];\r\n            for (const id in mods) {\r\n                const modData = mods[id];\r\n                best = pFunc(id, modData, best, this);\r\n            }\r\n            if (best) {\r\n                result[groupName] = best[0];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    determineBestBalance(currentId, currentData, best, th) {\r\n        if (!best) {\r\n            return [currentId, currentData];\r\n        }\r\n        const bestCon = th.getAverageCon(best[1]);\r\n        const currentCon = th.getAverageCon(currentData);\r\n        const bestRecoil = th.getAverageRecoil(best[1]);\r\n        const currentRecoil = th.getAverageRecoil(currentData);\r\n        const bestBalance = (bestCon + bestRecoil) / 2.0;\r\n        const currentBalance = (currentCon + currentRecoil) / 2.0;\r\n        if (bestBalance > currentBalance) {\r\n            return [currentId, currentData];\r\n        } else if (bestBalance === currentBalance) {\r\n            const bestTransition = th.getTransition(best[1]);\r\n            const currentTransition = th.getTransition(currentData);\r\n            if (bestTransition > currentTransition) {\r\n                return [currentId, currentData];\r\n            } else if (bestTransition === currentTransition) {\r\n                const bestSight = th.getSight(best[1]);\r\n                const currentSight = th.getSight(currentData);\r\n                if (bestSight > currentSight) {\r\n                    return [currentId, currentData];\r\n                } else if (bestSight === currentSight) {\r\n                    if (currentData['defaultMod']) { // Everything is equal then default is preferred\r\n                        return [currentId, currentData];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return best;\r\n    }\r\n\r\n    determineBestConPriority(currentId, currentData, best, th) {\r\n        if (!best) {\r\n            return [currentId, currentData];\r\n        }\r\n        const bestCon = th.getAverageCon(best[1]);\r\n        const currentCon = th.getAverageCon(currentData);\r\n        if (bestCon > currentCon) {\r\n            return [currentId, currentData];\r\n        } else if (bestCon === currentCon) {\r\n            const bestRecoil = th.getAverageRecoil(best[1]);\r\n            const currentRecoil = th.getAverageRecoil(currentData);\r\n            if (bestRecoil > currentRecoil) {\r\n                return [currentId, currentData];\r\n            } else if (bestRecoil === currentRecoil) {\r\n                const bestTransition = th.getTransition(best[1]);\r\n                const currentTransition = th.getTransition(currentData);\r\n                if (bestTransition > currentTransition) {\r\n                    return [currentId, currentData];\r\n                } else if (bestTransition === currentTransition) {\r\n                    const bestSight = th.getSight(best[1]);\r\n                    const currentSight = th.getSight(currentData);\r\n                    if (bestSight > currentSight) {\r\n                        return [currentId, currentData];\r\n                    } else if (bestSight === currentSight) {\r\n                        if (currentData['defaultMod']) { // Everything is equal then default is preferred\r\n                            return [currentId, currentData];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return best;\r\n    }\r\n\r\n    determineBestRecoilPriority(currentId, currentData, best, th) {\r\n        if (!best) {\r\n            return [currentId, currentData];\r\n        }\r\n        const bestRecoil = th.getAverageRecoil(best[1]);\r\n        const currentRecoil = th.getAverageRecoil(currentData);\r\n        if (bestRecoil > currentRecoil) {\r\n            return [currentId, currentData];\r\n        } else if (bestRecoil === currentRecoil) {\r\n            const bestCon = th.getAverageCon(best[1]);\r\n            const currentCon = th.getAverageCon(currentData);\r\n            if (bestCon > currentCon) {\r\n                return [currentId, currentData];\r\n            } else if (bestCon === currentCon) {\r\n                const bestTransition = th.getTransition(best[1]);\r\n                const currentTransition = th.getTransition(currentData);\r\n                if (bestTransition > currentTransition) {\r\n                    return [currentId, currentData];\r\n                } else if (bestTransition === currentTransition) {\r\n                    const bestSight = th.getSight(best[1]);\r\n                    const currentSight = th.getSight(currentData);\r\n                    if (bestSight > currentSight) {\r\n                        return [currentId, currentData];\r\n                    } else if (bestSight === currentSight) {\r\n                        if (currentData['defaultMod']) { // Everything is equal then default is preferred\r\n                            return [currentId, currentData];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return best;\r\n    }\r\n\r\n    getAverageRecoil(modData) {\r\n        const maxR = modData.recoilMaxDegree[1];\r\n        const minR = modData.recoilMinDegree[1];\r\n        return (maxR + minR) / 2.0;\r\n    }\r\n\r\n    getAverageCon(modData) {\r\n        const maxC = modData.maxConDegree[1];\r\n        const minC = modData.minConDegree[1];\r\n        return (maxC + minC) / 2.0;\r\n    }\r\n\r\n    getTransition(modData) {\r\n        return modData.sightedTransition[1];\r\n    }\r\n\r\n    getSight(modData) {\r\n        return modData.conIronSight[1];\r\n    }\r\n\r\n    static accuracyProps = [\"conIronSight\", \"maxConDegree\", \"minConDegree\", \"recoilMaxDegree\", \"recoilMinDegree\", \"sightedTransition\"]\r\n\r\n    static hasAccuracyData(modData) {\r\n        /*\r\n        let result = false;\r\n        for (let i = 0; i < modData.modifiers.length; i++) {\r\n            const mod = modData.modifiers[i];\r\n        }\r\n        return AccuracyHelper.accuracyProps.includes(modData.props)\r\n        */\r\n        return true;\r\n    }\r\n}","export default class LegsId {\r\n    static QUAD = '00692275';\r\n    static ARISTOCRAT = '00606b71';\r\n    static ANTI_ARMOR = '005281b4';\r\n    static TWO_SHOT = '004f6d76';\r\n    static EXECUTIONER = '004f6aa1';\r\n    static BLOODIED = '004f6aa0';\r\n    static STEADY = '00606c8d';\r\n    static MELEE_RAPID = '001a7bda';\r\n    static HITMAN = '0052414e';\r\n    static RANGED_RAPID = '0052414f';\r\n    static VITAL = '0052414b';\r\n    static EXPLOSIVE = '004f5771';\r\n    static CRIPPLING = '004ed02c';\r\n    static SWIFT = '00524150';\r\n    static STRENGTH = '005299fc';\r\n}","import LegsId from './LegsId';\r\n\r\n\r\nexport default class LegendaryCalcBuilder {\r\n\r\n    static getLegendary1(isRange, lowHP, legs=null) {\r\n        legs = LegendaryCalcBuilder.initLegs(legs);\r\n        legs.push(LegsId.ANTI_ARMOR);\r\n        legs.push(LegsId.EXECUTIONER);\r\n        if (isRange) {\r\n            legs.push(LegsId.QUAD);\r\n            legs.push(LegsId.TWO_SHOT);\r\n        }\r\n        if (lowHP) {\r\n            legs.push(LegsId.BLOODIED);\r\n        } else {\r\n            legs.push(LegsId.ARISTOCRAT);\r\n        }\r\n        return legs;\r\n    }\r\n\r\n    static initLegs(legs) {\r\n        if (!legs) {\r\n            legs = [];\r\n        } else {\r\n            legs.length = 0;\r\n        }\r\n        return legs;\r\n    }\r\n\r\n    static getLegendary2(isRange, explosive, scoped, legs=null) {\r\n        legs = LegendaryCalcBuilder.initLegs(legs);\r\n        legs.push(LegsId.VITAL);\r\n        legs.push(LegsId.CRIPPLING);\r\n        if (isRange) {\r\n            if (scoped) {\r\n                legs.push(LegsId.HITMAN);\r\n            }\r\n            if (!explosive) {\r\n                legs.push(LegsId.EXPLOSIVE);\r\n            }\r\n            legs.push(LegsId.RANGED_RAPID);\r\n        } else {\r\n            legs.push(LegsId.STEADY);\r\n            legs.push(LegsId.MELEE_RAPID);\r\n        }\r\n        return legs;\r\n    }\r\n\r\n    static getLegendary3(isRange, legs=null) {\r\n        legs = LegendaryCalcBuilder.initLegs(legs);\r\n        if (isRange) {\r\n            legs.push(LegsId.SWIFT);\r\n        } else {\r\n            legs.push(LegsId.STRENGTH);\r\n        }\r\n        return legs;\r\n    }\r\n}","import { defaultExtraDamage } from '../../entities/ExtraDamageOptions';\r\nimport { buildCreature, getAverageTimeMillis } from '../../entities/ECreatures';\r\nimport { defaultAdds } from '../../entities/EAddDamages';\r\nimport { convertTemplateToSpecs } from '../../entities/EWeaponSpecs';\r\nimport { defaultPlayerStats } from '../../entities/EPlayerStats';\r\nimport { defaultPlayer } from '../../entities/EPlayer';\r\nimport WeaponFactory from '../../damage/weapon/WeaponFactory';\r\nimport DamageEmulator from '../../damage/DamageEmulator';\r\nimport { getTemplateCopyById } from '../../helpers/TemplatesRegister';\r\nimport { modsSetter } from '../TemplateItems';\r\nimport { millisToTime } from '../../helpers/Time';\r\nimport Combinator from '../../helpers/Combinator';\r\nimport AccuracyHelper from '../../helpers/AccuracyHelper';\r\nimport PerkCardBuilder from '../../perkCardBoosts/PerkCardBuilder';\r\nimport ConsumablesBuilder from '../../boostStuff/ConsumablesBuilder';\r\nimport TemplateTools from '../TemplateTools';\r\nimport { ModParser } from '../../helpers/mods/ModParser';\r\nimport LegendaryCalcBuilder from '../../helpers/LegendaryCalcBuilder';\r\nimport LegendarySetter from '../../helpers/mods/LegendarySetter';\r\nimport { getLegendaryNameFromSpec } from '../../helpers/LegendaryProvider';\r\n\r\n\r\nexport default class ParameterCalculator {\r\n    static info = (\r\n        <>\r\n            <p>\r\n                <b>ATTENTION!</b>\r\n            </p>\r\n            <p>\r\n                ⁍ Not all weapons are tested in real game, therefore some of damage values can be incorrect or\r\n                mods (which are presented in the calculator) can be not accessible for usage in the game. The calculator will run through mods, legendary mods, perks, consumables to find the best configuration provided that a weapon has 100% accuracy.\r\n            </p>\r\n            <p>\r\n                ⁍ The calculator will try to pick mods with best recoil / spread, but they will not impact accuracy during calculations whereas in real game accuracy can greatly affect damage performance.\r\n            </p>\r\n            <p>\r\n                ⁍ Possible AP benefits are ignored.\r\n            </p>\r\n            <p>\r\n                ⁍ Weapons with default legendary mods will not be iterated through other legendary.\r\n            </p>\r\n            <p>\r\n                ⁍ Gun-Foo, Bash, all legendary perks (except TOFT, Follow Through), and some others affecting accuracy are ignored.\r\n            </p>\r\n            <p>\r\n                ⁍ Power attack, Furious are ignored (as being not tested for now).\r\n            </p>\r\n        </>\r\n    );\r\n    constructor(creatureNames, id, modGroups, cards, frCrit, frHead, main, stuff, legendaryOpts, accuracyPreference) {\r\n        this.creatureNames = creatureNames;\r\n        this.id = id;\r\n        this.modGroups = modGroups;\r\n        this.modCombinator = null;\r\n        this.boostCombinator = null;\r\n        this.bestParameters = null;\r\n        this.lastParameters = null;\r\n        this.bestTime = Infinity;\r\n        this.lastTime = Infinity;\r\n        this.creatureName = null;\r\n        this.template = null;\r\n        this.count = 0;\r\n        this.maxCount = 0;\r\n        this.cards = cards;\r\n        this.frHead = frHead;\r\n        this.frCrit = frCrit;\r\n        this.main = main;\r\n        this.stuff = stuff;\r\n        this.modParser = new ModParser();\r\n        this.legendary = null;\r\n        this.legendaryOpts = legendaryOpts;\r\n        this.defaultLegendary = null;\r\n        this.hasGotLastCombination = false;\r\n        this.currentConfig = {};\r\n        this.bestConfig = null;\r\n        this.bestAverageHit = 0;\r\n        this.accuracyHelper = new AccuracyHelper();\r\n        this.accuracyPreference = accuracyPreference;\r\n        this.defaultExplosive = false;\r\n        this.perkImageNames = [];\r\n        this.creatureTags = [];\r\n        this.bodyTags = [];\r\n\r\n        // Currently accuracy mods do not influence on damage but, best\r\n        // values still can be calculated (without paying attention to distance)\r\n        // specify such mods in advance to reduce the number of computations\r\n        this.bestAccuracyMods = null;\r\n    }\r\n\r\n    getBestParameters() {\r\n\r\n        // We are finished, but for Non-Automatic option best parameters can still be null\r\n        // use the last one\r\n        return (this.bestParameters) ? this.bestParameters : this.lastParameters;\r\n    }\r\n\r\n    getTemplate() {\r\n        return this.template;\r\n    }\r\n\r\n    getCount() {\r\n        return this.count;\r\n    }\r\n\r\n    getMaxCount() {\r\n        return this.maxCount;\r\n    }\r\n\r\n    getBestTime(clockFormat=true) {\r\n        const time = (this.bestParameters) ? this.bestTime : this.lastTime;\r\n        if (clockFormat) {\r\n            return millisToTime(time);\r\n        }\r\n        return time;\r\n    }\r\n\r\n    prepareAndCalcFirst(creatureName=\"average\") {\r\n\r\n        // The order of invoking functions is important!\r\n        this.creatureName = creatureName;\r\n        this.creatureTags = this.getCreatureTags();\r\n        this.bodyTags = this.getBodyTags();\r\n        this.template = getTemplateCopyById(this.id);\r\n        this.bestAccuracyMods = this.accuracyHelper.getBestMods(this.template, this.modGroups, this.accuracyPreference);\r\n        this.defaultLegendary = TemplateTools.getDefaultLegendary(this.template, new LegendarySetter());\r\n        this.defaultExplosive = this.isDefaultExplosive();\r\n        this.legendary = this.buildLegendary();\r\n        const silencerDamage = this.main.Night && this.cards.Sneak;\r\n        const modCombinations = TemplateTools.getDamagedModIndexes(this.template, this.modGroups, this.bestAccuracyMods, silencerDamage);\r\n        this.modCombinator = new Combinator(modCombinations);\r\n        this.maxCount = this.modCombinator.getCombinationsCount();\r\n        this.applyMods();\r\n        this.boostCombinator = this.buildBoostCombinator();\r\n        let consList = null;\r\n        let legsList = null;\r\n        if (this.boostCombinator) {\r\n            const current = this.boostCombinator.current();\r\n            consList = this.buildConsumableList(current);\r\n            legsList = this.buildLegendaryList(current);\r\n        }\r\n        this.calculateAndCount(consList, legsList);\r\n    }\r\n\r\n    buildLegendary() {\r\n        const legendary = {};\r\n        const range = TemplateTools.isWeaponRanged(this.template);\r\n        const lowHP = this.cards[\"Low HP\"];\r\n        const scoped = this.main[\"Scoped\"];\r\n        let leg1 = [];\r\n        let leg2 = [];\r\n        let leg3 = [];\r\n        if (this.defaultLegendary.length === 0) {\r\n            if (this.legendaryOpts.Legendary1) {\r\n                leg1 = LegendaryCalcBuilder.getLegendary1(range, lowHP);\r\n            }\r\n            if (this.legendaryOpts.Legendary2) {\r\n                leg2 = LegendaryCalcBuilder.getLegendary2(range, this.defaultExplosive, scoped);\r\n            }\r\n            if (this.legendaryOpts.Legendary3) {\r\n                leg3 = LegendaryCalcBuilder.getLegendary3(range);\r\n            }\r\n        }\r\n        legendary['Legendary1_l'] = leg1;\r\n        legendary['Legendary2_l'] = leg2;\r\n        legendary['Legendary3_l'] = leg3;\r\n        return legendary;\r\n    }\r\n\r\n    getBodyTags() {\r\n        let bodyTags = []\r\n        const uniqueTags = new Set();\r\n        if (this.creatureName === 'average') {\r\n            for (const fieldName in this.creatureNames) {\r\n                const creatureData = this.creatureNames[fieldName];\r\n                uniqueTags.add(creatureData[3].toLowerCase());\r\n            }\r\n            bodyTags = [...uniqueTags];\r\n        } else {\r\n            for (const fieldName in this.creatureNames) {\r\n                const creatureData = this.creatureNames[fieldName];\r\n                if (creatureData[0] === this.creatureName) {\r\n                    bodyTags = [creatureData[3].toLowerCase()];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return bodyTags;\r\n    }\r\n\r\n    getCreatureTags() {\r\n        let creatureTags = []\r\n        const uniqueTags = new Set();\r\n        if (this.creatureName === 'average') {\r\n            for (const fieldName in this.creatureNames) {\r\n                const creatureData = this.creatureNames[fieldName];\r\n                for (let i = 0; i < creatureData[2].length; i++) {\r\n                    const tag = creatureData[2][i];\r\n                    uniqueTags.add(tag.toLowerCase());\r\n                }\r\n            }\r\n            creatureTags = [...uniqueTags];\r\n        } else {\r\n            for (const fieldName in this.creatureNames) {\r\n                const creatureData = this.creatureNames[fieldName];\r\n                if (creatureData[0] === this.creatureName) {\r\n                    for (let i = 0; i < creatureData[2].length; i++) {\r\n                        const tag = creatureData[2][i];\r\n                        creatureTags.push(tag.toLowerCase());\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return creatureTags;\r\n    }\r\n\r\n    getConsumables() {\r\n        const result = {};\r\n        const wType = this.template.type[1];\r\n        const wName = this.template.name;\r\n        const tags = this.template.tags;\r\n        const ammo = (this.template.ammoType) ? this.template.ammoType.codeName : \"\";\r\n        const crit = this.cards.Crit;\r\n        const sneak = this.cards.Sneak;\r\n        const team = this.cards.Team;\r\n        const lowHP = this.cards[\"Low HP\"];\r\n        const scoped = this.main[\"Scoped\"];\r\n\r\n        if (this.stuff[\"Magazines\"]) {\r\n            result[\"Magazines_c\"] = ConsumablesBuilder.getMagazineItems(wType, wName, tags, crit, team, scoped, this.creatureTags);\r\n        }\r\n        if (this.stuff[\"Endangerol Syringer\"]) {\r\n            const others = ConsumablesBuilder.getOtherItems(TemplateTools.hasPhysicalDamage(this.template));\r\n            if (others.length > 0) {\r\n                result[\"Syringer_c\"] = others;\r\n            }\r\n        }\r\n        if (this.stuff[\"Bobble Heads\"]) {\r\n            const bobble = ConsumablesBuilder.getBobbleHeadItems(wType, tags, ammo);\r\n            if (bobble.length > 0) {\r\n                result[\"Bobble_c\"] = bobble;\r\n            }\r\n        }\r\n        if (this.stuff[\"Drink\"]) {\r\n            const drink = ConsumablesBuilder.getDrinkItems(wType, tags, crit);\r\n            if (drink.length > 0) {\r\n                result[\"Drink_c\"] = drink;\r\n            }\r\n        }\r\n        if (this.stuff[\"Chemicals\"]) {\r\n            result[\"Chemicals_c\"] = ConsumablesBuilder.getChemicalItems(wType, crit, sneak);\r\n        }\r\n        if (this.stuff[\"Food\"]) {\r\n            const food = ConsumablesBuilder.getFoodItems(wType, crit);\r\n            if (food.length > 0) {\r\n                result[\"Food_c\"] = food;\r\n            }\r\n        }\r\n        if (this.stuff[\"Serums\"]) {\r\n            result[\"Serums_c\"] = ConsumablesBuilder.getSerumItems(wType, crit, lowHP, team, this.stuff[\"Food\"]);\r\n        }\r\n        return (Object.keys(result).length === 0) ? null : result;\r\n    }\r\n\r\n    calculateAndCount(consumableBoostsList, legendary) {\r\n        this.lastParameters = this.calculateCombination(consumableBoostsList, legendary);\r\n        this.lastTime = this.lastParameters[this.creatureName].lifeTime;\r\n        this.averageHit = this.lastParameters[this.creatureName].averageHit;\r\n        if (!this.lastParameters[\"Rejected\"]) {\r\n            if (this.lastTime < this.bestTime) {\r\n                this.bestParameters = this.lastParameters;\r\n                this.bestAverageHit = this.averageHit;\r\n                this.bestTime = this.lastTime;\r\n                this.updateBestConfig();\r\n            } else if (this.lastTime === this.bestTime) {\r\n                if (this.averageHit >= this.bestAverageHit) {\r\n                    this.bestAverageHit = this.averageHit;\r\n                    this.bestParameters = this.lastParameters;\r\n                    this.bestTime = this.lastTime;\r\n                    this.updateBestConfig();\r\n                }\r\n            }\r\n        }\r\n        this.count += 1;\r\n    }\r\n\r\n    buildBoostCombinator() {\r\n        let consCombinations = this.getConsumables();\r\n        if (!consCombinations) {\r\n            consCombinations = {};\r\n        }\r\n        for (const name in this.legendary) {\r\n            consCombinations[name] = this.legendary[name];\r\n        }\r\n        if (Object.keys(consCombinations).length > 0) {\r\n            return new Combinator(consCombinations);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    buildConsumableList(boostCombinations) {\r\n        const result = [];\r\n        if (!boostCombinations) {\r\n            return result;\r\n        }\r\n        for (const name in boostCombinations) {\r\n            if (name.endsWith(\"_c\")) {\r\n                const array = boostCombinations[name];\r\n                for (let i = 0; i < array.length; i++) {\r\n                    result.push(array[i]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    buildLegendaryList(boostCombinations) {\r\n        const result = [];\r\n        if (!boostCombinations) {\r\n            return result;\r\n        }\r\n        for (const name in boostCombinations) {\r\n            if (name.endsWith(\"1_l\")) {\r\n                result.push([boostCombinations[name], 0]);\r\n            } else if (name.endsWith(\"2_l\")) {\r\n                result.push([boostCombinations[name], 1]);\r\n            } else if (name.endsWith(\"3_l\")) {\r\n                result.push([boostCombinations[name], 2]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    nextBoostExists() {\r\n        return this.boostCombinator && this.boostCombinator.next();\r\n    }\r\n\r\n    calculateCombinations(maxCount=1) {\r\n        let count = 0;\r\n        while (count < maxCount) {\r\n            let modCombinationExists = false;\r\n            let currentBoosts = null;\r\n            if (!this.nextBoostExists()) {\r\n                modCombinationExists = this.modCombinator.next();\r\n                if (modCombinationExists) {\r\n                    this.applyMods();\r\n                    this.boostCombinator = this.buildBoostCombinator();\r\n                    if (this.boostCombinator) {\r\n                        currentBoosts = this.boostCombinator.current();\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            } else {\r\n                currentBoosts = this.boostCombinator.current();\r\n            }\r\n            const consList = this.buildConsumableList(currentBoosts);\r\n            const legsList = this.buildLegendaryList(currentBoosts);\r\n            this.calculateAndCount(consList, legsList);\r\n            count += 1;\r\n        }\r\n        this.hasGotLastCombination = (count === 0);\r\n        return !this.hasGotLastCombination;\r\n    }\r\n\r\n    isFinished() {\r\n        return this.hasGotLastCombination;\r\n    }\r\n\r\n    getCompletionPercent() {\r\n        if (!this.modCombinator) {\r\n            return 0;\r\n        }\r\n        const onePart =  100 / this.modCombinator.getCombinationsCount();\r\n        return parseInt(onePart * this.modCombinator.getCurrentNumber());\r\n    }\r\n\r\n    applyMods() {\r\n        TemplateTools.resetMods(this.template);\r\n        const combinations = this.modCombinator.current();\r\n        for (const name in combinations) {\r\n            const modGroup = this.template.allMods[name];\r\n            if (modGroup) {\r\n                const modIndex = combinations[name];\r\n                if (modIndex > -1) {\r\n                    modGroup[modIndex][1] = true;\r\n                }\r\n            }\r\n        }\r\n        modsSetter.cleanTemplateAndApplyCurrentMods(this.template);\r\n    }\r\n\r\n    // Considers that if explosive exists by default then it will exist for any other configuration\r\n    // must be applied before resetting template\r\n    isDefaultExplosive() {\r\n        modsSetter.cleanTemplateAndApplyCurrentMods(this.template);\r\n        return TemplateTools.isWeaponExplosive(this.template);\r\n    }\r\n\r\n    nonAutomatic() {\r\n        return (this.main[\"Non-Automatic\"] && this.template.isAuto[1] === 1);\r\n    }\r\n\r\n    applyLegendaryToWSpec(wSpec, legendary, update) {\r\n        if (!legendary) {\r\n            return;\r\n        }\r\n        const lowHP = this.cards[\"Low HP\"];\r\n        for(let i = 0; i < legendary.length; i++) {\r\n            const leg = legendary[i];\r\n            const legId = leg[0];\r\n            const legIndex = leg[1];\r\n            this.modParser.applyLegendaryModToWSpec(legId, wSpec, legIndex, ((lowHP) ? 20 : 100), update, true);\r\n            wSpec.legendary[legIndex][0] = legId;\r\n        }\r\n    }\r\n\r\n    memoConfig(wSpec, consumableBoostsList) {\r\n        const mods = [];\r\n        const leg1 = getLegendaryNameFromSpec(wSpec, 1);\r\n        const leg2 = getLegendaryNameFromSpec(wSpec, 2);\r\n        const leg3 = getLegendaryNameFromSpec(wSpec, 3);\r\n        for (let i = 0; i < wSpec.mods.length; i++) {\r\n            const mod = wSpec.mods[i];\r\n            mods.push({group: mod.group, name: mod.name});\r\n        }\r\n        this.currentConfig[\"mods\"] = mods;\r\n        this.currentConfig[\"consumables\"] = consumableBoostsList;\r\n        this.currentConfig[\"legendary\"] = [leg1, leg2, leg3];\r\n        this.currentConfig[\"perks\"] = this.perkImageNames;\r\n        return this.currentConfig;\r\n    }\r\n\r\n    updateBestConfig() {\r\n        this.bestConfig = {};\r\n        const mods = [];\r\n        const legs = [];\r\n        const consumables = [];\r\n        const perks = [];\r\n        this.bestConfig['mods'] = mods;\r\n        this.bestConfig['legendary'] = legs;\r\n        this.bestConfig['consumables'] = consumables;\r\n        this.bestConfig['perks'] = perks;\r\n        for (let i = 0; i < this.currentConfig.mods.length; i++) {\r\n            const mod = this.currentConfig.mods[i];\r\n            mods.push({group: mod.group, name: mod.name});\r\n        }\r\n\r\n        for (let i = 0; i < this.currentConfig.legendary.length; i++) {\r\n            const leg = this.currentConfig.legendary[i];\r\n            legs.push(leg);\r\n        }\r\n\r\n        for (let i = 0; i < this.currentConfig.consumables.length; i++) {\r\n            const cons = this.currentConfig.consumables[i];\r\n            consumables.push(cons);\r\n        }\r\n\r\n        for (let i = 0; i < this.currentConfig.perks.length; i++) {\r\n            const perk = this.currentConfig.perks[i];\r\n            perks.push(perk);\r\n        }\r\n    }\r\n\r\n    getBestConfig() {\r\n        return (this.bestConfig) ? this.bestConfig : this.currentConfig;\r\n    }\r\n\r\n    getCurrentConfig() {\r\n        return this.currentConfig;\r\n    }\r\n\r\n    buildNewCreatures() {\r\n        return {\r\n            creature1: buildCreature(this.creatureNames.creature1[0], this.creatureNames.creature1[1], \"creature1\"),\r\n            creature2: buildCreature(this.creatureNames.creature2[0], this.creatureNames.creature2[1], \"creature2\"),\r\n            creature3: buildCreature(this.creatureNames.creature3[0], this.creatureNames.creature3[1], \"creature3\"),\r\n            creature4: buildCreature(this.creatureNames.creature4[0], this.creatureNames.creature4[1], \"creature4\"),\r\n        };\r\n    }\r\n\r\n    calculateCombination(consumableBoostsList, legendary) {\r\n        const wSpec = convertTemplateToSpecs(this.template, false);\r\n\r\n        // Update default legs or apply new in wSpec\r\n        const updateLeg = this.defaultLegendary.length > 0;\r\n        const legToApply = (this.defaultLegendary.length > 0) ? this.defaultLegendary : legendary;\r\n        this.applyLegendaryToWSpec(wSpec, legToApply, updateLeg);\r\n        const extraDamage = defaultExtraDamage();\r\n        extraDamage.useCrit = this.cards[\"Crit\"];\r\n        extraDamage.critFreq = this.frCrit;\r\n        extraDamage.useSneak = this.cards[\"Sneak\"];\r\n        extraDamage.headFreq = this.frHead;\r\n        extraDamage.useHead = this.main[\"Head Shot\"];\r\n        const additionalDamages = defaultAdds();\r\n        const player = defaultPlayer();\r\n        const playerStats = defaultPlayerStats();\r\n        playerStats.strength.value = this.main[\"Strength\"];\r\n        const boostDamage = this.buildPerks(wSpec, player);\r\n        this.memoConfig(wSpec, consumableBoostsList);\r\n        const creatures = this.buildNewCreatures();\r\n        const [, consumableBoosts,] = ConsumablesBuilder.buildFromList(consumableBoostsList, player);\r\n        const weaponFactory = new WeaponFactory(wSpec, boostDamage, extraDamage, additionalDamages, consumableBoosts, playerStats);\r\n        const timeLimit = (this.bestTime === Infinity) ? null : [this.creatureName, this.bestTime];\r\n        const result = new DamageEmulator(weaponFactory.build(WeaponFactory.DEFAULT), creatures).emulate(35000, timeLimit);\r\n        const report = {\r\n            \"Rejected\": this.nonAutomatic(),\r\n            \"Parameters\": {\r\n                wSpec: wSpec,\r\n                creatures: creatures,\r\n                extraDamage: extraDamage,\r\n                additionalDamages: additionalDamages,\r\n                player: player,\r\n                playerStats: playerStats,\r\n                boostDamage: boostDamage,\r\n                result: result,\r\n                consumableList: consumableBoostsList,\r\n            },\r\n            \"average\": {lifeTime: getAverageTimeMillis(creatures), averageHit: (creatures.creature1.averageHit + creatures.creature2.averageHit + creatures.creature3.averageHit + creatures.creature4.averageHit) / 4},\r\n        };\r\n        report[creatures.creature1.name] = {lifeTime: creatures.creature1.lifeTime, averageHit: creatures.creature1.averageHit};\r\n        report[creatures.creature2.name] = {lifeTime: creatures.creature2.lifeTime, averageHit: creatures.creature2.averageHit};\r\n        report[creatures.creature3.name] = {lifeTime: creatures.creature3.lifeTime, averageHit: creatures.creature3.averageHit};\r\n        report[creatures.creature4.name] = {lifeTime: creatures.creature4.lifeTime, averageHit: creatures.creature4.averageHit};\r\n        return report;\r\n    }\r\n\r\n    buildPerks(wSpec, player) {\r\n        const wType = wSpec.type;\r\n        const automatic = (wSpec.is_auto === 1);\r\n        const energyTag = wSpec.tags.includes(\"Energy\");\r\n        const explosiveTag = wSpec.tags.includes(\"Explosive\");\r\n        const fusionTag = wSpec.tags.includes(\"FusionCore\");\r\n        const oneHandedTag = wSpec.tags.includes(\"Melee1H\");\r\n        const twoHandedTag = wSpec.tags.includes(\"Melee2H\");\r\n        const silencerTag = wSpec.tags.includes(\"HasSilencer\");\r\n        const shotgunTag = wSpec.tags.includes(\"Shotgun\");\r\n        const main = this.cards[\"Main Boosts\"];\r\n        const temp = this.cards[\"Temp Boosts\"];\r\n        const leg = this.cards[\"Leg Boosts\"];\r\n        const team = this.cards[\"Team\"];\r\n        const lowHp = this.cards[\"Low HP\"];\r\n        const pa = this.cards[\"Power Armor\"];\r\n        const explosive = (wSpec.exp > 0);\r\n        const crit = this.cards[\"Crit\"];\r\n        const sneak = this.cards[\"Sneak\"];\r\n        const night = this.main[\"Night\"];\r\n        const useSerums = this.stuff[\"Serums\"];\r\n        const drink = this.stuff[\"Drink\"];\r\n        const boosts = PerkCardBuilder.buildWithOptions(wType, automatic, energyTag, explosiveTag, fusionTag, oneHandedTag, twoHandedTag, silencerTag, shotgunTag, main, temp, leg, drink, team, lowHp, pa, explosive, crit, sneak, night, useSerums, player, this.bodyTags, this.creatureTags);\r\n        this.perkImageNames = PerkCardBuilder.getImageNamesForPickedCards(boosts);\r\n        return boosts;\r\n    }\r\n}","export default class PickedGroups {\r\n    static excludeGroups = [\"Replacement\", \"Feedthroat\", \"Handle\", \"Mod1\", \"Mod2\", \"Mod3\", \"Mod4\", \"Modelswap\", \"Meleelogo\", \"Shaft\", \"Legendary1\", \"Legendary2\", \"Legendary3\", \"Legendary4\", \"Legendary5\", \"Customname\", \"Frontsight\"];\r\n    static groups = [];\r\n\r\n    static init(template) {\r\n        PickedGroups.groups.length = 0;\r\n        for (const name in template.allMods) {\r\n            PickedGroups.push(name);\r\n        }\r\n    }\r\n\r\n    static excluded(name) {\r\n        return PickedGroups.excludeGroups.includes(name);\r\n    }\r\n\r\n    static push(name) {\r\n        if (!PickedGroups.excluded(name)) {\r\n            PickedGroups.groups.push(name);\r\n        }\r\n    }\r\n\r\n    static clear() {\r\n        PickedGroups.groups.length = 0;\r\n    }\r\n\r\n    static get() {\r\n        return PickedGroups.groups;\r\n    }\r\n}","import { useState } from 'react';\r\nimport { Divider } from 'antd';\r\nimport { UCheckbox } from '../../../viewComponents/checkbox/UCheckbox';\r\nimport PickedGroups from './PickedGroups';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nfunction getDefaultModGroups(template) {\r\n    let result = {};\r\n    if (template) {\r\n        for (const name in template.allMods) {\r\n            if (!PickedGroups.excluded(name)) {\r\n                 result[name] = true;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction buildGroupsView(groups, onGroupChange) {\r\n    let result = [];\r\n\r\n    for (const name in groups) {\r\n        result.push(getModItem(name, groups, onGroupChange));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getModItem(name, groups, onGroupChange) {\r\n    const checked = groups[name];\r\n    const outline = (checked) ? \"shadow-blue\" : \"\";\r\n    return (\r\n        <Col key={name}>\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap justify-content-center\">\r\n                <InputGroup.Text className={outline} style={{ width: '2.8rem'}}>\r\n                    <UCheckbox title={name} onChange={onGroupChange} checked={checked}></UCheckbox>\r\n                </InputGroup.Text>\r\n                <InputGroup.Text className={outline} style={{ width: '15rem' }}><small>{name}</small></InputGroup.Text>\r\n            </InputGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function CalcModGroups(props) {\r\n    const [groups, setGroups] = useState(getDefaultModGroups(props.template));\r\n    function onGroupChange(e) {\r\n        groups[e.target.title] = e.target.checked;\r\n        PickedGroups.clear();\r\n        for (const name in groups) {\r\n            if (groups[name]) {\r\n                PickedGroups.push(name);\r\n            }\r\n        }\r\n        setGroups({...groups});\r\n    }\r\n    return (\r\n        <>\r\n            <Divider key={'ModGroups'} className=\"p-0 mt-3 mb-1\">Mod Groups</Divider>\r\n            <Container>\r\n                <Row>\r\n                    {buildGroupsView(groups, onGroupChange)}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import {checkLength} from '../../../helpers/Input';\r\nimport { Divider } from 'antd';\r\nimport { UCheckbox } from '../../../viewComponents/checkbox/UCheckbox';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Button } from 'react-bootstrap';\r\nimport { WarningPopover } from '../../../helpers/WarningPopover';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nfunction getInfo(name, outline, infos) {\r\n    const info = infos[name];\r\n    if (info) {\r\n        return (\r\n            <WarningPopover element={infoButton(outline)} message={info} header=\"Description\" />\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction infoButton(outline) {\r\n    return (\r\n        <Button className={outline} style={{ width: '2rem' }} variant=\"warning\"><strong>?</strong></Button>\r\n    );\r\n}\r\n\r\nfunction headButton(name, frHead, setFrHead, outline) {\r\n    if (name !== \"Head Shot\") {\r\n        return (<></>);\r\n    }\r\n    function onClick(e) {\r\n        frHead += 20;\r\n        if (frHead > 100) {\r\n            frHead = 20;\r\n        }\r\n        setFrHead(frHead);\r\n    }\r\n    return (\r\n        <Button className={\"ps-0 pe-0 \" + outline} style={{ width: '3rem' }} variant=\"secondary\" onClick={onClick}><strong><small>{frHead}%</small></strong></Button>\r\n    );\r\n}\r\n\r\nfunction buildView(items, setItems, frHead, setFrHead, frCrit, setFrCrit, infos) {\r\n    const result = [];\r\n    function onChange(e) {\r\n        items[e.target.title] = e.target.checked;\r\n        setItems({...items});\r\n    }\r\n    for (const opt in items) {\r\n        result.push(getItem(opt, onChange, items, setItems, frHead, setFrHead, frCrit, setFrCrit, infos));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction critButton(name, frCrit, setFrCrit) {\r\n    if (name !== \"Crit\") {\r\n        return (<></>);\r\n    }\r\n    function onClick(e) {\r\n        frCrit -= 1;\r\n        if (frCrit < 1) {\r\n            frCrit = 7;\r\n        }\r\n        setFrCrit(frCrit);\r\n    }\r\n    return (\r\n        <Button className=\"ps-0 pe-0\" style={{ width: '3rem' }} variant=\"secondary\" onClick={onClick}><strong><small>1 / {frCrit}</small></strong></Button>\r\n    );\r\n}\r\n\r\nfunction getItem(name, onChange, items, setItems, frHead, setFrHead, frCrit, setFrCrit, infos) {\r\n    let width = (infos[name]) ? '13rem' : '15rem';\r\n    width = (name === \"Head Shot\" || name === \"Crit\") ? \"12rem\" : width;\r\n    width = (name === \"Strength\") ? \"11rem\" : width;\r\n    const dis = (name === \"Strength\");\r\n    const checked = (dis) ? true : items[name];\r\n    const outline = (checked) ? \"shadow-blue\" : \"\";\r\n    return (\r\n        <Col key={name}>\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap justify-content-center\">\r\n                <InputGroup.Text className={outline} style={{ width: '2.8rem'}}>\r\n                    <UCheckbox disabled={dis} title={name} onChange={onChange} checked={checked}></UCheckbox>\r\n                </InputGroup.Text>\r\n                <InputGroup.Text className={outline} style={{ width: width }}><small>{name}</small></InputGroup.Text>\r\n                {getInfo(name, outline, infos)}\r\n                {headButton(name, frHead, setFrHead, outline)}\r\n                {strengthField(name, items, setItems, outline)}\r\n                {critButton(name, frCrit, setFrCrit)}\r\n            </InputGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction strengthField(name, items, setItems, outline) {\r\n    if (name !== \"Strength\") {\r\n        return (<></>);\r\n    }\r\n    function onChange(e) {\r\n        checkLength(e);\r\n        let value = parseInt(e.target.value);\r\n        let min = parseInt(e.target.min);\r\n        if (value < min) {\r\n            value = min;\r\n        }\r\n        items.Strength = value;\r\n        setItems({\r\n            ...items,\r\n        });\r\n    }\r\n    return (\r\n        <Form.Control className={\"pe-1 \" + outline} style={{ minWidth: '4rem', maxWidth: '4rem'}} type=\"number\" min=\"5\" value={items.Strength} max={\"100\"} maxLength=\"3\" onChange={onChange} />\r\n    );\r\n}\r\n\r\nexport default function CalcModOptionsView(props) {\r\n    return (\r\n        <>\r\n            <Divider key={props.header} className=\"p-0 mt-3 mb-1\">{props.header}</Divider>\r\n            <Container>\r\n                <Row>\r\n                    {buildView(props.items, props.setItems, props.frHead, props.setFrHead, props.frCrit, props.setFrCrit, props.infos)}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n}","import CalcModOptionsView from './CalcModOptionsView';\r\n\r\n\r\nconst infos = {\r\n    \"Temp Boosts\": \"Cards like Adrenaline, Tenderizer...\",\r\n    \"Main Boosts\": \"Cards like Heavy Gunner, Stabilized...\",\r\n    \"Leg Boosts\": \"TOFT, Follow Through.\",\r\n    \"Low HP\": \"20% / 100%\",\r\n    \"Power Armor\": \"Used only for 'Heavy', ignored for other groups\",\r\n}\r\n\r\nexport default function CalcCards(props) {\r\n    return (\r\n        <CalcModOptionsView header={\"Cards\"} items={props.cards} setItems={props.setCards} frCrit={props.frCrit} setFrCrit={props.setFrCrit} infos={infos}></CalcModOptionsView>\r\n    );\r\n}","import CalcModOptionsView from './CalcModOptionsView';\r\n\r\n\r\nconst infos = {\r\n    \"Non-Automatic\": \"Calculate among non-automatic mods only. If only automatic mods are presented then default config will be used.\",\r\n    \"Night\": \"Only for weapons with suppressor in sneak mode.\",\r\n}\r\n\r\nexport default function CalcMain(props) {\r\n    return (\r\n        <CalcModOptionsView header={\"Main\"} items={props.main} setItems={props.setMain} frHead={props.frHead} setFrHead={props.setFrHead} infos={infos}></CalcModOptionsView>\r\n    );\r\n}","import CalcModOptionsView from './CalcModOptionsView';\r\n\r\n\r\nconst infos = {\r\n    \"Drink\": <>Only <strong>Whiskey, Sweet Mut Fruit, Ballistic Bock, High Voltage Hefe, Vintage Mire Magic Moonshine, Sugar-Free Nukashine</strong> are used to reduce the number of useless combinations.</>,\r\n    \"Food\": <>Only <strong>Tasty Mutant Hound Stew, Deathclaw Wellington, Blight Soup, Spiked Venison & Tato Stew</strong> are used to reduce the number of useless combinations.</>,\r\n    \"Chemicals\": <><strong>Nuclear Don's blend</strong> is not included. <b>Bufftats / Psychotats</b> is not included (<b>Psychobuff</b> is used instead). <b>Fury</b> is used instead of <b>Super Chem MK1/2/3/4</b> as it gives the same effect with <strong>Psychobuff</strong>. Only <strong>Psychobuff, Fury, Overdrive, Calmex</strong> are used to reduce the number of useless combinations.</>,\r\n}\r\n\r\nexport default function CalcConsumables(props) {\r\n    return (\r\n        <CalcModOptionsView header={\"Consumables\"} items={props.stuff} setItems={props.setStuff} infos={infos}></CalcModOptionsView>\r\n    );\r\n}","import CalcModOptionsView from './CalcModOptionsView';\r\n\r\n\r\nconst infos = {\r\n    \"Legendary1\": <>Only <strong>Quad, Aristocrat, Anti-Armor, Two Shot, Executioner, Bloodied</strong> are used to reduce the number of useless combinations.</>,\r\n    \"Legendary2\": <>Only <strong>Steady, Melee Rapid, Hitman, Ranged Rapid, Vital, Explosive, Crippling</strong> are used to reduce the number of useless combinations.</>,\r\n    \"Legendary3\": <>Only <strong>Swift, Strength</strong> are used to reduce the number of useless combinations.</>,\r\n}\r\n\r\nexport default function CalcLegendary(props) {\r\n    return (\r\n        <CalcModOptionsView header={\"Legendary\"} items={props.leg} setItems={props.setLeg} infos={infos}></CalcModOptionsView>\r\n    );\r\n}","import { getImageElement } from '../helpers/WeaponImages';\r\nimport TemplateTools from './TemplateTools';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nexport default function WeaponEmblem(props) {\r\n    let iconName = props.iconName;\r\n    let className = \"shadow-outline-gold\";\r\n    if (props.className) {\r\n        className = props.className;\r\n    }\r\n    if (props.template) {\r\n        iconName = TemplateTools.getImage(props.template);\r\n    }\r\n    return (\r\n        <Card className={\"p-0 m-0 \" + className} style={{maxHeight: props.iconSize, width: props.iconSize}}>\r\n            <Card.Body className=\"p-1 m-0\">\r\n                {getImageElement(iconName, props.iconSize)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","export default function LegendaryCalcRowView(props) {\r\n    function getLeg(stars, index) {\r\n        return getRow(stars, props.legendary[index], props.width, false, props.fontSize, props.starSize);\r\n    }\r\n    const leg1 = getLeg(\"⭐\", 0);\r\n    const leg2 = getLeg(\"⭐⭐\", 1);\r\n    const leg3 = getLeg(\"⭐⭐⭐\", 2);\r\n    return (\r\n        <div className=\"mb-0 d-flex justify-content-center\">\r\n            {leg1}\r\n            {leg2}\r\n            {leg3}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getRow(stars, text, width, wrap, fontSize, starSize) {\r\n    return (\r\n        <div className=\"bg-yellow m-1 shadow-gold ps-1 pe-1\" style={{width: width}}>\r\n            <div className=\"d-flex justify-content-center\" style={{fontSize: starSize}}>\r\n                {stars}\r\n            </div>\r\n            <div style={{textWrap: wrap, fontWeight: 'bold', textAlign: 'center', fontSize: fontSize, overflow: 'hidden', textOverflow: 'ellipsis'}}>\r\n                {text}\r\n            </div>\r\n        </div>\r\n    );\r\n}","function getWidths(size, columns) {\r\n    let rest = size - columns;\r\n    const rows = [columns];\r\n    while (rest > 0) {\r\n        if (rest < columns) {\r\n            rows.push(rest);\r\n        } else {\r\n            rows.push(columns);\r\n        }\r\n        rest -= columns;\r\n    }\r\n    const widths = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        const row = rows[i];\r\n        for (let j = 0; j < row; j++) {\r\n            widths.push((100 / row).toFixed(2) + \"%\");\r\n        }\r\n\r\n    }\r\n    return widths;\r\n}\r\n\r\nexport default function ModsCalcRowView(props) {\r\n    const modViews = [];\r\n    let columns = 0;\r\n    let modView = [];\r\n    const wrap = (props.wrapText) ? 'wrap' : 'nowrap';\r\n    if (props.mods.length < 2) {\r\n        columns = 1;\r\n    } else if (props.mods.length < 5) {\r\n        columns = 2;\r\n    } else if (props.mods.length < 7) {\r\n        columns = 3;\r\n    } else {\r\n        columns = 4;\r\n    }\r\n    const widths = getWidths(props.mods.length, columns);\r\n    for (let i = 0; i < props.mods.length; i++) {\r\n        const mod = props.mods[i];\r\n        const width = widths[i];\r\n        modView.push(\r\n            <div key={mod.name} className=\"mod-item-shadow m-1 ps-1 pe-1\" style={{width: width, display: 'flex', alignItems: 'center', justifyContent: 'center'}}><div style={{textWrap: wrap, fontWeight: 'bold', textAlign: 'center', color: '#555555', fontSize: props.fontSize, overflow: 'hidden', textOverflow: 'ellipsis'}}>{mod.name}</div></div>\r\n        );\r\n        if (((i + 1) % columns) === 0) {\r\n            modViews.push(<div key={i} className=\"mb-0 d-flex justify-content-center\">{modView}</div>);\r\n            modView = [];\r\n        }\r\n    }\r\n    if (modView.length > 0) {\r\n        modViews.push(<div key={props.mods.length} className=\"mb-0 d-flex justify-content-center\">{modView}</div>);\r\n    }\r\n    return (\r\n        <div className=\"m-0 p-0\" style={{minHeight: props.minHeight}}>\r\n            {modViews}\r\n        </div>\r\n    );\r\n}","import ConsumablesBuilder from '../../boostStuff/ConsumablesBuilder';\r\n\r\n\r\nexport default class ParametersApplier {\r\n\r\n    static applyCalculatedParameters(parameters, props) {\r\n        props.setWSpec(parameters.wSpec);\r\n        props.setBoostDamage(parameters.boostDamage);\r\n        props.setPlayer(parameters.player);\r\n        props.setPlayerStats(parameters.playerStats);\r\n        props.setAdditionalDamages(parameters.additionalDamages);\r\n        props.setExtraDamage(parameters.extraDamage);\r\n\r\n        // Have to recalculate it for best result to set appropriate selection to items.\r\n        const [foodPref, stuffBoost, consumables] = ConsumablesBuilder.buildFromList(parameters.consumableList, parameters.player);\r\n        ConsumablesBuilder.setConsumableItems(consumables, props.setMagazines, props.setBobbleHeads, props.setFood, props.setDrink, props.setPsycho, props.setSerum, props.setOthers);\r\n        props.setFoodPref(foodPref);\r\n        props.setStuffBoost(stuffBoost);\r\n    }\r\n}","import { useState, useRef } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport ParameterCalculator from './calc/ParameterCalculator';\r\nimport CalcModGroups from './calc/view/CalcModGroups';\r\nimport CalcCards from './calc/view/CalcCards';\r\nimport PickedGroups from './calc/view/PickedGroups';\r\nimport CalcMain from './calc/view/CalcMain';\r\nimport CalcConsumables from './calc/view/CalcConsumables';\r\nimport CalcLegendary from './calc/view/CalcLegendary';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\nimport WeaponEmblem from './WeaponEmblem';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { WarningPopoverBadge } from '../helpers/WarningPopover';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\nimport TemplateTools from './TemplateTools';\r\nimport { keyValueTag } from '../helpers/RowBuilder';\r\nimport ConsumablesBuilder from '../boostStuff/ConsumablesBuilder';\r\nimport LegendaryCalcRowView from './calc/view/LegendaryCalcRowView';\r\nimport ModsCalcRowView from './calc/view/ModsCalcRowView';\r\nimport ParametersApplier from './calc/ParametersApplier';\r\nimport EmblemCalcRowView from './calc/view/EmblemCalcRowView';\r\nimport AccuracyHelper from '../helpers/AccuracyHelper';\r\nimport { Divider } from 'antd';\r\nimport getPerkImage from '../perkCardBoosts/PerkImageProvider';\r\nimport { getDefaultCards, getDefaultMain, getDefaultStuff, getDefaultLegendary } from './calc/CalcEntities';\r\n\r\n\r\nlet parameterCalculator = null;\r\n\r\nlet firstShown = false;\r\n\r\nconst calcIterations = 4;\r\n\r\nexport default function ModalCalculateWeapon(props) {\r\n    // console.log(\"ModalCalculateWeapon\");\r\n    const minHeight = useRef(null);\r\n    const [count, setCount] = useState({config: {}, current: 0, percent: 0, bestTime: Infinity});\r\n    const [calculating, setCalculating] = useState(0); // 0 - start, 1 - calculating, 2 - finished\r\n    const [cards, setCards] = useState(getDefaultCards());\r\n    const [main, setMain] = useState(getDefaultMain());\r\n    const [stuff, setStuff] = useState(getDefaultStuff());\r\n    const [leg, setLeg] = useState(getDefaultLegendary());\r\n    const [frCrit, setFrCrit] = useState(4);\r\n    const [frHead, setFrHead] = useState(100);\r\n    const [selectedCreature, setSelectedCreature] = useState('average');\r\n    const [accuracyPref, setAccuracyPref] = useState(AccuracyHelper.BALANCE);\r\n\r\n    if (!props.modalCalculate.show) {\r\n        firstShown = false;\r\n        return (<></>);\r\n    }\r\n\r\n    if (!firstShown) {\r\n        firstShown = true;\r\n        PickedGroups.init(props.modalCalculate.template);\r\n    }\r\n\r\n    let name = \"\";\r\n    if (props.modalCalculate.template) {\r\n        name = props.modalCalculate.template.name;\r\n    }\r\n    name = truncateLongWords(name, 25);\r\n\r\n    function onHide(e) {\r\n        setCount({config: {}, current: 0, percent: 0, bestTime: Infinity});\r\n        setCalculating(0);\r\n        props.setModalCalculate({template: null, show: false});\r\n        parameterCalculator = null;\r\n        firstShown = false;\r\n    }\r\n\r\n    function applyTemplate(e) {\r\n        if (parameterCalculator) {\r\n            setCalculating(3);\r\n            setTimeout(() => {\r\n                const parameters = parameterCalculator.getBestParameters().Parameters;\r\n                ParametersApplier.applyCalculatedParameters(parameters, props);\r\n                onHide(e);\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    function startCalculation(e) {\r\n        parameterCalculator = new ParameterCalculator(props.creatureNamesRef.current, props.modalCalculate.template.id, PickedGroups.get(), cards, frCrit, frHead, main, stuff, leg, accuracyPref);\r\n        parameterCalculator.prepareAndCalcFirst(selectedCreature);\r\n        setCount({config: parameterCalculator.getCurrentConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n        setCalculating(1);\r\n    }\r\n\r\n    if (calculating === 1) {\r\n        setTimeout(() => {\r\n                if (parameterCalculator) {\r\n                    const calculated = parameterCalculator.calculateCombinations(calcIterations);\r\n                    if (!calculated) {\r\n                        setCalculating(2);\r\n                        setCount({config: parameterCalculator.getBestConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n                    } else {\r\n                        setCount({config: parameterCalculator.getCurrentConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    function getButtons(calculating) {\r\n        if (calculating === 0) {\r\n            return (\r\n                <>\r\n                    <Button className=\"w-100 me-1\" onClick={startCalculation}>Start</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </>\r\n            );\r\n        } else if (calculating === 1) {\r\n            return (\r\n                <Button className=\"w-100 me-1\" onClick={onHide}>Stop And Close</Button>\r\n            );\r\n        } else if (calculating === 2) {\r\n            return (\r\n                <>\r\n                    <Button className=\"w-100 me-1\" onClick={applyTemplate}>Apply</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </>\r\n            );\r\n        } else {\r\n            return (<></>);\r\n        }\r\n    }\r\n\r\n    function getCounter(calculating) {\r\n        if (calculating === 0) {\r\n            return (<></>);\r\n        }\r\n        const leftValue = count.current + \" - \" + count.percent + \"%\";\r\n        const rightValue = count.bestTime;\r\n        const wrapText = (calculating === 2);\r\n        const currentElement = document.getElementById(\"modal-calc-item\");\r\n        if (currentElement) {\r\n            const curHeight = currentElement.offsetHeight;\r\n            if (!minHeight.current || minHeight.current < curHeight) {\r\n                minHeight.current = curHeight;\r\n            }\r\n        }\r\n        return (\r\n            <div style={{minHeight: minHeight.current}} id=\"modal-calc-item\">\r\n                <div className=\"mb-2 d-flex justify-content-center\">\r\n                    {keyValueTag(leftValue,  rightValue, 'volcano', {width: '100%', height: '1.34rem', fontSize: '1rem'}, false)}\r\n                </div>\r\n                <LegendaryCalcRowView legendary={count.config.legendary} width='50%' fontSize='65%' starSize='50%' />\r\n                <ModsCalcRowView minHeight='2.9rem' mods={count.config.mods} fontSize='65%' wrapText={wrapText} />\r\n                <EmblemCalcRowView imNames={count.config.perks} imageProvider={getPerkImage} iconSize='2.0rem' imageSize='1.864rem' borderRadius='5px' />\r\n                <EmblemCalcRowView imNames={count.config.consumables} imageProvider={ConsumablesBuilder.getImagePathById} iconSize='2.0rem' imageSize='1.864rem' />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function getCreatureNames() {\r\n        const result = [\"average\"];\r\n        for (const fieldName in props.creatureNamesRef.current) {\r\n            const data = props.creatureNamesRef.current[fieldName];\r\n            result.push(data[0]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function onSelectCreatureName(e) {\r\n        setSelectedCreature(e);\r\n    }\r\n\r\n    const creatureNames = getCreatureNames();\r\n    let selectedCreatureName;\r\n    if (creatureNames.includes(selectedCreature)) {\r\n        selectedCreatureName = CreatureDataProvider.capitalizeCreatureName(selectedCreature);\r\n    } else {\r\n        selectedCreatureName = \"Average\";\r\n        setSelectedCreature(\"average\");\r\n    }\r\n\r\n    function getSettings(calculating) {\r\n        if (calculating === 0) {\r\n            let show = !TemplateTools.hasDefaultLegendary(props.modalCalculate.template);\r\n            return (\r\n                <>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelectCreatureName} names={creatureNames} title={<strong>{selectedCreatureName}</strong>} />\r\n                    </div>\r\n                    <Divider className=\"mt-3 mb-2\">\r\n                        Accuracy\r\n                        <WarningPopoverBadge className=\"ms-3\" sign=\"?\" message={AccuracyHelper.ACCURACY_INFO} header={\"Accuracy\"} placement={'bottom'} />\r\n                    </Divider>\r\n                    <BSRadio className=\"d-flex justify-content-center m-1\" pairs={AccuracyHelper.ACC_PREFERENCE} selectedValue={accuracyPref} setSelectedValue={setAccuracyPref} parseValueInt={true} />\r\n                    <CalcMain main={main} setMain={setMain} frHead={frHead} setFrHead={setFrHead}></CalcMain>\r\n                    <CalcModGroups template={props.modalCalculate.template}></CalcModGroups>\r\n                    <CalcCards cards={cards} setCards={setCards} frCrit={frCrit} setFrCrit={setFrCrit}></CalcCards>\r\n                    <CalcLegendary leg={leg} setLeg={setLeg} show={show}></CalcLegendary>\r\n                    <CalcConsumables stuff={stuff} setStuff={setStuff}></CalcConsumables>\r\n                </>\r\n            );\r\n        }\r\n        return (<></>);\r\n    }\r\n\r\n    function nameView() {\r\n        if (calculating !== 0) {\r\n            return (<></>);\r\n        }\r\n        return (\r\n            <div className=\"d-flex justify-content-center mb-3\">\r\n                <strong><small>Calculate Best Options</small></strong>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function getModalView() {\r\n        if (calculating ===  3) {\r\n            return (\r\n                <Modal.Body className=\"modal-scroll-80-60\">\r\n                    <b>Loading...</b>\r\n                </Modal.Body>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Modal.Header className=\"d-flex justify-content-center p-1\">\r\n                    <Row className=\"p-1\" style={{width: '100%'}}>\r\n                        <Col className=\"d-flex justify-content-start p-0\" xs={2}>\r\n                            <WeaponEmblem template={props.modalCalculate.template} iconSize='2.5rem' />\r\n                        </Col>\r\n                        <Col xs={8} className=\"d-flex justify-content-center\">\r\n                            <div className=\"p-auto m-auto\" style={{fontSize: '1rem', fontWeight: 'bold'}}>{name}</div>\r\n                        </Col>\r\n                        <Col xs={2} className=\"d-flex justify-content-end m-auto pe-1\">\r\n                            <WarningPopoverBadge message={ParameterCalculator.info} sign=\"?\" header={\"Description\"} placement={'left'} />\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"modal-scroll-80-60\">\r\n                    {nameView()}\r\n                    {getCounter(calculating)}\r\n                    {getSettings(calculating)}\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"p-2\">\r\n                    <InputGroup className=\"mb-0 mt-0 flex-nowrap\">\r\n                        {getButtons(calculating)}\r\n                    </InputGroup>\r\n                </Modal.Footer>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.modalCalculate.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            {getModalView()}\r\n        </Modal>\r\n    );\r\n}","export function getDefaultCards() {\r\n    return {\"Main Boosts\": true, \"Temp Boosts\": false, \"Leg Boosts\": false, \"Team\": true, \"Low HP\": true, \"Power Armor\": true, \"Sneak\": false, \"Crit\": false};\r\n}\r\n\r\nexport function getDefaultMain() {\r\n    return {\"Strength\": 25, \"Head Shot\": true, \"Non-Automatic\": false, \"Scoped\": false, \"Night\": false};\r\n}\r\n\r\nexport function getDefaultStuff() {\r\n    return {\"Magazines\": false, \"Bobble Heads\": false, \"Chemicals\": true, \"Food\": true, \"Drink\": true, \"Serums\": true, \"Endangerol Syringer\": false};\r\n}\r\n\r\nexport function getDefaultLegendary() {\r\n    return {\"Legendary1\": true, \"Legendary2\": true, \"Legendary3\": true};\r\n}","import { Divider } from 'antd';\r\nimport { UCheckbox } from '../../../viewComponents/checkbox/UCheckbox';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nfunction buildGroupsView(groups, onGroupChange) {\r\n    let result = [];\r\n    for (const name in groups) {\r\n        result.push(getModItem(name, groups, onGroupChange));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getModItem(name, groups, onGroupChange) {\r\n    const checked = groups[name];\r\n    const outline = (checked) ? \"shadow-blue\" : \"\";\r\n    return (\r\n        <Col key={name}>\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap justify-content-center\">\r\n                <InputGroup.Text className={outline} style={{ width: '2.8rem' }}>\r\n                    <UCheckbox title={name} onChange={onGroupChange} checked={checked}></UCheckbox>\r\n                </InputGroup.Text>\r\n                <InputGroup.Text className={outline} style={{ width: '15rem' }}><small>{name}</small></InputGroup.Text>\r\n            </InputGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function CalcModGroupsAll(props) {\r\n\r\n    function onGroupChange(e) {\r\n        props.groups[e.target.title] = e.target.checked;\r\n        props.setGroups({...props.groups});\r\n    }\r\n    return (\r\n        <>\r\n            <Divider key={'ModGroups'} className=\"p-0 mt-3 mb-1\">Mod Groups</Divider>\r\n            <Container>\r\n                <Row>\r\n                    {buildGroupsView(props.groups, onGroupChange)}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { getRowWithImage } from '../../../helpers/WTypeDropdown';\r\n\r\n\r\nexport default function CalcWGroupsDropdown({type, setType}) {\r\n    function onSelect(e) {\r\n        setType(e);\r\n    };\r\n    return (\r\n        <Row className=\"p-2 mb-2 mt-1\">\r\n            <Col className=\"d-flex justify-content-center\">\r\n                <DropdownButton size=\"sm\" variant=\"info\" onSelect={onSelect} id=\"dropdown-basic-button\" title={getRowWithImage(type)}>\r\n                    <Dropdown.Item eventKey=\"All\">All</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Heavy\">{getRowWithImage(\"Heavy\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Shotgun\">{getRowWithImage(\"Shotgun\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Rifle\">{getRowWithImage(\"Rifle\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Pistol\">{getRowWithImage(\"Pistol\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Bow\">{getRowWithImage(\"Bow\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Melee\">{getRowWithImage(\"Melee\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Unarmed\">{getRowWithImage(\"Unarmed\")}</Dropdown.Item>\r\n                </DropdownButton>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import Card from 'react-bootstrap/Card';\r\nimport WeaponEmblem from '../../WeaponEmblem';\r\nimport { keyValueTag } from '../../../helpers/RowBuilder';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LegendaryCalcRowView from './LegendaryCalcRowView';\r\nimport ModsCalcRowView from './ModsCalcRowView';\r\nimport EmblemCalcRowView from './EmblemCalcRowView';\r\nimport ConsumablesBuilder from '../../../boostStuff/ConsumablesBuilder';\r\nimport getPerkImage from '../../../perkCardBoosts/PerkImageProvider';\r\nimport { useRef } from 'react';\r\n\r\n\r\nexport default function CalcCurrentItem(props) {\r\n    const minHeight = useRef(null);\r\n    const weaponName = useRef(null);\r\n    const leftValue = props.count.current + \" - \" + props.count.percent + \"%\";\r\n    const rightValue = props.count.bestTime;\r\n    const perksHeight = null; // (props.perksUsed) ? '4rem' : '0rem';\r\n    const consHeight = null; // (props.consUsed) ? '6rem' : '0rem';\r\n    const currentElement = document.getElementById(\"current-calc-item\");\r\n\r\n    // Adjust card height according to weapon name, we want to avoid height bouncing but be adjusted to\r\n    // every weapon\r\n    if (weaponName.current !== props.wName) {\r\n        weaponName.current = props.wName;\r\n        minHeight.current = null;\r\n    } else {\r\n        if (currentElement) {\r\n            const curHeight = currentElement.offsetHeight;\r\n            if (!minHeight.current || minHeight.current < curHeight) {\r\n                minHeight.current = curHeight;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card className=\"shadow-card-gold\" id=\"current-calc-item\" style={{minHeight: minHeight.current}}>\r\n                <Card.Body className=\"p-1 ps-2 m-0\">\r\n                    <Row>\r\n                        <Col className=\"m-auto\" xs={3}>\r\n                            <WeaponEmblem className=\"shadow-card-grey\" iconName={props.iconName} iconSize='2.8rem'></WeaponEmblem>\r\n                        </Col>\r\n                        <Col xs={9}>\r\n                            <div className=\"d-flex justify-content-end pe-1\"><strong className=\"text-shadow-blue2\">{props.wName}</strong></div>\r\n                            <div className=\"d-flex justify-content-end\">{keyValueTag(leftValue,  rightValue, 'red', {width: '100%', height: '1.34rem', fontSize: '1rem'})}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <LegendaryCalcRowView legendary={props.count.config.legendary} width='50%' fontSize='65%' starSize='50%' />\r\n                    <ModsCalcRowView minHeight='2.9rem' mods={props.count.config.mods} fontSize='65%' wrapText={false} />\r\n                    <EmblemCalcRowView style={{minHeight: perksHeight}} imNames={props.count.config.perks} imageProvider={getPerkImage} iconSize='1.5rem' imageSize='1.364rem' borderRadius='5px' />\r\n                    <EmblemCalcRowView style={{minHeight: consHeight}} imNames={props.count.config.consumables} imageProvider={ConsumablesBuilder.getImagePathById} iconSize='1.5rem' imageSize='1.364rem' />\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n}","import Card from 'react-bootstrap/Card';\r\nimport WeaponEmblem from '../../WeaponEmblem';\r\nimport { keyValueTag } from '../../../helpers/RowBuilder';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LegendaryCalcRowView from './LegendaryCalcRowView';\r\nimport ModsCalcRowView from './ModsCalcRowView';\r\nimport EmblemCalcRowView from './EmblemCalcRowView';\r\nimport { memo } from 'react';\r\nimport ConsumablesBuilder from '../../../boostStuff/ConsumablesBuilder';\r\nimport getPerkImage from '../../../perkCardBoosts/PerkImageProvider';\r\n\r\n\r\nconst CalcResultItem = memo(function CalcResultItem(props) {\r\n    // console.log(\"CalcResultItem\");\r\n    const leftValue = \"\";\r\n    const rightValue = props.bestTime;\r\n    function onClick(e) {\r\n        if (props.finishedRef.current) {\r\n            props.setWNameToApply(props.wName);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card className=\"shadow-outline-result-item mb-3\" onClick={onClick}>\r\n                <Card.Body className=\"p-1 ps-2 m-0\">\r\n                    <Row>\r\n                        <Col className=\"m-auto\" xs={3}>\r\n                            <WeaponEmblem className=\"shadow-card-grey\" iconName={props.iconName} iconSize='2.8rem'></WeaponEmblem>\r\n                        </Col>\r\n                        <Col xs={9}>\r\n                            <div className=\"d-flex justify-content-end pe-1\"><strong className=\"text-shadow-grey-blue\">{props.wName}</strong></div>\r\n                            <div className=\"d-flex justify-content-end\">{keyValueTag(leftValue,  rightValue, 'volcano', {width: '100%', height: '1.34rem', fontSize: '1rem'})}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <LegendaryCalcRowView legendary={props.config.legendary} width='50%' fontSize='65%' starSize='50%' />\r\n                    <ModsCalcRowView minHeight='1rem' mods={props.config.mods} fontSize='65%' wrapText={true} />\r\n                    <EmblemCalcRowView imNames={props.config.perks} imageProvider={getPerkImage} iconSize='1.5rem' imageSize='1.364rem' borderRadius='5px' />\r\n                    <EmblemCalcRowView imNames={props.config.consumables} imageProvider={ConsumablesBuilder.getImagePathById} iconSize='1.5rem' imageSize='1.364rem' borderRadius='4px' />\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default CalcResultItem;","import { memo } from 'react';\r\nimport CalcResultItem from \"./CalcResultItem\";\r\n\r\n\r\nfunction compareItems(item1, item2) {\r\n    if (item1 === null && item2 === null) {\r\n        return 0;\r\n    } else if (item1 === null) {\r\n        return 1;\r\n    } else if (item2 === null) {\r\n        return -1;\r\n    }\r\n    const time1 = item1.bestTimeCount;\r\n    const time2 = item2.bestTimeCount;\r\n    if (time1 < time2) {\r\n        return -1;\r\n    } else if (time2 < time1) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst CalcResultItems = memo(function CalcResultItems(props) {\r\n    console.log(\"CalcResultItems\");\r\n    let result = [];\r\n    const resultView = [];\r\n    for (let i = 0; i < props.calcItems.length; i++) {\r\n        const item = props.calcItems[i];\r\n        result.push(item);\r\n    }\r\n    result = result.sort(compareItems);\r\n    for (let i = 0; i < result.length; i++) {\r\n        const item = result[i];\r\n        resultView.push(<CalcResultItem key={item.wName} title={item.wName} finishedRef={props.finishedRef} setWNameToApply={props.setWNameToApply} config={item.config} wName={item.wName} bestTime={item.bestTime} iconName={item.iconName}></CalcResultItem>);\r\n    }\r\n    return (\r\n        <>\r\n            {resultView}\r\n        </>\r\n    );\r\n});\r\n\r\nexport default CalcResultItems;","import { useState, useEffect, useRef } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport ParameterCalculator from './calc/ParameterCalculator';\r\nimport CalcModGroupsAll from './calc/view/CalcModGroupsAll';\r\nimport CalcCards from './calc/view/CalcCards';\r\nimport PickedGroups from './calc/view/PickedGroups';\r\nimport CalcMain from './calc/view/CalcMain';\r\nimport CalcConsumables from './calc/view/CalcConsumables';\r\nimport CalcLegendary from './calc/view/CalcLegendary';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\nimport { WarningPopoverBadge } from '../helpers/WarningPopover';\r\nimport TemplateTools from './TemplateTools';\r\nimport { modGroups, weaponIds } from './TemplateItems';\r\nimport CalcWGroupsDropdown from \"./calc/view/CalcWGroupsDropdown\";\r\nimport CalcCurrentItem from \"./calc/view/CalcCurrentItem\";\r\nimport CalcResultItems from \"./calc/view/CalcResultItems\";\r\nimport ParametersApplier from './calc/ParametersApplier';\r\nimport { getImage } from '../helpers/WTypeDropdown';\r\nimport { Divider } from 'antd';\r\nimport { Progress } from 'antd';\r\nimport AccuracyHelper from '../helpers/AccuracyHelper';\r\nimport { getDefaultCards, getDefaultMain, getDefaultStuff, getDefaultLegendary } from './calc/CalcEntities';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\n\r\n\r\nlet parameterCalculator = null;\r\n\r\nlet firstShown = false;\r\n\r\nlet currentWIndex = 0;\r\n\r\nlet parameters = null;\r\n\r\nconst calcIterations = 4;\r\n\r\nfunction getDefaultModGroups() {\r\n    let result = {};\r\n    for (const name of modGroups) {\r\n        if (!PickedGroups.excluded(name)) {\r\n             result[name] = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function ModalCalculateWeapons(props) {\r\n    const [count, setCount] = useState({config: {}, current: 0, percent: 0, bestTime: Infinity});\r\n    const [groups, setGroups] = useState(getDefaultModGroups());\r\n    const [calculating, setCalculating] = useState(0); // 0 - start, 1 - calculating, 2 - finished\r\n    const [cards, setCards] = useState(getDefaultCards());\r\n    const [main, setMain] = useState(getDefaultMain());\r\n    const [stuff, setStuff] = useState(getDefaultStuff());\r\n    const [leg, setLeg] = useState(getDefaultLegendary());\r\n    const [frCrit, setFrCrit] = useState(4);\r\n    const [frHead, setFrHead] = useState(100);\r\n    const [completion, setCompletion] = useState({current: 0, size: 0});\r\n    const [selectedCreature, setSelectedCreature] = useState('average');\r\n    const [accuracyPref, setAccuracyPref] = useState(AccuracyHelper.BALANCE);\r\n    const [weaponResult, setWeaponResult] = useState([]);\r\n    const [type, setType] = useState(\"All\");\r\n    const [wNameToApply, setWNameToApply] = useState(null);\r\n    const [renderSwitch, setRenderSwitch] = useState(false);\r\n    const canCalculateRef = useRef(false);\r\n    const finishedRef = useRef(false);\r\n\r\n    /*\r\n    // Changes on every render, to allow a user smooth interaction and updates\r\n    useEffect(() => {\r\n        if (canCalculateRef.current) {\r\n            calculateParameters();\r\n            setRenderSwitch(!renderSwitch);\r\n        }\r\n    }, [renderSwitch]);\r\n    */\r\n\r\n    // We are finished and child asked to be applied.\r\n    useEffect(() => {\r\n        if (finishedRef.current) {\r\n            finishedRef.current = false;\r\n            const result = parameters.get(wNameToApply);\r\n            if (result) {\r\n                setCalculating(3);\r\n                setTimeout(() => {\r\n                    const parameters = result.Parameters;\r\n                    ParametersApplier.applyCalculatedParameters(parameters, props);\r\n                    onHide(null);\r\n                }, 100);\r\n            }\r\n        }\r\n    }, [wNameToApply]);\r\n\r\n    if (!props.modalCalculates.show) {\r\n        firstShown = false;\r\n        return (<></>);\r\n    }\r\n\r\n    if (!firstShown) {\r\n        currentWIndex = 0;\r\n        firstShown = true;\r\n        // The modal just popped up\r\n    }\r\n\r\n    function onHide(e) {\r\n        setCount({config: {}, current: 0, percent: 0, bestTime: Infinity});\r\n        setWeaponResult([]);\r\n        setCompletion({current: 0, size: 0});\r\n        setCalculating(0);\r\n        setWNameToApply(null);\r\n        finishedRef.current = false;\r\n        currentWIndex = 0;\r\n        props.setModalCalculates({show: false});\r\n        canCalculateRef.current = false;\r\n        parameterCalculator = null;\r\n        firstShown = false;\r\n        parameters = null;\r\n    }\r\n\r\n    function setupParameterCalculator() {\r\n        let wId = null;\r\n        if (props.modalCalculates.show) {\r\n            const wIds = weaponIds[type];\r\n            let idObj = wIds[currentWIndex];\r\n            while(idObj) {\r\n                currentWIndex++;\r\n                if (idObj.apply) {\r\n                    wId = idObj.id;\r\n                    break;\r\n                }\r\n                idObj = wIds[currentWIndex];\r\n            }\r\n            if (wId) {\r\n                const gNames = [];\r\n                for (const name in groups) {\r\n                    if (groups[name]) {\r\n                        gNames.push(name);\r\n                    }\r\n                }\r\n                parameterCalculator = new ParameterCalculator(props.creatureNamesRef.current, wId, gNames, cards, frCrit, frHead, main, stuff, leg, accuracyPref);\r\n                parameterCalculator.prepareAndCalcFirst(selectedCreature);\r\n            }\r\n        }\r\n        if (!wId) {\r\n            parameterCalculator = null;\r\n            currentWIndex = 0;\r\n        }\r\n        return (wId !== null);\r\n    }\r\n\r\n    function startCalculation(e) {\r\n        const wIds = weaponIds[type];\r\n        let size = 0;\r\n        for (let i = 0; i < wIds.length; i++) {\r\n            if (wIds[i].apply) {\r\n                size += 1;\r\n            }\r\n        }\r\n        parameters = new Map();\r\n        setCompletion({current: 0, size: size});\r\n        setupParameterCalculator();\r\n        setCalculating(1);\r\n        finishedRef.current = false;\r\n        setCount({config: parameterCalculator.getCurrentConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n        setRenderSwitch(!renderSwitch);\r\n        canCalculateRef.current = true;\r\n    }\r\n\r\n    if (calculating === 1 && canCalculateRef.current && parameterCalculator) {\r\n        canCalculateRef.current = false;\r\n        setTimeout(() => {\r\n            calculateParameters();\r\n        });\r\n    }\r\n\r\n    function calculateParameters() {\r\n        if (calculating === 1 && parameterCalculator) {\r\n            if (!parameterCalculator.calculateCombinations(calcIterations)) {\r\n                const template = parameterCalculator.getTemplate();\r\n                const wName = template.name;\r\n                const iconName = TemplateTools.getImage(template);\r\n                parameters.set(wName, parameterCalculator.getBestParameters());\r\n                weaponResult.push({config: parameterCalculator.getBestConfig(), wName: wName, iconName: iconName, bestTime: parameterCalculator.getBestTime(), bestTimeCount: parameterCalculator.getBestTime(false)});\r\n                setWeaponResult([...weaponResult]);\r\n                setCompletion({current: completion.current + 1, size: completion.size});\r\n                if (!setupParameterCalculator()) {\r\n                    finishedRef.current = true;\r\n                    setCalculating(2);\r\n                    return;\r\n                }\r\n            }\r\n            canCalculateRef.current = true;\r\n            setCount({config: parameterCalculator.getCurrentConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n        }\r\n    }\r\n\r\n    function getButtons(calculating) {\r\n        if (calculating === 0) {\r\n            return (\r\n                <>\r\n                    <Button className=\"w-100 me-1\" onClick={startCalculation}>Start</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </>\r\n            );\r\n        } else if (calculating === 1) {\r\n            return (\r\n                <Button className=\"w-100 me-1\" onClick={onHide}>Stop And Close</Button>\r\n            );\r\n        } else if (calculating === 2) {\r\n            return (\r\n                <>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </>\r\n            );\r\n        } else {\r\n            return (<></>);\r\n        }\r\n    }\r\n\r\n    function getProgressNumber(percent) {\r\n        return (\r\n            <strong className=\"text-shadow-blue\"><small>{percent}%</small></strong>\r\n        );\r\n    }\r\n\r\n    function getCurrentItem() {\r\n        if (parameterCalculator) {\r\n            const template = parameterCalculator.getTemplate();\r\n            const iconName = TemplateTools.getImage(template);\r\n            const wName = template.name;\r\n            const perksUsed = cards[\"Main Boosts\"] || cards[\"Temp Boosts\"];\r\n            let consUsed = false;\r\n            for (const name in stuff) {\r\n                const item = stuff[name];\r\n                if (item) {\r\n                    consUsed = true;\r\n                    break;\r\n                }\r\n            }\r\n            return (<CalcCurrentItem perksUsed={perksUsed} consUsed={consUsed} iconName={iconName} count={count} wName={wName}></CalcCurrentItem>);\r\n        }\r\n    }\r\n\r\n    function getProgress(calculating) {\r\n        if (calculating === 0) {\r\n            return (<></>);\r\n        }\r\n        const percent = parseInt(100 * completion.current / completion.size);\r\n        const header = (calculating === 2) ? \"Tap To Apply\" : \"\";\r\n        return (\r\n            <>\r\n                <div className=\"d-flex justify-content-center mb-1\">\r\n                    <Progress\r\n                        size={40}\r\n                        type=\"dashboard\"\r\n                        steps={50}\r\n                        percent={percent}\r\n                        format={(percent) => getProgressNumber(percent)}\r\n                        strokeColor=\"rgb(0, 255, 136)\"\r\n                        trailColor=\"rgba(0, 0, 0, 0.1)\"\r\n                        strokeWidth={17} />\r\n                </div>\r\n                {getCurrentItem()}\r\n                <Divider className=\"mt-3 mb-3 text-shadow-blue2\"><b>{header}</b></Divider>\r\n                <CalcResultItems calcItems={weaponResult} finishedRef={finishedRef} setWNameToApply={setWNameToApply}></CalcResultItems>\r\n            </>\r\n        );\r\n    }\r\n\r\n    function getCreatureNames() {\r\n        const result = [\"average\"];\r\n        for (const fieldName in props.creatureNamesRef.current) {\r\n            const data = props.creatureNamesRef.current[fieldName];\r\n            result.push(data[0]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getSettings(calculating) {\r\n        function onSelectCreatureName(e) {\r\n            setSelectedCreature(e);\r\n        }\r\n\r\n        const creatureNames = getCreatureNames();\r\n        let selectedCreatureName;\r\n        if (creatureNames.includes(selectedCreature)) {\r\n            selectedCreatureName = CreatureDataProvider.capitalizeCreatureName(selectedCreature);\r\n        } else {\r\n            selectedCreatureName = \"Average\";\r\n            setSelectedCreature(\"average\");\r\n        }\r\n        if (calculating === 0) {\r\n            return (\r\n                <>\r\n                    <CalcWGroupsDropdown type={type} setType={setType}></CalcWGroupsDropdown>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelectCreatureName} names={creatureNames} title={<strong>{selectedCreatureName}</strong>} />\r\n                    </div>\r\n                    <Divider className=\"mt-3 mb-2\">\r\n                        Accuracy\r\n                        <WarningPopoverBadge className=\"ms-3\" sign=\"?\" message={AccuracyHelper.ACCURACY_INFO} header={\"Accuracy\"} placement={'bottom'} />\r\n                    </Divider>\r\n                    <BSRadio className=\"d-flex justify-content-center m-1\" pairs={AccuracyHelper.ACC_PREFERENCE} selectedValue={accuracyPref} setSelectedValue={setAccuracyPref} parseValueInt={true} />\r\n                    <CalcMain main={main} setMain={setMain} frHead={frHead} setFrHead={setFrHead}></CalcMain>\r\n                    <CalcModGroupsAll groups={groups} setGroups={setGroups}></CalcModGroupsAll>\r\n                    <CalcCards cards={cards} setCards={setCards} frCrit={frCrit} setFrCrit={setFrCrit}></CalcCards>\r\n                    <CalcLegendary leg={leg} setLeg={setLeg} show={true}></CalcLegendary>\r\n                    <CalcConsumables stuff={stuff} setStuff={setStuff}></CalcConsumables>\r\n                </>\r\n            );\r\n        }\r\n        return (<></>);\r\n    }\r\n    const header = (calculating === 0) ? \"Best Of The Best\" : type;\r\n    const wIcon = (calculating === 0) ? \"\" : getImage(type);\r\n    function getModalView() {\r\n        if (calculating === 3) {\r\n            return (\r\n                <Modal.Body className=\"modal-scroll-80-60\">\r\n                    <b>Loading...</b>\r\n                </Modal.Body>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Modal.Header className=\"d-flex justify-content-center p-1\">\r\n                <Row className=\"p-1\" style={{width: '100%'}}>\r\n                    <Col className=\"d-flex justify-content-start ps-2 p-0\" xs={2}>\r\n                        {wIcon}\r\n                    </Col>\r\n                    <Col xs={8} className=\"d-flex justify-content-center\">\r\n                        <div className=\"p-auto m-auto text-shadow-indigo\" style={{fontSize: '1.1rem', letterSpacing: '1px', fontWeight: 'bold'}}>{header}</div>\r\n                    </Col>\r\n                    <Col xs={2} className=\"d-flex justify-content-end m-auto pe-1\">\r\n                        <WarningPopoverBadge message={ParameterCalculator.info} sign=\"?\" header={\"Description\"} placement={'left'} />\r\n                    </Col>\r\n                </Row>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"modal-scroll-80-60 pt-2 p-3\">\r\n                    {getProgress(calculating)}\r\n                    {getSettings(calculating)}\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"p-2\">\r\n                    <InputGroup className=\"mb-0 mt-0 flex-nowrap\">\r\n                        {getButtons(calculating)}\r\n                    </InputGroup>\r\n                </Modal.Footer>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.modalCalculates.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            {getModalView()}\r\n        </Modal>\r\n    );\r\n}","import { useState } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\n\r\n\r\nfunction TestedCarousel({data}) {\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const handleSelect = (selectedIndex) => {\r\n        setIndex(selectedIndex);\r\n    };\r\n    const titles = getTitles(data.img);\r\n    return (\r\n        <>\r\n            <p className=\"d-flex justify-content-center\">\r\n                {titles[index]}\r\n            </p>\r\n            <Carousel activeIndex={index} onSelect={handleSelect} interval={null} data-bs-theme=\"dark\">\r\n                {getImages(data.img, data.alt)}\r\n            </Carousel>\r\n            <p className=\"pt-2 pb-0\">\r\n                <small>{data.version}</small>\r\n            </p>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nfunction getImages(img, alt) {\r\n    let result = [];\r\n    for(let i = 0; i < img.length; i++) {\r\n        result.push(\r\n            <Carousel.Item style={{padding: '0% 15% 10% 15%'}}>\r\n                <img className=\"d-block w-100\" src={img[i]} alt={alt} />\r\n            </Carousel.Item>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getTitles(images) {\r\n    let result = [];\r\n    for (let i = 0; i < images.length; i++) {\r\n        const img = images[i];\r\n        const firstIndex = img.indexOf(\"_\") + 1;\r\n        const lastIndex = img.indexOf(\"_\", firstIndex);\r\n        result.push(img.substring(firstIndex, lastIndex));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default TestedCarousel;","import Modal from 'react-bootstrap/Modal';\r\nimport TestedCarousel from './TestedCarousel';\r\nimport { testedWeapons } from './TestedWeapons';\r\n\r\n\r\nexport default function ModalTestedWeapon(props) {\r\n    console.log(\"ModalTestedWeapon\");\r\n    if (!props.modalTested.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalTested({data: null, show: false});\r\n    }\r\n    const data = testedWeapons.get(props.modalTested.wId);\r\n    return (\r\n        <Modal\r\n            show = {props.modalTested.show}\r\n            onHide = {onHide}\r\n            size=\"xl\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Tests\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"pb-1\">\r\n                <TestedCarousel data={data} />\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}","import { memo, useState } from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport ModalApplyTemplate from './ModalApplyTemplate';\r\nimport ModalCalculateWeapon from './ModalCalculateWeapon';\r\nimport ModalCalculateWeapons from './ModalCalculateWeapons';\r\nimport ModalTestedWeapon from './ModalTestedWeapon';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport WTypeDropdown from '../helpers/WTypeDropdown';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport TemplateItems from './TemplateItems';\r\nimport { FloatButton } from 'antd';\r\nimport { Button } from 'react-bootstrap';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nfunction buildLicense() {\r\n    return (\r\n        <Popover className=\"popover-adjustable\">\r\n            <Popover.Header as=\"h3\"><strong>Licensing</strong></Popover.Header>\r\n            <Popover.Body>\r\n                Weapon images below were taken from the video game Fallout 76 or from websites created and owned by Bethesda Softworks, the copyright of which is held by Bethesda Softworks, or were released to the press for promotional purposes by the same.\r\n                The use of images to illustrate items of the game concerning the subject of the images in question is believed to qualify as fair use under United States copyright law, as such display does not significantly impede the right of the copyright holder to sell the copyrighted material and is not being used to generate profit.\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nconst WeaponTemplates = memo(function WeaponTemplates(props) {\r\n    console.log(\"WeaponTemplates\");\r\n    const [modalTemplate, setModalTemplate] = useState({template: null, show: false});\r\n    const [modalCalculate, setModalCalculate] = useState({template: null, show: false});\r\n    const [modalCalculates, setModalCalculates] = useState({show: false});\r\n    const [modalTested, setModalTested] = useState({wId: '', show: false});\r\n    const [filterName, setFilterName] = useState(\"\");\r\n    const [weaponType, setWeaponType] = useState(\"All\");\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(20);\r\n    const [startIndex, setStartIndex] = useState(0);\r\n    function resetPage() {\r\n        setPage(1);\r\n        setStartIndex(0);\r\n    }\r\n    function filterNameChanged(e) {\r\n        setPage(1);\r\n        setStartIndex(0);\r\n        setFilterName(e.target.value);\r\n    }\r\n    function onPageChanged(page, pageSize) {\r\n        setStartIndex(pageSize * (page - 1));\r\n        setPage(page);\r\n        setPageSize(pageSize);\r\n    }\r\n    function onTestClick(e) {\r\n        setModalTested({wId: e.currentTarget.id, show: true});\r\n    }\r\n    function findBestClick(e) {\r\n        setModalCalculates({show: true});\r\n    }\r\n    return (\r\n        <>\r\n            <Row className=\"p-auto m-auto mb-2\">\r\n                <Col className=\"m-auto p-2 d-flex justify-content-start\">\r\n                    <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={buildLicense()}>\r\n                        <Badge variant=\"black\" pill>!</Badge>\r\n                    </OverlayTrigger>\r\n                </Col>\r\n                <Col className=\"m-auto p-1 pe-2 d-flex justify-content-end\">\r\n                    <Button size=\"sm\" variant=\"danger\" onClick={findBestClick}><strong className=\"best-button-shadow\">Find The Best</strong></Button>\r\n                </Col>\r\n            </Row>\r\n            <ModalTestedWeapon modalTested={modalTested} setModalTested={setModalTested} />\r\n            <ModalApplyTemplate modalTemplate={modalTemplate} setModalTemplate={setModalTemplate} setWSpec={props.setWSpec}></ModalApplyTemplate>\r\n            <ModalCalculateWeapon creatureNamesRef={props.creatureNamesRef} modalCalculate={modalCalculate} setModalCalculate={setModalCalculate} setWSpec={props.setWSpec} setBoostDamage={props.setBoostDamage} setPlayer={props.setPlayer} setExtraDamage={props.setExtraDamage} setFoodPref={props.setFoodPref} setStuffBoost={props.setStuffBoost} setAdditionalDamages={props.setAdditionalDamages} setPlayerStats={props.setPlayerStats} setMagazines={props.setMagazines} setBobbleHeads={props.setBobbleHeads} setFood={props.setFood} setDrink={props.setDrink} setPsycho={props.setPsycho} setSerum={props.setSerum} setOthers={props.setOthers}></ModalCalculateWeapon>\r\n            <ModalCalculateWeapons creatureNamesRef={props.creatureNamesRef} modalCalculates={modalCalculates} setModalCalculates={setModalCalculates} setWSpec={props.setWSpec} setBoostDamage={props.setBoostDamage} setPlayer={props.setPlayer} setExtraDamage={props.setExtraDamage} setFoodPref={props.setFoodPref} setStuffBoost={props.setStuffBoost} setAdditionalDamages={props.setAdditionalDamages} setPlayerStats={props.setPlayerStats} setMagazines={props.setMagazines} setBobbleHeads={props.setBobbleHeads} setFood={props.setFood} setDrink={props.setDrink} setPsycho={props.setPsycho} setSerum={props.setSerum} setOthers={props.setOthers}></ModalCalculateWeapons>\r\n            <InputGroup className=\"ps-1 pe-1 pb-2 flex-nowrap\">\r\n                <WTypeDropdown weaponType={weaponType} setWeaponType={setWeaponType} resetPage={resetPage}></WTypeDropdown>\r\n                <Form.Control style={{width: '10rem'}} maxLength=\"70\" onChange={filterNameChanged} />\r\n            </InputGroup>\r\n            <Accordion className=\"accordion\">\r\n                <TemplateItems onTestClick={onTestClick} onPageChanged={onPageChanged} startIndex={startIndex} pageSize={pageSize} page={page} weaponType={weaponType} filterName={filterName} setModalTemplate={setModalTemplate} setModalCalculate={setModalCalculate}></TemplateItems>\r\n            </Accordion>\r\n            <FloatButton.BackTop style={{ right: 60 }} duration={100} visibilityHeight={2000} />\r\n        </>\r\n    );\r\n});\r\n\r\nexport default WeaponTemplates;","import Card from 'react-bootstrap/Card';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nconst imagePathMap = new Map();\r\n\r\nexport function getMark(key, imagePath, className, iconSize, imageSize, borderRadius) {\r\n    return (\r\n        <Card key={key} className={\"m-1 d-flex justify-content-center \" + className} style={{height: iconSize, width: iconSize}}>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <Image style={{borderRadius: borderRadius, height: imageSize, width: imageSize}} src={imagePath} />\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function EmblemCalcRowView(props) {\r\n    let className = \"shadow-outline-gold2\";\r\n    if (props.className) {\r\n        className = props.className;\r\n    }\r\n    const views = [];\r\n    for (let i = 0; i < props.imNames.length; i++) {\r\n        const imName = props.imNames[i];\r\n        if (imName) {\r\n            let imagePath = imagePathMap.get(imName);\r\n            if (!imagePath) {\r\n                imagePath = props.imageProvider(imName);\r\n                imagePathMap.set(imName, imagePath);\r\n            }\r\n            views.push(getMark(imName, imagePath, className, props.iconSize, props.imageSize, props.borderRadius));\r\n        }\r\n    }\r\n    return (\r\n        <Row className=\"d-flex justify-content-center\" style={props.style}>\r\n            {views}\r\n        </Row>\r\n    );\r\n}","// Custom checkbox\r\nexport function UCheckbox(props) {\r\n    let className = \"form-check-input \";\r\n    if (props.className) {\r\n        className += props.className;\r\n    }\r\n    let bgColor = null;\r\n    let bColor = null;\r\n    if (props.checkBgColor && props.checked) {\r\n        bgColor = props.checkBgColor;\r\n    }\r\n    if (props.checkBorderColor && props.checked) {\r\n        bColor = props.checkBorderColor;\r\n    }\r\n    const ms = (props.children) ? \"ms-1\" : \"ms-0\";\r\n    return (\r\n        <div>\r\n            <input id={props.id} title={props.title} style={{cursor: 'pointer', borderColor: bColor, backgroundColor: bgColor}} className={className} type=\"checkbox\" disabled={props.disabled} checked={props.checked} onChange={props.onChange} />\r\n            <label className={\"form-check-label \" + ms}>\r\n                {props.children}\r\n            </label>\r\n        </div>\r\n    );\r\n}","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\n\r\nfunction getItems(dict) {\r\n    const result = [];\r\n    for (const name in dict) {\r\n        result.push(<Dropdown.Item key={name} eventKey={name}>{dict[name]}</Dropdown.Item>);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function BaseDropdown(props) {\r\n    let onSelect = props.onSelect;\r\n    if (!onSelect) {\r\n        onSelect = (e) => {\r\n            props.setValue(e);\r\n        };\r\n    }\r\n    return (\r\n        <DropdownButton variant={props.variant} size={props.size} onSelect={onSelect} title={props.title}>\r\n            {getItems(props.dict)}\r\n        </DropdownButton>\r\n    );\r\n}\r\n\r\n","import ReactDOM from 'react-dom/client';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\n\r\n\r\nexport default class StaticPopoverRenderer {\r\n\r\n    // Workaround as propagation is suppressed (onHide will no be invoked)\r\n    // This measure is intended to prevent of opening of several popovers if a propagation is suppressed and on\r\n    // hide can't be invoked\r\n    static lastOpened = null;\r\n\r\n    constructor(header, body, placeId, placement='top') {\r\n        this.header = header;\r\n        this.body = body;\r\n        this.placeId = placeId;\r\n        this.show = false;\r\n        this.root = null;\r\n        this.placement = placement;\r\n    }\r\n\r\n    renderToggle(target) {\r\n        this.show = !this.show;\r\n        if (StaticPopoverRenderer.lastOpened && StaticPopoverRenderer.lastOpened !== this) {\r\n            StaticPopoverRenderer.lastOpened.onHide();\r\n        }\r\n        if (this.show) {\r\n            StaticPopoverRenderer.lastOpened = this;\r\n        }\r\n        if (!this.root) {\r\n            this.root = ReactDOM.createRoot(document.getElementById(this.placeId))\r\n        }\r\n        this.root.render(this.buildLayout(this.header, this.body, this.show, target, this.placement));\r\n    }\r\n\r\n    renderToggleNewContent(target, header, body) {\r\n        this.header = header;\r\n        this.body = body;\r\n        this.renderToggle(target);\r\n    }\r\n\r\n    onHide(e) {\r\n        if (StaticPopoverRenderer.lastOpened === this) {\r\n            StaticPopoverRenderer.lastOpened = null;\r\n        }\r\n        this.show = false;\r\n        if (this.root) {\r\n            this.root.render((<></>));\r\n        }\r\n    }\r\n\r\n    buildLayout(header, body, show, target, placement) {\r\n        return (\r\n            <Overlay\r\n                show={show}\r\n                target={target}\r\n                rootClose='true'\r\n                onHide={e => (this.onHide(e))}\r\n                placement={placement}>\r\n                <Popover className=\"popover-adjustable\">\r\n                    <Popover.Header>\r\n                        {header}\r\n                    </Popover.Header>\r\n                    <Popover.Body>\r\n                        {body}\r\n                    </Popover.Body>\r\n                </Popover>\r\n            </Overlay>\r\n        );\r\n    }\r\n}\r\n","var map = {\n\t\"./bh_big_guns.webp\": 95529,\n\t\"./bh_energy.webp\": 47901,\n\t\"./bh_explosive.webp\": 18840,\n\t\"./bh_melee.webp\": 55959,\n\t\"./bh_repair.webp\": 58136,\n\t\"./bh_small_guns.webp\": 53574,\n\t\"./bh_sneak.webp\": 60603,\n\t\"./bh_strength.webp\": 14188,\n\t\"./bh_unarmed.webp\": 28373\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 53797;","var map = {\n\t\"./ballistic_bock.webp\": 68120,\n\t\"./beer.webp\": 91715,\n\t\"./blackwater_brew.webp\": 20220,\n\t\"./bourbon.webp\": 84664,\n\t\"./chally_milk.webp\": 48566,\n\t\"./cranberry_moonshine.webp\": 45866,\n\t\"./fern_flower_tea.webp\": 99811,\n\t\"./firecracker_berry_juice.webp\": 89318,\n\t\"./high_voltage_hefe.webp\": 74687,\n\t\"./liquid_courage.webp\": 64030,\n\t\"./mire_magic_moonshine.webp\": 24305,\n\t\"./moonshine.webp\": 52635,\n\t\"./mountain_honey.webp\": 92418,\n\t\"./new_river_red_ale.webp\": 60787,\n\t\"./nuka_cola_dark.webp\": 31201,\n\t\"./nuka_twist.webp\": 19104,\n\t\"./nukashine.webp\": 95415,\n\t\"./oak_holler_lager.webp\": 93197,\n\t\"./old_possum.webp\": 26110,\n\t\"./pickaxe_pilsner.webp\": 31396,\n\t\"./rum.webp\": 6851,\n\t\"./steeped_fern_flower_tea.webp\": 81894,\n\t\"./steeped_thistle_tea.webp\": 4948,\n\t\"./sweetmutfruit.webp\": 70939,\n\t\"./vodka.webp\": 35534,\n\t\"./whiskey.webp\": 51397,\n\t\"./wine.webp\": 48112\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 43242;","var map = {\n\t\"./blight_soup.webp\": 51365,\n\t\"./candy.webp\": 76572,\n\t\"./deathclaw_steak.webp\": 10593,\n\t\"./deathclaw_wellington.webp\": 98684,\n\t\"./glowing_steak.webp\": 26055,\n\t\"./gulper_stuffed_foot.webp\": 5001,\n\t\"./light_mutant_hound_chops.webp\": 79270,\n\t\"./mole_rat_chunks.webp\": 55139,\n\t\"./molerat_jerky.webp\": 23437,\n\t\"./mutton_chops.webp\": 12246,\n\t\"./nuka_cola_candy.webp\": 3416,\n\t\"./stingwing_filet.webp\": 67262,\n\t\"./tasty_mutant_hound_stew.webp\": 27397,\n\t\"./tasty_mutton_meat_pie.webp\": 87623,\n\t\"./yao_guai_ribs.webp\": 78016,\n\t\"./yao_guai_roast.webp\": 51555\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92122;","var map = {\n\t\"./acceptable_overkill.webp\": 66133,\n\t\"./attack_of_the_fishmen.webp\": 96923,\n\t\"./bear_proofing_your_campsite.webp\": 21842,\n\t\"./blood_on_the_harp.webp\": 49110,\n\t\"./camouflage_special.webp\": 55050,\n\t\"./corsair_queen.webp\": 47468,\n\t\"./curse_of_the_burned.webp\": 72609,\n\t\"./demon_slaves_demon_sands.webp\": 51986,\n\t\"./down_home_cooking.webp\": 72551,\n\t\"./flatwoods_monster.webp\": 39376,\n\t\"./future_of_warfare.webp\": 99986,\n\t\"./giant_super_weapons.webp\": 93557,\n\t\"./guide_to_hunting_commies.webp\": 7290,\n\t\"./hills_grafton.webp\": 40546,\n\t\"./home_in_the_hills.webp\": 47002,\n\t\"./invasion_of_the_zetans.webp\": 74413,\n\t\"./little_guns_for_little_ladies.webp\": 77246,\n\t\"./mothman.webp\": 17982,\n\t\"./nuke_the_man.webp\": 22716,\n\t\"./plasma_the_weapon_of_tomorrow.webp\": 98167,\n\t\"./rise_of_the_mutants.webp\": 48458,\n\t\"./rockobot_takes_the_nation_by_storm.webp\": 6934,\n\t\"./snallygaster.webp\": 77577,\n\t\"./take_aim_army_style.webp\": 92371,\n\t\"./the_future_of_hunting.webp\": 82555,\n\t\"./the_starlet_sniper.webp\": 40667,\n\t\"./tomorrow_technology.webp\": 70892,\n\t\"./us_army_goes_to_space.webp\": 49222,\n\t\"./wendigo.webp\": 84477,\n\t\"./when_apes_go_bananas.webp\": 85392\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18405;","var map = {\n\t\"./syringer.webp\": 23603\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97611;","var map = {\n\t\"./buffout.webp\": 50498,\n\t\"./bufftats.webp\": 57172,\n\t\"./calmex.webp\": 27405,\n\t\"./f.webp\": 63011,\n\t\"./mk1.webp\": 86846,\n\t\"./mk2.webp\": 75487,\n\t\"./mk3.webp\": 68892,\n\t\"./mk4.webp\": 27821,\n\t\"./nd.webp\": 58537,\n\t\"./o.webp\": 99336,\n\t\"./p.webp\": 76169,\n\t\"./pb.webp\": 35457,\n\t\"./psycho.webp\": 58127,\n\t\"./pt.webp\": 82683,\n\t\"./x_cell.webp\": 64618\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48114;","var map = {\n\t\"./ar_serum.webp\": 19820,\n\t\"./c_serum.webp\": 29906,\n\t\"./e_serum.webp\": 63088,\n\t\"./ee_serum.webp\": 71693,\n\t\"./h_serum.webp\": 17727,\n\t\"./hm_serum.webp\": 33592,\n\t\"./sd_serum.webp\": 32576,\n\t\"./serum.webp\": 21424,\n\t\"./t_serum.webp\": 74755,\n\t\"./tm_serum.webp\": 22876\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 37665;","var map = {\n\t\"./0003a0d4/version.json\": 95892\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 51619;","var map = {\n\t\"./0003a0d4/01_Details_weapon.webp\": 70730,\n\t\"./0003a0d4/02_Stats_.webp\": 72102,\n\t\"./0003a0d4/03_Perks_.webp\": 41273,\n\t\"./0003a0d4/04_Specifications_.webp\": 78207,\n\t\"./0003a0d4/05_Crit-Scorched_test.webp\": 61450,\n\t\"./0003a0d4/06_Sneak-Scorched_test.webp\": 51293\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 67443;","var map = {\n\t\"./adrenaline.webp\": 77939,\n\t\"./archer.webp\": 26487,\n\t\"./better_criticals.webp\": 98439,\n\t\"./bloody_mess.webp\": 18472,\n\t\"./bow_before_me.webp\": 69853,\n\t\"./class_freak.webp\": 64044,\n\t\"./commando.webp\": 85230,\n\t\"./covert_operative.webp\": 32371,\n\t\"./demolition_expert.webp\": 79375,\n\t\"./exterminator.webp\": 84992,\n\t\"./follow_through.webp\": 57743,\n\t\"./gladiator.webp\": 8985,\n\t\"./glow_sight.webp\": 37143,\n\t\"./ground_pounder.webp\": 78725,\n\t\"./guerrilla.webp\": 94933,\n\t\"./gun_fu.webp\": 41542,\n\t\"./gunslinger.webp\": 87912,\n\t\"./heavy_gunner.webp\": 58723,\n\t\"./incisor.webp\": 64005,\n\t\"./iron_fist.webp\": 43409,\n\t\"./lock_and_load.webp\": 38510,\n\t\"./martial_artist.webp\": 29416,\n\t\"./mister_sandman.webp\": 10979,\n\t\"./nerd_rage.webp\": 79361,\n\t\"./ninja.webp\": 8668,\n\t\"./party_girl_boy.webp\": 31306,\n\t\"./power_user.webp\": 18937,\n\t\"./rifleman.webp\": 30814,\n\t\"./scattershot.webp\": 12650,\n\t\"./science.webp\": 94710,\n\t\"./shotgunner.webp\": 51307,\n\t\"./slugger.webp\": 19563,\n\t\"./stabilized.webp\": 56659,\n\t\"./strange_in_numbers.webp\": 48479,\n\t\"./tank_killer.webp\": 16926,\n\t\"./tenderizer.webp\": 92478,\n\t\"./toft.webp\": 35123\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18541;","var map = {\n\t\"./10mm.json\": 67136,\n\t\"./10mmSubmachineGun.json\": 98223,\n\t\"./44.json\": 96691,\n\t\"./50CalMachineGun.json\": 7943,\n\t\"./AlienBlaster.json\": 75847,\n\t\"./AncientBlade.json\": 18197,\n\t\"./Anti-ScorchedTrainingPistol.json\": 62954,\n\t\"./AssaultRifle.json\": 73024,\n\t\"./AssaultronBlade.json\": 9661,\n\t\"./AutoAxe.json\": 34260,\n\t\"./AutoGrenadeLauncher.json\": 68390,\n\t\"./Bada-Boom.json\": 91467,\n\t\"./BaseballBat.json\": 13870,\n\t\"./BaseballGrenade.json\": 78575,\n\t\"./Baton.json\": 18199,\n\t\"./BearArm.json\": 89261,\n\t\"./BlackPowderBlunderbuss.json\": 47182,\n\t\"./BlackPowderPistol.json\": 55208,\n\t\"./BlackPowderRifle.json\": 51743,\n\t\"./BladeofBastet.json\": 52289,\n\t\"./BlastMine.json\": 55104,\n\t\"./BlueFlamer.json\": 82672,\n\t\"./Board.json\": 13605,\n\t\"./BoneClub.json\": 49269,\n\t\"./BoneHammer.json\": 43323,\n\t\"./Bow.json\": 75301,\n\t\"./BowieKnife.json\": 57908,\n\t\"./BoxingGlove.json\": 9033,\n\t\"./Broadsider.json\": 63064,\n\t\"./BugGrenade.json\": 30335,\n\t\"./BurningLove.json\": 91970,\n\t\"./CamdenWhacker.json\": 6144,\n\t\"./CandyCane.json\": 65817,\n\t\"./Cattleprod.json\": 82513,\n\t\"./Chainsaw.json\": 22433,\n\t\"./ChineseOfficerSword.json\": 13233,\n\t\"./CircuitBreaker.json\": 91582,\n\t\"./ColdShoulder.json\": 20329,\n\t\"./CombatKnife.json\": 95272,\n\t\"./CombatRifle.json\": 91267,\n\t\"./CombatShotgun.json\": 85119,\n\t\"./CommandersCharge.json\": 38248,\n\t\"./CommieWhacker.json\": 72100,\n\t\"./CompoundBow.json\": 40914,\n\t\"./Cremator.json\": 74592,\n\t\"./Crossbow.json\": 53231,\n\t\"./CrowdControl.json\": 45678,\n\t\"./CrusaderPistol.json\": 73655,\n\t\"./CrushingBlow.json\": 17010,\n\t\"./CryoMine.json\": 76209,\n\t\"./CryogenicGrenade.json\": 57254,\n\t\"./Cryolator.json\": 80934,\n\t\"./CultistBlade.json\": 44885,\n\t\"./CultistDagger.json\": 61499,\n\t\"./CultistPickaxe.json\": 92252,\n\t\"./DeathTambo.json\": 34520,\n\t\"./DeathclawGauntlet.json\": 44022,\n\t\"./DisorderlyConduct.json\": 65216,\n\t\"./DoctorsOrders.json\": 24120,\n\t\"./Double-BarrelShotgun.json\": 59577,\n\t\"./Drill.json\": 96708,\n\t\"./Dross.json\": 25292,\n\t\"./Dynamite.json\": 20416,\n\t\"./DynamiteBundle.json\": 25200,\n\t\"./ElectroEnforcer.json\": 11061,\n\t\"./EnclavePlasma.json\": 79305,\n\t\"./ExplosiveBait.json\": 21466,\n\t\"./FaceBreaker.json\": 85782,\n\t\"./FancyPumpActionShotgun.json\": 90634,\n\t\"./FatMan.json\": 76546,\n\t\"./FinalWord.json\": 88773,\n\t\"./FireAxe.json\": 13725,\n\t\"./Flamer.json\": 35276,\n\t\"./FloaterFlamerGrenade.json\": 52247,\n\t\"./FloaterFreezerGrenade.json\": 34831,\n\t\"./FloaterGnasherGrenade.json\": 48222,\n\t\"./FoundationsVengeance.json\": 41775,\n\t\"./FragmentationGrenade.json\": 82626,\n\t\"./FragmentationGrenadeMIRV.json\": 96328,\n\t\"./FragmentationMine.json\": 20059,\n\t\"./GammaGun.json\": 83158,\n\t\"./GatlingGun.json\": 43757,\n\t\"./GatlingLaser.json\": 4688,\n\t\"./GatlingPlasma.json\": 37971,\n\t\"./Gauntlet.json\": 35429,\n\t\"./GaussMinigun.json\": 58511,\n\t\"./GaussPistol.json\": 48787,\n\t\"./GaussRifle.json\": 32310,\n\t\"./GaussShotgun.json\": 82674,\n\t\"./GolfClub.json\": 65851,\n\t\"./GrandFinale.json\": 49396,\n\t\"./GrantsSaber.json\": 85437,\n\t\"./GrognaksAxe.json\": 60029,\n\t\"./GuitarSword.json\": 14106,\n\t\"./GulperSmacker.json\": 96750,\n\t\"./GunthersBigIron.json\": 48723,\n\t\"./HandmadeRifle.json\": 93263,\n\t\"./HarpoonGun.json\": 30080,\n\t\"./Hatchet.json\": 82634,\n\t\"./Hellstorm.json\": 40033,\n\t\"./HuntingRifle.json\": 78828,\n\t\"./ImposterAssaultronHead.json\": 27364,\n\t\"./Kingfisher.json\": 76841,\n\t\"./Knuckles.json\": 78333,\n\t\"./Laser.json\": 23482,\n\t\"./LeadPipe.json\": 54117,\n\t\"./LeverActionRifle.json\": 54119,\n\t\"./LightMachineGun.json\": 48844,\n\t\"./Love-Tap.json\": 52455,\n\t\"./M79GrenadeLauncher.json\": 47112,\n\t\"./Machete.json\": 23318,\n\t\"./MeatCleaver.json\": 37294,\n\t\"./MeatHook.json\": 70287,\n\t\"./MechanicsBestFriend.json\": 13476,\n\t\"./MedicalMalpractice.json\": 67205,\n\t\"./MeteoriticSword.json\": 46859,\n\t\"./MindOverMatter.json\": 15804,\n\t\"./Minigun.json\": 33626,\n\t\"./MissileLauncher.json\": 73989,\n\t\"./MoleMinerGauntlet.json\": 64161,\n\t\"./MoleratBat.json\": 83902,\n\t\"./MolotovCocktail.json\": 99285,\n\t\"./MrHandyBuzzBlade.json\": 31737,\n\t\"./Multi-PurposeAxe.json\": 43477,\n\t\"./Nailer.json\": 35116,\n\t\"./NightLight.json\": 12097,\n\t\"./NoxiousFogCrawler.json\": 95656,\n\t\"./Nuka-Launcher.json\": 20413,\n\t\"./NukaGrenade.json\": 44648,\n\t\"./NukaQuantumGrenade.json\": 93535,\n\t\"./NukeMine.json\": 86049,\n\t\"./Oathbreaker.json\": 81173,\n\t\"./OldGuards10mmSMG.json\": 43790,\n\t\"./PepperShaker.json\": 68343,\n\t\"./Pickaxe.json\": 70338,\n\t\"./Pipe.json\": 5951,\n\t\"./PipeBolt-Action.json\": 5769,\n\t\"./PipeRevolver.json\": 77652,\n\t\"./PipeWrench.json\": 76898,\n\t\"./PiratePunch.json\": 76818,\n\t\"./Pitchfork.json\": 47443,\n\t\"./Plasma.json\": 29613,\n\t\"./PlasmaCaster.json\": 96281,\n\t\"./PlasmaCutter.json\": 52830,\n\t\"./PlasmaGrenade.json\": 1573,\n\t\"./PlasmaMine.json\": 90094,\n\t\"./PoleHook.json\": 81950,\n\t\"./PollysAssaultronHead.json\": 19906,\n\t\"./PoolCue.json\": 67996,\n\t\"./PowerFist.json\": 62702,\n\t\"./PulseGrenade.json\": 47246,\n\t\"./PulseMine.json\": 65215,\n\t\"./PumpActionShotgun.json\": 74607,\n\t\"./PumpkinGrenade.json\": 19133,\n\t\"./QuadLauncher.json\": 66780,\n\t\"./Radium.json\": 5135,\n\t\"./Railway.json\": 92390,\n\t\"./ResoluteVeteran.json\": 99771,\n\t\"./RevolutionarySword.json\": 75347,\n\t\"./Ripper.json\": 46117,\n\t\"./RollingPin.json\": 14715,\n\t\"./SaltoftheEarth.json\": 41951,\n\t\"./SalvagedAssaultronHead.json\": 32160,\n\t\"./SheepsquatchClub.json\": 14543,\n\t\"./SheepsquatchShard.json\": 76101,\n\t\"./SheepsquatchStaff.json\": 96899,\n\t\"./ShepherdsCrook.json\": 37955,\n\t\"./Shishkebab.json\": 4973,\n\t\"./Shovel.json\": 264,\n\t\"./Sickle.json\": 18602,\n\t\"./SingleActionRevolver.json\": 83286,\n\t\"./SkiSword.json\": 25805,\n\t\"./Sledgehammer.json\": 43795,\n\t\"./SlugBuster.json\": 83241,\n\t\"./SmartFragmentationGrenade.json\": 96669,\n\t\"./SoleSurvivor.json\": 91140,\n\t\"./Spear.json\": 77336,\n\t\"./SubmachineGun.json\": 2234,\n\t\"./SuperSledge.json\": 19224,\n\t\"./Switchblade.json\": 93255,\n\t\"./Tenderizer.json\": 57521,\n\t\"./Tesla.json\": 10686,\n\t\"./TheActionHero.json\": 22372,\n\t\"./TheDebilitator.json\": 15429,\n\t\"./TheDragon.json\": 41349,\n\t\"./TheFarmhand.json\": 31247,\n\t\"./TheFixer.json\": 61878,\n\t\"./TheGuarantee.json\": 31400,\n\t\"./TheGutter.json\": 6849,\n\t\"./TheInvader.json\": 79119,\n\t\"./TheQuickFix.json\": 3740,\n\t\"./TheVATSUnknown.json\": 58448,\n\t\"./ThrowingKnife.json\": 30400,\n\t\"./TireIron.json\": 7899,\n\t\"./Tomahawk.json\": 71105,\n\t\"./ToneDeath.json\": 46019,\n\t\"./UltraciteGatlingLaser.json\": 2775,\n\t\"./UltraciteLaser.json\": 56859,\n\t\"./UnstoppableMonster.json\": 63214,\n\t\"./V63Zweihaender.json\": 49576,\n\t\"./WalkingCane.json\": 22055,\n\t\"./WarDrum.json\": 74403,\n\t\"./WarGlaive.json\": 5043,\n\t\"./WesternRevolver.json\": 47092,\n\t\"./WesternSpirit.json\": 88910,\n\t\"./WhackerSmacker.json\": 84152,\n\t\"./WhistleInTheDark.json\": 83003,\n\t\"./ZetasRevenge.json\": 34776\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 96539;","var map = {\n\t\"./10mm.webp\": 36795,\n\t\"./10mm_submachine_gun.webp\": 86374,\n\t\"./44.webp\": 69136,\n\t\"./50_cal_machine_gun.webp\": 35317,\n\t\"./alien_blaster.webp\": 86433,\n\t\"./ancient_blade.webp\": 56769,\n\t\"./anti-scorched_training_pistol.webp\": 45089,\n\t\"./assault_rifle.webp\": 83514,\n\t\"./assaultron_blade.webp\": 98915,\n\t\"./auto_axe.webp\": 82940,\n\t\"./auto_grenade_launcher.webp\": 69795,\n\t\"./bada-boom.webp\": 36466,\n\t\"./baseball_bat.webp\": 32828,\n\t\"./baseball_grenade.webp\": 59757,\n\t\"./baton.webp\": 20642,\n\t\"./bear_arm.webp\": 24883,\n\t\"./black_powder_blunderbuss.webp\": 25061,\n\t\"./black_powder_pistol.webp\": 23297,\n\t\"./black_powder_rifle.webp\": 87208,\n\t\"./black_powder_rifle_dragon.webp\": 60122,\n\t\"./blade_of_bastet.webp\": 14684,\n\t\"./blast_mine.webp\": 20564,\n\t\"./blue_flamer.webp\": 92974,\n\t\"./board.webp\": 59216,\n\t\"./bone_club.webp\": 49603,\n\t\"./bone_hammer.webp\": 80021,\n\t\"./bow.webp\": 69436,\n\t\"./bowie_knife.webp\": 42880,\n\t\"./boxing_glove.webp\": 85533,\n\t\"./broadsider.webp\": 18615,\n\t\"./bug_grenade.webp\": 22103,\n\t\"./burning_love.webp\": 84556,\n\t\"./camden_whacker.webp\": 59226,\n\t\"./candy_cane.webp\": 62551,\n\t\"./cattleprod.webp\": 31158,\n\t\"./chainsaw.webp\": 95458,\n\t\"./chinese_officer_sword.webp\": 36908,\n\t\"./circuit_breaker.webp\": 78104,\n\t\"./cold_shoulder.webp\": 28691,\n\t\"./combat_knife.webp\": 64006,\n\t\"./combat_rifle.webp\": 60797,\n\t\"./combat_shotgun.webp\": 45865,\n\t\"./commanders_charge.webp\": 11688,\n\t\"./commie_whacker.webp\": 89278,\n\t\"./compound_bow.webp\": 85118,\n\t\"./cremator.webp\": 43619,\n\t\"./crossbow.webp\": 95748,\n\t\"./crowd_control.webp\": 48583,\n\t\"./crusader_pistol.webp\": 80559,\n\t\"./crushing_blow.webp\": 22734,\n\t\"./cryo_mine.webp\": 38913,\n\t\"./cryogenic_grenade.webp\": 22940,\n\t\"./cryolator.webp\": 79715,\n\t\"./cultist_blade.webp\": 26037,\n\t\"./cultist_dagger.webp\": 9035,\n\t\"./cultist_pickaxe.webp\": 25692,\n\t\"./death_tambo.webp\": 80544,\n\t\"./deathclaw_gauntlet.webp\": 25336,\n\t\"./default.webp\": 37033,\n\t\"./disorderly_conduct.webp\": 4580,\n\t\"./doctors_orders.webp\": 90996,\n\t\"./double-barrel_shotgun.webp\": 89765,\n\t\"./drill.webp\": 75925,\n\t\"./dross.webp\": 16177,\n\t\"./dynamite.webp\": 28131,\n\t\"./dynamite_bundle.webp\": 39268,\n\t\"./electro_enforcer.webp\": 49225,\n\t\"./enclave_plasma.webp\": 6681,\n\t\"./enclave_plasma_rifle.webp\": 19296,\n\t\"./explosive_bait.webp\": 13144,\n\t\"./face_breaker.webp\": 21390,\n\t\"./fancy_pump_action_shotgun.webp\": 31258,\n\t\"./fat_man.webp\": 14956,\n\t\"./final_word.webp\": 81113,\n\t\"./fire_axe.webp\": 60503,\n\t\"./flamer.webp\": 79675,\n\t\"./floater_flamer_grenade.webp\": 64827,\n\t\"./floater_freezer_grenade.webp\": 45700,\n\t\"./floater_gnasher_grenade.webp\": 71903,\n\t\"./foundations_vengeance.webp\": 47267,\n\t\"./fragmentation_grenade.webp\": 69996,\n\t\"./fragmentation_grenade_mirv.webp\": 26587,\n\t\"./fragmentation_mine.webp\": 15665,\n\t\"./gamma_gun.webp\": 72432,\n\t\"./gatling_gun.webp\": 50709,\n\t\"./gatling_laser.webp\": 15592,\n\t\"./gatling_plasma.webp\": 76747,\n\t\"./gauntlet.webp\": 38530,\n\t\"./gauss_minigun.webp\": 63441,\n\t\"./gauss_pistol.webp\": 33261,\n\t\"./gauss_rifle.webp\": 30700,\n\t\"./gauss_shotgun.webp\": 9456,\n\t\"./golf_club.webp\": 19577,\n\t\"./grand_finale.webp\": 1100,\n\t\"./grants_saber.webp\": 22109,\n\t\"./grognaks_axe.webp\": 39115,\n\t\"./guitar_sword.webp\": 97292,\n\t\"./gulper_smacker.webp\": 35614,\n\t\"./gunthers_big_iron.webp\": 35214,\n\t\"./handmade_rifle.webp\": 67441,\n\t\"./harpoon_gun.webp\": 44594,\n\t\"./hatchet.webp\": 71623,\n\t\"./hellstorm.webp\": 37400,\n\t\"./hunting_rifle.webp\": 54134,\n\t\"./imposter_assaultron_head.webp\": 96909,\n\t\"./kingfisher.webp\": 30874,\n\t\"./knuckles.webp\": 24514,\n\t\"./laser.webp\": 77635,\n\t\"./laser_rifle.webp\": 23550,\n\t\"./lead_pipe.webp\": 3671,\n\t\"./lever_action_rifle.webp\": 19750,\n\t\"./light_machine_gun.webp\": 62579,\n\t\"./love-tap.webp\": 36944,\n\t\"./lucky_rabbits_foot.webp\": 85655,\n\t\"./m79_grenade_launcher.webp\": 88095,\n\t\"./machete.webp\": 50751,\n\t\"./meat_cleaver.webp\": 59882,\n\t\"./meat_hook.webp\": 71059,\n\t\"./mechanics_best_friend.webp\": 50859,\n\t\"./medical_malpractice.webp\": 72591,\n\t\"./meteoritic_sword.webp\": 39259,\n\t\"./mind_over_matter.webp\": 62713,\n\t\"./mind_over_matter_rifle.webp\": 74816,\n\t\"./minigun.webp\": 12547,\n\t\"./missile_launcher.webp\": 71965,\n\t\"./mole_miner_gauntlet.webp\": 4970,\n\t\"./molerat_bat.webp\": 16570,\n\t\"./molotov_cocktail.webp\": 45129,\n\t\"./mr_handy_buzz_blade.webp\": 94289,\n\t\"./multi-purpose_axe.webp\": 79753,\n\t\"./nailer.webp\": 98331,\n\t\"./night_light.webp\": 92953,\n\t\"./noxious_fog_crawler.webp\": 28525,\n\t\"./nuka-launcher.webp\": 62284,\n\t\"./nuka_grenade.webp\": 41616,\n\t\"./nuka_quantum_grenade.webp\": 83562,\n\t\"./nuke_mine.webp\": 60705,\n\t\"./oathbreaker.webp\": 28644,\n\t\"./old_guards_10mm_smg.webp\": 10784,\n\t\"./orbital_scan_beacon.webp\": 79576,\n\t\"./orbital_strike_beacon.webp\": 88345,\n\t\"./pepper_shaker.webp\": 30309,\n\t\"./pickaxe.webp\": 86255,\n\t\"./pipe.webp\": 59092,\n\t\"./pipe_bolt-action.webp\": 16383,\n\t\"./pipe_bolt-action_rifle.webp\": 37946,\n\t\"./pipe_revolver.webp\": 55134,\n\t\"./pipe_revolver_rifle.webp\": 12703,\n\t\"./pipe_rifle.webp\": 9105,\n\t\"./pipe_wrench.webp\": 40328,\n\t\"./pirate_punch.webp\": 43378,\n\t\"./pitchfork.webp\": 28126,\n\t\"./plasma.webp\": 50898,\n\t\"./plasma_caster.webp\": 44547,\n\t\"./plasma_cutter.webp\": 72244,\n\t\"./plasma_grenade.webp\": 8923,\n\t\"./plasma_mine.webp\": 82656,\n\t\"./plasma_rifle.webp\": 71987,\n\t\"./pole_hook.webp\": 83024,\n\t\"./pollys_assaultron_head.webp\": 89599,\n\t\"./pool_cue.webp\": 62434,\n\t\"./power_fist.webp\": 20376,\n\t\"./protest_sign_-_against_automation.webp\": 26089,\n\t\"./pulse_grenade.webp\": 81096,\n\t\"./pulse_mine.webp\": 36021,\n\t\"./pump_action_shotgun.webp\": 12964,\n\t\"./pumpkin_grenade.webp\": 47409,\n\t\"./quad_launcher.webp\": 18656,\n\t\"./radium.webp\": 52204,\n\t\"./railway.webp\": 84543,\n\t\"./resolute_veteran.webp\": 94083,\n\t\"./revolutionary_sword.webp\": 3477,\n\t\"./ripper.webp\": 79954,\n\t\"./rolling_pin.webp\": 2977,\n\t\"./salt_of_the_earth.webp\": 65339,\n\t\"./salvaged_assaultron_head.webp\": 36785,\n\t\"./sheepsquatch_club.webp\": 9353,\n\t\"./sheepsquatch_shard.webp\": 33003,\n\t\"./sheepsquatch_staff.webp\": 73925,\n\t\"./shepherds_crook.webp\": 92287,\n\t\"./shishkebab.webp\": 83950,\n\t\"./shovel.webp\": 4671,\n\t\"./sickle.webp\": 65725,\n\t\"./single_action_revolver.webp\": 32875,\n\t\"./ski_sword.webp\": 29875,\n\t\"./sledgehammer.webp\": 64084,\n\t\"./slug_buster.webp\": 99569,\n\t\"./slug_buster_rifle.webp\": 47688,\n\t\"./smart_fragmentation_grenade.webp\": 61502,\n\t\"./sole_survivor.webp\": 50872,\n\t\"./spear.webp\": 41669,\n\t\"./submachine_gun.webp\": 51498,\n\t\"./super_sledge.webp\": 4082,\n\t\"./switchblade.webp\": 25866,\n\t\"./tenderizer.webp\": 12926,\n\t\"./tesla.webp\": 81303,\n\t\"./the_action_hero.webp\": 84271,\n\t\"./the_debilitator.webp\": 95967,\n\t\"./the_dragon.webp\": 49151,\n\t\"./the_farmhand.webp\": 10901,\n\t\"./the_fixer.webp\": 18860,\n\t\"./the_guarantee.webp\": 27594,\n\t\"./the_gutter.webp\": 1019,\n\t\"./the_invader.webp\": 18625,\n\t\"./the_quick_fix.webp\": 64375,\n\t\"./the_vats_unknown.webp\": 2821,\n\t\"./throwing_knife.webp\": 1862,\n\t\"./tire_iron.webp\": 8633,\n\t\"./tomahawk.webp\": 54922,\n\t\"./tone_death.webp\": 86041,\n\t\"./ultracite_gatling_laser.webp\": 72610,\n\t\"./ultracite_laser.webp\": 26069,\n\t\"./ultracite_laser_rifle.webp\": 64508,\n\t\"./unstoppable_monster.webp\": 37140,\n\t\"./v63_zweihaender.webp\": 43150,\n\t\"./walking_cane.webp\": 3329,\n\t\"./war_drum.webp\": 57003,\n\t\"./war_glaive.webp\": 26827,\n\t\"./western_revolver.webp\": 64664,\n\t\"./western_spirit.webp\": 20458,\n\t\"./whacker_smacker.webp\": 52106,\n\t\"./whistle_in_the_dark.webp\": 17289,\n\t\"./zetas_revenge.webp\": 66897\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 70151;"],"names":["defPlayerStats","defaultPlayerStats","defPlayer","defaultPlayer","getDefaultGraphData","xValues","yValues","coef","Global","points","i","push","Main","key","setKey","useState","creatureChartNumber","setCreatureChartNumber","loadedScreen","setLoadedScreen","wSpec","setWSpec","defaultWeaponSpecs","showStat","setShowStat","graphValues","setGraphValues","creatures","setCreatures","defaultCreatures","boostDamage","setBoostDamage","defaultBoosts","resultDamage","setResultDamage","extraDamage","setExtraDamage","defaultExtraDamage","additionalDamages","setAdditionalDamages","defaultAdds","stuffBoost","setStuffBoost","ConsumablesBuilder","getEmptyConsumableBoosts","player","setPlayer","playerStats","setPlayerStats","magazines","setMagazines","getMagazines","bobbleHeads","setBobbleHeads","getBobbleHeads","food","setFood","getFood","drink","setDrink","getDrink","psycho","setPsycho","getPsycho","serum","setSerum","getSerum","others","setOthers","getOthers","foodPref","setFoodPref","carnivore","herbivore","consumableTouched","setConsumableTouched","creatureNamesRef","useRef","buildCreatureNames","applySnapshotRef","wSpecRef","resultDamageRef","playerRef","playerStatsRef","stuffBoostRef","boostDamageRef","extraDamageRef","additionalDamagesRef","creaturesRef","showStatRef","useEffect","weaponFactory","WeaponFactory","graphDamage","calcDamage","current","applySnapshot","cBoostDamage","cWSpec","cExtraDamage","cAdditionalDamages","cCreatures","cPlayer","cPlayerStats","cStuff","allStuffBoosts","consumables","buildFromList","setConsumableItems","_objectSpread","_jsx","LoadingLine","text","_jsxs","_Fragment","children","MainCardsDisplay","ToastSpecs","legendary","iconName","weaponName","defaultName","Tabs","id","activeKey","onSelect","k","className","Tab","eventKey","title","Accordion","WeaponSpecs","health","value","DamageBoosts","AdditionalDamage","CreaturesView","RaceView","ConsumablesView","PerkCardView","WeaponTemplates","BoostStuff","Snapshots","style","backgroundColor","borderRadius","outline","version1","version2","WarningPopoverBadge","sign","message","versionMessage","header","placement","webVersion","buildPopover","Popover","Header","as","Body","qa","OverlayTrigger","rootClose","trigger","overlay","Button","variant","addIconName","name","_ref","additionalDamage","updateAdditionalDamages","marks","redraw","setRedraw","width","isUsed","disabled","is_used","Row","Card","Col","InputGroup","Text","UCheckbox","onChange","e","target","checked","checkBgColor","Slider","onAfterChange","tooltip","open","min","max","step","getImagePathById","cId","jsonItems","getter","substring","lastIndexOf","getMagazine","getBobbleHead","getOther","length","item","imName","getMagazineItems","wType","wName","tags","crit","team","scoped","creatureTags","result","combination","includes","getOtherItems","hasPhysicalDamage","getBobbleHeadItems","getDrinkItems","getFoodItems","getSerumItems","lowHP","combination1","combination2","getSerumItemsBase","getSerumItemsAdditional","combination3","combination4","combination5","noEagle","arguments","undefined","isCarnivore","getChemicalItems","sneak","prepare","consumableObjs","consumableNames","prepareItems","creature","Map","weapon","JSON","parse","stringify","consumablesList","consumablesSet","Set","has","loadBoosts","objT","chT","dT","boT","mT","fT","itT","alT","cTypes","tagPrefixes","tagEndings","ConsumableTools","getTagName","tag","full","getItemType","startsWith","slice","data","prefix","endsWith","removeTagPrefix","tagName","tagPrefix","removeTagEndings","tagEnding","removePrefixSuffix","getItemColor","type","getItemColorDark","getDurationValue","effect","duration","glob_duration","getEffectFilterInfo","resultName","durationText","valueColor","leftRight","wordBreak","color","ConsumableButton","props","typeColor","effectValues","effectTag","effects","resultValues","resultNames","durations","add","m_effect","curve_max_value","glob_magnitude","magnitude","size","Array","from","indSC","indexOf","Math","toFixed","toString","maxDuration","getEffectValues","textBgColor","textStyle","itemType","margin","paddingTop","paddingBottom","padding","onClick","fontSize","sortItems","consItems","sort","item1","item2","name1","name2","localeCompare","getItem","types","memo","console","log","pageSize","setPageSize","onItemClick","currentTarget","currentItem","setShowToast","showToast","setCurrentItem","items","needTypeFilter","filterType","filterName","toLowerCase","filterEffect","effectTags","index","onPageChanged","page","setCurrentPage","paginated","start","currentPage","end","Container","Pagination","align","defaultPageSize","total","FloatButton","BackTop","right","visibilityHeight","getTagView","Tag","bordered","ConsumableTagsView","Divider","flexWrap","blue","borderColor","indigo","redRounded","orange","magenta","mainView","idNameRow","getItemDescription","getWeight","getAddictionPercent","getArea","area","getTag3","mt","mb","textWrap","overflow","textOverflow","addictionChance","addiction_chance","numberToString","weight","desc","getDuration","durationName","getTag","getTag2","getDescription","fullLength","center","containerClassName","trim","buildTagBlock","getActor","actor","actor_value1","getActorDesc","buildTextBlock","getParentPerkName","perk_name","parent_perk_name","getParentPerkDesc","perk_desc","parent_perk_desc","getSource","source","getMagnitude","curveMagnitude","curveMagnitudeName","globMagnitude","globMagnitudeName","d_curv","split","getParent","spell_id","parent","spell_full","getProperty","parent_name","getEffectTagNameView","getEffectView","ind","mEffect","fontColor","conditionStrings","buildConditionStrings","conditions","mConditionStrings","perkConditionStrings","perk_spell_conditions","addicted","if_addicted","height","Footer","alignItems","detailsView","ConsumableToast","main","setMain","view","buttonName","ToastContainer","position","role","zIndex","Toast","bg","onClose","show","animation","typeDict","All","Chem","Food","Magazine","Serum","Drink","Bobblehead","Stimpak","BloodPack","Other","effectDict","None","APRegen","AddBottlecap","AddPerk","AddictionCount","AddictionEffect","AddictionOdds","AdjustFallSpeed","Ammo","Banner","Barter","Bleed","Chameleon","CheaperCrafting","ConditionCost","CureAddiction","DamageParalyze","DamageResist","Detect","DetectLife","Disease","DiseaseChance","DiseaseCure","DiseaseResist","Duration","ExtraDamage","FX","Fearless","Festive","FireDamage","FortifyAP","FortifyAPRegen","FortifyAgility","FortifyBarter","FortifyCarryWeight","FortifyCharisma","FortifyCritDamage","FortifyCryoResist","FortifyDamage","FortifyDamageResist","FortifyEndurance","FortifyEnergyResist","FortifyExplosionRadius","FortifyExplosiveDamage","FortifyFireResist","FortifyGunAccuracy","FortifyHealRate","FortifyHealing","FortifyHealth","FortifyIntelligence","FortifyJumpHeight","FortifyLuck","FortifyMeleeDamage","FortifyMoveSpeed","FortifyPerception","FortifyRadAway","FortifyReloadSpeed","FortifyResistDamage","FortifyResistEnergy","FortifyResistPoison","FortifyResistRad","FortifySneak","FortifySprintAP","FortifyStrength","FortifyUnarmedDamage","FortifyVATSAccuracy","FortifyWaterBreathing","FortifyXPBonus","HealthRegen","HungerIncrease","HungerNo","HungerReduce","HungerThirstHeal","HungerThirstIncrease","HungerThirstNo","HungerThirstReduce","HungerThirstSlow","IncreaseDiseaseResistance","IncreaseSprintAP","IncreasedFood","InsectRepellent","Invisibility","LockPick","LootEffect","MutationCount","MutationTreated","PoisonDamage","RadDamage","RadExtreme","RadiationHazard","RandomEffect","ReduceAPRegen","ReduceAccuracy","ReduceActionPoints","ReduceAgility","ReduceCarryWeight","ReduceCharisma","ReduceChemEffect","ReduceDamage","ReduceDamageFromRobots","ReduceDamageResist","ReduceDisease","ReduceDiseaseChance","ReduceDiseaseResistance","ReduceEndurance","ReduceEnemyDamage","ReduceEnergyDamage","ReduceFallDamage","ReduceFallSpeed","ReduceIntelligence","ReduceItemDegradation","ReduceLimbDamage","ReduceLuck","ReduceMaxHealth","ReducePerception","ReduceStrength","ReduceWeight","Regen","Repair","ResistRadiation","RestoreAP","RestoreAddiction","RestoreHealth","RestoreRads","Reward","Science","ScopeStability","Scrap","SearchMeat","ThirstIncrease","ThirstNo","ThirstReduce","TreasureHunt","UI","VATSAccuracy","Workshop","ConsumableFilter","BaseDropdown","dict","setFilterType","Form","Control","maxLength","setFilterName","setFilterEffect","questionPopoverHeader","questionPopoverBody","consumablesParseVersion","consumablesParseVersionName","questionPopover","StaticPopoverRenderer","Item","renderToggle","stopPropagation","FilterDisplay","ConsumableItems","keyValueRow","Chart","getConfig","titleText","options","plugins","legend","display","elements","line","tension","scales","x","y","drawChart","config","chartId","curChart","getChart","destroy","document","getElementById","values","label","datasets","pointRadius","borderWidth","fill","minWidth","headerClassName","names","CreatureDataProvider","getCreatureNames","CreatureNamesDropdown","SimpleNameDropdown","fieldName","buildCreature","level","capName","levels","getCreatureLevels","CreatureLevelsDropdown","CreatureChooser","Stack","direction","gap","xs","raceMap","raceItems","set","RaceDataProvider","getRaceById","get","creatureNames","creatureName","creatureItems","creatureLevels","creatureLevelsWithMax","getCreatureData","getCreatureParametersByName","creatureData","getCreatureParametersByData","creatureDataCurve","lastItem","sample","sampleLevel","sampleValue","prevSampleLevel","prevSampleValue","calculateExactValue","immune_to_rad","immune_to_poison","reduction","reductions","reduction_only_not_bleeding","race","race_id","bodyData","body","getMaxBodyMultiplier","getAverageBodyMultiplier","maxMult","mult","damage_mult","multSum","count","prevLevel","nextLevel","curLevel","prevValue","nextValue","getMaxLevel","getLevelsList","maxLevel","capitalizeCreatureName","charAt","toUpperCase","replaceAll","getStyle","rType","getView","setCreatureName","CreatureDropdown","CreatureResHealthChartsView","CreatureDataView","Collapse","accordion","DropdownButton","getUniqueDropdownItemsByNames","CreatureInfoButton","creatureInfoPopover","cursor","getResBadge","immune","prepareTags","tags3","curTags","join","showDamageIf","what","damageLine","buildCreatureInfo2","armor","Object","keys","resultArmor","b","f","p","c","r","showHeadExp","explosiveDamage","headExpShotDamage","showCritHeadExp","critExplosiveDamage","critExplosiveHeadDamage","capitalized","immuneToPoison","immuneToRadiation","h","damageReduction","totalDamage","normalDamage","headShot","headShotDamage","critNormalDamage","critHeadNormalDamage","addText","tAmmo","ammo","reloads","millisToTime","lifeTime","buildCreatureInfo","showDefaultResistance","weaponSection","wNameTrunc","truncate","defaultResistance","curBody","reloadsTime","buildResCols","cRes","typeData","CreatureChartView","CreatureParamsLineView","keyValueBadge","enemy","CreaturesCardView","creature1","creature2","creature3","creature4","Creature","constructor","creatureInfo","this","physical","energy","fire","poison","cryo","radiation","damageReductionOnlyNotBleeding","headMult","bodyMult","bodyShot","expResistance","reported","maxHit","hits","sumDamages","lastShotTime","timeDamages","lastTotalDamage","lastDamageNoTime","lastExpDamageNoTime","minNormalShot","maxNormalShot","minHeadShot","maxHeadShot","minHeadExpShot","maxHeadExpShot","minNormalCritShot","maxNormalCritShot","minNormalHeadCritShot","maxNormalHeadCritShot","minExpShot","maxExpShot","minExpCritShot","maxExpCritShot","minExpCritHeadShot","maxExpCritHeadShot","bulletCount","minTotalDamage","maxTotalDamage","maxTimeEffects","tdCounter","sneakPercent","critPercent","bleed","getName","getArmor","reduceArmor","antiArmor","insect","takeDamage","hit","deltaTime","applyDamages","damages","critShot","applyCritDamages","critDamages","isDead","setupBleed","kind","damageInfo","time","causeNonTimeDamages","gatherTimeDamages","causeTimeDamages","recordDamage","baseDamage","damage","bonus","bonusMult","getCreatureBonusMultiplier","creatureDamageBonuses","getTotalBonus","stack","existedDamages","damageType","timeDamagesHandler","map","dTime","causeFinalDamage","deleteTimeDamages","filter","getMaxTimeEffects","forEach","cripple","powerAttack","lastShotBonus","expDTypeBonus","critBoost","bash","firstBloodBonus","totalBonus","sneakShot","expValue","getExplosiveDamage","weaponType","expBonus","critExp","tenderizer","timeDamage","finalDamage","memoDamage","nonCritExp","expDamage","getArmorValue","damageKind","totalDamageBonus","executionerBonus","damageBonus","bonusName","getLastTotalDamage","isHead","explosive","getAverageHit","Infinity","totalTime","parseInt","formDeadReport","averageHit","damagedHealth","ratio","CreaturesProduction","produce","materials","property","produceByArmor","dummy","getDummy","grey","colors","darkBlue","red","UTag","colorScheme","bRadius","bWidth","bgColor","border","fontWeight","borderStyle","whiteSpace","getButton","getColTagView","onBodyPartClick","CreatureBodyView","bodyParts","partName","part","partText","CreatureReductionView","damageReductions","col","res_field","canDisable","chColor","checkBorderColor","getCheckbox","checkLength","parseFloat","ballistic","cold","rad","creatureTypes","Normal","Scorched","Glowing","CreatureTagsView","BSRadio","pairs","selectedValue","getLabel","float","CreaturesStats","CreatureStats","getItems","creatureParseVersion","creatureParseVersionName","alt","setAlt","defaultCreaturesAlt","buildExtraDamageView","buildExtraDamageButtons","resultBadges","left1","right1","left2","right2","aab","aae","aaf","aac","aap","aar","getAATail","aa","aai","getDamageViews","damageViews","damageDetails","DamageDetailsCard","damageData","AAView","getRow","leftValue","rightValue","leftColor","rightColor","showExplosive","setCreature","creatureBonus","numberEmoji","getNumberEmoji","currentCreature","additionalBonus","damageValue","getAnyCreatureBonus","bonusDamage","bonusText","critValue","displayedCrit","critText","totalSneakValue","isSneak","displayedSneak","totalDamageBonusMin","totalDamageBonusMinValue","totalDamageBonusMinPercent","totalDamageBonusMax","executioner","totalDamageBonusMaxValue","totalDamageBonusMaxPercent","totalDamageBonusText","sneakText","resultSneakValue","resultCritValue","isCrit","totalDamageMin","totalDamageMax","explosiveValueMin","explosiveValueMax","explosiveText","explosiveCritValueMin","explosiveCritValueMax","explosiveCritText","totalDamageText","tail","base","totalExp","totalExpCrit","getResult","dropdownItems","Dropdown","getSymbolStyle","DamageEmulator","creatureInfos","needToStopByTime","timeLimit","floor","emulate","steps","getAntiArmor","deadCount","getReloadsCount","getReloadsTime","getType","defaultWeaponName","getDefaultName","getDamages","getExplosiveDamageTypeBonus","getBonusMult","tDamage","getDisplayedDamage","getCritBonus","getSneakBonus","getCreatureBonus","strengthBonus","getStrengthBonus","getExplosiveBonus","shotSize","getShotSize","reloadTime","getReloadTime","fireRate","getFireRate","ammoCapacity","getAmmoCapacity","strength","getStrength","Weapon","weaponSpecsAssembler","getWeaponName","getDefaultWeaponName","getCritDamages","strengthBoost","getStrengthBoost","getBaseDamageMult","getCritBoost","explosiveBonus","explosiveDamageTypeBonus","getExplosivePhysicalBonus","getWeaponType","headShotFrequency","getHeadShotFrequency","critShotFrequency","getCritShotFrequency","sneakShotFrequency","getSneakShotFrequency","getCreatureDamageBonuses","getFirstBloodBonus","getLastShotBonus","getCripple","getBash","getPowerAttack","chargeTime","getChargeTime","chargePenalty","getChargePenalty","getSneak","getTotalDamageBonus","magazine","reloadsCount","reloadTimeCounting","alwaysMaxHit","reloadsTotalTime","hitCount","setLastShotBonus","setFirstBloodBonus","setChargeTime","setFireRate","setAlwaysMaxHit","flag","disableReloadTimeCounting","getMaxHit","curDamage","chanceTriggered","hitIfFrequency","chance","finalAccuracy","defDamage","frequency","random","StuffBoostsCollector","collectAllItems","stuffBoosts","collector","maxItem","getMaxItem","weaponNameOrTypeSatisfied","satisfyNameOrType","collect","weaponTags","customStacker","additional","satisfyTags","array1","array2","arrayLess","arrayMore","intersects","AccuracyAdjuster","adjustByLegendary","adjustByPerks","adjustByConsumables","WeaponSpecsAssembler","perks","extraDamageSettings","makeDamageItemCopy","concat","getDamageFromStuff","setFinalAccuracy","better_criticals","displayed_value","collectTags","ammoType","codeName","strPoints","collectFromLegendary","leg","exp","demolition_expert","damageToCreature","glow_sight","exist","useHead","headFreq","useCrit","critFreq","useSneak","toft","follow_through","tdb","totalD","maxChargeTime","crippleChance","covert_operative","sandman","mister_sandman","ninja","getBonusMultFromPerks","bResult","ballisticBDB","eResult","energyBDB","fResult","fireBDB","pResult","poisonBDB","cResult","coldBDB","rResult","radBDB","dtPhysical","dtEnergy","dtFire","dtPoison","dtCryo","dtRadiationExposure","buildBleedDamage","nerd_rage","bloody_mess","adrenaline","gun_fu","gladiator","hand","heavy_gunner","shotgunner","slugger","iron_fist","archer","commando","is_auto","rifleman","guerrilla","gunslinger","science","incisor","bow_before_me","tank_killer","stabilized","bMult","result2","exterminator","power_user","shot_size","weaponSpeed","speed","martial_artist","reloadSpeed","lock_and_load","scattershot","ground_pounder","defReloadTime","DEFAULT","build","rank","rank_values","max_x","category","info","cost","im_name","party_girl_boy","strange_in_numbers","class_freak","special","perception","endurance","charisma","intelligence","agility","luck","getAverageTimeMillis","sum","getAverageTime","averageShot","getCreatureByName","defBody","dps","buildDefCreature","normalMult","averageMult","immuneToRad","reductionOnlyNotBleeding","average","strange","freak","alcoholEffects","getStrangeMult","getFreakReduction","functions","nukeTheMan","partyGirlBoy","defValue","adrenalineReaction","ar","eagleEyes","eagleEyesNegative","empathSerum","carnivoreSerum","herbivoreSerum","foodCalc","foodType","herdMentality","posValue","speedDemonMove","speedDemonReload","talons1","talons2","twistedMuscles","convertStuffBoost","collectBoosts","boosts","parentId","loadedStuff","used","applyBoost","anyway","boost","funcUsed","func","stuff","things","bobbles","serums","applyAllStuff","applyStuff","remainStuff","delete","deleteBoost","modParser","ModParser","getDefaultLegs","legIds","convertTemplateToSpecs","template","assignCurrentlyActiveUserLegendary","isAuto","defRate","manualRate","mods","modCategoryName","allMods","categoryMods","j","mod","getMods","group","legs","legendary1","legendary2","legendary3","legendary4","legendary5","replaceAdjustableLegs","collectAllDamages","sortedDamages","d","ignore","critDamagesData","crSpellId","critDamageData","critItem","convertDamageDataToDamageItem","weaponId","capacity","legendaryHealthUpdated","currentLegendaryIds","applyLegendaryModToWSpec","imageName","dType","adDamage","symbol","interval","AdditionalDView","iMap","createMap","getAmmo","require","magazinesList","bobbleHeadsList","bobbleHead","foods","foodsList","drinks","drinksList","psychos","psychoList","serumList","othersList","other","nameList","firstIndex","lastIndex","creaturesInfo","shotsPerSecond","maxRes","cArmor","graphPoints","ceil","xValue","getColorsForHotMeter","g","damageExtractor","DamageExtractor","CritView","crits","weapId","allItems","visual","ench","extractEnch","spells","type_name","curv","vmadObjects","getEffect","setVMADObject","object","getVMADObject","clearVMADObjects","clear","getNameByLabel","getVMADButton","effectId","vmad","onEffectClick","vmadObject","getEffectButton","leftRight2","vmadView","buildRow","left","leftRightTag","cond","textAlign","footer","headerView","buildActor","def","getGlobDuration","getGlob","glob","footerView","getGlobMagnitude","getGlobValue","obj","buildEffect","buildCurve","curve","maxValue","pathCurve","number","image","maxHeight","src","Image","fluid","bullet","iBullet","iAmmo","iFireRate","iTAmmo","gun","iGun","rifle","iRifle","shotgun","iShotgun","bow","iBow","melee","iMelee","heavy","iHeavy","unarmed","iUnarmed","thrown","iThrown","imageF","marginLeft","setCurrentLegendaryIds","raceParseVersion","raceParseVersionName","perkCardParseVersion","perkCardParseVersionName","val","str","truncateLongWords","words","word","getHotPercentage","percent","buildItem","wSpecCopy","averageTime","star","getLegendary","getLegendaryByStar","getLegendaryNameFromSpec","legObj","getPerks","getProj","getHazardOverlay","hazard","overlayButton","WeaponPopoverOverlay","popoverHeader","popoverContent","buildHazardView","itemToOverly","getExpView","expl","popover","projectile","objectExplosion","placedWeapon","combined","getResolvedField","proj","renderWeaponPopover","buildProjView","getProjButton","getProjectileOverlay","hazd","d_type","getField","getCardSpell","enchantment","getExplosiveForPopover","buildProjViewById","projId","destructible","buildProjViewByIds","ids","ProjView","projInfo","getSpell","getEffects","vType","v_type","buildEightEffect","buildFifthEffect","Error","buildFirstEffect","spell","getSpellHeader","getEffectsForPopover","mag_effects","actor1","getActorData","actor2","lValue","rValue","keyValueTag","under_row","actorData","getNameValueField","getPerkButton","perkId","perk","getPerkContent","dur","mag","getEffectContent","ability","resist","a_type","e_type","only_player","explosion","actor_value2","getOverlay","buttonStyle","buildSpellView","spellId","SpellView","round","emojis","getRandomNumber","getRandomEmoji","buildRandomEmojiString","space","spaceChars","repeat","eSize","Strings","Melee","Unarmed","templates","templateList","getTemplates","getTemplateCopyById","t","q","strTime","hideEmpty","cell","css","value1","value2","setWeaponType","resetPage","customTitle","getRowWithImage","customName","getImage","buildWarning","WarningPopover","element","_ref2","Badge","pill","images","imageList","getImageElement","content","minHeight","paddingLeft","popoverBack","onToggle","initWeaponPopover","ReactDOM","render","extractPlacedObjects","damageTypes","resTypes","e_type_name","v_type_name","operation","skipFunctions","tomahawk","throwingKnife","extractFromTemplate","extract","ammoId","curWeapId","ammoData","extractAmmo","projIds","projData","extractProj","effectIds","adEffects","ammoDamage","ammo_type","dTypes","addDamageNode","extractExp","resolveAndExtractProj","extractPerk","enchTime","extractEffects","enchId","existedEffects","globDuration","onlyPlayer","blood","resolveCurv","findEffectDamageType","resId","extractObject","wId","dDamage","expCurv","exp_curv","view_name","type_id","type_full_name","directParent","entries","abs","DamageBlackList","check","damageId","list","ignoreMap","buildDamageItem","accuracy","getDamageTypeFromCellName","getDamageValue","damageItem","cellNames","cellName","DamageSetter","setDamages","setDamage","setDamageForCategory","setCurrent","placeValueByType","putDamage","field","newDamage","DamageBonusMult","Apply","apply","super","getValue","addSetMullAdd","op","applyLegendary","modId","starIndex","update","checkOp","val1","isChangingDefaultDamage","IsAutomatic","Speed","autoRate","mullAddToProperty","APCost","ap","Weight","AttackDelay","CriticalDamageMult","addToProperty","AmmoCapacity","ReloadSpeed","OverrideProjectile","splice","HasRepeatableSingleFire","ActorValues","getCurvValue","val2","applyValue","isLegendary","checkZero","applied","needToRemove","Keywords","addTag","print","CritEffect","AttackDamage","bbDamage","DamageTypeValues","ebDamage","fbDamage","pbDamage","cbDamage","rbDamage","to","mullAddFromTo","WeightReduction","mullAdd","Enchantments","newValue","depend","adjustValueByHealth","NumProjectiles","Appliers","appliers","ConIronSight","SightedTransition","MaxConDegree","MinConDegree","RecoilMaxDegree","RecoilMinDegree","skip_legendary","applyOrRevoke","modData","mutatingDamage","modifiers","applier","prop","changeDefault","applySpecific","modEffects","ModTools","hasSilencerById","hasSilencer","expected","val3","allowNegative","setToProperty","mullSet","conIronSight","maxConDegree","minConDegree","recoilMaxDegree","recoilMinDegree","sightedTransition","getButtons","small","marginRight","setSelectedValue","parseValueInt","perkButtons","onPerkClick","perkData","costs","mPerkId","fPerkId","mPerk","fPerk","flexDirection","PerkCardCompactView","perkCard","getPerkCard","perkCardId","PerkCardTools","getColor","legBadge","buildPerkEffect","rows","entry","buildActors","getRows","indent","PerkCompactView","SpellCompactView","range","checkEmpty","getPerk","EffectCompactView","resistance","AlchemyCompactView","alchemy","buildBody","vmadId","textBlock","script_name","objView","structArrayView","vmads","getScriptName","effectButtonView","buildView","VMADCompactView","StackEffectView","viewIdStackRef","startItemIdRef","startItem","lastViewIdIndex","getEffectItem","backButton","onBackClick","getBackButton","newLength","effectView","marks100P","defaultValue","marks200","ADRow","AdditionalTable","InfoPopover","setShow","setTarget","bodyBuilder","headerBuilder","Overlay","onHide","popoverBodyStyle","buildOverlay","getPopoverInfoBody","popoverId","getPopoverInfoHeader","categoryName","picHeight","imPadding","setItems","colorName","colorValue","getPicture","useHeader","maxRows","setUpdate","cardClick","recalculateDynamicItems","valueType","description","emptyRows","emojiStrings","secondEmoji","head","maxPopoverHeight","documentElement","getPropertyValue","Img","gameId","couple","first","second","cardHeight","EffectItem","rItems","EffectView","EffectItems","marks50","marksH","ANRow","General","badgeIf","condition","checkCardConditions","card","cardType","setCardType","xBadge","w","perkColor","cName","imagePath","getPerkImage","getMark","bgCardColor","getComputedStyle","calculateSpecial","rank_len","changeRank","onRadioClick","Basic","Expert","Master","getInfo","BRow1","BRow2","BRow3","_ref3","BRow4","_ref4","BRow5","_ref5","BRow6","_ref6","BRow7","_ref7","BRow8","_ref8","BRow9","_ref9","BRow10","_ref10","getStatBadge","cParams","letter","getDropdown","PerkCardBuilder","BoostTable","GraphInfoView","Progress","format","strokeColor","trailColor","strokeWidth","ResistanceChart","creatureNumber","setCreatureNumber","HotMeter","setIndex","copyColors","shiftIndex","limit","setTimeout","newIndex","showInfo","imagePopover","weaponIcon","percentC","weaponTitleName","renderToggleNewContent","SummaryView","DamageDetails","labels","creatureField","need","setValue","getLegendaryPrefix","legendaryPrefix","curLegPrefix","getInputText","legPrefixCheck","setLegPrefixCheck","Modal","setModalNewItemShow","centered","closeButton","Title","useLegPrefix","nextId","newItems","setNextId","createItem","getJsonFileRef","URL","createObjectURL","Blob","getFileRef","modalDownloadSnapshots","setModalDownloadSnapshots","href","download","_unused","downloadName","modalDownloadSnapshot","setModalDownloadSnapshot","fileName","setModalDeleteItem","itemId","modalDeleteAll","setModalDeleteAll","modalView","loading","applyItem","ModalApplyItem","setLoading","setModalApplyItem","copy","readSnapshotsFromInput","inputId","setIdCallback","setItemsCallback","oldItems","maxItems","file","reader","FileReader","onload","readSnapshotsJson","readAsText","readSnapshotsFrom","files","newMaxItems","radio","Add","Replace","addOld","setAddOld","setModalUploadSnapshots","htmlFor","readOnly","accept","_unused2","setModalRenameItem","setItem","modalUpdateItem","setModalUpdateItem","oldItem","uniqueCreatureNames","sortCreatureName","setSortCreatureName","downloadButton","UploadIcon","uploadButton","DownloadIcon","imNames","getUsedPerks","EmblemCalcRowView","imageProvider","iconSize","imageSize","row","tagColor","bodyContent","isOpen","critUsed","sneakUsed","headUsed","leg1Name","leg2Name","leg3Name","leg4Name","leg5Name","modView","fireRateLabel","getFireRateLabel","BoostRowView","UpdateIcon","PlayIcon","TrashIcon","headerBody","isItemOpen","setIsItemOpen","displayedWeaponName","RenameIcon","compareAverage","time1","time2","startIndex","sortAlg","compareCreatureGeneral","snapshots","SnapshotItem","showSizeChanger","getPagination","modalNewItemShow","modalRenameItem","modalUploadSnapshots","modalDeleteItem","modalApplyItem","setIsOpen","setPage","setStartIndex","readSnapshotsFromResources","snapshotsFile","defaultItems","uniqueNames","buildUniqueCreatureNames","onClickOpen","SnapshotsHeader","ModalDownloadSnapshots","ModalDownloadSnapshot","ModalUploadSnapshots","ModalNewItem","ModalDeleteItem","ModalDeleteAll","ModalRenameItem","ModalUpdateItem","WTypeDropdown","CollapseIcon","ExpandIcon","SnapshotItems","mainInfoPopover","MainInfoButton","infoButton","isRanged","TemplateTools","isWeaponRangedByType","damageText","fireRateText","fRate","getLegendaryRow","legendaryId","stars","legData","getPrevButtonDetails","showView","detailsLength","detailIndex","setDetailIndex","getNextButtonDetails","getNextButtonCreature","getPrevButtonCreature","getCreatures","getDetails","getMainToast","totalBonusText","setShowView","strengthTail","bonuses","totalBonusTextMin","totalBonusTextMax","toastBody","column2","onChange1","onChange2","icon","id1","id2","max1","max2","column","creatureIndex","creatureViews","fireRateIcon","defFireRateLabel","allMarks","marks3","marks25","marks40","marks95","marks100","marks20","marks24","marks300","marks15","legendaryInfo","marksName","wSpecLeg","adjustable","legendaryItems","updateLegendary","getLegendaryDropdown","legName","legId","getQM","getEffectTag","getLegendaryAdjust","LegSlider","getLegendaryDetails","legBody","getCollapse","headerName","LegendarySelector","autoW","handW","auto","getInputItem","dItem","DamageItem","modalDeleteDamage","setModalDeleteDamage","NotificationToast","toastState","delay","autohide","setToastState","openNotification","DamageAdd","api","contextHolder","notification","useNotification","AmmoInfoView","TagInfoView","modElement","dItems","ModalDeleteDamage","WRow","AutoHandSelector","DamageTable","buildName","setupGeneral","setupCard","getImageNamesForPickedCards","buildWithOptions","automatic","energyTag","explosiveTag","fusionTag","oneHandedTag","twoHandedTag","silencerTag","shotgunTag","temp","lowHp","pa","night","useSerums","bodyTags","adr","extra","prepareName","perkCards","mPerk1","mName","fPerk1","sortedItems","fullName","getSortedPerkCards","PerkCardButton","filterStatus","Strength","Perception","Endurance","Charisma","Intelligence","Agility","Luck","statusDict","Legendary","Ordinary","PerkCardFilter","setFilterStatus","PerkCardToast","PerkCardItems","ChartView","GeneralRaceView","RaceBodyView","RaceTools","prepareRaceName","pair","raceName","setRaceName","RaceTagView","racePairs","raceComparator","race1","race2","it","getRaceTagView","getRaceBodyView","RaceDropdown","ResistanceView","res","buildModCard","mod_e","excludeMod","mId","eIds","excludedModIds","getDamagedModIndexes","includeGroups","accuracyMods","silencerDamage","exclude","defaultIndex","accuracyBestIndex","indexes","bestMod","resetMods","modCategories","modCategory","hasDefaultLegendary","leg1","leg2","leg3","leg4","leg5","getDefaultLegendary","legendarySetter","extractDefaultLegendary","isWeaponRanged","isWeaponExplosive","getGroups","applyTemplate","ModalApplyTemplate","modalTemplate","setModalTemplate","specItem","buildProj","buildAmmoView","AmmoView","overrideProj","ammoInfo","getDamagesData","getDamageData","buildCard","DamageView","Base","getTags","tagNames","buildGeneralView","crMult","crit_spells","crit_views","general","formatName","legendaryName","LegendaryView","isLeg1","isLeg2","isLeg3","isLeg4","isLeg5","getDamageCards","damageCollapse","DamageOverview","ModRow","modsSameType","checkMod","defMods","modSameType","modRow","CheckableTag","getModRow","testImagePaths","versionPaths","testedWeapons","versions","buildMap","imagesMap","resultMap","version","img","buildTestedWeapons","paths","array","path","weaponRestrictions","getApplyButton","setModalCalculate","onTestClick","restrictions","isTested","getResetButton","itemsLength","resetButtonActive","setResetButtonActive","cleanTemplate","modsSetter","setTemplatesMods","left3","right3","WeaponTemplate","changed","setChanged","cleanTemplateAndApplyCurrentMods","unverified","divider","iSize","badgeStyle","badgesRow","infoRows","filteredInfo","filteredMarks","badgesCols","buildInfoRows","GeneralView","LegendarySetter","privateSet","lastWord","propMods","modGroups","weaponIds","damageSetter","setTemplatesDefaultMods","resetTemplate","applyModValues","setLegendary","getSkeletons","Skeleton","avatar","paragraph","weaponIdsExists","weaponIdsByType","buildTemplates","wData","setWData","loaded","filterByName","filterByType","prepareTemplates","Combinator","combinations","currentCombination","lastIndexes","curIndexes","hbRead","combinationsCount","groupName","last","currentNumber","getCombinationsCount","getCurrentNumber","next","isLast","nextCombination","currentCombinations","rowPos","AccuracyHelper","getCleanTemplate","getBestMods","preference","resultMods","hide","hasAccuracyData","useful","getTheBestModsForCategory","pFunc","RECOIL","determineBestRecoilPriority","CON","determineBestConPriority","BALANCE","determineBestBalance","best","currentId","currentData","th","bestCon","getAverageCon","currentCon","bestBalance","getAverageRecoil","currentBalance","bestTransition","getTransition","currentTransition","bestSight","getSight","currentSight","bestRecoil","currentRecoil","_AccuracyHelper","ACCURACY_INFO","ACC_PREFERENCE","Recoil","Spread","Balance","accuracyProps","LegsId","QUAD","ARISTOCRAT","ANTI_ARMOR","TWO_SHOT","EXECUTIONER","BLOODIED","STEADY","MELEE_RAPID","HITMAN","RANGED_RAPID","VITAL","EXPLOSIVE","CRIPPLING","SWIFT","STRENGTH","LegendaryCalcBuilder","getLegendary1","isRange","initLegs","getLegendary2","getLegendary3","ParameterCalculator","cards","frCrit","frHead","legendaryOpts","accuracyPreference","modCombinator","boostCombinator","bestParameters","lastParameters","bestTime","lastTime","maxCount","defaultLegendary","hasGotLastCombination","currentConfig","bestConfig","bestAverageHit","accuracyHelper","defaultExplosive","perkImageNames","bestAccuracyMods","getBestParameters","getTemplate","getCount","getMaxCount","getBestTime","clockFormat","prepareAndCalcFirst","getCreatureTags","getBodyTags","isDefaultExplosive","buildLegendary","Night","Sneak","modCombinations","applyMods","buildBoostCombinator","consList","legsList","buildConsumableList","buildLegendaryList","calculateAndCount","Legendary1","Legendary2","Legendary3","uniqueTags","getConsumables","Crit","Team","bobble","consumableBoostsList","calculateCombination","updateBestConfig","consCombinations","boostCombinations","nextBoostExists","calculateCombinations","modCombinationExists","currentBoosts","isFinished","getCompletionPercent","onePart","modGroup","modIndex","nonAutomatic","applyLegendaryToWSpec","legIndex","memoConfig","cons","getBestConfig","getCurrentConfig","buildNewCreatures","updateLeg","legToApply","buildPerks","consumableBoosts","report","consumableList","PickedGroups","init","groups","excluded","excludeGroups","buildGroupsView","onGroupChange","getModItem","CalcModGroups","setGroups","getDefaultModGroups","infos","headButton","setFrHead","setFrCrit","opt","critButton","dis","strengthField","maxWidth","CalcModOptionsView","CalcCards","setCards","CalcMain","CalcConsumables","setStuff","CalcLegendary","setLeg","WeaponEmblem","LegendaryCalcRowView","getLeg","wrap","starSize","ModsCalcRowView","modViews","columns","wrapText","widths","rest","getWidths","justifyContent","ParametersApplier","applyCalculatedParameters","parameters","parameterCalculator","firstShown","ModalCalculateWeapon","setCount","calculating","setCalculating","selectedCreature","setSelectedCreature","accuracyPref","setAccuracyPref","modalCalculate","Parameters","startCalculation","getCounter","currentElement","curHeight","offsetHeight","onSelectCreatureName","selectedCreatureName","getSettings","CalcModGroupsAll","CalcWGroupsDropdown","setType","CalcCurrentItem","finishedRef","setWNameToApply","compareItems","bestTimeCount","resultView","calcItems","CalcResultItem","currentWIndex","ModalCalculateWeapons","completion","setCompletion","weaponResult","setWeaponResult","wNameToApply","renderSwitch","setRenderSwitch","canCalculateRef","modalCalculates","setModalCalculates","setupParameterCalculator","wIds","idObj","gNames","getCurrentItem","perksUsed","consUsed","getProgress","getProgressNumber","CalcResultItems","calculateParameters","wIcon","letterSpacing","getImages","Carousel","titles","getTitles","activeIndex","selectedIndex","ModalTestedWeapon","modalTested","setModalTested","TestedCarousel","TemplateItems","imagePathMap","views","bColor","ms","placeId","root","lastOpened","buildLayout","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","resolve","module","exports"],"sourceRoot":""}