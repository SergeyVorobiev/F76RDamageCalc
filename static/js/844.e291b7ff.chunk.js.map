{"version":3,"file":"static/js/844.e291b7ff.chunk.js","mappings":"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","sources":["Main.js","additional/ADRow.js","boostStuff/ConsumablesBuilder.js","comparator/view/ComparatorChartView.js","comparator/view/ComparatorView.js","helpers/views/WeaponBadgeView.js","comparator/view/ComparatorWeaponDataView.js","consumables/ConsumableTools.js","consumables/view/ConsumableButton.js","consumables/view/ConsumableItems.js","consumables/view/ConsumableToast.js","consumables/view/ConsumableFilter.js","consumables/view/ConsumablesView.js","consumables/view/FilterDisplay.js","creature/CreatureChartView.js","creature/CreatureNamesDropdown.js","creature/CreatureLevelsDropdown.js","creature/CreatureChooser.js","race/RaceDataProvider.js","creature/CreatureDataProvider.js","creature/CreatureDataView.js","creature/CreatureDropdown.js","creature/CreatureInfoButton.js","creature/CreatureInfoPopover.js","creature/CreatureResHealthChartsView.js","creature/CreatureParamsLineView.js","creature/CreaturesCardView.js","creature/Creature.js","creature/CreaturesProduction.js","viewComponents/tag/UTag.js","creature/CreatureBodyView.js","creature/CreatureTagsView.js","creature/CreatureReductionView.js","creature/CreatureStats.js","creature/CreaturesStats.js","creature/CreaturesView.js","damage/AAView.js","damage/DamageDetails.js","damage/DamageDetailsCard.js","damage/DamageEmulator.js","damage/DamageItem.js","damage/weapon/Weapon.js","boostStuff/StuffBoostsCollector.js","helpers/Array.js","helpers/AccuracyAdjuster.js","damage/weapon/WeaponSpecsAssembler.js","damage/weapon/WeaponFactory.js","entities/EAddDamages.js","entities/EBoosts.js","entities/ECreatures.js","entities/EPlayer.js","entities/EPlayerStats.js","boostStuff/BoostFunctions.js","entities/EStuffBoost.js","entities/EWeaponSpecs.js","entities/ExtraDamageOptions.js","helpers/AdditionalDView.js","helpers/Ammo.js","helpers/BoostStuffProvider.js","helpers/Calc.js","helpers/Colors.js","helpers/CritView.js","helpers/DropdownHelpers.js","helpers/EffectProvider.js","helpers/Emoji.js","helpers/Input.js","helpers/Item.js","helpers/LegendaryProvider.js","helpers/LegendaryView.js","helpers/Mods.js","helpers/PerkProvider.js","helpers/Proj.js","helpers/ProjView.js","helpers/Spell.js","helpers/PerkPopover.js","templates/EffectPopover.js","helpers/SpellView.js","helpers/StringHelpers.js","helpers/Strings.js","helpers/TemplatesRegister.js","helpers/Time.js","helpers/ViewHelper.js","helpers/WTypeDropdown.js","helpers/WeaponImages.js","helpers/WeaponPopoverOverlay.js","helpers/mods/DamageExtractor.js","damage/DamageBlackList.js","helpers/mods/DamageSetter.js","helpers/mods/appliers/DamageBonusMult.js","helpers/mods/appliers/Ammo.js","helpers/mods/appliers/IsAutomatic.js","helpers/mods/appliers/Speed.js","helpers/mods/appliers/APCost.js","helpers/mods/appliers/Weight.js","helpers/mods/appliers/AttackDelay.js","helpers/mods/appliers/CriticalDamageMult.js","helpers/mods/appliers/AmmoCapacity.js","helpers/mods/appliers/ReloadSpeed.js","helpers/mods/appliers/OverrideProjectile.js","helpers/mods/appliers/HasRepeatableSingleFire.js","helpers/mods/appliers/ActorValues.js","helpers/mods/appliers/Keywords.js","helpers/mods/appliers/CritEffect.js","helpers/mods/appliers/AttackDamage.js","helpers/mods/appliers/DamageTypeValues.js","helpers/mods/appliers/WeightReduction.js","helpers/mods/appliers/Enchantments.js","helpers/mods/appliers/NumProjectiles.js","helpers/mods/appliers/Appliers.js","helpers/mods/ModParser.js","helpers/mods/ModTools.js","helpers/mods/appliers/Apply.js","helpers/mods/appliers/ConIronSight.js","helpers/mods/appliers/MaxConDegree.js","helpers/mods/appliers/MinConDegree.js","helpers/mods/appliers/RecoilMaxDegree.js","helpers/mods/appliers/RecoilMinDegree.js","helpers/mods/appliers/SightedTransition.js","helpers/views/BSRadio.js","helpers/views/GroupView.js","helpers/views/LoadingModal.js","helpers/views/SimpleNameDropdown.js","helpers/EffectViewHelper.js","perkCard/view/PerkCardCompactView.js","perk/view/PerkCompactView.js","spell/view/SpellCompactView.js","effect/view/EffectCompactView.js","consumables/view/ConsumableTagsView.js","consumables/view/AlchemyCompactView.js","vmad/view/VMADCompactView.js","helpers/views/StackEffectView.js","additional/AdditionalTable.js","main/AdditionalDamage.js","viewComponents/popover/InfoPopover.js","boostStuff/EffectItem.js","boostStuff/EffectItems.js","boostStuff/EffectView.js","boostStuff/ANRow.js","boostStuff/General.js","main/BoostStuff.js","perkCardBoosts/BRows.js","perkCardBoosts/BoostTable.js","main/DamageBoosts.js","main/GraphInfoView.js","main/HotMeter.js","main/MainCardsDisplay.js","main/ResistanceChart.js","snapshot/ModalNewItem.js","helpers/Files.js","snapshot/ModalDownloadSnapshots.js","snapshot/ModalDownloadSnapshot.js","snapshot/ModalDeleteItem.js","snapshot/ModalDeleteAll.js","snapshot/ModalApplyItem.js","helpers/FetchSnapshots.js","snapshot/ModalUploadSnapshots.js","snapshot/ModalRenameItem.js","snapshot/ModalUpdateItem.js","snapshot/SnapshotsHeader.js","snapshot/SnapshotItem.js","snapshot/SnapshotItems.js","main/Snapshots.js","main/MainInfoPopover.js","main/MainInfoButton.js","main/SummaryView.js","main/ToastSpecs.js","damage/WRow.js","damage/LegSlider.js","damage/LegendarySelector.js","damage/AutoHandSelector.js","helpers/NotificationToast.js","damage/DamageAdd.js","damage/ModalDeleteDamage.js","damage/AmmoInfoView.js","damage/TagInfoView.js","damage/DamageTable.js","main/WeaponSpecs.js","perkCardBoosts/BoostHelpers.js","perkCardBoosts/PerkCardBuilder.js","perkCardBoosts/PerkImageProvider.js","perkCard/PerkCardProvider.js","perkCard/PerkCardTools.js","perkCard/view/PerkCardButton.js","perkCard/view/PerkCardItems.js","perkCard/view/PerkCardFilter.js","perkCard/view/PerkCardToast.js","perkCard/view/PerkCardView.js","race/view/ChartView.js","race/view/GeneralRaceView.js","race/view/RaceBodyView.js","race/RaceTools.js","race/view/RaceDropdown.js","race/view/RaceTagView.js","race/view/RaceView.js","race/view/ResistanceView.js","snapshot/BoostRowView.js","snapshot/ModView.js","templates/ModPropsPopover.js","templates/TemplateTools.js","templates/ModalApplyTemplate.js","helpers/AmmoView.js","helpers/DamageView.js","helpers/GeneralView.js","helpers/DamageOverview.js","templates/ModRow.js","templates/TestedWeapons.js","helpers/WeaponRestrictions.js","templates/WeaponTemplate.js","helpers/mods/LegendarySetter.js","templates/TemplateItems.js","helpers/mods/ModsSetter.js","helpers/Combinator.js","helpers/AccuracyHelper.js","helpers/LegsId.js","helpers/LegendaryCalcBuilder.js","templates/calc/ParameterCalculator.js","templates/calc/view/PickedGroups.js","templates/calc/view/CalcModGroups.js","templates/calc/view/CalcModOptionsView.js","templates/calc/view/CalcCards.js","templates/calc/view/CalcMain.js","templates/calc/view/CalcConsumables.js","templates/calc/view/CalcLegendary.js","templates/WeaponEmblem.js","templates/calc/view/LegendaryCalcRowView.js","templates/calc/view/ModsCalcRowView.js","templates/ModalCalculateWeapon.js","templates/calc/CalcEntities.js","templates/calc/view/CalcModGroupsAll.js","templates/calc/view/CalcWGroupsDropdown.js","templates/calc/view/CalcCurrentItem.js","templates/calc/view/CalcResultItem.js","templates/calc/view/CalcResultItems.js","templates/ModalCalculateWeapons.js","templates/TestedCarousel.js","templates/ModalTestedWeapon.js","templates/WeaponTemplates.js","templates/calc/ParametersApplier.js","templates/calc/view/EmblemCalcRowView.js","viewComponents/checkbox/UCheckbox.js","viewComponents/dropdown/BaseDropdown.js","viewComponents/popover/StaticPopoverRenderer.js","resources/boostStuff/bobbleHeads|sync|/.webp","resources/boostStuff/drink|sync|/.webp","resources/boostStuff/food|sync|/.webp","resources/boostStuff/magazines|sync|/.webp","resources/boostStuff/others|sync|/.webp","resources/boostStuff/psycho|sync|/.webp","resources/boostStuff/serums|sync|/.webp","resources/forReadme/Tests|sync|/.json$","resources/forReadme/Tests|sync|/.webp$","resources/perks|sync|/.webp","resources/weaponTemplates|sync|/.json$","resources/weapon_icons|sync|/.webp$"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport AdditionalDamage from \"./main/AdditionalDamage\";\r\nimport MainCardsDisplay from \"./main/MainCardsDisplay\";\r\nimport ToastSpecs from \"./main/ToastSpecs\";\r\nimport CreaturesView from \"./creature/CreaturesView\";\r\nimport WeaponFactory from './damage/weapon/WeaponFactory';\r\nimport { calcDamage, graphDamage } from \"./helpers/Calc\";\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { defaultExtraDamage } from './entities/ExtraDamageOptions';\r\nimport { defaultCreatures, buildCreatureNames } from './entities/ECreatures';\r\nimport { defaultBoosts } from './entities/EBoosts';\r\nimport { defaultPlayerStats } from './entities/EPlayerStats';\r\nimport { defaultPlayer } from './entities/EPlayer';\r\nimport { defaultAdds } from './entities/EAddDamages';\r\nimport { defaultWeaponSpecs } from './entities/EWeaponSpecs';\r\nimport WeaponSpecs from './main/WeaponSpecs';\r\nimport DamageBoosts from './main/DamageBoosts';\r\nimport Snapshots from './main/Snapshots';\r\nimport BoostStuff from './main/BoostStuff';\r\nimport WeaponTemplates from './templates/WeaponTemplates';\r\nimport ConsumablesBuilder from './boostStuff/ConsumablesBuilder';\r\nimport RaceView from './race/view/RaceView';\r\nimport PerkCardView from './perkCard/view/PerkCardView';\r\nimport ConsumablesView from './consumables/view/ConsumablesView';\r\nimport ComparatorView from './comparator/view/ComparatorView';\r\nimport LoadingLine from './main/LoadingLine';\r\nimport Global from './helpers/Global';\r\nimport { Divider } from 'antd';\r\n\r\n\r\nconst defPlayerStats = defaultPlayerStats();\r\n\r\nconst defPlayer = defaultPlayer();\r\n\r\nfunction getDefaultGraphData() {\r\n    let xValues = [];\r\n    let yValues = [];\r\n    const maxRes = 1000;\r\n    const coef = maxRes / Global.points;\r\n    for (let i = 0; i <= Global.points; i++) {\r\n        xValues.push(coef * i);\r\n        yValues.push(0);\r\n    }\r\n    return {\r\n        xValues: xValues,\r\n        yValues: yValues,\r\n    }\r\n}\r\n\r\nexport default function Main() {\r\n    console.log(\"Main\");\r\n\r\n    const [key, setKey] = useState('Main');\r\n\r\n    const [creatureChartNumber, setCreatureChartNumber] = useState(1);\r\n\r\n    const [loadedScreen, setLoadedScreen] = useState(false);\r\n\r\n    const [wSpec, setWSpec] = useState(defaultWeaponSpecs());\r\n\r\n    const [showStat, setShowStat] = useState(false);\r\n\r\n    const [graphValues, setGraphValues] = useState(getDefaultGraphData());\r\n\r\n    const [creatures, setCreatures] = useState(defaultCreatures());\r\n\r\n    const [boostDamage, setBoostDamage] = useState(defaultBoosts());\r\n\r\n    const [resultDamage, setResultDamage] = useState({});\r\n\r\n    const [extraDamage, setExtraDamage] = useState(defaultExtraDamage());\r\n\r\n    const [additionalDamages, setAdditionalDamages] = useState(defaultAdds());\r\n\r\n    const [stuffBoost, setStuffBoost] = useState(ConsumablesBuilder.getEmptyConsumableBoosts());\r\n\r\n    const [player, setPlayer] = useState(defPlayer);\r\n\r\n    const [playerStats, setPlayerStats] = useState(defPlayerStats);\r\n\r\n    const [magazines, setMagazines] = useState(ConsumablesBuilder.getMagazines());\r\n\r\n    const [bobbleHeads, setBobbleHeads] = useState(ConsumablesBuilder.getBobbleHeads());\r\n\r\n    const [food, setFood] = useState(ConsumablesBuilder.getFood());\r\n\r\n    const [drink, setDrink] = useState(ConsumablesBuilder.getDrink());\r\n\r\n    const [psycho, setPsycho] = useState(ConsumablesBuilder.getPsycho());\r\n\r\n    const [serum, setSerum] = useState(ConsumablesBuilder.getSerum());\r\n\r\n    const [others, setOthers] = useState(ConsumablesBuilder.getOthers());\r\n\r\n    const [foodPref, setFoodPref] = useState({carnivore: false, herbivore: false});\r\n\r\n    const [consumableTouched, setConsumableTouched] = useState([]);\r\n\r\n    // Refs\r\n    const creatureNamesRef = useRef(buildCreatureNames(creatures));\r\n\r\n    const applySnapshotRef = useRef(null);\r\n\r\n    const wSpecRef = useRef(null);\r\n\r\n    const resultDamageRef = useRef(null);\r\n\r\n    const playerRef = useRef(null);\r\n\r\n    const playerStatsRef = useRef(null);\r\n\r\n    const stuffBoostRef = useRef(null);\r\n\r\n    const boostDamageRef = useRef(null);\r\n\r\n    const extraDamageRef = useRef(null);\r\n\r\n    const additionalDamagesRef = useRef(null);\r\n\r\n    const creaturesRef = useRef(null);\r\n\r\n    const showStatRef = useRef(null);\r\n\r\n    const weaponDataRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n            const weaponFactory = new WeaponFactory(wSpec, boostDamage, extraDamage, additionalDamages, stuffBoost, playerStats);\r\n            setGraphValues(graphDamage(creatures[\"creature\" + creatureChartNumber], weaponFactory));\r\n            setResultDamage(calcDamage(weaponFactory, creatures));\r\n\r\n            wSpecRef.current = wSpec;\r\n            resultDamageRef.current = resultDamage;\r\n            playerRef.current = player;\r\n            playerStatsRef.current = playerStats;\r\n            stuffBoostRef.current = stuffBoost;\r\n            boostDamageRef.current = boostDamage;\r\n            extraDamageRef.current = extraDamage;\r\n            additionalDamagesRef.current = additionalDamages;\r\n            creaturesRef.current = creatures;\r\n            creatureNamesRef.current = buildCreatureNames(creatures);\r\n\r\n            weaponDataRef.current = {\r\n                playerRef: playerRef,\r\n                playerStatsRef: playerStatsRef,\r\n                boostDamageRef: boostDamageRef,\r\n                wSpecRef: wSpecRef,\r\n                extraDamageRef: extraDamageRef,\r\n                additionalDamagesRef: additionalDamagesRef,\r\n                stuffBoostRef: stuffBoostRef,\r\n            };\r\n\r\n            setLoadedScreen(true);\r\n\r\n    }, [boostDamage, wSpec, extraDamage, creatures, additionalDamages, stuffBoost, consumableTouched, player, playerStats]);\r\n\r\n    useEffect(() => {\r\n        const weaponFactory = new WeaponFactory(wSpec, boostDamage, extraDamage, additionalDamages, stuffBoost, playerStats);\r\n        setGraphValues(graphDamage(creatures[\"creature\" + creatureChartNumber], weaponFactory));\r\n    }, [creatureChartNumber]);\r\n\r\n    const applySnapshot = (cBoostDamage, cWSpec, cExtraDamage, cAdditionalDamages, cCreatures, cPlayer, cPlayerStats, cStuff) => {\r\n        setPlayer(cPlayer);\r\n        setPlayerStats(cPlayerStats);\r\n        setBoostDamage(cBoostDamage);\r\n        setWSpec(cWSpec);\r\n        setExtraDamage(cExtraDamage);\r\n        setAdditionalDamages(cAdditionalDamages);\r\n        const [foodPref, allStuffBoosts, consumables] = ConsumablesBuilder.buildFromList(cStuff, cPlayer);\r\n        ConsumablesBuilder.setConsumableItems(consumables, setMagazines, setBobbleHeads, setFood, setDrink, setPsycho, setSerum, setOthers);\r\n        setFoodPref(foodPref);\r\n        setStuffBoost(allStuffBoosts);\r\n        setCreatures({...cCreatures});\r\n    }\r\n\r\n    applySnapshotRef.current = applySnapshot;\r\n    showStatRef.current = showStat;\r\n\r\n    if (!loadedScreen) {\r\n        return (<LoadingLine text=\"Please Wait...\"/>);\r\n    }\r\n    const b = (\r\n        <div>\r\n            <MainCardsDisplay creatureNamesRef={creatureNamesRef} wSpecRef={wSpecRef} graphValues={graphValues} resultDamage={resultDamage} creatures={creatures} boostDamageRef={boostDamageRef} setBoostDamage={setBoostDamage} setCreatures={setCreatures} creatureChartNumber={creatureChartNumber} setCreatureChartNumber={setCreatureChartNumber} extraDamage={extraDamage} setExtraDamage={setExtraDamage}></MainCardsDisplay>\r\n            <ToastSpecs creatures={creatures} legendary={wSpec.legendary} iconName={wSpec.iconName} weaponName={wSpec.defaultName} graphValues={graphValues} resultDamage={resultDamage} showStat={showStat} setShowStat={setShowStat} creatureChartNumber={creatureChartNumber} setCreatureChartNumber={setCreatureChartNumber} extraDamage={extraDamage} setExtraDamage={setExtraDamage} boostDamageRef={boostDamageRef} setBoostDamage={setBoostDamage}></ToastSpecs>\r\n            <Tabs\r\n                id=\"tab\"\r\n                activeKey={key}\r\n                onSelect={(k) => setKey(k)}\r\n                className=\"mt-1 pb-0 mb-2 ms-1 me-1\">\r\n                <Tab eventKey=\"Main\" title={<span className=\"tab-text\">Main</span>}>\r\n                    <Accordion className=\"accordion\">\r\n                        <div className=\"ps-2 pe-2\">\r\n                            <Divider className=\"mb-3\">Settings</Divider>\r\n                        </div>\r\n                        <WeaponSpecs wSpec={wSpec} setWSpec={setWSpec} showStatRef={showStatRef} setShowStat={setShowStat} health={player.health.value}></WeaponSpecs>\r\n                        <DamageBoosts player={player} setPlayer={setPlayer} extraDamage={extraDamage} boostDamage={boostDamage} setBoostDamage={setBoostDamage} showStatRef={showStatRef} setShowStat={setShowStat}></DamageBoosts>\r\n                        <AdditionalDamage additionalDamages={additionalDamages} setAdditionalDamages={setAdditionalDamages} showStatRef={showStatRef} setShowStat={setShowStat}></AdditionalDamage>\r\n                        <ComparatorView showStatRef={showStatRef} setShowStat={setShowStat} weaponDataRef={weaponDataRef} setWSpec={setWSpec} setBoostDamage={setBoostDamage} setPlayer={setPlayer} setPlayerStats={setPlayerStats} setAdditionalDamages={setAdditionalDamages} setExtraDamage={setExtraDamage} setFoodPref={setFoodPref} setStuffBoost={setStuffBoost} setMagazines={setMagazines} setBobbleHeads={setBobbleHeads} setFood={setFood} setDrink={setDrink} setPsycho={setPsycho} setSerum={setSerum} setOthers={setOthers} />\r\n                        <div className=\"ps-2 pe-2\">\r\n                            <Divider className=\"mt-2 mb-3\">Data</Divider>\r\n                        </div>\r\n                        <CreaturesView creatureNamesRef={creatureNamesRef} creatures={creatures} setCreatures={setCreatures} resultDamage={resultDamage} extraDamage={extraDamage} setExtraDamage={setExtraDamage} boostDamageRef={boostDamageRef} setBoostDamage={setBoostDamage}></CreaturesView>\r\n                        <RaceView />\r\n                        <ConsumablesView />\r\n                        <PerkCardView />\r\n                    </Accordion>\r\n                </Tab>\r\n                <Tab eventKey=\"Templates\" title={<span className=\"tab-text\">Weapons</span>}>\r\n                    <WeaponTemplates creatureNamesRef={creatureNamesRef} setWSpec={setWSpec} setBoostDamage={setBoostDamage} setPlayer={setPlayer} setExtraDamage={setExtraDamage} setFoodPref={setFoodPref} setStuffBoost={setStuffBoost} setAdditionalDamages={setAdditionalDamages} setPlayerStats={setPlayerStats} setMagazines={setMagazines} setBobbleHeads={setBobbleHeads} setFood={setFood} setDrink={setDrink} setPsycho={setPsycho} setSerum={setSerum} setOthers={setOthers}></WeaponTemplates>\r\n                </Tab>\r\n                <Tab eventKey=\"Boosts\" title={<span className=\"tab-text\">Boosts</span>}>\r\n                    <BoostStuff foodPref={foodPref} setFoodPref={setFoodPref} magazines={magazines} setMagazines={setMagazines} bobbleHeads={bobbleHeads} setBobbleHeads={setBobbleHeads} food={food} setFood={setFood} drink={drink} setDrink={setDrink} psycho={psycho} setPsycho={setPsycho} serum={serum} setSerum={setSerum} others={others} setOthers={setOthers} player={player} setPlayer={setPlayer} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} showStat={showStat} setShowStat={setShowStat} boostDamage={boostDamage} setBoostDamage={setBoostDamage} playerStats={playerStats} setPlayerStats={setPlayerStats} setConsumableTouched={setConsumableTouched}></BoostStuff>\r\n                </Tab>\r\n                <Tab eventKey=\"Snapshots\" title={<span className=\"tab-text\">Snapshots</span>}>\r\n                     <Snapshots playerRef={playerRef} playerStatsRef={playerStatsRef} stuffBoostRef={stuffBoostRef} boostDamageRef={boostDamageRef} wSpecRef={wSpecRef} extraDamageRef={extraDamageRef} additionalDamagesRef={additionalDamagesRef} creaturesRef={creaturesRef} resultDamageRef={resultDamageRef} applySnapshotRef={applySnapshotRef}></Snapshots>\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    );\r\n    return b;\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { Slider } from 'antd';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction buildPopover(text) {\r\n    return (\r\n        <Popover className=\"popover-adjustable\">\r\n            <Popover.Header as=\"h3\"><strong>Why?</strong></Popover.Header>\r\n            <Popover.Body>\r\n                {text}\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nfunction qa(text) {\r\n    if (text === '' || text === null) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={buildPopover(text)}>\r\n            <Button variant=\"danger\">?</Button>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nfunction addIconName(name) {\r\n    switch(name) {\r\n        case \"Ballistic BDB\":\r\n            return \"💥 BDB\";\r\n        case \"Energy BDB\":\r\n            return \"⚡ BDB\";\r\n        case \"Fire BDB\":\r\n            return \"🔥 BDB\";\r\n        case \"Poison BDB\":\r\n            return \"☣️ BDB\";\r\n        case \"Cold BDB\":\r\n            return \"❄️ BDB\";\r\n        case \"Rad BDB\":\r\n            return \"☢️ BDB\";\r\n        case \"Damage To Creature\":\r\n            return \"🐵 Damage\";\r\n        case \"Sneak\":\r\n            return \"🐍 Sneak\";\r\n        case \"Crit\":\r\n            return \"☠️ Crit\";\r\n        case \"Strength\":\r\n            return \"💪 Strength\";\r\n        case \"Swift\":\r\n            return \"💨 Swift\";\r\n        case \"Health\":\r\n            return \"❤️ Health\";\r\n        default:\r\n            return name;\r\n    }\r\n}\r\n\r\nfunction ADRow({additionalDamage, updateAdditionalDamages, marks, text=''}) {\r\n    const [redraw, setRedraw] = useState(false);\r\n    const width = (text === '' || text === null) ? '8.9rem' : '7rem';\r\n    function slideChanged(e) {\r\n        setRedraw(!redraw);\r\n        additionalDamage.value = e;\r\n    }\r\n\r\n    function onAfterChange(e) {\r\n        updateAdditionalDamages();\r\n    }\r\n\r\n    function onChange(e) {\r\n        additionalDamage.is_used = e.target.checked;\r\n        updateAdditionalDamages();\r\n    }\r\n\r\n    let isUsed = false;\r\n    let disabled = false;\r\n    if (typeof additionalDamage.is_used === \"undefined\") {\r\n        isUsed = true;\r\n        disabled = true;\r\n    } else {\r\n        isUsed = additionalDamage.is_used;\r\n    }\r\n    return (\r\n        <Row>\r\n            <Card className=\"mb-2 pt-2 pb-2 ps-3 pe-3\">\r\n                <Col>\r\n                    <InputGroup className=\"mb-1\">\r\n                        <InputGroup.Text style={{ width: '2.5rem' }} >\r\n                            <UCheckbox onChange={onChange} checked={isUsed} disabled={disabled} checkBgColor={'#00b6ff'}></UCheckbox>\r\n                        </InputGroup.Text>\r\n                        <InputGroup.Text style={{ width: width }}>\r\n                            <strong>{addIconName(additionalDamage.name)}</strong>\r\n                        </InputGroup.Text>\r\n                        {qa(text)}\r\n                        <InputGroup.Text style={{width: '4.6rem'}}>\r\n                            <div className=\"badge bg-info\" style={{width: '3rem'}}>{additionalDamage.value}</div>\r\n                        </InputGroup.Text>\r\n                    </InputGroup>\r\n                    <Slider onChange={slideChanged} onAfterChange={onAfterChange} tooltip={{ open: false }} marks={marks.marks} min={marks.min} max={marks.max} step={marks.step} value={additionalDamage.value} />\r\n                </Col>\r\n            </Card>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ADRow;","import magazines from '../resources/boostStuff/magazines/magazines.json';\r\nimport bobbleHeads from '../resources/boostStuff/bobbleHeads/bobbleHeads.json';\r\nimport food from '../resources/boostStuff/food/food.json';\r\nimport drink from '../resources/boostStuff/drink/drink.json';\r\nimport psycho from '../resources/boostStuff/psycho/psycho.json';\r\nimport serum from '../resources/boostStuff/serums/serum.json';\r\nimport others from '../resources/boostStuff/others/others.json';\r\nimport { prepareItems, loadBoosts } from '../entities/EStuffBoost';\r\nimport { getMagazine, getBobbleHead, getFood, getDrink, getPsycho, getSerum, getOther } from '../helpers/BoostStuffProvider';\r\n\r\n\r\nexport default class ConsumablesBuilder {\r\n\r\n    static getImagePathById(cId) {\r\n        const type = cId.substring(cId.lastIndexOf(\"_\") + 1);\r\n        let jsonItems = null;\r\n        let getter = null;\r\n        switch(type) {\r\n            case 'magazine':\r\n                jsonItems = magazines;\r\n                getter = getMagazine;\r\n                break;\r\n            case 'bobble':\r\n                jsonItems = bobbleHeads;\r\n                getter = getBobbleHead;\r\n                break;\r\n            case 'food':\r\n                jsonItems = food;\r\n                getter = getFood;\r\n                break;\r\n            case 'drink':\r\n                jsonItems = drink;\r\n                getter = getDrink;\r\n                break;\r\n            case 'psycho':\r\n                jsonItems = psycho;\r\n                getter = getPsycho;\r\n                break;\r\n            case 'serum':\r\n                jsonItems = serum;\r\n                getter = getSerum;\r\n                break;\r\n             case 'other':\r\n                jsonItems = others\r\n                getter = getOther;\r\n                break;\r\n             default:\r\n                return \"\";\r\n        }\r\n        for (let i = 0; i < jsonItems.length; i++) {\r\n            const item = jsonItems[i];\r\n            if (item.id === cId) {\r\n                return getter(item.imName);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    static getMagazineItems(wType, wName, tags, crit, team, scoped, creatureTags, accessibleMagazines) {\r\n        const result = [];\r\n        const combination = [];\r\n\r\n        // Creatures\r\n        if (creatureTags.includes(\"mirelurk\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"attack_of_the_fishmen_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (creatureTags.includes(\"ghoul\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"curse_of_the_burned_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (creatureTags.includes(\"supermutant\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"rise_of_the_mutants_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (creatureTags.includes(\"animal\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"home_in_the_hills_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (creatureTags.includes(\"scorched\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"demon_slaves_demon_sands_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (creatureTags.includes(\"robot\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"the_future_of_hunting_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (creatureTags.includes(\"yaoguai\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"bear_proofing_your_campsite_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (creatureTags.includes(\"liberator\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"guide_to_hunting_commies_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (creatureTags.includes(\"wendigo\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"wendigo_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (creatureTags.includes(\"mothman\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"mothman_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (creatureTags.includes(\"graftonmonster\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"grafton_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (creatureTags.includes(\"snallygaster\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"snallygaster_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (creatureTags.includes(\"flatwoodsmonster\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"flatwoods_alien_magazine\", accessibleMagazines, combination);\r\n        }\r\n\r\n        if (wName === \"Alien Blaster\") {\r\n            ConsumablesBuilder.addIfAccessible(\"invasion_of_the_zetans_magazine\", accessibleMagazines, combination);\r\n        } else if (wName === \"Cryolator\") {\r\n            ConsumablesBuilder.addIfAccessible(\"when_apes_go_bananas_magazine\", accessibleMagazines, combination);\r\n        }\r\n\r\n        // TODO: Does unarmed really work here?\r\n        if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n            ConsumablesBuilder.addIfAccessible(\"blood_on_the_harp_magazine\", accessibleMagazines, combination);\r\n            if (crit) {\r\n                ConsumablesBuilder.addIfAccessible(\"corsair_queen_magazine\", accessibleMagazines, combination);\r\n            }\r\n        } else {\r\n            if (scoped) {\r\n                ConsumablesBuilder.addIfAccessible(\"the_starlet_sniper_magazine\", accessibleMagazines, combination);\r\n            } else {\r\n                ConsumablesBuilder.addIfAccessible(\"take_aim_army_style_magazine\", accessibleMagazines, combination);\r\n            }\r\n        }\r\n        if (tags.includes(\"Knives\") || wType === \"Unarmed\") {\r\n            ConsumablesBuilder.addIfAccessible(\"camouflage_special_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (team) {\r\n            ConsumablesBuilder.addIfAccessible(\"nuke_the_man_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (tags.includes(\"Plasma\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"tomorrow_technology_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (wType === \"Heavy\") {\r\n            ConsumablesBuilder.addIfAccessible(\"giant_super_weapons_magazine\", accessibleMagazines, combination);\r\n        }\r\n        if (crit) {\r\n            if (tags.includes(\"Laser\")) {\r\n                ConsumablesBuilder.addIfAccessible(\"acceptable_overkill_magazine\", accessibleMagazines, combination);\r\n            }\r\n            if (tags.includes(\"Ballistic\") && wType !== \"Heavy\" && wType !== \"Bow\") {\r\n                ConsumablesBuilder.addIfAccessible(\"little_guns_for_little_ladies_magazine\", accessibleMagazines, combination);\r\n            }\r\n            if (tags.includes(\"Plasma\")) {\r\n                ConsumablesBuilder.addIfAccessible(\"plasma_the_weapon_of_tomorrow_magazine\", accessibleMagazines, combination);\r\n            }\r\n            if (tags.includes(\"Energy\")) {\r\n                ConsumablesBuilder.addIfAccessible(\"us_army_goes_to_space_magazine\", accessibleMagazines, combination);\r\n            }\r\n            if (wType === \"Heavy\") {\r\n                ConsumablesBuilder.addIfAccessible(\"future_of_warfare_magazine\", accessibleMagazines, combination);\r\n            }\r\n            ConsumablesBuilder.addIfAccessible(\"rockobot_takes_the_nation_by_storm_magazine\", accessibleMagazines, combination);\r\n        }\r\n        result.push(combination);\r\n        return result;\r\n    }\r\n\r\n    static getOtherItems(hasPhysicalDamage) {\r\n        const result = [];\r\n        const combination = [];\r\n        if (hasPhysicalDamage) {\r\n            combination.push(\"syringer_other\");\r\n        }\r\n        if (combination.length > 0) {\r\n            result.push(combination);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getBobbleHeadItems(wType, tags, accessibleBobbleHeads) {\r\n        const result = [];\r\n        const combination = [];\r\n        if (wType === \"Heavy\") {\r\n            ConsumablesBuilder.addIfAccessible(\"big_guns_bobble\", accessibleBobbleHeads, combination);\r\n        } else if (wType === \"Unarmed\") {\r\n            ConsumablesBuilder.addIfAccessible(\"unarmed_bobble\", accessibleBobbleHeads, combination);\r\n            ConsumablesBuilder.addIfAccessible(\"strength_bobble\", accessibleBobbleHeads, combination);\r\n        } else if (wType === \"Melee\") { // Does Unarmed work here?\r\n            ConsumablesBuilder.addIfAccessible(\"melee_bobble\", accessibleBobbleHeads, combination);\r\n            ConsumablesBuilder.addIfAccessible(\"strength_bobble\", accessibleBobbleHeads, combination);\r\n        }\r\n        if (tags.includes(\"Energy\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"energy_bobble\", accessibleBobbleHeads, combination);\r\n        }\r\n        if (tags.includes(\"Explosive\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"explosive_bobble\", accessibleBobbleHeads, combination);\r\n        }\r\n        if (tags.includes(\"FusionCore\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"repair_bobble\", accessibleBobbleHeads, combination);\r\n        }\r\n        if (tags.includes(\"Ballistic\") && wType !== \"Heavy\" && wType !== \"Bow\") {\r\n            ConsumablesBuilder.addIfAccessible(\"small_guns_bobble\", accessibleBobbleHeads, combination);\r\n        }\r\n        if (combination.length > 0) {\r\n            result.push(combination);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getDrinkItems(wType, tags, crit, creatureTags, accessibleDrink) {\r\n        const result = [];\r\n        const combination = [];\r\n        if (creatureTags.includes(\"animal\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"hoppy_hunter_ipa_drink\", accessibleDrink, combination);\r\n        }\r\n        if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n            ConsumablesBuilder.addIfAccessible(\"whiskey_drink\", accessibleDrink, combination);\r\n            if (wType === \"Melee\") {\r\n                ConsumablesBuilder.addIfAccessible(\"gulpershine_vintage_drink\", accessibleDrink, combination);\r\n            } else {\r\n                ConsumablesBuilder.addIfAccessible(\"sugar_free_nukashine_drink\", accessibleDrink, combination);\r\n            }\r\n        }\r\n        if (crit) {\r\n            ConsumablesBuilder.addIfAccessible(\"sweetmutfruit_drink\", accessibleDrink, combination);\r\n        }\r\n        if (tags.includes(\"Ballistic\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"ballistic_bock_drink\", accessibleDrink, combination);\r\n        }\r\n        if (tags.includes(\"Energy\")) {\r\n            ConsumablesBuilder.addIfAccessible(\"high_voltage_hefe_drink\", accessibleDrink, combination);\r\n        }\r\n        if (combination.length > 0) {\r\n            result.push(combination);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getFoodItems(wType, crit, accessibleFood) {\r\n        const result = [];\r\n        const combination = [];\r\n        ConsumablesBuilder.addIfAccessible(\"spiked_venison_tato_stew_food\", accessibleFood, combination);\r\n        if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n            ConsumablesBuilder.addIfAccessible(\"tasty_mutant_hound_stew_food\", accessibleFood, combination);\r\n            ConsumablesBuilder.addIfAccessible(\"deathclaw_wellington_food\", accessibleFood, combination);\r\n        } else if (crit) {\r\n            ConsumablesBuilder.addIfAccessible(\"blight_soup_food\", accessibleFood, combination);\r\n        }\r\n        if (combination.length > 0) {\r\n            result.push(combination);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getSerumItems(wType, crit, lowHP, team, food, accessibleSerums) {\r\n        const result = [];\r\n        const combination1 = [];\r\n        const combination2 = [];\r\n        result.push(combination1);\r\n        ConsumablesBuilder.getSerumItemsBase(wType, false, lowHP, team, combination1, accessibleSerums);\r\n        if ((wType === \"Melee\" || wType === \"Unarmed\") && food) {\r\n            result.push(combination2);\r\n            ConsumablesBuilder.getSerumItemsBase(wType, false, lowHP, team, combination2, accessibleSerums);\r\n            ConsumablesBuilder.getSerumItemsAdditional(true, combination1, accessibleSerums);\r\n            ConsumablesBuilder.getSerumItemsAdditional(false, combination2, accessibleSerums);\r\n        }\r\n        if (crit && food) {\r\n            const combination3 = [];\r\n            const combination4 = [];\r\n            const combination5 = [];\r\n            result.push(combination3);\r\n            ConsumablesBuilder.getSerumItemsBase(wType, true, lowHP, team, combination3, accessibleSerums);\r\n            ConsumablesBuilder.getSerumItemsAdditional(false, combination3, accessibleSerums);\r\n            if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n                result.push(combination4);\r\n                ConsumablesBuilder.getSerumItemsBase(wType, true, lowHP, team, combination4, accessibleSerums);\r\n                ConsumablesBuilder.getSerumItemsAdditional(true, combination4, accessibleSerums);\r\n\r\n                // no eagle\r\n                result.push(combination5);\r\n                ConsumablesBuilder.getSerumItemsBase(wType, true, lowHP, team, combination5, accessibleSerums, true);\r\n                ConsumablesBuilder.getSerumItemsAdditional(true, combination5, accessibleSerums);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getSerumItemsBase(wType, crit, lowHP, team, combination, accessibleSerums, noEagle=false) {\r\n        if (lowHP) {\r\n            ConsumablesBuilder.addIfAccessible(\"adrenal_reaction_serum\", accessibleSerums, combination);\r\n        }\r\n        if (wType === \"Melee\") {\r\n            ConsumablesBuilder.addIfAccessible(\"twisted_muscles_serum\", accessibleSerums, combination);\r\n            ConsumablesBuilder.addIfAccessible(\"empath_serum\", accessibleSerums, combination);\r\n        }\r\n        if (wType === \"Unarmed\") {\r\n            ConsumablesBuilder.addIfAccessible(\"twisted_muscles_serum\", accessibleSerums, combination);\r\n            ConsumablesBuilder.addIfAccessible(\"talons_serum\", accessibleSerums, combination);\r\n            ConsumablesBuilder.addIfAccessible(\"empath_serum\", accessibleSerums, combination);\r\n        }\r\n        if (wType !== \"Melee\" && wType !== \"Unarmed\") {\r\n            ConsumablesBuilder.addIfAccessible(\"speed_demon_serum\", accessibleSerums, combination);\r\n        }\r\n\r\n        // For the calculator it does not matter to have this mutation for crit, but technically it's important for (Luck)\r\n        if (team && (wType === \"Melee\" || wType === \"Unarmed\" || crit)) {\r\n            ConsumablesBuilder.addIfAccessible(\"herd_mentality_serum\", accessibleSerums, combination);\r\n        }\r\n        if (crit && !noEagle) {\r\n            ConsumablesBuilder.addIfAccessible(\"eagle_eyes_serum\", accessibleSerums, combination);\r\n        }\r\n    }\r\n\r\n    static getSerumItemsAdditional(isCarnivore, combination, accessibleSerums) {\r\n        if (isCarnivore) {\r\n            ConsumablesBuilder.addIfAccessible(\"carnivore_serum\", accessibleSerums, combination);\r\n        } else {\r\n            ConsumablesBuilder.addIfAccessible(\"herbivore_serum\", accessibleSerums, combination);\r\n        }\r\n    }\r\n\r\n    static addIfAccessible(itemName, accessibleItems, collection) {\r\n        const array = accessibleItems[itemName];\r\n        if (array && array[0]) {\r\n            collection.push(itemName);\r\n        }\r\n    }\r\n\r\n    static isAccessible(itemName, accessibleItems) {\r\n        const array = accessibleItems[itemName];\r\n        return (array && array[0]);\r\n    }\r\n\r\n    // Nuclear Don's blend is not included (As it is very rare and surpasses any others anyway).\r\n    // Super Chem MK1 in not included (Fury is used instead as it gives the same effect with Psychobuff)\r\n    static getChemicalItems(wType, crit, sneak, accessibleChemo) {\r\n        const result = [];\r\n        const combination = [];\r\n        result.push(combination);\r\n        if (ConsumablesBuilder.isAccessible(\"nuclear_don_blend_psycho\", accessibleChemo)) {\r\n            ConsumablesBuilder.addIfAccessible(\"nuclear_don_blend_psycho\", accessibleChemo, combination);\r\n        } else {\r\n            ConsumablesBuilder.addIfAccessible(\"psychobuff_psycho\", accessibleChemo, combination);\r\n        }\r\n        if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n            ConsumablesBuilder.addIfAccessible(\"fury_psycho\", accessibleChemo, combination);\r\n        }\r\n        if (crit || !ConsumablesBuilder.isAccessible(\"psychobuff_psycho\", accessibleChemo)) {\r\n            ConsumablesBuilder.addIfAccessible(\"overdrive_psycho\", accessibleChemo, combination);\r\n        }\r\n        if (sneak) {\r\n            ConsumablesBuilder.addIfAccessible(\"calmex_psycho\", accessibleChemo, combination);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static prepare(consumableObjs, consumableNames=null) {\r\n        prepareItems(consumableObjs[\"Magazines\"], consumableNames);\r\n        prepareItems(consumableObjs[\"BobbleHeads\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Food\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Drink\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Psycho\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Serum\"], consumableNames);\r\n        prepareItems(consumableObjs[\"Others\"], consumableNames);\r\n    }\r\n\r\n    static getEmptyConsumableBoosts() {\r\n        return {\r\n            creature: new Map(),\r\n            weapon: new Map(),\r\n        };\r\n    }\r\n\r\n    static getFood() {\r\n        return JSON.parse(JSON.stringify(food));\r\n    }\r\n\r\n    static getDrink() {\r\n        return JSON.parse(JSON.stringify(drink));\r\n    }\r\n\r\n    static getPsycho() {\r\n        return JSON.parse(JSON.stringify(psycho));\r\n    }\r\n\r\n    static getSerum() {\r\n        return JSON.parse(JSON.stringify(serum));\r\n    }\r\n\r\n    static getOthers() {\r\n        return JSON.parse(JSON.stringify(others));\r\n    }\r\n\r\n    static getMagazines() {\r\n        return JSON.parse(JSON.stringify(magazines));\r\n    }\r\n\r\n    static getBobbleHeads() {\r\n        return JSON.parse(JSON.stringify(bobbleHeads));\r\n    }\r\n\r\n    static buildFromList(consumablesList, player) {\r\n        const consumablesSet = new Set(consumablesList);\r\n        const foodPref = {carnivore: consumablesSet.has(\"carnivore_serum\"), herbivore: consumablesSet.has(\"herbivore_serum\")};\r\n        const consumables = {};\r\n        consumables[\"Magazines\"] = ConsumablesBuilder.getMagazines();\r\n        consumables[\"BobbleHeads\"] = ConsumablesBuilder.getBobbleHeads();\r\n        consumables[\"Food\"] = ConsumablesBuilder.getFood();\r\n        consumables[\"Drink\"] = ConsumablesBuilder.getDrink();\r\n        consumables[\"Psycho\"] = ConsumablesBuilder.getPsycho();\r\n        consumables[\"Serum\"] = ConsumablesBuilder.getSerum();\r\n        consumables[\"Others\"] = ConsumablesBuilder.getOthers();\r\n        ConsumablesBuilder.prepare(consumables, consumablesSet);\r\n        const consumableBoosts = loadBoosts(consumables[\"Magazines\"], consumables[\"BobbleHeads\"],consumables[\"Food\"],\r\n        consumables[\"Drink\"], consumables[\"Psycho\"], consumables[\"Serum\"], consumables[\"Others\"], foodPref, player);\r\n        return [foodPref, consumableBoosts, consumables];\r\n    }\r\n\r\n    static setConsumableItems(consumables, setMagazines, setBobbleHeads, setFood, setDrink, setPsycho, setSerum, setOthers) {\r\n        setMagazines(consumables[\"Magazines\"]);\r\n        setBobbleHeads(consumables[\"BobbleHeads\"]);\r\n        setFood(consumables[\"Food\"]);\r\n        setDrink(consumables[\"Drink\"]);\r\n        setPsycho(consumables[\"Psycho\"]);\r\n        setSerum(consumables[\"Serum\"]);\r\n        setOthers(consumables[\"Others\"]);\r\n    }\r\n}","import { useEffect } from 'react';\r\nconst { Chart } = await import('chart.js/auto');\r\n\r\n\r\nfunction getData(values, label, color) {\r\n    return {\r\n        labels: values.xValues,\r\n        datasets: [\r\n            {\r\n                type: 'line',\r\n                label: label,\r\n                data: values.yValuesRed,\r\n                borderColor: \"#db0076\",\r\n                pointRadius: 1,\r\n                borderWidth: 1,\r\n                fill: false,\r\n            },\r\n            {\r\n                type: 'line',\r\n                label: label,\r\n                data: values.yValuesBlue,\r\n                borderColor: \"#0072db\",\r\n                pointRadius: 1,\r\n                borderWidth: 1,\r\n                fill: false,\r\n            },\r\n            {\r\n                type: 'scatter',\r\n                label: values.resPoints.b.label,\r\n                data: values.resPoints.b.values,\r\n                borderColor: values.resPoints.b.color,\r\n                pointRadius: 2,\r\n                borderWidth: 3,\r\n                fill: true,\r\n            },\r\n            {\r\n                type: 'scatter',\r\n                label: values.resPoints.e.label,\r\n                data: values.resPoints.e.values,\r\n                borderColor: values.resPoints.e.color,\r\n                pointRadius: 2,\r\n                borderWidth: 3,\r\n                fill: true,\r\n            },\r\n            {\r\n                type: 'scatter',\r\n                label: values.resPoints.f.label,\r\n                data: values.resPoints.f.values,\r\n                borderColor: values.resPoints.f.color,\r\n                pointRadius: 2,\r\n                borderWidth: 3,\r\n                fill: true,\r\n            },\r\n            {\r\n                type: 'scatter',\r\n                label: values.resPoints.c.label,\r\n                data: values.resPoints.c.values,\r\n                borderColor: values.resPoints.c.color,\r\n                pointRadius: 2,\r\n                borderWidth: 3,\r\n                fill: true,\r\n            },\r\n            {\r\n                type: 'scatter',\r\n                label: values.resPoints.p.label,\r\n                data: values.resPoints.p.values,\r\n                borderColor: values.resPoints.p.color,\r\n                pointRadius: 2,\r\n                borderWidth: 3,\r\n                fill: true,\r\n            },\r\n            {\r\n                type: 'scatter',\r\n                label: values.resPoints.r.label,\r\n                data: values.resPoints.r.values,\r\n                borderColor: values.resPoints.r.color,\r\n                pointRadius: 2,\r\n                borderWidth: 3,\r\n                fill: true,\r\n            },\r\n        ],\r\n    };\r\n}\r\n\r\nfunction getConfig(data) {\r\n    return {\r\n        data: data,\r\n        options: {\r\n            plugins: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n            },\r\n            elements: {\r\n                line: {\r\n                    tension: 0,\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    position: 'bottom',\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Resistance',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                },\r\n                y: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'DPS',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                }\r\n            },\r\n            animation: false,\r\n        },\r\n    };\r\n}\r\n\r\nfunction drawChart(config, chartId) {\r\n    const curChart = Chart.getChart(chartId);\r\n    if (curChart) {\r\n        curChart.destroy();\r\n    }\r\n    new Chart(document.getElementById(chartId), config);\r\n}\r\n\r\nfunction getCanvas(id) {\r\n    if (!id) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <canvas className=\"p-0 pe-2\" style={{maxWidth: '60rem', maxHeight: '30rem'}} id={id}></canvas>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function ComparatorChartView(props) {\r\n    let values = props.values;\r\n    if (!values) {\r\n        values = {xValues: [], yValuesRed: [], yValuesBlue: [], resPoints: []};\r\n    }\r\n    const config = getConfig(getData(values, \"\", props.color));\r\n    useEffect(() => {\r\n        drawChart(config, props.chartId);\r\n    });\r\n    return getCanvas(props.chartId);\r\n}","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { memo } from 'react';\r\nimport ComparatorChartView from './ComparatorChartView';\r\nimport CreatureDataProvider from '../../creature/CreatureDataProvider';\r\nimport { CreatureShortInfoButton } from '../../creature/CreatureInfoButton';\r\nimport { CreatureDropdownButton } from '../../creature/CreatureDropdown';\r\nimport { useState } from 'react';\r\nimport ComparatorWeaponDataView from './ComparatorWeaponDataView';\r\nimport { graphDamage } from '../../helpers/Calc';\r\nimport { buildCreature } from '../../entities/ECreatures';\r\nimport WeaponFactory from '../../damage/weapon/WeaponFactory';\r\nimport ConsumablesBuilder from '../../boostStuff/ConsumablesBuilder';\r\nimport { Slider } from 'antd';\r\nimport LoadingModal from '../../helpers/views/LoadingModal';\r\nimport { WarningPopoverBadge } from '../../helpers/WarningPopover';\r\n\r\n\r\nconst explanation = (\r\n    <>\r\n        <p>‣ Adjust parameters for a weapon in <i><b>Weapon Specs</b></i> or choose a weapon under <i><b>Weapons</b></i> tab and click <i><b>Set</b></i> button under <i><b style={{color: 'red'}}>Red</b></i> section.</p>\r\n        <p>‣ Choose another weapon or adjust previously chosen and click <i><b>Set</b></i> button under <i><b style={{color: 'blue'}}>Blue</b></i> section.</p>\r\n        <p>‣ See in which case one better than other in <i>damage per second</i> term. (For example: Anti-Armor vs. Bloodied).</p>\r\n        <p>‣ Choose weapon's accuracy from subjective feeling / experience. Accuracy and chance of every particular damage item are also counting.</p>\r\n        <p>‣ Time damage is counting without stacking.</p>\r\n        <p>‣ Creature is used to apply appropriate bonuses, default reduction and resistance.</p>\r\n        <p>‣ <i>First Blood</i>, <i>Last Shot</i>, <i>Executioner</i> are not counting, to see these effects in action, adjust BDB and TDB bonuses under <i>Additional Damage</i> section.</p>\r\n    </>\r\n);\r\nconst creatureNames = CreatureDataProvider.getCreatureNames();\r\n\r\nconst marks90 = {\r\n    0: <small>0%</small>,\r\n    10: <small>10%</small>,\r\n    20: <small>20%</small>,\r\n    30: <small>30%</small>,\r\n    40: <small>40%</small>,\r\n    50: <small>50%</small>,\r\n    60: <small>60%</small>,\r\n    70: <small>70%</small>,\r\n    80: <small>80%</small>,\r\n    90: <small>90%</small>,\r\n};\r\n\r\nfunction buildDamages(creature, data) {\r\n    if (!data) {\r\n        return {xValues: [], yValues: []};\r\n    }\r\n    const [, consumables,] = ConsumablesBuilder.buildFromList(data.consumableList, data.player);\r\n    const weaponFactory = new WeaponFactory(data.wSpec, data.boostDamage, data.extraDamage, data.additionalDamages, consumables, data.playerStats);\r\n    return graphDamage(creature, weaponFactory, false, true, data.accuracy, 100);\r\n}\r\n\r\nfunction getYPoint(xValue, xValues, yValues) {\r\n    let point = null;\r\n    for (let i = 0; i < xValues.length; i++) {\r\n        const x = xValues[i];\r\n        if (x === xValue) {\r\n            point = yValues[i];\r\n            break;\r\n        }\r\n    }\r\n    return point;\r\n}\r\n\r\nfunction buildYPoints(xValue, xValues, yValues1, yValues2) {\r\n    const result = [];\r\n    const point1 = getYPoint(xValue, xValues, yValues1);\r\n    const point2 = getYPoint(xValue, xValues, yValues2);\r\n    if (point1) {\r\n        result.push({x: xValue, y: point1});\r\n    }\r\n    if (point2) {\r\n        result.push({x: xValue, y: point2});\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getResData(creature=null, xValues, redY, blueY) {\r\n    let b = 0;\r\n    let e = 0;\r\n    let f = 0;\r\n    let c = 0;\r\n    let p = 0;\r\n    let r = 0;\r\n    if (creature) {\r\n        b = creature.b;\r\n        e = creature.e;\r\n        f = creature.f;\r\n        c = creature.c;\r\n        p = creature.p;\r\n        r = creature.r;\r\n    }\r\n    return {\r\n        b: {\r\n            values: buildYPoints(b, xValues, redY, blueY),\r\n            label: 'Physical',\r\n            color: 'grey',\r\n        },\r\n        e: {\r\n            values: buildYPoints(e, xValues, redY, blueY),\r\n            label: 'Energy',\r\n            color: 'purple',\r\n        },\r\n        f: {\r\n            values: buildYPoints(f, xValues, redY, blueY),\r\n            label: 'Fire',\r\n            color: 'red',\r\n        },\r\n        c: {\r\n            values: buildYPoints(c, xValues, redY, blueY),\r\n            label: 'Cold',\r\n            color: 'blue',\r\n        },\r\n        p: {\r\n            values: buildYPoints(p, xValues, redY, blueY),\r\n            label: 'Poison',\r\n            color: 'green',\r\n        },\r\n        r: {\r\n            values: buildYPoints(r, xValues, redY, blueY),\r\n            label: 'Radiation',\r\n            color: 'orange',\r\n        },\r\n    }\r\n}\r\n\r\nconst ComparatorView = memo(function ComparatorView(props) {\r\n    console.log(\"ComparatorView\");\r\n    const [creature, setCreature] = useState(buildCreature(creatureNames[0], \"Max\", \"\"));\r\n    const [reduction, setReduction] = useState(0);\r\n    const [blueData, setBlueData] = useState(null);\r\n    const [redData, setRedData] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    let title = creature.capName;\r\n    const openStat = (e) => {\r\n        props.setShowStat(!props.showStatRef.current);\r\n        e.stopPropagation();\r\n    }\r\n    const values = {\r\n        xValues: [],\r\n        yValuesRed: [],\r\n        yValuesBlue: [],\r\n        resPoints: null,\r\n    }\r\n    const blueValues = buildDamages(creature, blueData);\r\n    const redValues = buildDamages(creature, redData);\r\n    values.xValues = (blueValues.xValues > redValues.xValues) ? blueValues.xValues : redValues.xValues;\r\n    values.yValuesBlue = blueValues.yValues;\r\n    values.yValuesRed = redValues.yValues;\r\n    values.resPoints = getResData(creature, values.xValues, redValues.yValues, blueValues.yValues);\r\n    function onCreatureNameSelect(e) {\r\n        const creature = buildCreature(e, \"Max\", \"\");\r\n        setReduction(creature.damageReduction * 100.0);\r\n        setCreature(creature);\r\n    }\r\n    function reductionChanged(e) {\r\n        creature.damageReduction = (e / 100);\r\n        setReduction(e);\r\n    }\r\n\r\n    function reductionChangeFinished(e) {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <LoadingModal show={loading} />\r\n            <Accordion.Item eventKey=\"4\">\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">DPS Comparator</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"mt-1 p-2\">\r\n                    <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                        <div style={{width: '100%'}}>\r\n                            <WarningPopoverBadge sign=\"!\" message={explanation} header={\"Explanation\"} placement={'right'} />\r\n                        </div>\r\n                        <div style={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                            <CreatureDropdownButton title={title} names={creatureNames} onSelect={onCreatureNameSelect} />\r\n                        </div>\r\n                        <div style={{width: '100%', display: 'flex', justifyContent: 'end'}}>\r\n                            <CreatureShortInfoButton creature={creature} />\r\n                        </div>\r\n                    </div>\r\n                    <ComparatorChartView chartId=\"ComparatorChart\" values={values} />\r\n                    <div className=\"p-2 pt-1 ps-3 pe-3\">\r\n                        <b style={{fontSize: '0.65rem'}}>Damage Reduction</b>\r\n                        <Slider open={true} onChangeComplete={reductionChangeFinished} onChange={reductionChanged} marks={marks90} min={0} max={90} step={1} value={reduction} />\r\n                    </div>\r\n                    <ComparatorWeaponDataView defTitle=\"Red\" itemId=\"red\" color=\"#db0076\" weaponDataRef={props.weaponDataRef} setLoading={setLoading} data={redData} setData={setRedData} setWSpec={props.setWSpec} setBoostDamage={props.setBoostDamage} setPlayer={props.setPlayer} setPlayerStats={props.setPlayerStats} setAdditionalDamages={props.setAdditionalDamages} setExtraDamage={props.setExtraDamage} setFoodPref={props.setFoodPref} setStuffBoost={props.setStuffBoost} setMagazines={props.setMagazines} setBobbleHeads={props.setBobbleHeads} setFood={props.setFood} setDrink={props.setDrink} setPsycho={props.setPsycho} setSerum={props.setSerum} setOthers={props.setOthers} />\r\n                    <ComparatorWeaponDataView defTitle=\"Blue\" itemId=\"blue\" color=\"#0072db\" weaponDataRef={props.weaponDataRef} setLoading={setLoading} data={blueData} setData={setBlueData} setWSpec={props.setWSpec} setBoostDamage={props.setBoostDamage} setPlayer={props.setPlayer} setPlayerStats={props.setPlayerStats} setAdditionalDamages={props.setAdditionalDamages} setExtraDamage={props.setExtraDamage} setFoodPref={props.setFoodPref} setStuffBoost={props.setStuffBoost} setMagazines={props.setMagazines} setBobbleHeads={props.setBobbleHeads} setFood={props.setFood} setDrink={props.setDrink} setPsycho={props.setPsycho} setSerum={props.setSerum} setOthers={props.setOthers} />\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ComparatorView;","import { bullet, ammo, fireRate } from '../Emoji';\r\nimport { getSymbolStyle } from '../../damage/DamageItem';\r\nimport { Divider } from 'antd';\r\nimport Stack from 'react-bootstrap/Stack';\r\n\r\n\r\nfunction getColTag(key, value, keyId, minWidth) {\r\n    if (!minWidth) {\r\n        minWidth = '1rem';\r\n    }\r\n    return (\r\n        <div key={keyId} className=\"ps-1 pe-1 m-1 shadow-outline5\" style={{width: 'fit-content', borderStyle: 'solid', backgroundColor: '#f5f5f1', borderColor: '#87836c', borderRadius: '5px', borderWidth: '1px'}}>\r\n            <Stack direction=\"horizontal\" gap={0}>\r\n                <div>{key}</div><div style={{minWidth: minWidth}}></div><b style={{fontSize: '0.7rem'}}>{value}</b>\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getAmmoCapacity(weapon) {\r\n    if (weapon.getAmmoCapacity() === 0) {\r\n        return (<></>);\r\n    }\r\n    return getColTag(ammo(\"0.7rem\", \"m-1\"), weapon.getAmmoCapacity());\r\n}\r\n\r\nfunction getBulletSize(weapon) {\r\n    if (!weapon.isRanged()) {\r\n        return (<></>);\r\n    }\r\n    return getColTag(bullet(\"0.7rem\", \"m-1\"), weapon.getShotSize());\r\n}\r\n\r\nfunction getFireRate(weapon) {\r\n    const range = weapon.isRanged();\r\n    const key = (range) ? fireRate(\"0.7rem\", \"m-1\") : <span style={{fontSize: '0.7rem'}}>👊🏼</span>;\r\n    return getColTag(key, weapon.getFireRate().toFixed(0));\r\n}\r\n\r\nfunction getReload(weapon) {\r\n    if (weapon.getReloadTime() === 0) {\r\n        return (<></>);\r\n    }\r\n    return getColTag(<span style={{fontSize: '0.7rem'}}>⌛</span>, weapon.getReloadTime().toFixed(1));\r\n}\r\n\r\nfunction getCrit(weapon) {\r\n    return getColTag(<span style={{fontSize: '0.7rem'}}>☠️</span>, weapon.getCritBonus().toFixed(0));\r\n}\r\n\r\nfunction getSneak(weapon) {\r\n    return getColTag(<span style={{fontSize: '0.7rem'}}>🐍</span>, weapon.getSneakBonus().toFixed(0));\r\n}\r\n\r\nfunction getHealth(player) {\r\n    return getColTag(<span style={{fontSize: '0.7rem'}}>❤️</span>, player.health.value.toFixed(0));\r\n}\r\n\r\nfunction getTeam(player) {\r\n    if (!player.team) {\r\n        return (<></>);\r\n    }\r\n    return getColTag(<span style={{fontSize: '0.7rem'}}>👨‍👩‍👧‍👦</span>, \"\", null, \"0rem\");\r\n}\r\n\r\nfunction getStrength(playerStats, weapon) {\r\n    if (weapon.isRanged()) {\r\n        return (<></>);\r\n    }\r\n    return getColTag(<span style={{fontSize: '0.7rem'}}>💪</span>, playerStats.strength.value);\r\n}\r\n\r\nfunction buildChanceAccuracyString(damage) {\r\n    const chance = damage.chance;\r\n    const accuracy = damage.finalAccuracy;\r\n    if (chance === 100 && accuracy === 100) {\r\n        return \"\";\r\n    } else if (accuracy === 100 && chance < 100) {\r\n        return \" (🎲\" + chance + \"%)\";\r\n    } else if (accuracy < 100 && chance === 100) {\r\n        return \" (🎯\" + accuracy + \"%)\";\r\n    } else {\r\n        return \" (🎲\" + chance + \"% | 🎯\" + accuracy + \"%)\";\r\n    }\r\n}\r\n\r\nfunction getDamages(weapon) {\r\n    const result = [];\r\n    for (let i = 0; i < weapon.damages.length; i++) {\r\n        const damage = weapon.damages[i];\r\n        if (!damage.isUsed) {\r\n            continue;\r\n        }\r\n        const accuracyString = buildChanceAccuracyString(damage);\r\n        let value = (damage.time === 0) ? damage.damage + accuracyString : damage.damage + \" - \" + damage.time + \"s\" + accuracyString;\r\n\r\n        const icon = getSymbolStyle(damage.kind)[0];\r\n        result.push(getColTag(<span style={{fontSize: '0.7rem'}}>{icon}</span>, value, i));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function WeaponBadgeView(props) {\r\n    return (\r\n        <>\r\n            <Divider className=\"p-0 mt-3 mb-0\">Specs</Divider>\r\n            <div className=\"m-0\" />\r\n            <div className=\"row p-1 justify-content-center mb-2\">\r\n                {getDamages(props.weapon)}\r\n                {getAmmoCapacity(props.weapon)}\r\n                {getBulletSize(props.weapon)}\r\n                {getFireRate(props.weapon)}\r\n                {getReload(props.weapon)}\r\n                {getCrit(props.weapon)}\r\n                {getSneak(props.weapon)}\r\n                {getHealth(props.player)}\r\n                {getTeam(props.player)}\r\n                {getStrength(props.playerStats, props.weapon)}\r\n            </div>\r\n        </>\r\n    );\r\n}","import { Collapse, Divider, ConfigProvider } from 'antd';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { getImageElement } from '../../helpers/WeaponImages';\r\nimport BoostRowView from '../../snapshot/BoostRowView';\r\nimport { getUsedPerks } from '../../snapshot/BoostRowView';\r\nimport ModView from '../../snapshot/ModView';\r\nimport { getLegendaryBoxView } from '../../helpers/LegendaryView';\r\nimport { getLegendaryNameFromSpec } from '../../helpers/LegendaryProvider';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Arrow } from '../../icons/Icons';\r\nimport { convertStuffBoost } from \"../../entities/EStuffBoost\";\r\nimport { leftRight2 } from \"../../helpers/RowBuilder\";\r\nimport ParametersApplier from '../../templates/calc/ParametersApplier';\r\nimport WeaponBadgeView from '../../helpers/views/WeaponBadgeView';\r\nimport WeaponFactory from '../../damage/weapon/WeaponFactory';\r\nimport ConsumablesBuilder from '../../boostStuff/ConsumablesBuilder';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport { UCheckbox } from '../../viewComponents/checkbox/UCheckbox';\r\nimport { Slider } from 'antd';\r\n\r\n\r\nconst marks100 = {\r\n    5: <small>5%</small>,\r\n    20: <small>20%</small>,\r\n    40: <small>40%</small>,\r\n    60: <small>60%</small>,\r\n    80: <small>80%</small>,\r\n    100: <small>100%</small>,\r\n};\r\n\r\nfunction getLabel(defTitle, color, weaponData) {\r\n    const left = (weaponData) ? weaponData.wSpec.defaultName : defTitle;\r\n    const right = (weaponData && weaponData.wSpec.iconName !== \"\") ? getImageElement(weaponData.wSpec.iconName, '2rem') : (<div style={{height: '2rem'}} />);\r\n    return (\r\n        <div style={{display: 'flex', 'flexDirection': 'row'}}>\r\n            <div className=\"comparator-title\">\r\n                <b style={{color: color}}>{left}</b>\r\n            </div>\r\n            <div className=\"w-100 d-flex justify-content-end\">\r\n                {right}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getApplyButton(props, data) {\r\n    function onClick(e) {\r\n        props.setLoading(true);\r\n        setTimeout(() => {\r\n            ParametersApplier.applyCalculatedParameters(data, props);\r\n            props.setLoading(false);\r\n        }, 100);\r\n    }\r\n    if (!data) {\r\n        return (<></>);\r\n    }\r\n    return (<Button size=\"sm\" variant=\"warning\" onClick={onClick}><b><small>Apply</small></b></Button>);\r\n}\r\n\r\nfunction getContent(props) {\r\n    const data = props.data;\r\n    function onClick(e) {\r\n        const dataRef = props.weaponDataRef.current;\r\n        const setData = props.setData;\r\n        const newData = {\r\n            player: dataRef.playerRef.current,\r\n            playerStats: dataRef.playerStatsRef.current,\r\n            boostDamage: dataRef.boostDamageRef.current,\r\n            wSpec: dataRef.wSpecRef.current,\r\n            extraDamage: dataRef.extraDamageRef.current,\r\n            additionalDamages: dataRef.additionalDamagesRef.current,\r\n            consumableList: convertStuffBoost(dataRef.stuffBoostRef.current),\r\n            accuracy: 100,\r\n        }\r\n        const copyData = JSON.parse(JSON.stringify(newData));\r\n        setData(copyData);\r\n    }\r\n    return (\r\n        <>\r\n            {weaponItemView(data, props.setData)}\r\n            <div className=\"m-3\" />\r\n            {leftRight2(getApplyButton(props, data), <Button size=\"sm\" variant=\"warning\" onClick={onClick}><b><small>Set</small></b></Button>)}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction weaponView(weapon, player, playerStats) {\r\n    return (\r\n        <>\r\n            <WeaponBadgeView weapon={weapon} player={player} playerStats={playerStats} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction weaponItemView(data, setData) {\r\n    if (!data) {\r\n        return (<></>);\r\n    }\r\n    const [, allStuffBoosts,] = ConsumablesBuilder.buildFromList(data.consumableList, data.player);\r\n    const weapon = new WeaponFactory(data.wSpec, data.boostDamage, data.extraDamage, data.additionalDamages, allStuffBoosts, data.playerStats).build();\r\n    const wSpec = data.wSpec;\r\n    const boostDamage = data.boostDamage;\r\n    const stuff = data.consumableList;\r\n    const modTitle = (!wSpec.mods || wSpec.mods.length === 0) ? null : (<Divider className=\"p-0 mt-3 mb-1\">Mods</Divider>);\r\n    const usedPerks = getUsedPerks(boostDamage);\r\n    const boostTitle = (stuff.length === 0 && usedPerks.length === 0) ? null : (<Divider className=\"p-0 mt-3 mb-1\">Boosts</Divider>);\r\n    return (\r\n        <>\r\n            <div className=\"pb-2\" style={{backgroundColor: '#fafafa', borderRadius: '5px', borderWidth: '1px', borderStyle: 'solid', borderColor: '#cfcfcf'}}>\r\n                <Divider className=\"mt-1 mb-1\">Settings</Divider>\r\n                {extraDamageView(data, setData)}\r\n            </div>\r\n            {weaponView(weapon, data.player, data.playerStats)}\r\n            {getLegendary(wSpec)}\r\n            {modTitle}\r\n            <ModView wSpec={wSpec} fontSize='0.75rem' />\r\n            {boostTitle}\r\n            <BoostRowView boostDamage={boostDamage} stuff={stuff} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction extraDamageView(data, setData) {\r\n    function useCritChanged(e) {\r\n        data.extraDamage.useCrit = e.target.checked;\r\n        setData({...data});\r\n    }\r\n\r\n    function useSneakChanged(e) {\r\n        data.extraDamage.useSneak = e.target.checked;\r\n        const card = data.boostDamage.follow_through;\r\n        card.displayed_value = (card.is_used && data.extraDamage.useSneak) ? card.value : 0.0;\r\n        setData({...data});\r\n    }\r\n\r\n    function useHeadChanged(e) {\r\n        data.extraDamage.useHead = e.target.checked;\r\n        setData({...data});\r\n    }\r\n\r\n    function crf(e) {\r\n        data.extraDamage.critFreq -= 1;\r\n        if (data.extraDamage.critFreq === 0) {\r\n            data.extraDamage.critFreq = 7;\r\n        }\r\n        setData({...data});\r\n    }\r\n\r\n    function hef(e) {\r\n        data.extraDamage.headFreq += 10;\r\n        if (data.extraDamage.headFreq > 100) {\r\n            data.extraDamage.headFreq = 20;\r\n        }\r\n        setData({...data});\r\n    }\r\n    function accuracyChanged(e) {\r\n        data.accuracy = e;\r\n        setData({...data});\r\n    }\r\n    return (\r\n        <>\r\n            <Stack className='p-0 m-0 justify-content-evenly' direction=\"horizontal\" gap={1}>\r\n                <UCheckbox onChange={useCritChanged} checked={data.extraDamage.useCrit}><strong className=\"ps-1\"><small>☠️ CRIT</small></strong></UCheckbox>\r\n                <UCheckbox onChange={useSneakChanged} checked={data.extraDamage.useSneak}><strong className=\"ps-1\"><small>🐍 SNEAK</small></strong></UCheckbox>\r\n                <UCheckbox onChange={useHeadChanged} checked={data.extraDamage.useHead}><strong className=\"ps-1\"><small>🤕 HEAD</small></strong></UCheckbox>\r\n            </Stack>\r\n            <div className=\"mt-3 text-muted d-flex justify-content-between\">\r\n                <Button variant=\"blue-white-border\" style={{ width: '6.5rem', height: '1.5rem'}} className=\"ms-2 me-2\" onClick={crf}><strong>☠️ Fr: 1 / {data.extraDamage.critFreq}</strong></Button>\r\n                <Button variant=\"blue-white-border\" style={{ width: '6.5rem', height: '1.5rem'}} className=\"ms-2 me-2\" onClick={hef}><strong>🤕 Fr: {data.extraDamage.headFreq}%</strong></Button>\r\n            </div>\r\n            <div className=\"pb-0 pt-1 ps-3 pe-3\">\r\n                <b style={{fontSize: '0.65rem'}}>Accuracy</b>\r\n                <Slider open={true} onChange={accuracyChanged} marks={marks100} min={5} max={100} step={1} value={data.accuracy} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction getLegendary(wSpec) {\r\n    const leg1 = getLegendaryNameFromSpec(wSpec, 1);\r\n    const leg2 = getLegendaryNameFromSpec(wSpec, 2);\r\n    const leg3 = getLegendaryNameFromSpec(wSpec, 3);\r\n    const leg4 = getLegendaryNameFromSpec(wSpec, 4);\r\n    const leg5 = getLegendaryNameFromSpec(wSpec, 5);\r\n    const title = ((!leg1 || leg1 === \"\") && (!leg2 || leg2 === \"\") && (!leg3 || leg3 === \"\") && (!leg4 || leg4 === \"\") && (!leg5 || leg5 === \"\")) ? null : (<Divider className=\"p-0 mt-0 mb-1\">Legendary</Divider>);\r\n    return (\r\n        <>\r\n            {title}\r\n            <Row className=\"m-1 d-flex justify-content-center\">\r\n                {getLegendaryBoxView(leg1, 1)}\r\n                {getLegendaryBoxView(leg2, 2)}\r\n                {getLegendaryBoxView(leg3, 3)}\r\n                {getLegendaryBoxView(leg4, 4)}\r\n                {getLegendaryBoxView(leg5, 5)}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction getExpandIcon(isActive) {\r\n    const rotate = (isActive) ? \"rotate(180deg)\" : \"rotate(90deg)\";\r\n    return (\r\n        <div style={{transform: \"translate(0, 5px) \" + rotate}}>\r\n            <Arrow />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function ComparatorWeaponDataView(props) {\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: getLabel(props.defTitle, props.color, props.data),\r\n            children: getContent(props),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"mt-2\">\r\n            <ConfigProvider\r\n                theme={\r\n                    {\r\n                        components: {\r\n                            Collapse: {\r\n                                headerPadding: \"2px 8px\",\r\n                                contentPadding: '8px',\r\n                            },\r\n                        },\r\n                        token: {\r\n                            fontSizeIcon: \"36px\",\r\n                        },\r\n                    }\r\n                }>\r\n                <Collapse accordion expandIcon={({ isActive }) => getExpandIcon(isActive)} items={items} />\r\n            </ConfigProvider>\r\n        </div>\r\n    );\r\n}","const objT = \"ObjectType\";\r\nconst chT = \"ChemType\";\r\nconst dT = \"DrinkType\";\r\nconst ingT = \"IngredientType\";\r\nconst meT = \"MealType\";\r\nconst boT = \"BobbleheadType\";\r\nconst plT = \"PlantType\";\r\nconst mT = \"MagazineType\";\r\nconst fT = \"FoodType\";\r\nconst itT = \"ItemType\";\r\nconst alT = \"AlcoholType\";\r\n\r\nconst dupl = \"DUPLICATE000\";\r\n\r\nconst cTypes = {\r\n    \"Chemical\": [chT, true], // true / false - prefix / suffix\r\n    \"Drink\": [dT, true],\r\n    \"Bobblehead\": [boT, true],\r\n    \"Magazine\": [mT, true],\r\n    \"Food\": [fT, true],\r\n    \"Item\": [itT, true],\r\n    \"Alcohol\": [alT, false],\r\n}\r\n\r\nconst tagPrefixes = [objT, ingT, meT, chT, dT, boT, plT, mT, fT, itT];\r\nconst tagEndings = [dupl, alT];\r\n\r\n\r\nexport default class ConsumableTools {\r\n\r\n    static getTagName(tag) {\r\n        if (typeof tag === typeof '') {\r\n            return tag;\r\n        }\r\n        if (tag.full && tag.full.length > 0) {\r\n            return tag.full;\r\n        }\r\n        return tag.name;\r\n    }\r\n\r\n    static getItemType(item) {\r\n        for (let i = 0; i < item.tags.length; i++) {\r\n            const tag = ConsumableTools.getTagName(item.tags[i]);\r\n            if (tag.startsWith(objT)) {\r\n                return tag.slice(objT.length, tag.length);\r\n            }\r\n        }\r\n        for (let i = 0; i < item.tags.length; i++) {\r\n            const tag = ConsumableTools.getTagName(item.tags[i]);\r\n            for (const name in cTypes) {\r\n                const data = cTypes[name];\r\n                const prefix = data[0];\r\n                const isPrefix = data[1];\r\n                if (isPrefix) {\r\n                    if (tag.startsWith(prefix)) {\r\n                        return name;\r\n                    }\r\n                } else {\r\n                    if (tag.endsWith(prefix)) {\r\n                        return name;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    static removeTagPrefix(tagName) {\r\n        for (let i = 0; i < tagPrefixes.length; i++) {\r\n            const tagPrefix = tagPrefixes[i];\r\n            if (tagName.startsWith(tagPrefix)) {\r\n                return tagName.slice(tagPrefix.length, tagName.length);\r\n            }\r\n        }\r\n        return tagName;\r\n    }\r\n\r\n    static removeTagEndings(tagName) {\r\n        for (let i = 0; i < tagEndings.length; i++) {\r\n            const tagEnding = tagEndings[i];\r\n            if (tagName.endsWith(tagEnding)) {\r\n                return tagName.slice(0, tagName.length - tagEnding.length);\r\n            }\r\n        }\r\n        return tagName;\r\n    }\r\n\r\n    static removePrefixSuffix(tagName) {\r\n        return ConsumableTools.removeTagEndings(ConsumableTools.removeTagPrefix(tagName));\r\n    }\r\n\r\n    static getItemColor(type) {\r\n        switch(type) {\r\n            case 'Bobblehead':\r\n                return '#b6d9ff';\r\n            case 'Chem':\r\n                return '#f5cfff';\r\n            case 'Magazine':\r\n                return '#ffdb95';\r\n            case 'Serum':\r\n                return '#b4ffbf';\r\n            case 'BloodPack':\r\n                return '#ff3779';\r\n            case 'Drink':\r\n                return '#daf2ff';\r\n            case 'Food':\r\n                return '#ffebce';\r\n            default:\r\n                return '#f4f4f4';\r\n        }\r\n    }\r\n\r\n    static getItemColorDark(type) {\r\n        switch(type) {\r\n            case 'Bobblehead':\r\n                return '#7cbbff';\r\n            case 'Chem':\r\n                return '#be9ac8';\r\n            case 'Magazine':\r\n                return '#c4ab5f';\r\n            case 'Serum':\r\n                return '#6ab576';\r\n            case 'BloodPack':\r\n                return '#b58192';\r\n            case 'Drink':\r\n                return '#85a9bd';\r\n            case 'Food':\r\n                return '#c4ad8b';\r\n            default:\r\n                return '#9d9d9d';\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import Button from 'react-bootstrap/Button';\r\nimport ConsumableTools from '../ConsumableTools';\r\nimport { leftRight } from '../../helpers/RowBuilder';\r\n\r\n\r\nfunction getEffectValues(tagData) {\r\n    const magnitudes = []\r\n    const durations = []\r\n    for (let i = 0; i < tagData.length; i++) {\r\n        magnitudes.push(tagData[i].magnitude);\r\n        durations.push(tagData[i].duration);\r\n    }\r\n    if (magnitudes.length === 0) {\r\n        return (<></>);\r\n    }\r\n    const name = tagData[0].name;\r\n    const max = Math.max(...magnitudes);\r\n    const min = Math.min(...magnitudes);\r\n    const maxText = (+max.toFixed(3)).toString();\r\n    const minText = (+min.toFixed(3)).toString();\r\n    const duration = Math.max(...durations);\r\n    const valueColor = '#fc5972';\r\n    let durationText;\r\n    if (duration > 60) {\r\n        durationText = \"(\" + duration / 60 + \"min)\";\r\n    } else {\r\n        durationText = (duration === 0) ? \"\" : \"(\" + duration + \"sec)\";\r\n    }\r\n\r\n    if (min === 0 && max === 0) {\r\n        return getEffectFilterInfo(name, durationText, \"\", valueColor);\r\n    } else if (min === max) {\r\n        return getEffectFilterInfo(name, durationText, maxText, valueColor);\r\n    }\r\n    return getEffectFilterInfo(name, durationText, minText + \" ‣‣‣ \" + maxText, valueColor);\r\n}\r\n\r\nfunction getEffectFilterInfo(resultName, durationText, max, valueColor) {\r\n    return leftRight(<div className=\"p-0\" style={{wordBreak: \"break-all\"}}>{resultName} {durationText}</div>, <span style={{color: valueColor}}>{max}</span>, 9, 3, \"m-0 p-1\");\r\n}\r\n\r\nexport default function ConsumableButton(props) {\r\n    const typeColor = ConsumableTools.getItemColor(props.type);\r\n    let effectValues = null;\r\n    if (props.effectTag && props.effectTag !== \"None\") {\r\n        effectValues = getEffectValues(props.item.effectTagsData[props.effectTag]);\r\n    }\r\n    const textBgColor = ConsumableTools.getItemColorDark(props.type);\r\n    const textStyle = (effectValues) ? {borderRadius: '1px', backgroundColor: textBgColor} : {};\r\n    let itemType = props.type;\r\n    if (!itemType || itemType === \"Chemical\") {\r\n        itemType = \"Other\";\r\n    }\r\n    return (\r\n        <div>\r\n            <Button id={props.item['id']} className=\"lite-shadow\" variant=\"blue-white-border\" style={{width: '100%', margin: '0.1rem', paddingTop: '0.2rem', paddingBottom: '0.1rem', padding: \"0.3rem\"}} onClick={props.onClick}>\r\n                <div className=\"d-flex justify-content-start p-1\" style={{fontSize: '0.9rem', backgroundColor: '#f4f4f4', borderRadius: '0.1rem'}}>\r\n                    <b>{props.item['full']}</b>\r\n                </div>\r\n                <div className=\"p-0\" style={textStyle}>\r\n                    <b className=\"p-0 bg-text-shadow\">{effectValues}</b>\r\n                </div>\r\n                <div className=\"d-flex pt-2 justify-content-end\">\r\n                    <div className=\"badge bg-lite-shadow2\" style={{backgroundColor: typeColor}}>{itemType}</div>\r\n                </div>\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import consItems from '../../resources/consumables.json';\r\nimport Container from 'react-bootstrap/Container';\r\nimport ConsumableButton from './ConsumableButton';\r\nimport ConsumableTools from '../ConsumableTools';\r\nimport { memo, useState } from 'react';\r\nimport { Pagination, FloatButton } from 'antd';\r\n\r\n\r\nfunction nameComparator(item1, item2) {\r\n    const name1 = item1['full'];\r\n    const name2 = item2['full'];\r\n    return name1.localeCompare(name2)\r\n}\r\n\r\nexport const sortItems = consItems.sort(nameComparator);\r\n\r\nexport function getItem(id) {\r\n    for (let i = 0; i < sortItems.length; i++) {\r\n        const item = sortItems[i];\r\n        if (item.id === id) {\r\n            return item;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nconst types = [\"Chem\", \"Food\", \"Magazine\", \"Serum\", \"Drink\", \"Bobblehead\", \"Stimpak\", \"BloodPack\"];\r\n\r\nconst ConsumableItems = memo(function ConsumableItems(props) {\r\n    console.log(\"Consumable Items\");\r\n    const [pageSize, setPageSize] = useState(20);\r\n    function onItemClick(e) {\r\n        const id = e.currentTarget.id;\r\n        if (!props.currentItem) {\r\n            props.setShowToast(true);\r\n        } else {\r\n            props.setShowToast(!(props.currentItem.id === id && props.showToast));\r\n        }\r\n        props.setCurrentItem(getItem(id));\r\n    }\r\n    const items = [];\r\n    const needTypeFilter = props.filterType !== 'All';\r\n    for (let i = 0; i < sortItems.length; i++) {\r\n        const item = sortItems[i];\r\n        const type = ConsumableTools.getItemType(item);\r\n        if (needTypeFilter) {\r\n            if (props.filterType === \"Other\" && types.includes(type)) {\r\n                continue;\r\n            } else if (props.filterType !== \"Other\" && props.filterType !== type) {\r\n                continue;\r\n            }\r\n        }\r\n        if (props.filterName && props.filterName.length > 0) {\r\n            if (!item.full.toLowerCase().includes(props.filterName.toLowerCase())) {\r\n                continue;\r\n            }\r\n        }\r\n        if (props.filterEffect && props.filterEffect !== 'None') {\r\n            if (!item.effectTags.includes(props.filterEffect)) {\r\n                continue;\r\n            }\r\n        }\r\n        items.push(\r\n            <ConsumableButton key={item.id} index={i} item={item} type={type} effectTag={props.filterEffect} onClick={onItemClick} />\r\n        );\r\n    }\r\n    function onPageChanged(page, pageSize) {\r\n        props.setCurrentPage(page);\r\n        setPageSize(pageSize);\r\n    }\r\n    const paginated = [];\r\n    const start = (props.currentPage - 1) * pageSize;\r\n    const end = start + pageSize;\r\n    for (let i = start; i < end; i++) {\r\n        paginated.push(items[i]);\r\n    }\r\n    return (\r\n        <Container>\r\n            <Pagination className=\"pt-1 pb-3\" align=\"center\" current={props.currentPage} defaultPageSize={pageSize} onChange={onPageChanged} total={items.length} />\r\n            {paginated}\r\n            <Pagination className=\"pt-3\" align=\"center\" current={props.currentPage} defaultPageSize={pageSize} onChange={onPageChanged} total={items.length} />\r\n            <FloatButton.BackTop style={{ right: 60 }} duration={100} visibilityHeight={2000} />\r\n        </Container>\r\n\r\n    );\r\n});\r\n\r\nexport default ConsumableItems;","import Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport StackEffectView from '../../helpers/views/StackEffectView';\r\n\r\n\r\nexport default function ConsumableToast(props) {\r\n    if (!props.showToast || !props.item) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <ToastContainer\r\n            className=\"p-3 position-fixed p-3\"\r\n            position={\"top-center\"}\r\n            role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\r\n            style={{ zIndex: 10 }}>\r\n            <Toast bg=\"light\" onClose={(e) => props.setShowToast(false)} show={props.showToast} animation={false}>\r\n                <Toast.Header className=\"pe-3\">\r\n                    <strong className=\"ms-2 mt-auto mb-auto p-auto me-auto\">{props.item['full']}</strong>\r\n                </Toast.Header>\r\n                <Toast.Body className={\"pt-1 pb-2 modal-scroll-60 p-2\"}>\r\n                    <StackEffectView item={props.item} />\r\n                </Toast.Body>\r\n            </Toast>\r\n        </ToastContainer>\r\n    );\r\n}","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport BaseDropdown from '../../viewComponents/dropdown/BaseDropdown';\r\nimport Form from 'react-bootstrap/Form';\r\nimport effectDictJSON from '../../resources/consumable_tags';\r\n\r\n\r\nconst typeDict = {All: 'All', Chem: 'Chem', Food: 'Food', Magazine: 'Magazine', Serum: 'Serum', Drink: 'Drink', Bobblehead: 'Bobblehead', Stimpak: 'Stimpak', BloodPack: 'BloodPack', Other: 'Other'};\r\n\r\nconst effectDict = effectDictJSON[0];\r\n\r\nexport default function ConsumableFilter(props) {\r\n    function nameChanged(e) {\r\n        props.setFilterName(e.target.value);\r\n        props.setCurrentPage(1);\r\n    }\r\n    function onSelectType(e) {\r\n        props.setFilterType(e);\r\n        props.setCurrentPage(1);\r\n    }\r\n    function onSelectEffect(e) {\r\n        props.setFilterEffect(e);\r\n        props.setCurrentPage(1);\r\n    }\r\n    return (\r\n        <div>\r\n            <InputGroup className=\"ps-1 pe-1 pb-2 flex-nowrap\">\r\n                <BaseDropdown title={\"Type\"} dict={typeDict} onSelect={onSelectType}></BaseDropdown>\r\n                <Form.Control style={{width: '10rem'}} maxLength=\"70\" onChange={nameChanged} />\r\n                <BaseDropdown title={\"Effect\"} dict={effectDict} onSelect={onSelectEffect}></BaseDropdown>\r\n            </InputGroup>\r\n        </div>\r\n    );\r\n}","import Accordion from 'react-bootstrap/Accordion';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { memo, useState } from 'react';\r\nimport ConsumableItems from './ConsumableItems';\r\nimport ConsumableToast from './ConsumableToast';\r\nimport ConsumableFilter from './ConsumableFilter';\r\nimport FilterDisplay from './FilterDisplay';\r\nimport StaticPopoverRenderer from '../../viewComponents/popover/StaticPopoverRenderer';\r\nimport Global from '../../helpers/Global';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst questionPopoverHeader = (<b>Consumables</b>);\r\n\r\nconst questionPopoverBody = (\r\n    <>\r\n        <div><b>Items with next properties are not included:</b></div>\r\n        <div>⁃<i> No name</i></div>\r\n        <div>⁃<i> Templates</i></div>\r\n        <div>⁃<i> Events</i></div>\r\n        <div>⁃<i> CUT</i></div>\r\n        <div>⁃<i> DEPRECATED</i></div>\r\n        <div>⁃<i> test</i></div>\r\n        <div className=\"mb-2\">⁃<i> Babylon</i></div>\r\n        <div className=\"mb-2\"><b>Parsed from:</b></div>\r\n        <div><i>{Global.consumablesParseVersion}</i></div>\r\n        <div><i>{Global.consumablesParseVersionName}</i></div>\r\n    </>\r\n);\r\n\r\nconst questionPopover = new StaticPopoverRenderer(questionPopoverHeader, questionPopoverBody, 'ConsumablesViewQuestionPopoverPlace');\r\n\r\nconst ConsumablesView = memo(function ConsumablesView() {\r\n    console.log(\"ConsumablesView\");\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [filterType, setFilterType] = useState('All');\r\n    const [filterName, setFilterName] = useState('');\r\n    const [filterEffect, setFilterEffect] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    function onQClick(e) {\r\n        questionPopover.renderToggle(e.target);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"7\">\r\n                <Accordion.Header>\r\n                    <div id=\"ConsumablesViewQuestionPopoverPlace\"></div>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '12rem'}}>\r\n                            <span className=\"ac-text\">Consumables</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '2rem'}} onClick={onQClick}>?</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <ConsumableToast item={currentItem} showToast={showToast} setShowToast={setShowToast} />\r\n                    <ConsumableFilter setFilterType={setFilterType} setFilterName={setFilterName} setFilterEffect={setFilterEffect} setCurrentPage={setCurrentPage} />\r\n                    <FilterDisplay filterType={filterType} filterEffect={filterEffect} />\r\n                    <ConsumableItems filterName={filterName} filterType={filterType} filterEffect={filterEffect} currentPage={currentPage} setCurrentPage={setCurrentPage} currentItem={currentItem} setCurrentItem={setCurrentItem} showToast={showToast} setShowToast={setShowToast} />\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ConsumablesView;","import {keyValueRow} from '../../helpers/RowBuilder';\r\n\r\n\r\nexport default function FilterDisplay(props) {\r\n    const effect = (!props.filterEffect || props.filterEffect === \"None\") ? \"-\" : props.filterEffect;\r\n    return (\r\n        <div className=\"ps-2 pe-2 pb-2\">\r\n            {keyValueRow(props.filterType, effect)}\r\n        </div>\r\n    );\r\n}","import { useEffect, memo } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nconst { Chart } = await import('chart.js/auto');\r\n\r\n\r\nfunction getData(values, label, color) {\r\n    return {\r\n        datasets: [{\r\n            label: label,\r\n            data: values,\r\n            borderColor: color,\r\n            pointRadius: 1.5,\r\n            borderWidth: 2,\r\n            fill: false,\r\n        }],\r\n    };\r\n}\r\n\r\nfunction getConfig(data, titleText) {\r\n    return {\r\n        type: 'line',\r\n        data: data,\r\n        options: {\r\n            plugins: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n            },\r\n            elements: {\r\n                line: {\r\n                    tension: 0,\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    position: 'bottom',\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Level',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                },\r\n                y: {\r\n                    title: {\r\n                        display: true,\r\n                        text: titleText,\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                }\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\nfunction drawChart(config, chartId) {\r\n    const curChart = Chart.getChart(chartId);\r\n    if (curChart) {\r\n        curChart.destroy();\r\n    }\r\n    new Chart(document.getElementById(chartId), config);\r\n}\r\n\r\nfunction getCanvas(id) {\r\n    if (!id) {\r\n        return (<></>);\r\n    }\r\n    return (<canvas id={id}></canvas>);\r\n}\r\n\r\nconst CreatureChartView = memo(function CreatureChartView(props) {\r\n    const titleText = (props.title === \"❤️ Health\") ? \"Health\" : \"Resistance\";\r\n    const config = getConfig(getData(props.values, props.title, props.color), titleText);\r\n    useEffect(() => {\r\n        drawChart(config, props.chartId);\r\n    });\r\n    return (\r\n        <Card className={props.className} style={{minWidth: '18rem'}}>\r\n            <Card.Header className={props.headerClassName}>\r\n                {props.title}\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex justify-content-center p-0\">\r\n                {getCanvas(props.chartId)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default CreatureChartView","import { buildCreature, buildCreatureNames } from '../entities/ECreatures';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\n\r\n\r\nconst names = CreatureDataProvider.getCreatureNames();\r\n\r\nexport default function CreatureNamesDropdown(props) {\r\n    function onSelect(e) {\r\n        props.creatures[props.creature.fieldName] = buildCreature(e, props.creature.level, props.creature.fieldName);\r\n        props.creatureNamesRef.current = buildCreatureNames(props.creatures);\r\n        props.setCreatures({\r\n            ...props.creatures,\r\n        });\r\n    }\r\n    return (\r\n        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelect} names={names} title={<strong>{props.creature.capName}</strong>} />\r\n    );\r\n}","import { buildCreature, buildCreatureNames } from '../entities/ECreatures';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\n\r\n\r\nconst levels = CreatureDataProvider.getCreatureLevels(true);\r\n\r\nexport default function CreatureLevelsDropdown(props) {\r\n    function onSelect(e) {\r\n        props.creatures[props.creature.fieldName] = buildCreature(props.creature.name, e, props.creature.fieldName);\r\n        props.creatureNamesRef.current = buildCreatureNames(props.creatures);\r\n        props.setCreatures({\r\n            ...props.creatures,\r\n        });\r\n    }\r\n    return (\r\n        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelect} names={levels} title={<strong>{props.creature.level}</strong>} />\r\n    );\r\n}","import CreatureNamesDropdown from './CreatureNamesDropdown';\r\nimport CreatureLevelsDropdown from './CreatureLevelsDropdown';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Stack from 'react-bootstrap/Stack';\r\n\r\n\r\nexport default function CreatureChooser(props) {\r\n    return (\r\n        <Stack className='justify-content-center' direction=\"horizontal\" gap={1}>\r\n            <Col xs={10} className=\"d-flex justify-content-start\">\r\n                <CreatureNamesDropdown creatureNamesRef={props.creatureNamesRef} creature={props.creature} creatures={props.creatures} setCreatures={props.setCreatures} />\r\n            </Col>\r\n            <Col xs={2} className=\"d-flex justify-content-end\">\r\n                <CreatureLevelsDropdown creatureNamesRef={props.creatureNamesRef} creature={props.creature} creatures={props.creatures} setCreatures={props.setCreatures} />\r\n            </Col>\r\n        </Stack>\r\n    );\r\n}","import raceItems from '../resources/race.json';\r\n\r\n\r\nconst raceMap = new Map();\r\n\r\nfor (let i = 0; i < raceItems.length; i++) {\r\n        const item = raceItems[i];\r\n        raceMap.set(item.id, item);\r\n}\r\n\r\nexport default class RaceDataProvider {\r\n\r\n    static getRaceById(id) {\r\n        return raceMap.get(id);\r\n    }\r\n}","import creatureItems from '../resources/creature_health_res.json';\r\nimport RaceDataProvider from '../race/RaceDataProvider';\r\n\r\n\r\nconst creatureNames = [];\r\n\r\nfor (const creatureName in creatureItems[0]) {\r\n    creatureNames.push(creatureName);\r\n}\r\n\r\nconst creatureLevels = [];\r\nconst creatureLevelsWithMax = [\"Max\"];\r\n\r\nfor (let i = 1; i <= 150; i++) {\r\n    creatureLevels.push(i);\r\n    creatureLevelsWithMax.push(i);\r\n}\r\n\r\ncreatureNames.sort();\r\n\r\nexport default class CreatureDataProvider {\r\n\r\n    static getCreatureData(creatureName) {\r\n        return creatureItems[0][creatureName];\r\n    }\r\n\r\n    static getCreatureParametersByName(creatureName, level) {\r\n        const creatureData = CreatureDataProvider.getCreatureData(creatureName);\r\n        return CreatureDataProvider.getCreatureParametersByData(creatureData, level);\r\n    }\r\n\r\n    static getCreatureParametersByData(creatureData, level) {\r\n        const result = {};\r\n        const creatureDataCurve = creatureData['curve'];\r\n        for (const name in creatureDataCurve) {\r\n            const values = creatureDataCurve[name];\r\n            const lastItem = values.length - 1;\r\n            for (let i = 0; i <= lastItem; i++) {\r\n                const sample = values[i];\r\n                const sampleLevel = sample.x;\r\n                const sampleValue = sample.y;\r\n                if (i === 0 && level <= sampleLevel) { // Return min possible value\r\n                    result[name] = sampleValue;\r\n                    break;\r\n                } else if (level === sampleLevel) { // Exact level\r\n                    result[name] = sampleValue;\r\n                    break;\r\n                } else if (i !== 0) { // Value could lie somewhere between\r\n                    const prevSampleLevel = values[i - 1].x;\r\n                    if (level > prevSampleLevel && level < sampleLevel) {\r\n                        const prevSampleValue = values[i - 1].y;\r\n                        result[name] = CreatureDataProvider.calculateExactValue(prevSampleLevel, sampleLevel, level, prevSampleValue, sampleValue);\r\n                        break;\r\n                    }\r\n                }\r\n                if (i === lastItem) { // Return max possible value\r\n                    result[name] = sampleValue;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        result[\"immuneToRad\"] = creatureData.immune_to_rad;\r\n        result[\"immuneToPoison\"] = creatureData.immune_to_poison;\r\n        result[\"reduction\"] = creatureData.reduction;\r\n        result[\"reductions\"] = [...creatureData.reductions];\r\n        result[\"tags\"] = [...creatureData.tags];\r\n        result[\"reductionOnlyNotBleeding\"] = creatureData.reduction_only_not_bleeding;\r\n        const race = RaceDataProvider.getRaceById(creatureData.race_id);\r\n        result['body'] = {...race.bodyData.body};\r\n        result['headMult'] = CreatureDataProvider.getMaxBodyMultiplier(result['body']);\r\n        result['normalMult'] = 1;\r\n        result['averageMult'] = CreatureDataProvider.getAverageBodyMultiplier(result['body']);\r\n        return result;\r\n    }\r\n\r\n    static getMaxBodyMultiplier(body) {\r\n        let maxMult = 0;\r\n        for (const name in body) {\r\n            const part = body[name];\r\n            const mult = part.damage_mult;\r\n            if (maxMult < mult) {\r\n                maxMult = mult;\r\n            }\r\n        }\r\n        return maxMult;\r\n    }\r\n\r\n    static getAverageBodyMultiplier(body) {\r\n        let multSum = 0;\r\n        let count = 0\r\n        for (const name in body) {\r\n            const part = body[name];\r\n            multSum += part.damage_mult;\r\n            count += 1;\r\n        }\r\n        return (count === 0) ? 0 : multSum / count;\r\n    }\r\n\r\n    static calculateExactValue(prevLevel, nextLevel, curLevel, prevValue, nextValue) {\r\n        const valueGap = nextValue - prevValue;\r\n        const levelsAmount = nextLevel - prevLevel;\r\n        const valuePerLevel = valueGap / levelsAmount;\r\n        const shift = curLevel - prevLevel;\r\n        return prevValue + valuePerLevel * shift;\r\n    }\r\n\r\n    static getCreatureNames() {\r\n        return creatureNames;\r\n    }\r\n\r\n    static getCreatureLevels(withMax=false) {\r\n        return (withMax) ? creatureLevelsWithMax : creatureLevels;\r\n    }\r\n\r\n    static getMaxLevel(name) {\r\n        let creatureData = CreatureDataProvider.getCreatureData(name);\r\n        if (!creatureData) {\r\n            return 1;\r\n        }\r\n        creatureData = creatureData['curve'];\r\n        const result = [];\r\n        for (const name in creatureData) {\r\n            const values = creatureData[name];\r\n            result.push(values[values.length -1].x);\r\n        }\r\n        let max = Math.max(...result);\r\n        if (max < 1) {\r\n            max = 1;\r\n        }\r\n        return max;\r\n    }\r\n\r\n    static getLevelsList(name) {\r\n        const maxLevel = CreatureDataProvider.getMaxLevel(name);\r\n        const result = [];\r\n        for (let i = 1; i <= maxLevel; i++) {\r\n            result.push(i);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static capitalizeCreatureName(creatureName) {\r\n        let name = creatureName.charAt(0).toUpperCase() + creatureName.slice(1);\r\n        return name.replaceAll(\"_\", \" \");\r\n    }\r\n\r\n    static getStyle(rType) {\r\n        switch(rType) {\r\n            case \"physical\":\r\n                return [\"💥 Physical\", \"small p-1 bg-ballistic\", \"grey\"];\r\n            case \"energy\":\r\n                return [\"⚡ Energy\", \"small p-1 bg-energy\", \"purple\"];\r\n            case \"fire\":\r\n                return [\"🔥 Fire\", \"small p-1 bg-fire\", \"red\"];\r\n            case \"cold\":\r\n                return [\"❄️ Cold\", \"small p-1 bg-cold\", \"#40aac2\"];\r\n            case \"poison\":\r\n                return [\"☣️ Poison\", \"small p-1 bg-poison\", \"green\"];\r\n            case \"radiation\":\r\n                return [\"☢️ Radiation\", \"small p-1 bg-rad\", \"#ccc976\"];\r\n            case \"health\":\r\n                return [\"❤️ Health\", \"small p-1 bg-health\", \"#cc7681\"]\r\n            default:\r\n                return [\"\", \"\"];\r\n        }\r\n    }\r\n}","import { Collapse } from 'antd';\r\nimport CreatureDataProvider from './CreatureDataProvider';\r\nimport CreatureDropdown from './CreatureDropdown';\r\nimport { useState } from 'react';\r\nimport CreatureResHealthChartsView from './CreatureResHealthChartsView';\r\n\r\n\r\nconst creatureNames = CreatureDataProvider.getCreatureNames();\r\n\r\nfunction getView(creatureName, setCreatureName) {\r\n\r\n    let title = null;\r\n    if (creatureName) {\r\n        title = CreatureDataProvider.capitalizeCreatureName(creatureName);\r\n    }\r\n    return (\r\n        <>\r\n            <CreatureDropdown title={title} names={creatureNames} setCreatureName={setCreatureName} />\r\n            <CreatureResHealthChartsView creatureName={creatureName} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function CreatureDataView(props) {\r\n    const [creatureName, setCreatureName] = useState(null);\r\n    // let title = creatureName;\r\n    // if (!title) {\r\n    let title = 'Creature Curves';\r\n    // } else {\r\n        title = CreatureDataProvider.capitalizeCreatureName(title);\r\n    // }\r\n    const item = {\r\n        key: 1,\r\n        label: <b className=\"creature-label-text\">{title}</b>,\r\n        children: getView(creatureName, setCreatureName),\r\n    };\r\n    const items = [];\r\n    items.push(item);\r\n    return (\r\n        <Collapse accordion key={\"Creature\"} items={items} />\r\n    );\r\n}","import { getUniqueDropdownItemsByNames } from '../helpers/DropdownHelpers';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { memo } from 'react';\r\n\r\n\r\nexport function CreatureDropdownButton(props) {\r\n    let title = \"Choose a creature\";\r\n    if (props.title) {\r\n        title = props.title;\r\n    }\r\n    const onSelect = getOnSelect(props.onSelect, props.setCreatureName); // One of them must be specified.\r\n    return (\r\n        <DropdownButton variant=\"warning\" size=\"sm\" onSelect={onSelect} title={<strong>{title}</strong>}>\r\n            {getUniqueDropdownItemsByNames(props.names)}\r\n        </DropdownButton>\r\n    );\r\n}\r\n\r\nfunction getOnSelect(onSelect, setCreatureName) {\r\n    let result = onSelect;\r\n    if (!result) {\r\n        result = (e) => {\r\n            setCreatureName(e);\r\n        };\r\n    }\r\n    return result;\r\n}\r\nconst CreatureDropdown = memo(function CreatureDropdown(props) {\r\n    let title = \"Choose a creature\";\r\n    if (props.title) {\r\n        title = props.title;\r\n    }\r\n    const onSelect = getOnSelect(props.onSelect, props.setCreatureName); // One of them must be specified.\r\n    let className = \"p-1 mb-2 mt-0\";\r\n    if (props.className) {\r\n        className = props.className;\r\n    }\r\n    return (\r\n        <Row className={className}>\r\n            <Col className=\"d-flex justify-content-center\">\r\n                <DropdownButton variant=\"warning\" size=\"sm\" onSelect={onSelect} title={<strong>{title}</strong>}>\r\n                    {getUniqueDropdownItemsByNames(props.names)}\r\n                </DropdownButton>\r\n            </Col>\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default CreatureDropdown;\r\n\r\n","import { creatureInfoPopover, creatureShortInfoPopover } from './CreatureInfoPopover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nexport default function CreatureInfoButton(props) {\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"left\" overlay={creatureInfoPopover(props.creature, props.resultDamage, props.resultDamage.weaponName)}>\r\n            <Button variant=\"blue-white-border m-0\" style={{cursor: 'pointer'}}><b style={{fontSize: 'auto'}}>?</b></Button>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nexport function CreatureShortInfoButton(props) {\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"left\" overlay={creatureShortInfoPopover(props.creature)}>\r\n            <Button variant=\"blue-white-border m-0\" style={{cursor: 'pointer'}}><b style={{fontSize: 'auto'}}>?</b></Button>\r\n        </OverlayTrigger>\r\n    );\r\n}","import Popover from 'react-bootstrap/Popover';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport { Divider } from 'antd';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport { truncate } from '../helpers/Input';\r\nimport { tAmmo, addText } from '../helpers/Emoji';\r\nimport { millisToTime } from '../helpers/Time';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\nimport { Tag } from 'antd';\r\n\r\n\r\nfunction getResBadge(className, value, immune) {\r\n    const result = (immune) ? \"Infinity\" : value.toFixed(1);\r\n    return (\r\n        <span style={{ width: '2.7rem' }} className={className}><small>{result}</small></span>\r\n    );\r\n}\r\n\r\nfunction prepareTags(creature) {\r\n    const tags3 = [];\r\n    let tags;\r\n    for (let i = 0; i < creature.tags.length; i++) {\r\n        if (i % 3 === 0) {\r\n            tags = [];\r\n            tags3.push(tags);\r\n        }\r\n        tags.push(creature.tags[i]);\r\n    }\r\n    const result = [];\r\n    for (let i = 0; i < tags3.length; i++) {\r\n        const curTags = tags3[i];\r\n        result.push(<div key={curTags.toString()} className=\"mt-1 mb-1 p-0 d-flex justify-content-center\"><Tag className=\"m-0\" color=\"purple\"><b>{curTags.join(\" ∙ \")}</b></Tag></div>);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction showDamageIf(what, damageLine, notShow=false) {\r\n    if (notShow || !damageLine || damageLine === \"\" || damageLine === 0 || damageLine.includes(\"0.0 - ↑0.0\")) {\r\n        return (<></>);\r\n    }\r\n    return what;\r\n}\r\n\r\nexport function buildCreatureInfo2(creature, resultDamage) {\r\n    let armor = null;\r\n    if (resultDamage && Object.keys(resultDamage).length > 0) {\r\n        armor = resultDamage.resultArmor.get(creature.name);\r\n    }\r\n    if (!armor) {\r\n        armor = [creature.b, creature.e, creature.f, creature.p, creature.c, creature.r];\r\n    }\r\n    const showHeadExp = (creature.explosiveDamage === creature.headExpShotDamage);\r\n    const showCritHeadExp = (creature.critExplosiveDamage === creature.critExplosiveHeadDamage);\r\n    let capitalized = CreatureDataProvider.capitalizeCreatureName(creature.name);\r\n    return (\r\n        <div>\r\n            <div className='d-flex pb-2 justify-content-center'><b>{capitalized} (Lvl: {creature.level})</b></div>\r\n            <Stack className='pt-0 pb-2 justify-content-center' direction=\"horizontal\" gap={1}>\r\n                {getResBadge(\"badge bg-ballistic-shadow\", armor[0], false)}\r\n                {getResBadge(\"badge bg-energy-shadow\", armor[1], false)}\r\n                {getResBadge(\"badge bg-fire-shadow\", armor[2], false)}\r\n                {getResBadge(\"badge bg-poison-shadow\", armor[3], creature.immuneToPoison)}\r\n                {getResBadge(\"badge bg-cold-shadow\", armor[4], false)}\r\n                {getResBadge(\"badge bg-rad-shadow\", armor[5], creature.immuneToRadiation)}\r\n            </Stack>\r\n            <Stack className='pb-0' direction=\"vertical\" gap={0}>\r\n                {keyValueRow(\"❤️ Health:\", creature.h.toFixed(2), \"default\", \"red\")}\r\n                {keyValueRow(\"🧽 Damage Reduction:\", (creature.damageReduction * 100).toFixed(0) + \"%\", \"default\", \"orange\")}\r\n                {showDamageIf(keyValueRow(\"🐍 Sneak:\", creature.sneak, \"default\", \"green\"), creature.sneak)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit:\", creature.crit, \"default\", \"magenta\"), creature.crit)}\r\n                {keyValueRow(\"💥 Total Damage:\", creature.totalDamage, \"default\", \"blue\")}\r\n                {showDamageIf(keyValueRow(\"💥 Normal Damage:\", creature.normalDamage, \"default\", \"blue\"), creature.normalDamage)}\r\n                {showDamageIf(keyValueRow(\"🤕 HShot (\" + creature.headShot.toFixed(2) + \"x):\", creature.headShotDamage, \"default\", \"blue\"), creature.headShotDamage)}\r\n                {showDamageIf(keyValueRow(\"💣 Explosive:\", creature.explosiveDamage, \"default\", \"blue\"), creature.explosiveDamage)}\r\n                {showDamageIf(keyValueRow(\"💣 Explosive Head:\", creature.headExpShotDamage, \"default\", \"blue\"), creature.headExpShotDamage, showHeadExp)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit:\", creature.critNormalDamage, \"default\", \"blue\"), creature.critNormalDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Head:\", creature.critHeadNormalDamage, \"default\", \"blue\"), creature.critHeadNormalDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Explosive:\", creature.critExplosiveDamage, \"default\", \"blue\"), creature.critExplosiveDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Head Explosive:\", creature.critExplosiveHeadDamage, \"default\", \"blue\"), creature.critExplosiveHeadDamage, showCritHeadExp)}\r\n                {keyValueRow(addText(tAmmo, '0.7rem', '0.27rem', \"Ammo / Hits:\"), creature.ammo, \"default\", \"pink\")}\r\n                {keyValueRow(\"Reloads:\", creature.reloads, \"default\", \"green\")}\r\n                {keyValueRow(\"Reloads Time:\", millisToTime(creature.reloadsTime * 1000), \"default\", \"green\")}\r\n                {keyValueRow(\"Life Time:\", millisToTime(creature.lifeTime), \"default\", \"brown\")}\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\nexport function buildCreatureInfo(creature, resultDamage, showDefaultResistance, weaponName=null) {\r\n    let weaponSection;\r\n    let wNameTrunc = \"\";\r\n    if (!weaponName) {\r\n        weaponSection = (<></>);\r\n    } else {\r\n        wNameTrunc = truncate(weaponName, 55);\r\n        weaponSection = (\r\n            <>\r\n                <Divider className='p-0 m-1 mb-3'></Divider>\r\n                <span className=\"badge bg-warning mb-0 text-dark p-2 shadow-outline-unselected\"><small>{wNameTrunc}</small></span>\r\n            </>\r\n        );\r\n    }\r\n    let armor = null;\r\n    if (resultDamage && Object.keys(resultDamage).length > 0) {\r\n        armor = resultDamage.resultArmor.get(creature.name);\r\n    }\r\n    if (!armor) {\r\n        armor = [creature.b, creature.e, creature.f, creature.p, creature.c, creature.r];\r\n    }\r\n    const showHeadExp = (creature.explosiveDamage === creature.headExpShotDamage);\r\n    const showCritHeadExp = (creature.critExplosiveDamage === creature.critExplosiveHeadDamage);\r\n    let defaultResistance = (<></>);\r\n    if (showDefaultResistance) {\r\n        defaultResistance = (\r\n            <>\r\n                <Stack className='pt-0 pb-0 d-flex justify-content-center' direction=\"horizontal\" gap={1}>\r\n                    {getResBadge(\"badge bg-ballistic-shadow\", creature.b, false)}\r\n                    {getResBadge(\"badge bg-energy-shadow\", creature.e, false)}\r\n                    {getResBadge(\"badge bg-fire-shadow\", creature.f, false)}\r\n                    {getResBadge(\"badge bg-poison-shadow\", creature.p, creature.immuneToPoison)}\r\n                    {getResBadge(\"badge bg-cold-shadow\", creature.c, false)}\r\n                    {getResBadge(\"badge bg-rad-shadow\", creature.r, creature.immuneToRadiation)}\r\n                </Stack>\r\n                <Divider className='p-0 m-0'>v</Divider>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            {defaultResistance}\r\n            <Stack className='pt-0 pb-2 d-flex justify-content-center' direction=\"horizontal\" gap={1}>\r\n                {getResBadge(\"badge bg-ballistic-shadow\", armor[0], false)}\r\n                {getResBadge(\"badge bg-energy-shadow\", armor[1], false)}\r\n                {getResBadge(\"badge bg-fire-shadow\", armor[2], false)}\r\n                {getResBadge(\"badge bg-poison-shadow\", armor[3], creature.immuneToPoison)}\r\n                {getResBadge(\"badge bg-cold-shadow\", armor[4], false)}\r\n                {getResBadge(\"badge bg-rad-shadow\", armor[5], creature.immuneToRadiation)}\r\n            </Stack>\r\n            {prepareTags(creature)}\r\n            <Stack className='pb-0' direction=\"vertical\" gap={0}>\r\n                {keyValueRow(\" Body:\", creature.curBody, \"default\", \"default\")}\r\n                {keyValueRow(\"❤️ Health:\", creature.h.toFixed(2), \"default\", \"red\")}\r\n                {keyValueRow(\"🧽 Damage Reduction:\", (creature.damageReduction * 100).toFixed(0) + \"%\", \"default\", \"orange\")}\r\n                {showDamageIf(keyValueRow(\"🐍 Sneak:\", creature.sneak, \"default\", \"green\"), creature.sneak)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit:\", creature.crit, \"default\", \"magenta\"), creature.crit)}\r\n                {keyValueRow(\"💥 Total Damage:\", creature.totalDamage, \"default\", \"blue\")}\r\n                {showDamageIf(keyValueRow(\"💥 Normal Damage:\", creature.normalDamage, \"default\", \"blue\"), creature.normalDamage)}\r\n                {showDamageIf(keyValueRow(\"🤕 HShot (\" + creature.headShot.toFixed(2) + \"x):\", creature.headShotDamage, \"default\", \"blue\"), creature.headShotDamage)}\r\n                {showDamageIf(keyValueRow(\"💣 Explosive:\", creature.explosiveDamage, \"default\", \"blue\"), creature.explosiveDamage)}\r\n                {showDamageIf(keyValueRow(\"💣 Explosive Head:\", creature.headExpShotDamage, \"default\", \"blue\"), creature.headExpShotDamage, showHeadExp)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit:\", creature.critNormalDamage, \"default\", \"blue\"), creature.critNormalDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Head:\", creature.critHeadNormalDamage, \"default\", \"blue\"), creature.critHeadNormalDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Explosive:\", creature.critExplosiveDamage, \"default\", \"blue\"), creature.critExplosiveDamage)}\r\n                {showDamageIf(keyValueRow(\"☠️ Crit Head Explosive:\", creature.critExplosiveHeadDamage, \"default\", \"blue\"), creature.critExplosiveHeadDamage, showCritHeadExp)}\r\n                {keyValueRow(addText(tAmmo, '0.7rem', '0.27rem', \"Ammo / Hits:\"), creature.ammo, \"default\", \"pink\")}\r\n                {keyValueRow(\"Reloads:\", creature.reloads, \"default\", \"green\")}\r\n                {keyValueRow(\"Reloads Time:\", millisToTime(creature.reloadsTime * 1000), \"default\", \"green\")}\r\n                {keyValueRow(\"Life Time:\", millisToTime(creature.lifeTime), \"default\", \"brown\")}\r\n                {weaponSection}\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const creatureInfoPopover = (creature, resultDamage, weaponName) => {\r\n    let capitalized = CreatureDataProvider.capitalizeCreatureName(creature.name);\r\n    return (\r\n        <Popover title=\"CreatureInfoPopover\" className=\"popover-adjustable\">\r\n            <Popover.Header className=\"d-flex justify-content-center\"><strong style={{fontSize: '0.9rem'}}>{capitalized} (Level: {creature.level})</strong></Popover.Header>\r\n            <Popover.Body className=\"popover-body3 ms-1\">\r\n                {buildCreatureInfo(creature, resultDamage, true, weaponName)}\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n};\r\n\r\nexport function buildCreatureSnortInfo(creature) {\r\n    return (\r\n        <div>\r\n            <Stack className='pt-0 pb-2 justify-content-center' direction=\"horizontal\" gap={1}>\r\n                {getResBadge(\"badge bg-ballistic-shadow\", creature.b, false)}\r\n                {getResBadge(\"badge bg-energy-shadow\", creature.e, false)}\r\n                {getResBadge(\"badge bg-fire-shadow\", creature.f, false)}\r\n                {getResBadge(\"badge bg-poison-shadow\", creature.p, creature.immuneToPoison)}\r\n                {getResBadge(\"badge bg-cold-shadow\", creature.c, false)}\r\n                {getResBadge(\"badge bg-rad-shadow\", creature.r, creature.immuneToRadiation)}\r\n            </Stack>\r\n            {prepareTags(creature)}\r\n            <Stack className='pb-0' direction=\"vertical\" gap={0}>\r\n                {keyValueRow(\"❤️ Health:\", creature.h.toFixed(2), \"default\", \"red\")}\r\n                {keyValueRow(\"🧽 Damage Reduction:\", (creature.damageReduction * 100).toFixed(0) + \"%\", \"default\", \"orange\")}\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const creatureShortInfoPopover = (creature, resultDamage, weaponName) => {\r\n    let capitalized = CreatureDataProvider.capitalizeCreatureName(creature.name);\r\n    return (\r\n        <Popover title=\"CreatureInfoPopover\" className=\"popover-adjustable\">\r\n            <Popover.Header className=\"d-flex justify-content-center\"><strong style={{fontSize: '0.9rem'}}>{capitalized} (Level: {creature.level})</strong></Popover.Header>\r\n            <Popover.Body className=\"popover-body3 ms-1\">\r\n                {buildCreatureSnortInfo(creature)}\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n};","import CreatureChartView from \"./CreatureChartView\";\r\nimport CreatureDataProvider from './CreatureDataProvider';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nfunction buildResCols(creatureName) {\r\n    const result = [];\r\n    let data = CreatureDataProvider.getCreatureData(creatureName);\r\n    if (data) {\r\n        data = data['curve'];\r\n    }\r\n    for (const name in data) {\r\n        const cRes = data[name];\r\n        const typeData = CreatureDataProvider.getStyle(name);\r\n        result.push(\r\n            <Col className=\"d-flex justify-content-center\" key={name}>\r\n                <CreatureChartView className=\"d-flex justify-content-center m-1\" color={typeData[2]} headerClassName={typeData[1]} title={typeData[0]} chartId={name + \"Creature\"} values={cRes} />\r\n            </Col>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function CreatureResHealthChartsView(props) {\r\n    return (\r\n        <Row className=\"d-flex justify-content-center\">\r\n            {buildResCols(props.creatureName)}\r\n        </Row>\r\n    )\r\n}","import Stack from 'react-bootstrap/Stack';\r\nimport CreatureInfoButton from './CreatureInfoButton';\r\nimport { keyValueBadge } from '../helpers/RowBuilder';\r\nimport { tAmmo } from '../helpers/Emoji';\r\nimport { millisToTime } from '../helpers/Time';\r\nimport { numberToString } from '../helpers/StringHelpers';\r\n\r\n\r\nexport default function CreatureParamsLineView(props) {\r\n    return (\r\n        <Stack className='ps-0 pe-1' direction=\"horizontal\" gap={1}>\r\n            {keyValueBadge(\"mt-1 mb-1 badge p-1 ms-1 me-0 bg-health-outline\", '5.5rem', '❤️', numberToString(props.creature.h, 2))}\r\n            {keyValueBadge(\"mt-1 mb-1 p-1 badge bg-ammo-outline ms-auto me-auto\", '7rem', tAmmo(\"0.5rem\"), props.creature.ammo)}\r\n            {keyValueBadge(\"mt-1 mb-1 p-1 badge bg-lifetime-outline ms-auto me-auto\", '7rem', (<small>⌛</small>), millisToTime(props.creature.lifeTime))}\r\n            <CreatureInfoButton creature={props.creature} resultDamage={props.resultDamage} />\r\n        </Stack>\r\n    );\r\n}","\r\nimport Card from 'react-bootstrap/Card';\r\nimport CreatureChooser from './CreatureChooser';\r\nimport CreatureParamsLineView from './CreatureParamsLineView';\r\n\r\n\r\nfunction enemy(creatureNamesRef, creature, creatures, setCreatures, resultDamage) {\r\n    return (\r\n        <Card className='pt-0 mt-0 mb-1'>\r\n            <Card.Header className='pt-0 pb-0'>\r\n                <CreatureChooser creatureNamesRef={creatureNamesRef} creature={creature} creatures={creatures} setCreatures={setCreatures} />\r\n            </Card.Header>\r\n            <CreatureParamsLineView creature={creature} resultDamage={resultDamage} />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function CreaturesCardView(props) {\r\n    return (\r\n        <Card className={props.className}>\r\n            <Card.Body className=\"pt-2 pb-1 ps-1 pe-1\">\r\n                {enemy(props.creatureNamesRef, props.creatures.creature1, props.creatures, props.setCreatures, props.resultDamage)}\r\n                {enemy(props.creatureNamesRef, props.creatures.creature2, props.creatures, props.setCreatures, props.resultDamage)}\r\n                {enemy(props.creatureNamesRef, props.creatures.creature3, props.creatures, props.setCreatures, props.resultDamage)}\r\n                {enemy(props.creatureNamesRef, props.creatures.creature4, props.creatures, props.setCreatures, props.resultDamage)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","export default class Creature {\r\n\r\n    constructor(creatureInfo) {\r\n        this.creatureInfo = creatureInfo;\r\n        this.physical = creatureInfo.b;\r\n        this.energy = creatureInfo.e;\r\n        this.fire = creatureInfo.f;\r\n        this.poison = creatureInfo.p;\r\n        this.cryo = creatureInfo.c;\r\n        this.name = creatureInfo.name;\r\n        this.tags = creatureInfo.tags;\r\n        this.tags = [];\r\n        for (let i = 0; i < creatureInfo.tags.length; i++) {\r\n            this.tags.push(creatureInfo.tags[i].toLowerCase());\r\n        }\r\n        this.body = creatureInfo.curBody;\r\n        this.radiation = creatureInfo.r;\r\n        this.health = creatureInfo.h;\r\n        this.damageReduction = creatureInfo.damageReduction;\r\n        this.damageReductionOnlyNotBleeding = creatureInfo.damageReductionOnlyNotBleeding;\r\n        this.headMult = creatureInfo.headShot;\r\n        this.bodyMult = creatureInfo.bodyShot;\r\n        this.immuneToRadiation = creatureInfo.immuneToRadiation;\r\n        this.immuneToPoison = creatureInfo.immuneToPoison;\r\n        this.expResistance = true;\r\n        this.reported = false;\r\n        this.maxHit = 0;\r\n        this.hits = 0;\r\n        this.sumDamages = 0;\r\n        this.lifeTime = 0;\r\n        this.lastShotTime = 0;\r\n        this.timeDamages = new Map();\r\n        this.lastTotalDamage = 0;\r\n        this.lastTotalDamageWithAccuracy = 0; // For trial max shot\r\n        this.lastTotalDamageNoTime = 0;\r\n        this.lastTotalDamageTime = 0;\r\n        this.lastDamageNoTime = 0;\r\n        this.lastExpDamageNoTime = 0;\r\n        this.minNormalShot = 0;\r\n        this.maxNormalShot = 0;\r\n        this.minHeadShot = 0;\r\n        this.maxHeadShot = 0;\r\n        this.minHeadExpShot = 0;\r\n        this.maxHeadExpShot = 0;\r\n        this.minNormalCritShot = 0;\r\n        this.maxNormalCritShot = 0;\r\n        this.minNormalHeadCritShot = 0;\r\n        this.maxNormalHeadCritShot = 0;\r\n        this.minExpShot = 0;\r\n        this.maxExpShot = 0;\r\n        this.minExpCritShot = 0;\r\n        this.maxExpCritShot = 0;\r\n        this.minExpCritHeadShot = 0;\r\n        this.maxExpCritHeadShot = 0;\r\n        this.bulletCount = 1;\r\n        this.minTotalDamage = 0;\r\n        this.maxTotalDamage = 0;\r\n        this.maxTimeEffects = 0;\r\n        this.tdCounter = 0;\r\n        this.sneakPercent = 0;\r\n        this.critPercent = 0;\r\n        this.bleed = false;\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getArmor() {\r\n        return [this.physical, this.energy, this.fire, this.poison, this.cryo, this.radiation];\r\n    }\r\n\r\n    // To speed up the process we reduce armors in advance as they are basically static (except for some cases like TOFT\r\n    // where we ignore it anyway)\r\n    reduceArmor(antiArmor) {\r\n        let b = (1 - antiArmor.b / 100.0);\r\n        let e = (1 - antiArmor.e / 100.0);\r\n        let f = (1 - antiArmor.f / 100.0);\r\n        let p = (1 - antiArmor.p / 100.0);\r\n        let c = (1 - antiArmor.c / 100.0);\r\n        let r = (1 - antiArmor.r / 100.0);\r\n        if (this.tags.includes(\"bug\") || this.tags.includes(\"mirelurk\")) {\r\n            let i = 1 - antiArmor.insect / 100.0;\r\n            b *= i;\r\n            e *= i;\r\n            f *= i;\r\n            p *= i;\r\n            c *= i;\r\n            r *= i;\r\n        }\r\n        this.physical *= b;\r\n        this.physical = (this.physical < 0) ? 0 : this.physical;\r\n        this.energy *= e;\r\n        this.energy = (this.energy < 0) ? 0 : this.energy;\r\n        this.fire *= f;\r\n        this.fire = (this.fire < 0) ? 0 : this.fire;\r\n        this.poison *= p;\r\n        this.poison = (this.poison < 0) ? 0 : this.poison;\r\n        this.cryo *= c;\r\n        this.cryo = (this.cryo < 0) ? 0 : this.cryo;\r\n        this.radiation *= r;\r\n        this.radiation = (this.radiation < 0) ? 0 : this.radiation;\r\n        return this;\r\n    }\r\n\r\n    takeDamage(hit) {\r\n\r\n        // Dead\r\n        if (this.health <= 0) {\r\n            return true;\r\n        }\r\n        this.bulletCount = hit.bulletCount;\r\n        this.lastTotalDamage = 0;\r\n        this.lastTotalDamageWithAccuracy = 0;\r\n        this.lastTotalDamageNoTime = 0;\r\n        this.lastTotalDamageTime = 0;\r\n        this.lastDamageNoTime = 0;\r\n        this.lastExpDamageNoTime = 0;\r\n        this.hits += 1;\r\n        this.lifeTime += hit.deltaTime;\r\n        this.lastShotTime = hit.deltaTime;\r\n\r\n        // Run through damages to cause damage\r\n        this.applyDamages(hit, hit.damages);\r\n        if (hit.critShot) {\r\n            this.applyCritDamages(hit, hit.critDamages);\r\n        }\r\n        return this.isDead();\r\n    }\r\n\r\n    // TODO: Should we apply boosts to crit damages? How does this work?\r\n    applyCritDamages(hit, damages) {\r\n        this.applyDamages(hit, damages);\r\n    }\r\n\r\n    // WARNING: Considers every shot is hit (time is not important)\r\n    setupBleed(damages) {\r\n        for (let i = 0; i < damages.length; i++) {\r\n            const damageInfo = damages[i];\r\n            if (damageInfo.kind === 'bleed') {\r\n                this.bleed = true;\r\n                return;\r\n            }\r\n        }\r\n        this.bleed = false;\r\n    }\r\n    applyDamages(hit, damages) {\r\n        this.setupBleed(damages);\r\n        for (let i = 0; i < damages.length; i++) {\r\n            const damageInfo = damages[i];\r\n\r\n            if (damageInfo.time === 0) {\r\n                this.causeNonTimeDamages(hit, damageInfo);\r\n            } else {\r\n                this.gatherTimeDamages(hit, damageInfo);\r\n                this.causeTimeDamages(damageInfo.type);\r\n            }\r\n            if (this.health <= 0) {\r\n                break;\r\n            }\r\n        }\r\n        this.recordDamage(hit);\r\n    }\r\n\r\n    recordDamage(hit) {\r\n        if (this.minTotalDamage === 0 || this.lastTotalDamage < this.minTotalDamage) {\r\n            this.minTotalDamage = this.lastTotalDamage;\r\n        }\r\n        if (this.maxTotalDamage < this.lastTotalDamage) {\r\n            this.maxTotalDamage = this.lastTotalDamage;\r\n        }\r\n        if (!hit.critShot && !hit.headShot) {\r\n            if (this.minNormalShot === 0 || this.lastDamageNoTime < this.minNormalShot) {\r\n                this.minNormalShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.lastDamageNoTime > this.maxNormalShot) {\r\n                this.maxNormalShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.minExpShot === 0 || this.lastExpDamageNoTime < this.minExpShot) {\r\n                this.minExpShot = this.lastExpDamageNoTime;\r\n            }\r\n            if (this.lastExpDamageNoTime > this.maxExpShot) {\r\n                this.maxExpShot = this.lastExpDamageNoTime;\r\n            }\r\n        } else if (!hit.critShot && hit.headShot) {\r\n            if (this.minHeadShot === 0 || this.lastDamageNoTime < this.minHeadShot) {\r\n                this.minHeadShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.lastDamageNoTime > this.maxHeadShot) {\r\n                this.maxHeadShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.minHeadExpShot === 0 || this.lastExpDamageNoTime < this.minHeadExpShot) {\r\n                this.minHeadExpShot = this.lastExpDamageNoTime;\r\n            }\r\n            if (this.lastExpDamageNoTime > this.maxHeadExpShot) {\r\n                this.maxHeadExpShot = this.lastExpDamageNoTime;\r\n            }\r\n        } else if (hit.critShot && !hit.headShot) {\r\n            if (this.minNormalCritShot === 0 || this.lastDamageNoTime < this.minNormalCritShot) {\r\n                this.minNormalCritShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.lastDamageNoTime > this.maxNormalCritShot) {\r\n                this.maxNormalCritShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.minExpCritShot === 0 || this.lastExpDamageNoTime < this.minExpCritShot) {\r\n                this.minExpCritShot = this.lastExpDamageNoTime;\r\n            }\r\n            if (this.lastExpDamageNoTime > this.maxExpCritShot) {\r\n                this.maxExpCritShot = this.lastExpDamageNoTime;\r\n            }\r\n        } else if (hit.critShot && hit.headShot) {\r\n            if (this.minNormalHeadCritShot === 0 || this.lastDamageNoTime < this.minNormalHeadCritShot) {\r\n                this.minNormalHeadCritShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.lastDamageNoTime > this.maxNormalHeadCritShot) {\r\n                this.maxNormalHeadCritShot = this.lastDamageNoTime;\r\n            }\r\n            if (this.minExpCritHeadShot === 0 || this.lastExpDamageNoTime < this.minExpCritHeadShot) {\r\n                this.minExpCritHeadShot = this.lastExpDamageNoTime;\r\n            }\r\n            if (this.lastExpDamageNoTime > this.maxExpCritHeadShot) {\r\n                this.maxExpCritHeadShot = this.lastExpDamageNoTime;\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: What the bonuses will work here? cripple, bash, power, total, crit, sneak?\r\n    gatherTimeDamages(hit, damageInfo) {\r\n        const baseDamage = damageInfo.damage;\r\n        let bonus = hit.bonusMult[damageInfo.type];\r\n        bonus += this.getCreatureBonusMultiplier(hit.creatureDamageBonuses);\r\n        const totalBonus = this.getTotalBonus(hit);\r\n        let value = baseDamage * bonus * totalBonus;\r\n\r\n        // TODO: The way of stacking is unknown (may be there is no stacking at all)\r\n        if (damageInfo.stack) {\r\n            const existedDamages = this.timeDamages.get(damageInfo.index);\r\n            if (existedDamages) {\r\n                if (existedDamages.length < 10) {\r\n                    existedDamages.push(this.buildTimeDamageItem(damageInfo, value));\r\n                }\r\n            } else {\r\n                this.timeDamages.set(damageInfo.index, [this.buildTimeDamageItem(damageInfo, value)]);\r\n            }\r\n        } else {\r\n            this.timeDamages.set(damageInfo.index, [this.buildTimeDamageItem(damageInfo, value)]);\r\n        }\r\n    }\r\n\r\n    buildTimeDamageItem(damageInfo, value) {\r\n        return {chance: damageInfo.chance, accuracy: damageInfo.finalAccuracy, damageType: damageInfo.type, time: damageInfo.time, value: value, index: damageInfo.index}\r\n    }\r\n\r\n    timeDamagesHandler(items, key, map) {\r\n        let dTime = this.lastShotTime;\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n\r\n            // Protect\r\n            if (dTime === 0) {\r\n                item.time = 0;\r\n            }\r\n            else if (item.time < dTime) {\r\n                dTime = item.time;\r\n                item.time = 0;\r\n            } else {\r\n                item.time -= dTime;\r\n            }\r\n            const damage = item.value * dTime;\r\n            this.tdCounter += 1;\r\n            let finalDamage = this.causeFinalDamage(damage, item.damageType, false, false);\r\n            this.memoDamage(finalDamage, true, false, item.chance, item.accuracy);\r\n        }\r\n    }\r\n\r\n    deleteTimeDamages(items, key, map) {\r\n        map.set(key, items.filter(item => item.time > 0));\r\n    }\r\n\r\n    getMaxTimeEffects() {\r\n        return this.maxTimeEffects;\r\n    }\r\n\r\n    causeTimeDamages(damageType) {\r\n        this.tdCounter = 0;\r\n        this.timeDamages.forEach(this.timeDamagesHandler, this);\r\n        this.timeDamages.forEach(this.deleteTimeDamages);\r\n        if (this.maxTimeEffects < this.tdCounter) {\r\n            this.maxTimeEffects = this.tdCounter;\r\n        }\r\n    }\r\n\r\n    causeNonTimeDamages(hit, damageInfo) {\r\n        const baseDamage = damageInfo.damage;\r\n        let bonus = hit.bonusMult[damageInfo.type];\r\n        bonus += this.getCreatureBonusMultiplier(hit.creatureDamageBonuses);\r\n        bonus += hit.cripple;\r\n        bonus += hit.powerAttack;\r\n        bonus += hit.lastShotBonus;\r\n        if (damageInfo.kind === \"explosive\") {\r\n            bonus += hit.expDTypeBonus;\r\n        }\r\n        let crit = 0;\r\n        if (hit.critShot) {\r\n            this.critPercent = hit.critBoost;\r\n            crit = baseDamage * hit.critBoost;\r\n        }\r\n        if (damageInfo.type === \"dtPhysical\" && damageInfo.kind === \"physical\") {\r\n            bonus += hit.bash;\r\n        }\r\n        if (this.health === this.creatureInfo.h) {\r\n            bonus += hit.firstBloodBonus;\r\n        }\r\n        const totalBonus = this.getTotalBonus(hit);\r\n        let sneak = 0;\r\n        if (hit.sneakShot) {\r\n            this.sneakPercent = hit.sneak;\r\n            sneak = baseDamage * hit.sneak * totalBonus;\r\n        }\r\n        let value = baseDamage * bonus * totalBonus;\r\n        let expValue = this.getExplosiveDamage(value, hit.weaponType, damageInfo.type, damageInfo.kind, hit.expBonus);\r\n        let critExp = 0;\r\n        if (expValue > 0) {\r\n            critExp = crit * hit.expBonus;\r\n        }\r\n        value += sneak;\r\n        value += crit;\r\n        expValue *= hit.tenderizer;\r\n        expValue += critExp;\r\n        let finalDamage = this.causeFinalDamage(value, damageInfo.type, hit.headShot, false);\r\n        this.memoDamage(finalDamage, false, false, damageInfo.chance, damageInfo.finalAccuracy);\r\n\r\n        // Explosives add for each bullet (no headshot)\r\n        const nonCritExp = expValue - critExp;\r\n        if (expValue > 0) {\r\n            for (let i = 0; i < this.bulletCount; i++) {\r\n                if (i === 0) { // Seems that crit exp must be added only for one bullet?\r\n                    finalDamage = this.causeFinalDamage(expValue, damageInfo.type, false, true);\r\n                } else {\r\n                    finalDamage = this.causeFinalDamage(nonCritExp, damageInfo.type, false, true);\r\n                }\r\n                this.memoDamage(finalDamage, false, true, damageInfo.chance, damageInfo.finalAccuracy);\r\n            }\r\n        }\r\n    }\r\n\r\n    memoDamage(finalDamage, timeDamage, expDamage, chance, accuracy) {\r\n        chance = chance / 100.0;\r\n        accuracy = accuracy / 100.0;\r\n        this.lastTotalDamage += finalDamage;\r\n        this.lastTotalDamageWithAccuracy += finalDamage * chance * accuracy;\r\n        if (!timeDamage) {\r\n            this.lastTotalDamageNoTime += finalDamage;\r\n        } else {\r\n            this.lastTotalDamageTime += finalDamage;\r\n        }\r\n        if (!timeDamage && !expDamage) {\r\n            this.lastDamageNoTime += finalDamage;\r\n        } else if (!timeDamage && expDamage) {\r\n            this.lastExpDamageNoTime += finalDamage;\r\n        }\r\n    }\r\n\r\n    getArmorValue(type) {\r\n        switch(type) {\r\n            case \"dtPhysical\":\r\n                return this.physical;\r\n            case \"dtEnergy\":\r\n                return this.energy;\r\n            case \"dtFire\":\r\n                return this.fire;\r\n            case \"dtPoison\":\r\n                return this.poison;\r\n            case \"dtCryo\":\r\n                return this.cryo;\r\n            case \"dtRadiationExposure\":\r\n                return this.radiation;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    getExplosiveDamage(value, weaponType, damageType, damageKind, expBonus) {\r\n        if (damageKind === 'bleed') {\r\n            return 0;\r\n        }\r\n        if (weaponType !== \"Melee\" && weaponType !== \"Unarmed\" && weaponType !== \"Thrown\") {\r\n            if ((damageType === 'dtPhysical' && damageKind === \"physical\") || damageType === 'dtEnergy') {\r\n                return value * expBonus;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getTotalBonus(hit) {\r\n        let totalBonus = hit.totalDamageBonus * hit.tenderizer;\r\n        totalBonus *= (this.health / this.creatureInfo.h < 0.4) ? hit.executionerBonus : 1.0;\r\n        return totalBonus;\r\n    }\r\n\r\n    getCreatureBonusMultiplier(creatureDamageBonuses) {\r\n        let result = 0;\r\n        if (this.name === \"Dummy\") {\r\n            return 0;\r\n        }\r\n        for (let [, damageBonus] of creatureDamageBonuses) {\r\n            const bonusName = damageBonus.name;\r\n            const bonusMult = damageBonus.value;\r\n            if (this.tags.includes(bonusName) || this.body === bonusName || this.name === bonusName) {\r\n                result += (bonusMult / 100.0);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getLastTotalDamage() {\r\n        return this.lastTotalDamage;\r\n    }\r\n\r\n    getLastTotalDamageWithAccuracy() {\r\n        return this.lastTotalDamageWithAccuracy;\r\n    }\r\n\r\n    getGetLastTotalDamageNoTime() {\r\n        return this.lastTotalDamageNoTime;\r\n    }\r\n\r\n    getLastTotalDamageTime() {\r\n        return this.lastTotalDamageTime;\r\n    }\r\n\r\n    causeFinalDamage(value, damageType, isHead, explosive) {\r\n        let finalDamage;\r\n        let damageReduction = 1 - this.damageReduction;\r\n\r\n        // No reduction if bleeding (storm boss)\r\n        if (this.bleed && this.damageReductionOnlyNotBleeding) {\r\n            damageReduction = 1;\r\n        }\r\n        if (explosive && !this.expResistance) {\r\n            finalDamage = value * damageReduction;\r\n        } else {\r\n            finalDamage = this.finalDamage(value, damageType) * damageReduction;\r\n        }\r\n        if (isHead) {\r\n            finalDamage *= this.headMult;\r\n        } else {\r\n            finalDamage *= this.bodyMult;\r\n        }\r\n        this.health -= finalDamage;\r\n\r\n        // It is useful if you need to check average hit to determine the best weapon especially if a creature live time is 0\r\n        this.sumDamages += finalDamage;\r\n        if (finalDamage > this.maxHit) {\r\n            this.maxHit = finalDamage;\r\n        }\r\n        return finalDamage;\r\n    }\r\n\r\n    getAverageHit() {\r\n        if (this.hits === 0) {\r\n            return 0;\r\n        }\r\n        return this.sumDamages / this.hits;\r\n    }\r\n\r\n    finalDamage(value, type) {\r\n        if (type === \"dtRadiationExposure\" && this.immuneToRadiation) {\r\n            return 0;\r\n        } else if (type === \"dtPoison\" && this.immuneToPoison) {\r\n            return 0;\r\n        }\r\n        const armor = this.getArmorValue(type);\r\n        if (armor === Infinity) {\r\n            return 0;\r\n        } else if (armor === 0) {\r\n            return value;\r\n        }\r\n        let k = (0.15 * value / armor) ** 0.365;\r\n        if (k > 0.99) {\r\n            k = 0.99;\r\n        } else if (k < 0.01) {\r\n            k = 0.01;\r\n        }\r\n        return  k * value;\r\n    }\r\n\r\n    isDead() {\r\n        return this.health <= 0;\r\n    }\r\n\r\n    totalTime() {\r\n        return parseInt((this.lifeTime - this.lastShotTime) * 1000);\r\n    }\r\n\r\n    formDeadReport(reloads, reloadsTime) {\r\n        if (!this.reported) {\r\n            this.reported = true;\r\n            this.creatureInfo.averageHit = this.getAverageHit();\r\n            this.creatureInfo.maxHit = this.maxHit;\r\n            this.creatureInfo.sneak = (this.sneakPercent > 0) ? (this.sneakPercent * 100.0).toFixed(1) + \"%\" : \"\";\r\n            this.creatureInfo.crit = (this.critPercent > 0) ? (this.critPercent * 100.0).toFixed(1) + \"%\" : \"\";\r\n            this.creatureInfo.totalDamage = \"↓\" + this.minTotalDamage.toFixed(1) + \" - ↑\" + this.maxTotalDamage.toFixed(1);\r\n            this.creatureInfo.normalDamage = \"(↓\" + (this.minNormalShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxNormalShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.headShotDamage = \"(↓\" + (this.minHeadShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxHeadShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.headExpShotDamage = \"(↓\" + (this.minHeadExpShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxHeadExpShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.critNormalDamage = \"(↓\" + (this.minNormalCritShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxNormalCritShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.critHeadNormalDamage = \"(↓\" + (this.minNormalHeadCritShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxNormalHeadCritShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.explosiveDamage = \"(↓\" + (this.minExpShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxExpShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.critExplosiveDamage = \"(↓\" + (this.minExpCritShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxExpCritShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            this.creatureInfo.critExplosiveHeadDamage = \"(↓\" + (this.minExpCritHeadShot / this.bulletCount).toFixed(1) + \" - ↑\" + (this.maxExpCritHeadShot / this.bulletCount).toFixed(1) + \") x \" + this.bulletCount;\r\n            if (this.isDead()) {\r\n                this.creatureInfo.ammo = this.hits;\r\n                this.creatureInfo.reloads = reloads;\r\n                this.creatureInfo.reloadsTime = reloadsTime;\r\n                this.creatureInfo.lifeTime = this.totalTime();\r\n            } else { // Damage is to small, just emulate\r\n                const damagedHealth = this.creatureInfo.h - this.health;\r\n                if (damagedHealth === 0) {\r\n                    this.creatureInfo.ammo = Infinity;\r\n                    this.creatureInfo.reloads = Infinity;\r\n                    this.creatureInfo.reloadsTime = Infinity;\r\n                    this.creatureInfo.lifeTime = Infinity;\r\n                } else {\r\n                    const ratio = this.health / damagedHealth;\r\n                    this.creatureInfo.reloads = reloads + parseInt(reloads * ratio);\r\n                    this.creatureInfo.reloadsTime = reloadsTime + parseInt(reloadsTime * ratio);\r\n                    this.creatureInfo.ammo = this.hits + parseInt(this.hits * ratio);\r\n                    this.creatureInfo.lifeTime = parseInt((this.lifeTime + this.lifeTime * ratio - this.lastShotTime) * 1000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import Creature from './Creature';\r\nimport { getDummy } from '../entities/ECreatures';\r\n\r\n\r\nexport default class CreaturesProduction {\r\n\r\n    static produce(materials, antiArmor) {\r\n        const creatures = [];\r\n        for (const property in materials) {\r\n            const creatureInfo = materials[property];\r\n            const creature = new Creature(creatureInfo);\r\n            creature.reduceArmor(antiArmor);\r\n            creatures.push(creature);\r\n        }\r\n        return creatures;\r\n    }\r\n\r\n    static produceByArmor(creatureInfo, armor) {\r\n        const dummy = getDummy(creatureInfo);\r\n        dummy.b = armor[0];\r\n        dummy.e = armor[1];\r\n        dummy.f = armor[2];\r\n        dummy.p = armor[3];\r\n        dummy.c = armor[4];\r\n        dummy.r = armor[5];\r\n        return new Creature(dummy);\r\n    }\r\n}\r\n\r\n","const darkBlue = {\r\n    backgroundColor: '#e6f7ff',\r\n    borderColor: '#0085c6',\r\n    color: '#003e5d',\r\n}\r\n\r\nconst blue = {\r\n    backgroundColor: '#f7fbff',\r\n    borderColor: '#0072a3',\r\n    color: '#1d6db8',\r\n}\r\n\r\nconst indigo = {\r\n    backgroundColor: '#fdfaff',\r\n    borderColor: '#5a008a',\r\n    color: '#430067',\r\n}\r\n\r\nconst red = {\r\n    backgroundColor: '#fff4f4',\r\n    borderColor: '#890000',\r\n    color: '#c90000',\r\n}\r\n\r\nconst orange = {\r\n    backgroundColor: '#fffaf0',\r\n    borderColor: '#ffa800',\r\n    color: '#b56b1d',\r\n}\r\n\r\nconst magenta = {\r\n    backgroundColor: '#fff1fa',\r\n    borderColor: '#ca007c',\r\n    color: '#ab1672',\r\n}\r\n\r\nconst grey = {\r\n    backgroundColor: '#f4f4f4',\r\n    borderColor: '#9f9f9f',\r\n    color: '#3f3f3f',\r\n}\r\n\r\nconst colors = {\r\n    blue: blue,\r\n    darkBlue: darkBlue,\r\n    orange: orange,\r\n    magenta: magenta,\r\n    grey: grey,\r\n    indigo: indigo,\r\n    red: red,\r\n};\r\n\r\nexport default function UTag(props) {\r\n    const colorScheme = colors[props.color];\r\n    const borderRadius = props.bRadius ? props.bRadius : \"2px\";\r\n    const bWidth = props.bWidth ? props.bWidth : \"1px\";\r\n    let bgColor = grey.backgroundColor;\r\n    let borderColor = grey.borderColor;\r\n    let color = grey.color;\r\n    if (colorScheme) {\r\n        bgColor = colorScheme.backgroundColor;\r\n        color = colorScheme.color;\r\n        borderColor = colorScheme.borderColor;\r\n    }\r\n    if (!props.border) {\r\n        borderColor = bgColor;\r\n    }\r\n    const style = {\r\n        width: \"auto\",\r\n        fontSize: \"0.7rem\",\r\n        fontWeight: \"bold\",\r\n        backgroundColor: bgColor,\r\n        borderRadius: borderRadius,\r\n        borderStyle: \"solid\",\r\n        borderWidth: bWidth,\r\n        borderColor: borderColor,\r\n        color: color,\r\n        whiteSpace: \"nowrap\",\r\n    }\r\n    let result;\r\n    if (props.onClick) {\r\n       result = getButton(props, style);\r\n    } else {\r\n        result = getTag(props, style);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getButton(props, style) {\r\n    const className = (props.className) ? \"button-3 \" + props.className : \"button-3\";\r\n    return (<button className={className} title={props.title} style={style} onClick={props.onClick}>{props.children}</button>);\r\n}\r\n\r\nfunction getTag(props, style) {\r\n    return (<div title={props.title} className={props.className} style={style} onClick={props.onClick}>{props.children}</div>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Divider } from 'antd';\r\nimport UTag from '../viewComponents/tag/UTag';\r\nimport { numberToString } from '../helpers/StringHelpers';\r\n\r\n\r\nfunction getColTagView(tag, index, position, mult, onBodyPartClick) {\r\n    return (\r\n        <Col key={tag + index} className={\"m-1 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <UTag title={mult} style={{cursor: 'pointer'}} className=\"m-1 ps-2 pe-2 p-2\" bRadius=\"5px\" border={true} color={\"grey\"} onClick={onBodyPartClick}>\r\n                {tag}\r\n            </UTag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function CreatureBodyView(props) {\r\n    function onBodyPartClick(e) {\r\n        props.creature.bodyShot = e.currentTarget.title;\r\n        props.setCreatures({...props.creatures});\r\n    }\r\n    const body = props.creature.bodyParts;\r\n    if (body) {\r\n        const result = [];\r\n        let index = 0\r\n        for (const partName in body) {\r\n            index += 1;\r\n            const part = body[partName];\r\n            const partText = part.name + \" ‣ \" + numberToString(part.damage_mult, 2) + \"x\"\r\n            result.push(getColTagView(partText, index, \"center\", part.damage_mult, onBodyPartClick));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-2 mb-1\">Body Damage Multipliers</Divider>\r\n                <div className=\"m-3\" />\r\n                <Row className=\"ps-1 pe-1 pb-2\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Divider } from 'antd';\r\nimport UTag from '../viewComponents/tag/UTag';\r\n\r\n\r\nfunction getColTagView(tag, index, position) {\r\n    return (\r\n        <Col key={tag + index} className={\"m-1 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <UTag className=\"m-1 ps-2 pe-2 p-1\" bRadius=\"5px\" border={true} color={\"indigo\"}>\r\n                {tag}\r\n            </UTag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function CreatureBodyView(props) {\r\n    const tags = props.creature.tags;\r\n    if (tags) {\r\n        const result = [];\r\n        for (let i = 0; i < tags.length; i++) {\r\n            result.push(getColTagView(tags[i], i, \"center\"));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-4 mb-1\">Tags</Divider>\r\n                <div className=\"m-3\" />\r\n                <Row className=\"ps-1 pe-1 pb-2\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Divider } from 'antd';\r\nimport UTag from '../viewComponents/tag/UTag';\r\n\r\n\r\nfunction getColTagView(red, index, position, onClick) {\r\n    return (\r\n        <Col key={red + index} className={\"m-1 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <UTag title={red} className=\"m-1 ps-2 pe-2 p-1\" bRadius=\"5px\" border={true} color={\"orange\"} onClick={onClick}>\r\n                {red}\r\n            </UTag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function CreatureReductionView(props) {\r\n    const reductions = props.creature.damageReductions;\r\n    function onClick(e) {\r\n        props.creature.damageReduction = e.currentTarget.title;\r\n        props.setCreatures({...props.creatures});\r\n    }\r\n    if (reductions) {\r\n        const result = [];\r\n        for (let i = 0; i < reductions.length; i++) {\r\n            result.push(getColTagView(reductions[i], i, \"center\", onClick));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-2 mb-1\">Damage Reduction</Divider>\r\n                <div className=\"m-2\" />\r\n                <Row className=\"ps-1 pe-1 pb-2\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { checkLength } from '../helpers/Input';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport CreatureBodyView from './CreatureBodyView';\r\nimport CreatureTagsView from './CreatureTagsView';\r\nimport CreatureReductionView from './CreatureReductionView';\r\nimport { Divider } from 'antd';\r\nimport CreatureChooser from './CreatureChooser';\r\nimport CreatureInfoButton from './CreatureInfoButton';\r\n\r\n\r\nfunction col(name, creatures, setCreatures, creature, res_field, color, canDisable, min=0, max=9999) {\r\n    function onChange(e) {\r\n        checkLength(e);\r\n        if (e.target.value < min) {\r\n            e.target.value = min;\r\n        }\r\n        creature[res_field] = parseFloat(e.target.value);\r\n        setCreatures({\r\n            ...creatures,\r\n        });\r\n    }\r\n    function getCheckbox(canDisable) {\r\n        const chColor = (res_field === \"p\") ? \"#237504\" : \"#a4aa04\";\r\n        function onChange(e) {\r\n            const enabled = (res_field === \"p\") ? creature.immuneToPoison : creature.immuneToRadiation;\r\n            const result = !enabled\r\n            if (res_field === \"p\") {\r\n                creature.immuneToPoison = result;\r\n            } else {\r\n                creature.immuneToRadiation = result;\r\n            }\r\n            setCreatures({\r\n                ...creatures,\r\n            });\r\n        }\r\n        if (canDisable) {\r\n            return (\r\n                <InputGroup.Text style={{width: '2.6rem'}}>\r\n                    <UCheckbox checked={!((res_field === \"p\") ? creature.immuneToPoison : creature.immuneToRadiation)} checkBorderColor={chColor} checkBgColor={chColor} onChange={onChange}></UCheckbox>\r\n                </InputGroup.Text>\r\n            );\r\n        }\r\n        return <></>;\r\n    }\r\n    let disabled = false;\r\n    if (res_field === \"p\" || res_field === \"r\") {\r\n        disabled = (res_field === \"p\") ? creature.immuneToPoison : creature.immuneToRadiation;\r\n    }\r\n    const width = (canDisable) ? '7.45rem' : '10rem';\r\n    const value = creature[res_field];\r\n    return (\r\n        <Col>\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                <InputGroup.Text className={color} style={{ width: width }}>{name}</InputGroup.Text>\r\n                {getCheckbox(canDisable)}\r\n                <Form.Control className='w-auto' disabled={disabled} type=\"number\" min={min} value={value} max={max} maxLength=\"7\" onChange={onChange} />\r\n            </InputGroup>\r\n        </Col>);\r\n}\r\n\r\nconst energy = <>&#9889; Energy</>;\r\nconst ballistic = <>&#128165; Physical</>;\r\nconst fire = <>&#128293; Fire</>;\r\nconst poison = <>☣️ Poison</>;\r\nconst cold = <>❄️ Cryo</>;\r\nconst rad = <>☢️ Radiation</>;\r\nconst health = <>❤️ Health</>;\r\nconst reduction = <>🧽 Reduction</>;\r\nconst headShot = <>🤕 Head Shot</>;\r\nconst bodyShot = <>🧍 Body Shot</>;\r\nconst creatureTypes = {Normal: 'normal', Scorched: 'scorched', Glowing: 'glowing'};\r\n\r\n\r\nfunction CreatureStats({creatureNamesRef, creatures, setCreatures, creature, resultDamage}) {\r\n    console.log(\"CreatureStats\");\r\n    function onRadioTypeClick(e) {\r\n        creature.curBody = e.target.value;\r\n        setCreatures({...creatures});\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-end mb-2\">\r\n                <CreatureInfoButton creature={creature} resultDamage={resultDamage} />\r\n            </div>\r\n            <div className=\"text-center mb-3\">\r\n                <CreatureChooser creatureNamesRef={creatureNamesRef} creature={creature} creatures={creatures} setCreatures={setCreatures} />\r\n                <div className=\"m-2\" />\r\n                <Row>\r\n                    {col(ballistic, creatures, setCreatures, creature, \"b\", \"bg-ballistic\", false)}\r\n                    {col(energy, creatures, setCreatures, creature, \"e\", \"bg-energy\", false)}\r\n                </Row>\r\n                <Row>\r\n                    {col(fire, creatures, setCreatures, creature, \"f\", \"bg-fire\", false)}\r\n                    {col(poison, creatures, setCreatures, creature, \"p\", \"bg-poison\", true)}\r\n                </Row>\r\n                <Row>\r\n                    {col(cold, creatures, setCreatures, creature, \"c\", \"bg-cold\", false)}\r\n                    {col(rad, creatures, setCreatures, creature, \"r\", \"bg-rad\", true)}\r\n                </Row>\r\n                <Row>\r\n                    {col(health, creatures, setCreatures, creature, \"h\", \"bg-health\", false, 1, 999999)}\r\n                    {col(reduction, creatures, setCreatures, creature, \"damageReduction\", \"bg-reduction\", false, 0, 0.9)}\r\n                </Row>\r\n                <Row>\r\n                    {col(headShot, creatures, setCreatures, creature, \"headShot\", \"bg-head-shot\", false, 1, 2)}\r\n                    {col(bodyShot, creatures, setCreatures, creature, \"bodyShot\", \"bg-body-shot\", false, 0.1, 2)}\r\n                </Row>\r\n                <CreatureTagsView creature={creature} />\r\n                <CreatureBodyView creature={creature} creatures={creatures} setCreatures={setCreatures} />\r\n                <CreatureReductionView creature={creature} creatures={creatures} setCreatures={setCreatures} />\r\n                <Divider className=\"p-0 mt-1 mb-3\">Body</Divider>\r\n                <div className=\"pt-1 pb-1 d-flex justify-content-center\">\r\n                    <BSRadio pairs={creatureTypes} selectedValue={creature.curBody} onClick={onRadioTypeClick} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreatureStats;","import { Collapse } from 'antd';\r\nimport CreatureStats from \"../creature/CreatureStats\";\r\n\r\n\r\nfunction getLabel(creature) {\r\n    return (\r\n        <>\r\n            <div style={{float: \"left\", width: \"auto\"}}>\r\n                <b className=\"creature-label-text\">{creature.capName}</b>\r\n            </div>\r\n            <div style={{float: \"right\", width: \"auto\"}}>\r\n                <b style={{color: '#091503'}}>Lvl:</b> <b style={{fontSize: '0.9rem', color: '#bb0000'}}>{creature.level}</b>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nfunction getItems(creatureNamesRef, creatures, setCreatures, resultDamage) {\r\n    const items = [];\r\n    let i = 0;\r\n    for (const name in creatures) {\r\n        const creature = creatures[name];\r\n        const item = {\r\n            key: i,\r\n            label: getLabel(creature),\r\n            children: <CreatureStats creatureNamesRef={creatureNamesRef} creatures={creatures} setCreatures={setCreatures} creature={creature} resultDamage={resultDamage} />,\r\n        };\r\n        i++;\r\n        items.push(item);\r\n    }\r\n    return items;\r\n}\r\n\r\nexport default function CreaturesStats(props) {\r\n    const items = getItems(props.creatureNamesRef, props.creatures, props.setCreatures, props.resultDamage);\r\n    return (\r\n        <div className=\"mt-1 mb-3\">\r\n            <Collapse accordion key={\"Creatures\"} items={items} />\r\n        </div>\r\n    );\r\n}","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport CreaturesStats from \"./CreaturesStats\";\r\nimport CreatureDataView from \"./CreatureDataView\";\r\nimport { memo, useState } from 'react';\r\nimport { defaultCreatures, defaultCreaturesAlt } from '../entities/ECreatures';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport StaticPopoverRenderer from '../viewComponents/popover/StaticPopoverRenderer';\r\nimport Global from '../helpers/Global';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { buildExtraDamageView, buildExtraDamageButtons } from '../main/SummaryView';\r\nimport { Divider } from 'antd';\r\n\r\n\r\nconst questionPopoverHeader = (<b>Creatures</b>);\r\n\r\nconst questionPopoverBody = (\r\n    <>\r\n        <div className=\"mb-2\"><b>Parsed from:</b></div>\r\n        <div><i>{Global.creatureParseVersion}</i></div>\r\n        <div><i>{Global.creatureParseVersionName}</i></div>\r\n    </>\r\n);\r\n\r\nconst questionPopover = new StaticPopoverRenderer(questionPopoverHeader, questionPopoverBody, 'CreatureViewQuestionPopoverPlace');\r\n\r\nconst CreaturesView = memo(function CreaturesView({creatureNamesRef, creatures, setCreatures, resultDamage, extraDamage, setExtraDamage, boostDamageRef, setBoostDamage}) {\r\n    console.log(\"CreaturesView\")\r\n    const [alt, setAlt] = useState(false);\r\n    function resetCreatures(e) {\r\n        if (alt) {\r\n            setCreatures(defaultCreaturesAlt());\r\n        } else {\r\n            setCreatures(defaultCreatures());\r\n        }\r\n    }\r\n    function checkAlt(e) {\r\n        setAlt(!alt);\r\n    }\r\n    function onQClick(e) {\r\n        questionPopover.renderToggle(e.target);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"5\">\r\n                <Accordion.Header>\r\n                    <div id=\"CreatureViewQuestionPopoverPlace\"></div>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '12rem'}}>\r\n                            <span className=\"ac-text\">Creatures</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '2rem'}} onClick={onQClick}>?</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <div >\r\n                        <InputGroup className=\"d-flex justify-content-center mt-1 mb-1\">\r\n                            <InputGroup.Text>\r\n                                <UCheckbox onChange={checkAlt} checked={alt}><small><b className=\"ps-1\">Alt</b></small></UCheckbox>\r\n                            </InputGroup.Text>\r\n                            <Button size=\"sm\" variant=\"warning\" onClick={resetCreatures}><b>Reset to Bosses</b></Button>\r\n                        </InputGroup>\r\n                    </div>\r\n                    <Divider className=\"mb-2\">Extra Damage</Divider>\r\n                    {buildExtraDamageView(extraDamage, setExtraDamage, boostDamageRef, setBoostDamage, false)}\r\n                    <div className=\"m-2\" />\r\n                    {buildExtraDamageButtons(extraDamage, setExtraDamage)}\r\n                    <Divider className=\"mt-3 mb-3\"></Divider>\r\n                    <CreaturesStats creatureNamesRef={creatureNamesRef} creatures={creatures} setCreatures={setCreatures} resultDamage={resultDamage} />\r\n                    <CreatureDataView />\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default CreaturesView;","import Col from 'react-bootstrap/Col';\r\nimport { keyValueBadge } from '../helpers/RowBuilder';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { memo } from 'react';\r\nimport { Divider } from 'antd';\r\n\r\n\r\nfunction resultBadges(style, left1, right1, left2, right2) {\r\n    return (\r\n        <div className=\"col d-flex justify-content-center\">\r\n            <Stack className='pb-2' direction=\"horizontal\" gap={1}>\r\n                {keyValueBadge(style, '9rem', left1,  right1)}\r\n                {keyValueBadge(style, '9rem', left2,  right2)}\r\n            </Stack>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AAView = memo(function AAView({resultDamage}) {\r\n    if (!resultDamage.antiArmor) {\r\n        return (<></>);\r\n    }\r\n    const antiArmor = resultDamage.antiArmor;\r\n    let aab = antiArmor.b.toFixed(1) + \"%\";\r\n    let aae = antiArmor.e.toFixed(1) + \"%\";\r\n    let aaf = antiArmor.f.toFixed(1) + \"%\";\r\n    let aac = antiArmor.c.toFixed(1) + \"%\";\r\n    let aap = antiArmor.p.toFixed(1) + \"%\";\r\n    let aar = antiArmor.r.toFixed(1) + \"%\";\r\n    function getAATail(aa, aai) {\r\n        let aav = (1 - ((1 - aa / 100.0) * aai)) * 100.0;\r\n        return \" (\" + aav.toFixed(1) + \"%)\";\r\n    }\r\n    if (antiArmor.insect > 0) {\r\n        let aai = 1 - antiArmor.insect / 100.0;\r\n        aab += getAATail(antiArmor.b, aai);\r\n        aae += getAATail(antiArmor.e, aai);\r\n        aaf += getAATail(antiArmor.f, aai);\r\n        aac += getAATail(antiArmor.c, aai);\r\n        aap += getAATail(antiArmor.p, aai);\r\n        aar += getAATail(antiArmor.r, aai);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className='mt-1 mb-2'>🛡️ Anti Armor</Divider>\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        {resultBadges(\"badge bg-light-cream-outline ms-1 me-1 mb-1\", \"💥\", aab, \"⚡\", aae)}\r\n                        {resultBadges(\"badge bg-light-cream-outline ms-1 me-1 mb-1\", \"🔥\", aaf, \"❄️\", aac)}\r\n                        {resultBadges(\"badge bg-light-cream-outline ms-1 me-1\", \"☢️\", aar, \"☣️\", aap)}\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default AAView;","import { memo } from 'react';\r\nimport { Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nimport DamageDetailsCard from './DamageDetailsCard';\r\nimport AAView from './AAView';\r\n\r\n\r\nfunction getDamageViews(resultDamage) {\r\n    let damageViews = [];\r\n    if (!resultDamage.damageDetails) {\r\n        return (<></>);\r\n    }\r\n    for (let i = 0; i < resultDamage.damageDetails.length; i++) {\r\n        damageViews.push(<DamageDetailsCard key={i} resultDamage={resultDamage} damageData={resultDamage.damageDetails[i]} />);\r\n    }\r\n    if (damageViews.length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className='mt-3 mb-2'>💢 Damage</Divider>\r\n            <Row>\r\n                {damageViews}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst DamageDetails = memo(function DamageDetails({resultDamage}) {\r\n    console.log(\"DamageDetails\");\r\n    if (!resultDamage) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <AAView resultDamage={resultDamage} />\r\n            {getDamageViews(resultDamage)}\r\n        </>\r\n    );\r\n});\r\n\r\nexport default DamageDetails;","import Card from 'react-bootstrap/Card';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport { memo, useState } from 'react';\r\nimport { getSymbolStyle } from '../helpers/AdditionalDView';\r\nimport { getNumberEmoji } from '../helpers/Emoji.js';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\n\r\nfunction getRow(leftValue, rightValue, leftColor, rightColor, show=true) {\r\n    return (show) ? keyValueRow((<span className=\"pt-0 pb-0\">{leftValue}</span>), (<span className=\"pt-0 pb-0\"><strong>{rightValue}</strong></span>), leftColor, rightColor) : (<></>);\r\n}\r\n\r\nfunction showExplosive(damageData, resultDamage) {\r\n    return damageData.type === \"dtPhysical\" && damageData.kind === \"physical\" && damageData.time === 0 && resultDamage.explosive > 0;\r\n}\r\n\r\nfunction getAnyCreatureBonus(resultDamage) {\r\n    for (let [, bonus] of resultDamage.creatureBonus) {\r\n        if (bonus.name === \"any\") {\r\n            return bonus.value / 100.0;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getCreatureNames(resultDamage) {\r\n    let result = [\"general\"];\r\n    for (let [key,] of resultDamage.creatureBonus) {\r\n        result.push(key);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getResult(resultDamage, damageData, additionalBonus=0) {\r\n    const damageValue = damageData.damage * ((damageData.time > 0) ? damageData.time : 1);\r\n    let bonusMult = resultDamage.bonusMult[damageData.type] - 1 + getAnyCreatureBonus(resultDamage) + additionalBonus;\r\n    if (damageData.kind === \"explosive\") {\r\n        bonusMult += resultDamage.expDTypeBonus;\r\n    }\r\n    const bonusDamage = damageValue * bonusMult;\r\n    const bonusText = \"+\" + (bonusMult * 100).toFixed(1) + \"% (+\" + bonusDamage.toFixed(1) + \")\";\r\n    const crit = resultDamage.displayedCrit / 100.0;\r\n    const critValue = damageValue * crit;\r\n    const critText = \"+\" + resultDamage.displayedCrit.toFixed(1) + \"%  (+\" + critValue.toFixed(1) + \")\";\r\n    const sneak = (resultDamage.isSneak) ? resultDamage.displayedSneak / 100.0 : 0;\r\n    const totalSneakValue = sneak * damageValue;\r\n    const totalDamageBonusMin = resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer;\r\n    const totalDamageBonusMinValue = (damageValue + bonusDamage + totalSneakValue) * (totalDamageBonusMin - 1);\r\n    const totalDamageBonusMinPercent = (totalDamageBonusMin - 1) * 100;\r\n    const totalDamageBonusMax = resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer * resultDamage.totalBonus.executioner;\r\n    const totalDamageBonusMaxValue = (damageValue + bonusDamage + totalSneakValue) * (totalDamageBonusMax - 1);\r\n    const totalDamageBonusMaxPercent = (resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer * resultDamage.totalBonus.executioner - 1) * 100;\r\n    let totalDamageBonusText = \"\";\r\n    if (totalDamageBonusMin === totalDamageBonusMax) {\r\n        totalDamageBonusText = \"+\" + totalDamageBonusMinPercent.toFixed(1) + \"% (+\" + totalDamageBonusMinValue.toFixed(1) + \")\";\r\n    } else {\r\n        totalDamageBonusText = \"+\" + totalDamageBonusMinPercent.toFixed(1) + \"% / +\" + totalDamageBonusMaxPercent.toFixed(1) + \"%\"\r\n        + \" (+\" + totalDamageBonusMinValue.toFixed(1) + \" / +\" + totalDamageBonusMaxValue.toFixed(1) + \")\";\r\n    }\r\n    const sneakText = \"+\" + resultDamage.displayedSneak.toFixed(1) + \"% (+\" + totalSneakValue.toFixed(1) + \")\";\r\n    const resultSneakValue = (resultDamage.isSneak) ? totalSneakValue : 0;\r\n    const resultCritValue = (resultDamage.isCrit) ? critValue : 0;\r\n    const totalDamageMin = (damageValue + bonusDamage + resultSneakValue) * totalDamageBonusMin + resultCritValue;\r\n    const totalDamageMax = (damageValue + bonusDamage + resultSneakValue) * totalDamageBonusMax + resultCritValue;\r\n    const explosiveValueMin = (damageValue + bonusDamage) * totalDamageBonusMin * resultDamage.explosive / 100.0;\r\n    const explosiveValueMax = (damageValue + bonusDamage) * totalDamageBonusMax * resultDamage.explosive / 100.0;\r\n    let explosiveText = explosiveValueMin.toFixed(1);\r\n    const explosiveCritValueMin = critValue * resultDamage.explosive / 100.0 + explosiveValueMin;\r\n    const explosiveCritValueMax = critValue * resultDamage.explosive / 100.0 + explosiveValueMax;\r\n    let explosiveCritText = explosiveCritValueMin.toFixed(1);\r\n    let totalDamageText = totalDamageMin.toFixed(1);\r\n    if (totalDamageMin < totalDamageMax) {\r\n        totalDamageText += \" (\" + totalDamageMax.toFixed(1) + \")\";\r\n        explosiveText += \" (\" + explosiveValueMax.toFixed(1) + \")\";\r\n        explosiveCritText += \" (\" + explosiveCritValueMax.toFixed(1) + \")\";\r\n    }\r\n    if (damageData.time > 0) {\r\n        const tail = \" / \" + damageData.time.toFixed(0) + \" sec.\";\r\n        totalDamageText += tail;\r\n        explosiveText += tail;\r\n        explosiveCritText += tail;\r\n    }\r\n    return {\r\n        base: damageData.damage.toFixed(1),\r\n        bonus: bonusText,\r\n        totalBonus: totalDamageBonusText,\r\n        explosive: resultDamage.explosive.toFixed(1),\r\n        sneak: sneakText,\r\n        crit: critText,\r\n        total: totalDamageText,\r\n        totalExp: explosiveText,\r\n        totalExpCrit: explosiveCritText,\r\n    };\r\n}\r\n\r\nconst DamageDetailsCard = memo(function DamageDetailsCard({resultDamage, damageData}) {\r\n    const [creature, setCreature] = useState(\"general\");\r\n    if (creature !== \"general\" && !resultDamage.creatureBonus.get(creature)) {\r\n        setCreature(\"general\");\r\n    }\r\n    const numberEmoji = getNumberEmoji(damageData.index + 1);\r\n    const onDropdownSelect = (e) => {\r\n        setCreature(e);\r\n    };\r\n    const currentCreature = resultDamage.creatureBonus.get(creature);\r\n    let additionalBonus = 0;\r\n    if (currentCreature) {\r\n        additionalBonus = currentCreature.value / 100.0;\r\n    }\r\n    const result = getResult(resultDamage, damageData, additionalBonus);\r\n    const creatureNames = getCreatureNames(resultDamage);\r\n    let dropdownItems = [];\r\n    for (let i = 0; i < creatureNames.length; i++) {\r\n        const creatureName = creatureNames[i];\r\n        dropdownItems.push(<Dropdown.Item key={i} eventKey={creatureName}>{creatureName}</Dropdown.Item>);\r\n    }\r\n    return (\r\n        <div className=\"col d-flex justify-content-center mb-2\">\r\n            <Card className=\"main-display-adjustable shadow-outline-unselected\">\r\n                <Card.Header className=\"ps-3 p-1\">\r\n                    <div className=\"d-flex\">\r\n                        <div style={{width: '33%'}} className=\"d-flex justify-content-start center-text\">\r\n                            {getSymbolStyle(damageData.type, damageData.kind)[0]}\r\n                        </div>\r\n                        <div style={{width: '34%'}} className=\"d-flex justify-content-center\">\r\n                            <DropdownButton variant='default' size=\"sm\" onSelect={onDropdownSelect} title={<strong><small>{creature}</small></strong>}>\r\n                                {dropdownItems}\r\n                            </DropdownButton>\r\n                        </div>\r\n                        <div style={{width: '33%'}} className=\"d-flex justify-content-end me-2 center-text\">\r\n                            {numberEmoji}\r\n                        </div>\r\n                    </div>\r\n\r\n                </Card.Header>\r\n                <Card.Body className=\"pt-0 pb-0 ps-2 pe-2\">\r\n                    {getRow(\"Base Damage:\", result.base, \"default\", \"purple\")}\r\n                    {getRow(\"Bonus:\", result.bonus, \"default\", \"purple\")}\r\n                    {getRow(\"Sneak:\", result.sneak, \"default\", \"purple\", resultDamage.isSneak)}\r\n                    {getRow(\"Total Bonus:\", result.totalBonus, \"default\", \"purple\")}\r\n                    {getRow(\"Explosive:\", result.explosive + \"%\", \"default\", \"purple\", showExplosive(damageData, resultDamage))}\r\n                    {getRow(\"Crit:\", result.crit, \"default\", \"purple\", resultDamage.isCrit)}\r\n                </Card.Body>\r\n                <Card.Footer className=\"ps-2 pe-2 text-muted\">\r\n                    {getRow(\"Total Damage:\", result.total, \"default\", \"red\")}\r\n                    {getRow(\"Explosive:\", result.totalExp, \"default\", \"red\", showExplosive(damageData, resultDamage))}\r\n                    {getRow(\"Explosive Crit:\", result.totalExpCrit, \"default\", \"red\", showExplosive(damageData, resultDamage) && resultDamage.isCrit)}\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default DamageDetailsCard;\r\n","import CreaturesProduction from '../creature/CreaturesProduction';\r\n\r\n\r\nexport default class DamageEmulator {\r\n    constructor(weapon, creatureInfos) {\r\n        this.weapon = weapon;\r\n        this.creatureInfos = creatureInfos;\r\n    }\r\n\r\n    needToStopByTime(timeLimit, creatures) {\r\n        if (!timeLimit) {\r\n            return false;\r\n        }\r\n        const name = timeLimit[0];\r\n        const time = timeLimit[1];\r\n        if (name === \"average\") {\r\n            let totalTime = 0;\r\n            for (let i = 0; i < creatures.length; i++) {\r\n                const creature = creatures[i];\r\n                totalTime += creature.totalTime();\r\n            }\r\n            totalTime = Math.floor(totalTime / 4);\r\n            return totalTime > time;\r\n        }\r\n        for (let i = 0; i < creatures.length; i++) {\r\n            const creature = creatures[i];\r\n            if (creature.name === name) {\r\n                return (creature.totalTime() > time);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // timeLimit = [\"Average\", time], [\"creaturename\", time]\r\n    emulate(steps=10000, timeLimit=null) {\r\n        const creatures = CreaturesProduction.produce(this.creatureInfos, this.weapon.getAntiArmor());\r\n        let step = 0;\r\n        for (; step < steps; step++) {\r\n            let deadCount = 0;\r\n            const hit = this.weapon.hit();\r\n            for (let i = 0; i < creatures.length; i++) {\r\n                const creature = creatures[i];\r\n                if (creature.takeDamage(hit)) {\r\n                    creature.formDeadReport(this.weapon.getReloadsCount(), this.weapon.getReloadsTime());\r\n                    deadCount += 1;\r\n                }\r\n            }\r\n            if (deadCount === creatures.length || this.needToStopByTime(timeLimit, creatures)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Check death and form a report\r\n        const resultArmor = new Map();\r\n        for (let i = 0; i < creatures.length; i++) {\r\n            const creature = creatures[i];\r\n            if (!creature.isDead()) {\r\n                creature.formDeadReport(this.weapon.getReloadsCount(), this.weapon.getReloadsTime());\r\n            }\r\n            resultArmor.set(creature.getName(), creature.getArmor());\r\n        }\r\n\r\n        return  {\r\n            weaponName: this.weapon.getName(),\r\n            weaponType: this.weapon.getType(),\r\n            defaultWeaponName: this.weapon.getDefaultName(),\r\n            damageDetails: this.weapon.getDamages(),\r\n            expDTypeBonus: this.weapon.getExplosiveDamageTypeBonus(),\r\n            bonusMult: this.weapon.getBonusMult(),\r\n            totalBonus: this.weapon.getTotalBonus(),\r\n            tDamage: this.weapon.getDisplayedDamage(),\r\n            antiArmor: this.weapon.getAntiArmor(),\r\n            displayedCrit: this.weapon.getCritBonus(),\r\n            displayedSneak: this.weapon.getSneakBonus(),\r\n            isCrit: this.weapon.isCrit(),\r\n            isSneak: this.weapon.isSneak(),\r\n            creatureBonus: this.weapon.getCreatureBonus(),\r\n            strengthBonus: this.weapon.getStrengthBonus(),\r\n            explosive: this.weapon.getExplosiveBonus(),\r\n            shotSize: this.weapon.getShotSize(),\r\n            reloadTime: this.weapon.getReloadTime(),\r\n            fireRate: this.weapon.getFireRate(),\r\n            ammoCapacity: this.weapon.getAmmoCapacity(),\r\n            strength: this.weapon.getStrength(),\r\n            resultArmor: resultArmor,\r\n        };\r\n    }\r\n}","import { memo } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport { TrashIcon } from '../icons/Icons';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { checkLength } from '../helpers/Input';\r\n\r\n\r\nexport function getSymbolStyle(dType) {\r\n    switch(dType) {\r\n        case \"physical\":\r\n            return [\"💥\", \"small p-1 bg-ballistic\"];\r\n        case \"bleed\":\r\n            return [\"🩸\", \"small p-1 bg-bleed\"];\r\n        case \"explosive\":\r\n            return [\"🧨\", \"small p-1 bg-exp\"];\r\n        case \"energy\":\r\n            return [\"⚡\", \"small p-1 bg-energy\"];\r\n        case \"fire\":\r\n            return [\"🔥\", \"small p-1 bg-fire\"];\r\n        case \"cryo\":\r\n            return [\"❄️\", \"small p-1 bg-cold\"];\r\n        case \"poison\":\r\n            return [\"☣️\", \"small p-1 bg-poison\"];\r\n        case \"radiation\":\r\n            return [\"☢️\", \"small p-1 bg-rad\"];\r\n        default:\r\n            return [\"\", \"\"];\r\n    }\r\n}\r\n\r\nfunction getInputItem(dItem, wSpec, setWSpec, style) {\r\n    function onCheck(e) {\r\n        dItem.isUsed = e.target.checked;\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onDamageChange(e) {\r\n        checkLength(e);\r\n        dItem.damage = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onAccuracyChange(e) {\r\n        checkLength(e);\r\n        dItem.accuracy = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onChanceChange(e) {\r\n        checkLength(e);\r\n        dItem.chance = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onStackCheck(e) {\r\n        dItem.stack = e.target.checked;\r\n        setWSpec({...wSpec});\r\n    }\r\n    function onTimeChange(e) {\r\n        checkLength(e);\r\n        dItem.time = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    }\r\n    return (\r\n        <>\r\n            <Col>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <InputGroup.Text style={{ width: '2.8rem'}}>\r\n                        <UCheckbox onChange={onCheck} checked={dItem.isUsed}></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text style={{ width: 'auto' }} className={style}>{\"💢\"}</InputGroup.Text>\r\n                    <Form.Control className=\"pe-1\" style={{ minWidth: '4rem'}} type=\"number\" min=\"0\" value={dItem[\"damage\"]} max={\"999\"} maxLength=\"6\" onChange={onDamageChange} />\r\n                    <InputGroup.Text style={{ width: '2.8rem' }} className={style}>{\"🎯\"}</InputGroup.Text>\r\n                    <Form.Control className=\"pe-1\" style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={dItem[\"accuracy\"]} max={\"100\"} maxLength=\"5\" onChange={onAccuracyChange} />\r\n                </InputGroup>\r\n            </Col>\r\n            <Col>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <InputGroup.Text style={{ width: '2.8rem' }} className={style}>{\"🎲\"}</InputGroup.Text>\r\n                    <Form.Control className=\"pe-1\" style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={dItem[\"chance\"]} max={\"100\"} maxLength=\"5\" onChange={onChanceChange} />\r\n                    <InputGroup.Text>\r\n                        <UCheckbox className=\"me-1\" onChange={onStackCheck} checked={dItem.stack}><small>Stack</small></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text style={{ width: '2.8rem' }} className={style}>{\"⌛\"}</InputGroup.Text>\r\n                    <Form.Control className=\"pe-1\" style={{ width: '4rem' }} type=\"number\" min=\"0\" value={dItem[\"time\"]} max={\"60\"} maxLength=\"4\" onChange={onTimeChange} />\r\n                </InputGroup>\r\n            </Col>\r\n        </>\r\n    );\r\n}\r\nconst DamageItem = memo(function DamageItem({item, wSpec, setWSpec, modalDeleteDamage, setModalDeleteDamage}) {\r\n    const [symbol, style] = getSymbolStyle(item.kind);\r\n    function onTrashClick(e) {\r\n        setModalDeleteDamage({id: item.index, name: item.name, show: true});\r\n    }\r\n    return (\r\n        <Card className=\"mt-2 mb-2 shadow-outline4\">\r\n            <Card.Header size=\"small\" className={style}>\r\n                <Row>\r\n                    <Col className=\"ms-3 m-auto p-0 d-flex justify-content-start\">\r\n                        {symbol + \" \" + item.name}\r\n                    </Col>\r\n                    <Col className=\"me-3 mt-0 mb-0 p-0 d-flex justify-content-end\">\r\n                        <Button className=\"ms-1 pb-auto\" size=\"sm\" id={item.id} name={item.name} onClick={onTrashClick} variant=\"white\">\r\n                            <TrashIcon />\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Header>\r\n            <Card.Body className=\"p-1\">\r\n                <Row>\r\n                    {getInputItem(item, wSpec, setWSpec, \"bg-lite\")}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default DamageItem;","import Strings from '../../helpers/Strings';\r\n\r\n\r\nexport default class Weapon {\r\n\r\n    constructor(weaponSpecsAssembler) {\r\n        this.damages = weaponSpecsAssembler.getDamages();\r\n        this.name = weaponSpecsAssembler.getWeaponName();\r\n        this.defaultName = weaponSpecsAssembler.getDefaultWeaponName();\r\n        this.critDamages = weaponSpecsAssembler.getCritDamages();\r\n        this.shotSize = weaponSpecsAssembler.getShotSize();\r\n        this.reloadTime = weaponSpecsAssembler.getReloadTime();\r\n        this.fireRate = weaponSpecsAssembler.getFireRate();\r\n        this.ammoCapacity = weaponSpecsAssembler.getAmmoCapacity();\r\n        this.antiArmor = weaponSpecsAssembler.getAntiArmor();\r\n        this.strengthBoost = weaponSpecsAssembler.getStrengthBoost();\r\n        this.strength = weaponSpecsAssembler.getStrength();\r\n        this.bonusMult = weaponSpecsAssembler.getBaseDamageMult();\r\n        this.critBoost = weaponSpecsAssembler.getCritBoost();\r\n        this.explosiveBonus = weaponSpecsAssembler.getExplosiveBonus();\r\n        this.explosiveDamageTypeBonus = weaponSpecsAssembler.getExplosivePhysicalBonus();\r\n        this.weaponType = weaponSpecsAssembler.getWeaponType();\r\n        this.headShotFrequency = weaponSpecsAssembler.getHeadShotFrequency();\r\n        this.critShotFrequency = weaponSpecsAssembler.getCritShotFrequency();\r\n        this.sneakShotFrequency = weaponSpecsAssembler.getSneakShotFrequency();\r\n        this.creatureDamageBonuses = weaponSpecsAssembler.getCreatureDamageBonuses();\r\n        this.firstBloodBonus = weaponSpecsAssembler.getFirstBloodBonus();\r\n        this.lastShotBonus = weaponSpecsAssembler.getLastShotBonus();\r\n        this.cripple = weaponSpecsAssembler.getCripple();\r\n        this.bash = weaponSpecsAssembler.getBash();\r\n        this.powerAttack = weaponSpecsAssembler.getPowerAttack();\r\n        this.chargeTime = weaponSpecsAssembler.getChargeTime();\r\n        this.chargePenalty = weaponSpecsAssembler.getChargePenalty();\r\n        this.sneak = weaponSpecsAssembler.getSneak();\r\n        this.totalDamageBonus = weaponSpecsAssembler.getTotalDamageBonus();\r\n        this.magazine = this.ammoCapacity;\r\n        this.enableCrit = true;\r\n        this.enableHeadShot = true;\r\n        this.resultDamage = {bulletCount: this.shotSize, expDTypeBonus: this.explosiveDamageTypeBonus, lastShotBonus: 0, firstBloodBonus: this.firstBloodBonus, creatureDamageBonuses: this.creatureDamageBonuses, headShot: false, critShot: false, sneakShot: false, weaponType: this.weaponType,\r\n            deltaTime: 0, powerAttack: this.powerAttack, bash: this.bash, cripple: 0, bonusMult: this.bonusMult,\r\n            expBonus: this.explosiveBonus, sneak: this.sneak, totalDamageBonus: this.totalDamageBonus.value, critBoost: this.critBoost,\r\n            tenderizer: this.totalDamageBonus.tenderizer, executionerBonus: this.totalDamageBonus.executioner, damages: [],\r\n            critDamages: this.critDamages};\r\n        this.reloadsCount = 0;\r\n        this.reloadTimeCounting = true;\r\n        this.alwaysMaxHit = false;\r\n        this.reloadsTotalTime = 0;\r\n        this.hitCount = 0;\r\n        this.hit();\r\n    }\r\n\r\n    setEnableCrit(flag) {\r\n        this.enableCrit = flag;\r\n    }\r\n\r\n    setEnableHeadShot(flag) {\r\n        this.enableHeadShot = flag;\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getDefaultName() {\r\n        return this.defaultName;\r\n    }\r\n\r\n    getType() {\r\n        return this.weaponType;\r\n    }\r\n\r\n    setLastShotBonus(value) {\r\n        this.lastShotBonus = value;\r\n    }\r\n\r\n    getHeadShotFrequency() {\r\n        return this.headShotFrequency;\r\n    }\r\n\r\n    setFirstBloodBonus(value) {\r\n        this.firstBloodBonus = value;\r\n        this.resultDamage.firstBloodBonus = value;\r\n    }\r\n\r\n    getChargeTime() {\r\n        return this.chargeTime;\r\n    }\r\n\r\n    setChargeTime(value) {\r\n        this.chargeTime = value;\r\n    }\r\n\r\n    getDamages() {\r\n        return this.damages;\r\n    }\r\n\r\n    getCreatureBonus() {\r\n        return this.creatureDamageBonuses;\r\n    }\r\n\r\n    getExplosiveDamageTypeBonus() {\r\n        return this.explosiveDamageTypeBonus;\r\n    }\r\n\r\n    getBonusMult() {\r\n        return this.bonusMult;\r\n    }\r\n\r\n    getTotalBonus() {\r\n        return this.totalDamageBonus;\r\n    }\r\n\r\n    setFireRate(fireRate) {\r\n        this.fireRate = fireRate;\r\n    }\r\n\r\n    setAlwaysMaxHit(flag) {\r\n        this.alwaysMaxHit = flag;\r\n    }\r\n\r\n    disableReloadTimeCounting() {\r\n        this.reloadTimeCounting = false;\r\n    }\r\n\r\n    getMaxHit() {\r\n        return this.hit();\r\n    }\r\n\r\n    getShotSize() {\r\n        return this.shotSize;\r\n    }\r\n\r\n    getStrength() {\r\n        return this.strength;\r\n    }\r\n\r\n    getStrengthBonus() {\r\n        return this.strengthBoost;\r\n    }\r\n\r\n    getCritBonus() {\r\n        return parseInt(this.critBoost * 100.0);\r\n    }\r\n\r\n    getSneakBonus() {\r\n        return parseInt(this.sneak * 100.0);\r\n    }\r\n\r\n    getExplosiveBonus() {\r\n        return this.explosiveBonus * 100.0;\r\n    }\r\n\r\n    getFireRate() {\r\n        return this.fireRate;\r\n    }\r\n\r\n    getAmmoCapacity() {\r\n        return this.ammoCapacity;\r\n    }\r\n\r\n    getReloadTime() {\r\n        return this.reloadTime;\r\n    }\r\n\r\n    getAntiArmor() {\r\n        return this.antiArmor;\r\n    }\r\n\r\n    // Just to display total value as in pip boy (no time)\r\n    getDisplayedDamage() {\r\n        let result = 0;\r\n        let hitCount = (this.shotSize === 0) ? 1 : this.shotSize;\r\n        for (let i = 0; i < this.damages.length; i++) {\r\n            const damage = this.damages[i];\r\n            if (!damage.isUsed || damage.time > 0) {\r\n                continue;\r\n            }\r\n            let curDamage = damage.damage * this.bonusMult[damage.type];\r\n            let expDamage = 0;\r\n            if (damage.type === 'dtPhysical' && damage.kind === 'physical') {\r\n                expDamage = curDamage * this.explosiveBonus;\r\n            }\r\n            curDamage /= hitCount;\r\n            curDamage += expDamage;\r\n            result += curDamage;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    isRanged() {\r\n        return !(this.weaponType === Strings.Melee || this.weaponType === Strings.Unarmed);\r\n    }\r\n\r\n    getReloadsCount() {\r\n        return this.reloadsCount;\r\n    }\r\n\r\n    getReloadsTime() {\r\n        return this.reloadsTotalTime;\r\n    }\r\n\r\n    isSneak() {\r\n        return this.sneakShotFrequency !== 0;\r\n    }\r\n\r\n    getCritShotFrequency() {\r\n        return this.critShotFrequency;\r\n    }\r\n\r\n    isCrit() {\r\n        return this.critShotFrequency !== 0 && this.enableCrit;\r\n    }\r\n\r\n    // Result array is reused every hit, editing is prohibited as it contains ref data\r\n    hit() {\r\n        this.resultDamage.damages.length = 0;\r\n        let dTime = 10 / this.fireRate;\r\n\r\n        // Charge\r\n        dTime += this.chargeTime;\r\n\r\n        // Reload\r\n        if (this.magazine === 0) {\r\n            this.magazine = this.ammoCapacity;\r\n            this.reloadsCount += 1;\r\n            this.reloadsTotalTime += this.reloadTime;\r\n            if (this.reloadTimeCounting) {\r\n                dTime += this.reloadTime;\r\n            }\r\n        }\r\n\r\n        // Last shot\r\n        if (this.magazine === 1 && this.chanceTriggered(25)) {\r\n            this.resultDamage.lastShotBonus = this.lastShotBonus;\r\n        } else {\r\n            this.resultDamage.lastShotBonus = 0;\r\n        }\r\n        this.magazine -= 1;\r\n        this.hitCount += 1;\r\n        this.resultDamage.deltaTime = dTime;\r\n\r\n        // Head shot\r\n        if (this.headShotFrequency === 0 || !this.enableHeadShot) {\r\n            this.resultDamage.headShot = false;\r\n        } else {\r\n            this.resultDamage.headShot = this.chanceTriggered(this.headShotFrequency);\r\n        }\r\n\r\n        // Crit shot\r\n        if (this.critShotFrequency === 0 || !this.enableCrit) {\r\n            this.resultDamage.critShot = false;\r\n        } else {\r\n            this.resultDamage.critShot = this.hitIfFrequency(this.critShotFrequency);\r\n        }\r\n\r\n        // Sneak\r\n        if (this.sneakShotFrequency === 0) {\r\n            this.resultDamage.sneakShot = false;\r\n        } else {\r\n            this.resultDamage.sneakShot = this.hitIfFrequency(this.sneakShotFrequency);\r\n        }\r\n\r\n        // Cripple\r\n        if (this.chanceTriggered(this.cripple.chance) || this.resultDamage.headShot) {\r\n            this.resultDamage.cripple = this.cripple.value;\r\n        } else {\r\n            this.resultDamage.cripple = 0;\r\n        }\r\n\r\n        // Damages\r\n        for (let i = 0; i < this.damages.length; i++) {\r\n            const damage = this.damages[i];\r\n            if (damage.damage > 0 && damage.isUsed && this.chanceTriggered(damage.finalAccuracy) && this.chanceTriggered(damage.chance)) {\r\n                damage.damage = damage.defDamage * this.chargePenalty;\r\n                this.resultDamage.damages.push(damage);\r\n            }\r\n        }\r\n        return this.resultDamage;\r\n    }\r\n\r\n    hitIfFrequency(frequency) {\r\n        if (this.alwaysMaxHit) {\r\n            return true;\r\n        }\r\n        return this.hitCount % frequency === 0;\r\n    }\r\n\r\n    // between 0 - 100\r\n    chanceTriggered(chance) {\r\n        if (this.alwaysMaxHit) {\r\n            return true;\r\n        }\r\n        return Math.random() < (chance / 100.0);\r\n    }\r\n}","import { intersects } from \"../helpers/Array\";\r\n\r\n\r\nexport default class StuffBoostsCollector {\r\n\r\n    static collectAllItems(stuffBoosts, property, collector) {\r\n        stuffBoosts.forEach((value, key) => {\r\n            const maxItem = StuffBoostsCollector.getMaxItem(value);\r\n            if (maxItem.property === property) {\r\n                collector(maxItem);\r\n            }\r\n        });\r\n    }\r\n\r\n    static weaponNameOrTypeSatisfied(weaponName, weaponType, maxItem) {\r\n        if (maxItem.name) {\r\n            return maxItem.name.split(\",\").includes(weaponName);\r\n        } else if (maxItem.type) {\r\n            let types = maxItem.type.split(\",\");\r\n            if (types.length === 0) {\r\n                return true;\r\n            }\r\n            const lastType = types[0];\r\n            let satisfyNameOrType;\r\n            if (lastType === \"!\") { // Not include\r\n                types = types.slice(1);\r\n                satisfyNameOrType = true;\r\n            } else {\r\n                satisfyNameOrType = false;\r\n            }\r\n            if (types.includes(weaponType)) {\r\n                satisfyNameOrType = !satisfyNameOrType;\r\n            }\r\n            return satisfyNameOrType;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static collect(weaponName, weaponType, weaponTags, stuffBoosts, property, customStacker=null) {\r\n        let result = 0.0;\r\n        stuffBoosts.forEach((value, key) => {\r\n            const maxItem = StuffBoostsCollector.getMaxItem(value);\r\n            const satisfyNameOrType = StuffBoostsCollector.weaponNameOrTypeSatisfied(weaponName, weaponType, maxItem);\r\n            let additional = [];\r\n            if (maxItem.tag) {\r\n                additional = maxItem.tag.split(\",\");\r\n            }\r\n            let satisfyTags = (additional.length > 0) ? intersects(additional, weaponTags) : true;\r\n            if (maxItem.property === property && satisfyTags && satisfyNameOrType) {\r\n                if (customStacker) {\r\n                    customStacker(maxItem.value);\r\n                } else {\r\n                    result += maxItem.value;\r\n                }\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    static getMaxItem(items) {\r\n        if (items.length === 1) {\r\n            return items[0];\r\n        }\r\n        let max = null;\r\n        let maxItem = null;\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n            if (max === null || item.value > max) {\r\n                maxItem = item;\r\n                max = item.value;\r\n            }\r\n        }\r\n        return maxItem;\r\n    }\r\n}","export function intersects(array1, array2) {\r\n    if (!array1 || array1 === null || array1.length === 0 || !array2 || array2 === null || array2.length === 0) {\r\n        return false;\r\n    }\r\n    let arrayLess = array1;\r\n    let arrayMore = array2;\r\n    if (array1.length > array2.length) {\r\n        arrayLess = array2;\r\n        arrayMore = array1;\r\n    }\r\n    for (let i = 0; i < arrayLess.length; i++) {\r\n        const value = arrayLess[i];\r\n        if (arrayMore.includes(value)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function deleteItemFromArray(array, index) {\r\n    array.splice(index, 1);\r\n}","\r\n// TODO: adjust accuracy by using default accuracy and possible effects from legendary, perks, consumables\r\n// Currently 100\r\nexport default class AccuracyAdjuster {\r\n\r\n    static adjustByLegendary(damages, legendary) {\r\n\r\n    }\r\n\r\n    static adjustByPerks(damages, legendary) {\r\n\r\n    }\r\n\r\n    static adjustByConsumables(damages, consumables) {\r\n\r\n    }\r\n}","import StuffBoostsCollector from '../../boostStuff/StuffBoostsCollector';\r\nimport { makeDamageItemCopy, buildBleedDamage } from '../../helpers/mods/DamageSetter';\r\nimport AccuracyAdjuster from '../../helpers/AccuracyAdjuster';\r\n\r\n\r\nexport default class WeaponSpecsAssembler {\r\n    \r\n    constructor(wSpec, perks, extraDamageSettings, additionalDamages, stuffBoost, playerStats) {\r\n        this.wSpec = wSpec;\r\n        this.perks = perks;\r\n        this.extraDamageSettings = extraDamageSettings;\r\n        this.additionalDamages = additionalDamages;\r\n        this.stuffBoost = stuffBoost;\r\n        this.playerStats = playerStats;\r\n    }\r\n    \r\n    getDamages() {\r\n        let result = [];\r\n        for (let i = 0; i < this.wSpec.damages.length; i++) {\r\n            const damage = makeDamageItemCopy(this.wSpec.damages[i]);\r\n            damage.defDamage = damage.damage;\r\n            result.push(damage);\r\n        }\r\n        result = result.concat(this.getDamageFromStuff());\r\n        this.setFinalAccuracy(result);\r\n        return result;\r\n    }\r\n\r\n    getCritBoost() {\r\n        let crit = this.perks.better_criticals.displayed_value + 100 + this.wSpec.crit + StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Crit\");\r\n        return crit / 100.0;\r\n    }\r\n\r\n    getCritDamages() {\r\n        let result = [];\r\n        for (let i = 0; i < this.wSpec.critDamages.length; i++) {\r\n            result.push(makeDamageItemCopy(this.wSpec.critDamages[i]));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    collectTags() {\r\n        let tags = [...this.wSpec.tags];\r\n        if (this.wSpec.ammoType.codeName !== \"\") {\r\n            tags.push(this.wSpec.ammoType.codeName);\r\n        }\r\n        return tags;\r\n    }\r\n\r\n    getStrengthBoost() {\r\n        return this.wSpec.strengthBoost * this.getStrength();\r\n    }\r\n\r\n    getStrength() {\r\n        let strength = this.wSpec.strPoints + this.playerStats.strength.value;\r\n        strength += StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Strength\");\r\n        if (strength < 0) {\r\n            strength = 0;\r\n        }\r\n        return strength;\r\n    }\r\n\r\n    collectFromLegendary(property) {\r\n        let result = 0;\r\n        for (let i = 0; i < this.wSpec.legendary.length; i++) {\r\n            const leg = this.wSpec.legendary[i];\r\n            if (leg[2] === property) {\r\n                result += leg[1];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getExplosiveBonus() {\r\n        return (this.wSpec.exp + this.wSpec.exp * this.perks.demolition_expert.displayed_value / 100.0) / 100.0;\r\n    }\r\n\r\n    getCreatureDamageBonuses() {\r\n        let result = new Map();\r\n\r\n        // User\r\n        if (this.additionalDamages.damageToCreature.is_used) {\r\n            result.set(\"any\", {name: \"any\", value: this.additionalDamages.damageToCreature.value});\r\n        }\r\n\r\n        // Perks\r\n        if (this.perks.glow_sight.displayed_value > 0) {\r\n            result.set(\"glowing\", {name: \"glowing\", value: this.perks.glow_sight.displayed_value});\r\n        }\r\n\r\n        // Weapon Effects\r\n        for (let i = 0; i < this.wSpec.creature.length; i++) {\r\n            const creature = this.wSpec.creature[i];\r\n            const name = creature.name.toLowerCase();\r\n            const item = result.get(name);\r\n            if (item) {\r\n                item.value += creature.value;\r\n            } else {\r\n                result.set(name, {name: name, value: creature.value});\r\n            }\r\n        }\r\n\r\n        // Consumables\r\n        function collector(item) {\r\n            let types = [];\r\n            if (item.name) {\r\n                types = item.name.split(\",\");\r\n            } else {\r\n                types = item.type.split(\",\");\r\n            }\r\n            for (let i = 0; i < types.length; i++) {\r\n                const type = types[i];\r\n                const exist = result.get(type);\r\n                if (exist) {\r\n                    exist.value += item.value;\r\n                } else {\r\n                    result.set(type, {name: type, value: item.value});\r\n                }\r\n            }\r\n        }\r\n        StuffBoostsCollector.collectAllItems(this.stuffBoost.creature, \"BDB\", collector);\r\n        return result;\r\n    }\r\n\r\n    getWeaponType() {\r\n        return this.wSpec.type;\r\n    }\r\n\r\n    getHeadShotFrequency() {\r\n        if (this.extraDamageSettings.useHead) {\r\n            return this.extraDamageSettings.headFreq;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getCritShotFrequency() {\r\n        if (this.extraDamageSettings.useCrit) {\r\n            return this.extraDamageSettings.critFreq;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getSneakShotFrequency() {\r\n        if (this.extraDamageSettings.useSneak) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getFirstBloodBonus() {\r\n        if (this.wSpec.legendary[0][0] === '004f6aa5') {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getLastShotBonus() {\r\n        if (this.wSpec.legendary[1][0] === '006069ec') {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getTotalDamageBonus() {\r\n        let tenderizer = this.perks.tenderizer.displayed_value > 0 ? (1 + this.perks.tenderizer.displayed_value / 100.0) : 1;\r\n        let result = 1.0;\r\n        result *= this.perks.toft.displayed_value > 0 ? (1 + this.perks.toft.displayed_value / 100.0) : 1.0;\r\n\r\n        // Seems that follow through works as TOFT only in sneak mode\r\n        if (this.wSpec.type === \"Heavy\" || this.wSpec.type === \"Thrown\") {\r\n            result *= this.perks.follow_through.displayed_value > 0 ? (1 + this.perks.follow_through.displayed_value / 100.0) : 1.0;\r\n        }\r\n        result *= (this.additionalDamages.tdb.is_used) ? (1 + this.additionalDamages.tdb.value / 100.0) : 1.0;\r\n        let exec = 1 + this.wSpec.totalD / 100.0;\r\n        return {value: result, tenderizer: tenderizer, executioner: exec};\r\n    }\r\n\r\n    getChargeTime() {\r\n        return this.wSpec.chargeTime;\r\n    }\r\n\r\n    getChargePenalty() {\r\n        if (this.wSpec.maxChargeTime === 0) {\r\n            return 1;\r\n        }\r\n        let part = this.wSpec.chargeTime / this.wSpec.maxChargeTime;\r\n        part = (part > 1) ? 1 : part;\r\n        part = part * 0.5;\r\n        return 0.5 + part;\r\n    }\r\n\r\n    getCripple() {\r\n        return {value: this.wSpec.cripple / 100.0, chance: this.wSpec.crippleChance};\r\n    }\r\n\r\n    getBash() {\r\n        return this.wSpec.bash / 100.0;\r\n    }\r\n\r\n    getPowerAttack() {\r\n        return this.wSpec.powerAttack / 100.0;\r\n    }\r\n\r\n    getWeaponName() {\r\n        return this.wSpec.weaponName;\r\n    }\r\n\r\n    getDefaultWeaponName() {\r\n        return this.wSpec.defaultName;\r\n    }\r\n\r\n    getSneak() {\r\n        const oper = (this.wSpec.type === \"Melee\" || this.wSpec.type === \"Unarmed\") ? 0 : this.perks.covert_operative.displayed_value\r\n        let sneak = (oper > 0) ? (oper - 1.0) : 1.0;\r\n        let sandman = this.perks.mister_sandman.displayed_value / 100.0;\r\n        sandman = (this.wSpec.tags.includes(\"HasSilencer\")) ? sandman : 0;\r\n\r\n        const ninja = (this.wSpec.type === \"Melee\" || this.wSpec.type === \"Unarmed\") ? this.perks.ninja.displayed_value / 100.0 : 0.0;\r\n        const weaponSneak = this.wSpec.sneak / 100.0;\r\n        const stuffSneak = (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Sneak\") / 100.0);\r\n        return sneak + sandman + ninja + weaponSneak + stuffSneak;\r\n    }\r\n\r\n    // This bonus increase physical explosive damage (bobble head explosive), not an explosive part from total damage (Legendary explosive)\r\n    getExplosivePhysicalBonus() {\r\n        return StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"EXP\") / 100.0;\r\n    }\r\n\r\n    getBaseDamageMult() {\r\n        let result = 100 + this.getBonusMultFromPerks() + this.getStrengthBoost() + this.wSpec.bonus + this.collectFromLegendary(\"BDB\");\r\n\r\n        result += StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"BDB\");\r\n        let bResult = result + ((this.additionalDamages.ballisticBDB.is_used) ? (this.additionalDamages.ballisticBDB.value) : 0.0);\r\n        let eResult = result + ((this.additionalDamages.energyBDB.is_used) ? (this.additionalDamages.energyBDB.value) : 0.0);\r\n        let fResult = result + ((this.additionalDamages.fireBDB.is_used) ? (this.additionalDamages.fireBDB.value) : 0.0);\r\n        let pResult = result + ((this.additionalDamages.poisonBDB.is_used) ? (this.additionalDamages.poisonBDB.value) : 0.0);\r\n        let cResult = result + ((this.additionalDamages.coldBDB.is_used) ? (this.additionalDamages.coldBDB.value) : 0.0);\r\n        let rResult = result + ((this.additionalDamages.radBDB.is_used) ? (this.additionalDamages.radBDB.value) : 0.0);\r\n        bResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"BBDB\"));\r\n        eResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"EBDB\"));\r\n        fResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"FBDB\"));\r\n        pResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"PBDB\"));\r\n        cResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"CBDB\"));\r\n        rResult += (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"RBDB\"));\r\n        return {dtPhysical: bResult / 100.0, dtEnergy: eResult / 100.0, dtFire: fResult / 100.0, dtPoison: pResult / 100.0, dtCryo: cResult / 100.0, dtRadiationExposure: rResult / 100.0};\r\n    }\r\n\r\n    getDamageFromStuff() {\r\n        const damages = [];\r\n        function stacker(value) {\r\n            const values = value.split(\" - \");\r\n            const damageValue = parseFloat(values[0]);\r\n            const time = parseFloat(values[1].slice(0, values[1].length - 1));\r\n            const damage = buildBleedDamage(damageValue, time);\r\n            damage.defDamage = damageValue;\r\n            damages.push(damage);\r\n        }\r\n        StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Bleed\", stacker);\r\n        return damages;\r\n    }\r\n\r\n    getBonusMultFromPerks() {\r\n        let result = 0.0;\r\n        result += this.perks.nerd_rage.displayed_value\r\n        result += this.perks.bloody_mess.displayed_value;\r\n        result += this.perks.adrenaline.displayed_value;\r\n        result += this.perks.gun_fu.displayed_value;\r\n        if (this.perks.gladiator.displayed_value > 0 && this.wSpec.type === \"Melee\" && this.wSpec.hand === 1) {\r\n            result += this.perks.gladiator.displayed_value;\r\n        }\r\n        if (this.perks.heavy_gunner.displayed_value > 0 && this.wSpec.type === \"Heavy\" && !this.wSpec.tags.includes(\"Explosive\")) {\r\n            result += this.perks.heavy_gunner.displayed_value;\r\n        }\r\n        if (this.perks.shotgunner.displayed_value > 0 && (this.wSpec.type === \"Shotgun\" || this.wSpec.tags.includes(\"Shotgun\"))) {\r\n            result += this.perks.shotgunner.displayed_value;\r\n        }\r\n        if (this.perks.slugger.displayed_value > 0 && this.wSpec.type === \"Melee\" && this.wSpec.hand === 2) {\r\n            result += this.perks.slugger.displayed_value;\r\n        }\r\n        if (this.perks.iron_fist.displayed_value > 0 && this.wSpec.type === \"Unarmed\") {\r\n            result += this.perks.iron_fist.displayed_value;\r\n        }\r\n        if (this.perks.archer.displayed_value > 0 && this.wSpec.type === \"Bow\") {\r\n            result += this.perks.archer.displayed_value;\r\n        }\r\n        if (this.perks.commando.displayed_value > 0 && this.wSpec.type === \"Rifle\" && this.wSpec.is_auto === 1) {\r\n            result += this.perks.commando.displayed_value;\r\n        }\r\n        if (this.perks.rifleman.displayed_value > 0 && this.wSpec.type === \"Rifle\" && this.wSpec.is_auto === 0) {\r\n            result += this.perks.rifleman.displayed_value;\r\n        }\r\n        if (this.perks.guerrilla.displayed_value > 0 && this.wSpec.type === \"Pistol\" && this.wSpec.is_auto === 1) {\r\n            result += this.perks.guerrilla.displayed_value;\r\n        }\r\n        if (this.perks.gunslinger.displayed_value > 0 && this.wSpec.type === \"Pistol\" && this.wSpec.is_auto === 0) {\r\n            result += this.perks.gunslinger.displayed_value;\r\n        }\r\n        if (this.perks.science.displayed_value > 0 && this.wSpec.type !== \"Heavy\" && this.wSpec.tags.includes(\"Energy\")) {\r\n            result += this.perks.science.displayed_value;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getAntiArmor() {\r\n        let aa = 1 - this.wSpec.aa / 100.0;\r\n        let incisor = 1.0;\r\n        let weaponType = this.wSpec.type;\r\n        if (weaponType === \"All\" || weaponType === \"Melee\" || weaponType === \"Unarmed\") {\r\n            incisor = 1 - this.perks.incisor.displayed_value / 100.0;\r\n        }\r\n        let bow_before_me = 1.0;\r\n        if (weaponType === \"All\" || weaponType === \"Bow\") {\r\n            bow_before_me = 1 - this.perks.bow_before_me.displayed_value / 100.0;\r\n        }\r\n        let tank_killer = 1.0;\r\n        if (weaponType === \"All\" || weaponType === \"Pistol\" || weaponType === \"Rifle\") {\r\n            tank_killer = 1 - this.perks.tank_killer.displayed_value / 100.0;\r\n        }\r\n        let stabilized = 1.0;\r\n        if (weaponType === \"All\" || weaponType === \"Heavy\") {\r\n            stabilized = 1 - this.perks.stabilized.displayed_value / 100.0;\r\n        }\r\n        let bMult = 1;\r\n        StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"BAA\", (value) => bMult *= (1 - value / 100.0));\r\n        const result1 = (100 * (1 - bMult * incisor * bow_before_me * tank_killer * stabilized * aa));\r\n        const result2 = (100 * (1 - incisor * bow_before_me * tank_killer * stabilized * aa));\r\n        const resultAll = {b: result1, e: result2, f: result2, p: result2, c: result2, r: result2, insect: this.perks.exterminator.displayed_value};\r\n        return resultAll;\r\n    }\r\n\r\n    getAmmoCapacity() {\r\n        let ammoCapacity = this.wSpec.ammoCapacity;\r\n        let tags = this.collectTags(this.wSpec);\r\n        ammoCapacity += (ammoCapacity * (StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, tags, this.stuffBoost.weapon, \"Ammo\") / 100.0));\r\n        if (this.perks.power_user.is_used) {\r\n            const mult = this.perks.power_user.displayed_value / 100.0 - 1;\r\n            if (this.wSpec.ammoType.codeName === \"FusionCore\" || tags.includes(\"FusionCore\")) {\r\n                ammoCapacity += (this.wSpec.ammoCapacity * mult);\r\n            }\r\n        }\r\n        return parseInt(ammoCapacity);\r\n    }\r\n\r\n    getShotSize() {\r\n        return this.wSpec.shot_size;\r\n    }\r\n\r\n    getFireRate() {\r\n        let fireRate = this.wSpec.fireRate;\r\n        let weaponSpeed = this.wSpec.speed;\r\n        if ((this.wSpec.type === \"Melee\" || this.wSpec.type === \"Unarmed\") && this.wSpec.is_auto === 0) {\r\n            weaponSpeed += (this.perks.martial_artist.displayed_value / 100.0);\r\n        }\r\n        fireRate = fireRate * weaponSpeed;\r\n        if (fireRate < 0.1) {\r\n            fireRate = 0.1;\r\n        }\r\n        return fireRate;\r\n    }\r\n\r\n    getReloadTime() {\r\n        let reloadSpeed = this.wSpec.reloadSpeed;\r\n        if (this.wSpec.type === \"Heavy\") {\r\n            reloadSpeed += (this.perks.lock_and_load.displayed_value / 100.0);\r\n        } else if (this.wSpec.type === \"Melee\" && this.wSpec.is_auto === 0) {\r\n            reloadSpeed += (this.perks.martial_artist.displayed_value / 100.0);\r\n        } else if (this.wSpec.type === \"Shotgun\") {\r\n            reloadSpeed += (this.perks.scattershot.displayed_value / 100.0);\r\n        } else if (this.wSpec.type === \"Rifle\" && this.wSpec.is_auto) {\r\n            reloadSpeed += (this.perks.ground_pounder.displayed_value / 100.0);\r\n        }\r\n        reloadSpeed += StuffBoostsCollector.collect(this.wSpec.defaultName, this.wSpec.type, this.wSpec.tags, this.stuffBoost.weapon, \"Reload\") / 100.0;\r\n        return this.wSpec.defReloadTime / reloadSpeed;\r\n    }\r\n\r\n    // TODO: Intended to adjust accuracy by consumables and perks (accuracy from legendary and mods is adjusted in wSPec or by user)\r\n    setFinalAccuracy(damages) {\r\n        const consumables = null; // StuffBoostCollector.collect()\r\n        AccuracyAdjuster.adjustByLegendary(damages, this.wSpec.legendary);\r\n        AccuracyAdjuster.adjustByPerks(damages, this.perks);\r\n        AccuracyAdjuster.adjustByConsumables(damages, consumables);\r\n    }\r\n}","import Weapon from './Weapon';\r\nimport WeaponSpecsAssembler from './WeaponSpecsAssembler';\r\n\r\n\r\nexport default class WeaponFactory {\r\n\r\n    DEFAULT = 0;\r\n    NO_CRIT = 1;\r\n    constructor(wSpec, perks, extraDamage, additionalDamages, stuffBoost, playerStats) {\r\n        this.wSpec = wSpec;\r\n        this.perks = perks;\r\n        this.extraDamage = extraDamage;\r\n        this.additionalDamages = additionalDamages;\r\n        this.stuffBoost = stuffBoost;\r\n        this.playerStats = playerStats;\r\n    }\r\n\r\n    build(type) {\r\n        switch(type) {\r\n            case 0:\r\n                return new Weapon(new WeaponSpecsAssembler(this.wSpec, this.perks, this.extraDamage, this.additionalDamages,\r\n                    this.stuffBoost, this.playerStats));\r\n            case 1:\r\n                const extraDamage = { ...this.extraDamage };\r\n                extraDamage.useCrit = false;\r\n                return new Weapon(new WeaponSpecsAssembler(this.wSpec, this.perks, extraDamage, this.additionalDamages,\r\n                    this.stuffBoost, this.playerStats));\r\n            default:\r\n                return new Weapon(new WeaponSpecsAssembler(this.wSpec, this.perks, this.extraDamage, this.additionalDamages,\r\n                    this.stuffBoost, this.playerStats));\r\n        }\r\n    }\r\n}","export function defaultAdds() {\r\n    return {\r\n        tdb: {\r\n            name: \"TDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        ballisticBDB: {\r\n            name: \"Ballistic BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        energyBDB: {\r\n            name: \"Energy BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        fireBDB: {\r\n            name: \"Fire BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        poisonBDB: {\r\n            name: \"Poison BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        coldBDB: {\r\n            name: \"Cold BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        radBDB: {\r\n            name: \"Rad BDB\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n\r\n        damageToCreature: {\r\n            name: \"Damage To Creature\",\r\n            value: 0.0,\r\n            is_used: false,\r\n        },\r\n    };\r\n}","export function defaultBoosts() {\r\n    return {\r\n        bloody_mess: {\r\n            id: [\"00073680\"],\r\n            name: \"Bloody Mess\",\r\n            value: 5.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [5.0, 10.0, 15.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Luck\",\r\n            info: \"{1}% bonus damage means enemies may explode into a gory red paste.\",\r\n            cost: [1, 2, 3],\r\n            im_name: \"bloody_mess\",\r\n        },\r\n\r\n        adrenaline: {\r\n            id: [\"00397cc5\"],\r\n            name: \"Adrenaline\",\r\n            value: 6.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [6.0, 7.0, 8.0, 9.0, 10.0],\r\n            x: 1,\r\n            max_x: 6,\r\n            category: \"Agility\",\r\n            info: \"Gain {1}% damage for 30s per kill. Duration refreshes with kills.\",\r\n            cost: [1, 2, 3, 4, 5],\r\n            im_name: \"adrenaline\",\r\n        },\r\n\r\n        toft: {\r\n            id: [\"005a59c6\"],\r\n            name: \"TOFT\",\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10.0, 20.0, 30.0, 40.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Legendary\",\r\n            info: \"Enemies take {1}% more damage when they attack you, if you're on a team.\",\r\n            cost: [1, 2, 3, 4],\r\n            im_name: \"toft\",\r\n        },\r\n\r\n        tenderizer: {\r\n            name: \"Tenderizer\",\r\n            id: [\"003e2202\"],\r\n            value: 5.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [5.0, 7.0, 10.0],\r\n            x: 1,\r\n            max_x: 4,\r\n            category: \"Charisma\",\r\n            info: \"Make your target receive {1}% more damage for {1} seconds after you attack.\",\r\n            cost: [1, 2, 3],\r\n            im_name: \"tenderizer\",\r\n        },\r\n\r\n        glow_sight: {\r\n            name: \"Glow Sight\",\r\n            id: [\"00393f65\"],\r\n            value: 20.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [20.0, 40.0, 60.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Deal +{1}% damage to glowing enemies.\",\r\n            im_name: \"glow_sight\",\r\n        },\r\n\r\n        gun_fu: {\r\n            name: \"Gun Fu\",\r\n            id: [\"003701bf\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10.0, 30.0, 60.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 3],\r\n            info: \"V.A.T.S. swaps targets on kill with +{1}% damage to your next target.\",\r\n            im_name: \"gun_fu\",\r\n        },\r\n\r\n        incisor: {\r\n            name: \"Incisor\",\r\n            id: [\"003de58e\"],\r\n            value: 25.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [25.0, 50.0, 75.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your melee weapons ignore {1}% of your target's armor.\",\r\n            im_name: \"incisor\",\r\n        },\r\n\r\n        bow_before_me: {\r\n            name: \"Bow Before Me\",\r\n            id: [\"00563b9b\"],\r\n            value: 12.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [12.0, 24.0, 36.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your bows and crossbows ignore {1}% armor and have a {2}% chance to stagger.\",\r\n            im_name: \"bow_before_me\",\r\n        },\r\n\r\n        exterminator: {\r\n            name: \"Exterminator\",\r\n            id: [\"0032da6e\"],\r\n            value: 25.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [25.0, 50.0, 75.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your attacks ignore {1}% armor of any insect.\",\r\n            im_name: \"exterminator\",\r\n        },\r\n\r\n        tank_killer: {\r\n            name: \"Tank Killer\",\r\n            id: [\"001d6251\"],\r\n            value: 12.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [12.0, 24.0, 36.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your rifles and pistols ignore {1}% armor and have a {2}% chance to stagger.\",\r\n            im_name: \"tank_killer\",\r\n        },\r\n\r\n        stabilized: {\r\n            name: \"Stabilized\",\r\n            id: [\"00320167\"],\r\n            value: 15.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [15.0, 30.0, 45.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3],\r\n            info: \"In Power Armor, heavy guns gain more accuracy and ignore {1}% armor.\",\r\n            im_name: \"stabilized\",\r\n        },\r\n\r\n        covert_operative: {\r\n            name: \"Covert Operative\",\r\n            id: [\"002ebd26\"],\r\n            value: 2.15,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [2.15, 2.3, 2.5],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your ranged sneak attacks do {1}x normal damage.\",\r\n            im_name: \"covert_operative\",\r\n        },\r\n\r\n        mister_sandman: {\r\n            name: \"Mister Sandman\",\r\n            id: [\"0032992f\"],\r\n            value: 50.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [50.0, 100.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2],\r\n            info: \"At night your silenced weapons do an additional {1}% sneak attack damage.\",\r\n            im_name: \"mister_sandman\",\r\n        },\r\n\r\n        ninja: {\r\n            name: \"Ninja\",\r\n            id: [\"0025a7f9\"],\r\n            value: 30.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [30.0, 60.0, 90.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 3],\r\n            info: \"Sneak attacks with melee weapons do an additional {1}% sneak attack damage.\",\r\n            im_name: \"ninja\",\r\n        },\r\n\r\n        follow_through: {\r\n            name: \"Follow Through\",\r\n            id: [\"005a5d68\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10.0, 20.0, 30.0, 40.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Legendary\",\r\n            cost: [1, 2, 3, 4],\r\n            info: \"Ranged sneak damage increases damage to target by {1}% for 10 seconds.\",\r\n            im_name: \"follow_through\",\r\n        },\r\n\r\n        demolition_expert: {\r\n            name: \"Demolition Expert\",\r\n            id: [\"003440b9\"],\r\n            value: 20.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [20.0, 30.0, 40.0, 50.0, 60.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3, 4, 5],\r\n            info: \"Your explosives do +{1}% damage\",\r\n            im_name: \"demolition_expert\",\r\n        },\r\n\r\n        science: {\r\n            name: \"Science\",\r\n            id: [\"003440c4\", \"003440c5\", \"003440c6\"],\r\n            value: 5.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [5.0, 10.0, 15.0, 20.0, 25.0, 30.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3, 4, 5, 6],\r\n            info: \"Energy damage gains +{1}% bonus.\",\r\n            im_name: \"science\",\r\n        },\r\n\r\n        better_criticals: {\r\n            name: \"Better Criticals\",\r\n            id: [\"00287cd5\"],\r\n            value: 50.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [50.0, 75.0, 100.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Luck\",\r\n            cost: [1, 2, 3],\r\n            info: \"V.A.T.S. criticals now do +{1}% damage.\",\r\n            im_name: \"better_criticals\",\r\n        },\r\n\r\n        nerd_rage: {\r\n            name: \"Nerd Rage\",\r\n            id: [\"0025a22f\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10.0, 15.0, 20.0],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3],\r\n            info: \"While below 20% Health, gain {3} Damage Resist, {1}% damage and 15% AP regen.\",\r\n            im_name: \"nerd_rage\",\r\n        },\r\n\r\n        lock_and_load: {\r\n            name: \"Lock And Load\",\r\n            id: [\"0032016b\"],\r\n            value: 20.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [20, 40, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Heavy guns reload +{1}% faster.\",\r\n            im_name: \"lock_and_load\",\r\n        },\r\n\r\n        martial_artist: {\r\n            name: \"Martial Artist\",\r\n            id: [\"003e996d\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 20, 30],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your melee weapons weight {3}% less, and you can swing them {1}% faster.\",\r\n            im_name: \"martial_artist\",\r\n        },\r\n\r\n        scattershot: {\r\n            name: \"Scattershot\",\r\n            id: [\"0032235e\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 20, 30],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Shotguns now weight {4}% less and you reload them {1}% faster.\",\r\n            im_name: \"scattershot\",\r\n        },\r\n\r\n        ground_pounder: {\r\n            name: \"Ground Pounder\",\r\n            id: [\"000907e5\"],\r\n            value: 10.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 20, 30],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 3],\r\n            info: \"Automatic rifles now reload {1}% faster and have better hip fire accuracy.\",\r\n            im_name: \"ground_pounder\",\r\n        },\r\n\r\n        party_girl_boy: {\r\n            name: \"Party Girl / Boy\",\r\n            id: [\"000525df\"],\r\n            value: 2.0,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [2, 3],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Charisma\",\r\n            cost: [2, 3],\r\n            info: \"The effects of alcohol are {1}x.\",\r\n            im_name: \"party_girl_boy\",\r\n        },\r\n\r\n        power_user: {\r\n            name: \"Power User\",\r\n            id: [\"0027a876\"],\r\n            value: 130,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [130, 160, 200],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Intelligence\",\r\n            cost: [1, 2, 3],\r\n            info: \"Fusion Cores now last {1}% longer.\",\r\n            im_name: \"power_user\",\r\n        },\r\n\r\n        strange_in_numbers: {\r\n            name: \"Strange In Nums\",\r\n            id: [\"003860b7\"],\r\n            value: 25,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [25],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Charisma\",\r\n            cost: [1],\r\n            info: \"Positive mutation effects are {1}% stronger if teammates are mutated too.\",\r\n            im_name: \"strange_in_numbers\",\r\n        },\r\n\r\n        class_freak: {\r\n            name: \"Class Freak\",\r\n            id: [\"00391f13\"],\r\n            value: 25,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [25, 50, 75],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Luck\",\r\n            cost: [1, 2, 3],\r\n            info: \"The negative effects of your mutations are reduced by {1}%.\",\r\n            im_name: \"class_freak\",\r\n        },\r\n\r\n        gladiator: {\r\n            name: \"Gladiator\",\r\n            id: [\"003440ad\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your one-handed melee weapons now do +{1}% damage.\",\r\n            im_name: \"gladiator\",\r\n        },\r\n\r\n        heavy_gunner: {\r\n            name: \"Heavy Gunner\",\r\n            id: [\"0031af17\", \"0031af18\", \"001c9d2e\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your non-explosive heavy guns now do +{1}% damage.\",\r\n            im_name: \"heavy_gunner\",\r\n        },\r\n\r\n        shotgunner: {\r\n            name: \"Shotgunner\",\r\n            id: [\"00202049\", \"00223bab\", \"00202047\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your shotguns now do +{1}% damage.\",\r\n            im_name: \"shotgunner\",\r\n        },\r\n\r\n        slugger: {\r\n            name: \"Slugger\",\r\n            id: [\"0025a233\", \"00520bd8\", \"00520bd9\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your two-handed melee weapons now do +{1}% damage.\",\r\n            im_name: \"slugger\",\r\n        },\r\n\r\n        iron_fist: {\r\n            name: \"Iron Fist\",\r\n            id: [\"0035206d\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Strength\",\r\n            cost: [1, 2, 3],\r\n            info: \"Your punching attacks now do +{1}% damage.\",\r\n            im_name: \"iron_fist\",\r\n        },\r\n\r\n        archer: {\r\n            name: \"Archer\",\r\n            id: [\"00563b8f\", \"00563b93\", \"00563b97\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your bows and crossbows now do +{1}% damage.\",\r\n            im_name: \"archer\",\r\n        },\r\n\r\n        commando: {\r\n            name: \"Commando\",\r\n            id: [\"0031aef6\", \"0031aef7\", \"00005272\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Basic combat training means automatic rifles do +{1}% damage.\",\r\n            im_name: \"commando\",\r\n        },\r\n\r\n        rifleman: {\r\n            name: \"Rifleman\",\r\n            id: [\"000907c9\", \"002ebd2b\", \"002ebd31\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Perception\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your non-automatic rifles now do +{1}% damage.\",\r\n            im_name: \"rifleman\",\r\n        },\r\n\r\n        guerrilla: {\r\n            name: \"Guerrilla\",\r\n            id: [\"0031af0d\", \"0031af0e\", \"0031af0f\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your automatic pistols now do +{1}% damage\",\r\n            im_name: \"guerrilla\",\r\n        },\r\n\r\n        gunslinger: {\r\n            name: \"Gunslinger\",\r\n            id: [\"0031aef8\", \"0031aef9\", \"0025a792\"],\r\n            value: 10,\r\n            is_used: false,\r\n            displayed_value: 0.0,\r\n            rank: 1,\r\n            rank_values: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\r\n            x: 1,\r\n            max_x: 1,\r\n            category: \"Agility\",\r\n            cost: [1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9],\r\n            info: \"Your non-automatic pistols now do +{1}% damage.\",\r\n            im_name: \"gunslinger\",\r\n        },\r\n\r\n        special: {\r\n            strength: 0,\r\n            perception: 0,\r\n            endurance: 0,\r\n            charisma: 0,\r\n            intelligence: 0,\r\n            agility: 0,\r\n            luck: 0,\r\n        }\r\n    };\r\n}","import { millisToTime } from '../helpers/Time';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\n\r\n\r\nexport function getAverageTimeMillis(creatures) {\r\n    if (!creatures) {\r\n        return 0;\r\n    }\r\n    const sum = parseInt(creatures.creature1.lifeTime) + parseInt(creatures.creature2.lifeTime)\r\n     + parseInt(creatures.creature3.lifeTime) + parseInt(creatures.creature4.lifeTime);\r\n    if (sum === 0) {\r\n        return 0;\r\n    }\r\n    const result = parseInt(sum / 4.0);\r\n    return (result) ? result : Infinity;\r\n}\r\n\r\nexport function getAverageTime(creatures) {\r\n    return millisToTime(getAverageTimeMillis(creatures));\r\n}\r\n\r\nexport function getCreatureTime(creature) {\r\n    return millisToTime(creature.lifeTime);\r\n}\r\n\r\n/*\r\nsbq: {\r\n    gameId: \"003e2720\", // ? 00043c6f, 003e2720, 00043c75\r\n    radImmunePerk: \"000a2775\",\r\n    reductionSpell: \"004869f8\",\r\n    reductionPerk: \"00470daa\",\r\n    race: \"00019d95\",\r\n    bodyData: \"00017dd5\",\r\n},\r\n\r\nearle: {\r\n    gameId: \"0059e02f\", // ?\r\n    radImmunePerk: \"000a2775\",\r\n    reductionPerk: \"0057a663\",\r\n    race: \"00547992\",\r\n    bodyData: \"0055aec9\",\r\n},\r\n\r\ntitan: {\r\n    gameId: \"00661ebf\", // ?\r\n    radImmunePerk: \"000a2775\",\r\n    reductionPerk: \"0067d4be\",\r\n    reductionSpell: \"0066dbcd\",\r\n    race: \"00656cd6\",\r\n    bodyData: \"00656cd4\",\r\n}\r\n*/\r\n\r\nexport function getDummy(creature) {\r\n    const dummy = buildCreature(creature.name, creature.level, creature.fieldName);\r\n    dummy.h = 1000000000000;\r\n    dummy.curBody = creature.curBody;\r\n    dummy.headShot = creature.headShot;\r\n    dummy.bodyShot = creature.bodyShot;\r\n    dummy.averageShot = creature.averageShot;\r\n    dummy.damageReduction = creature.damageReduction;\r\n    dummy.damageReductionOnlyNotBleeding = creature.damageReductionOnlyNotBleeding;\r\n    return dummy;\r\n}\r\n\r\nfunction buildDefCreature(name, fieldName) {\r\n    return {\r\n        name: name,\r\n        fieldName: fieldName,\r\n        capName: \"\",\r\n        b: 1.0,\r\n        e: 1.0,\r\n        f: 1.0,\r\n        p: 1.0,\r\n        c: 1.0,\r\n        r: 1.0,\r\n        h: 100,\r\n        damageReduction: 0.0,\r\n        damageReductionOnlyNotBleeding: false,\r\n        headShot: 1,\r\n        bodyShot: 1,\r\n        averageShot: 1,\r\n        curBody: \"\",\r\n        defBody: \"\", // \"normal\", \"scorched\", \"glowing\"\r\n        bodyParts: {},\r\n        tags: [],\r\n        level: 1,\r\n        immuneToPoison: false,\r\n        immuneToRadiation: false,\r\n\r\n        damageToCreature: 0,\r\n        totalDamage: 0.0,\r\n        normalDamage: 0.0,\r\n        headShotDamage: 0.0,\r\n        headExpShotDamage: 0.0,\r\n        critNormalDamage: 0.0,\r\n        critHeadNormalDamage: 0.0,\r\n        explosiveDamage: 0.0,\r\n        critExplosiveDamage: 0.0,\r\n        critExplosiveHeadDamage: 0.0,\r\n        averageHit: 0.0,\r\n        maxHit: 0.0,\r\n        sneak: 0,\r\n        crit: 0,\r\n        dps: 0.0,\r\n        ammo: Infinity,\r\n        reloads: 0.0,\r\n        reloadsTime: 0.0,\r\n        lifeTime: Infinity,\r\n    };\r\n}\r\n\r\nexport function getCreatureByName(creatures, name) {\r\n    for(const fieldName in creatures) {\r\n        const creature = creatures[fieldName];\r\n        if (creature.name === name) {\r\n            return creature;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function defaultCreatures() {\r\n    return {\r\n        creature1: buildCreature(\"scorchbeastqueen\", \"Max\", \"creature1\"),\r\n        creature2: buildCreature(\"wendigocolossus\", \"Max\", \"creature2\"),\r\n        creature3: buildCreature(\"ultraciteabomination\", \"Max\", \"creature3\"),\r\n        creature4: buildCreature(\"stormboss\", \"Max\", \"creature4\"),\r\n    };\r\n}\r\n\r\nexport function defaultCreaturesAlt() {\r\n    return {\r\n        creature1: buildCreature(\"scorchbeastqueen(alt)\", \"Max\", \"creature1\"),\r\n        creature2: buildCreature(\"wendigocolossus(alt)\", \"Max\", \"creature2\"),\r\n        creature3: buildCreature(\"ultraciteabomination(alt)\", \"Max\", \"creature3\"),\r\n        creature4: buildCreature(\"stormboss\", \"Max\", \"creature4\"),\r\n    };\r\n}\r\n\r\nexport function buildCreatureNames(creatures) {\r\n    return {\r\n        creature1: [creatures.creature1.name, creatures.creature1.level, creatures.creature1.tags, creatures.creature1.curBody],\r\n        creature2: [creatures.creature2.name, creatures.creature2.level, creatures.creature2.tags, creatures.creature2.curBody],\r\n        creature3: [creatures.creature3.name, creatures.creature3.level, creatures.creature3.tags, creatures.creature3.curBody],\r\n        creature4: [creatures.creature4.name, creatures.creature4.level, creatures.creature4.tags, creatures.creature4.curBody],\r\n    }\r\n}\r\n\r\nexport function buildCreature(name, level, fieldName) {\r\n    const creature = buildDefCreature(name, fieldName);\r\n    if (level === 'Max') {\r\n        level = CreatureDataProvider.getMaxLevel(name);\r\n    } else {\r\n        level = parseInt(level);\r\n    }\r\n    const result = CreatureDataProvider.getCreatureParametersByName(name, level);\r\n    creature.name = name;\r\n    creature.capName = CreatureDataProvider.capitalizeCreatureName(name);\r\n    if (creature.name.includes(\"scorch\")) {\r\n        creature.defBody = \"scorched\";\r\n    } else if (creature.name.includes(\"glow\")) {\r\n        creature.defBody = \"glowing\";\r\n    } else {\r\n        creature.defBody = \"normal\";\r\n    }\r\n    creature.curBody = creature.defBody;\r\n    creature.level = level;\r\n    creature.tags = result.tags;\r\n    creature.headShot = result.headMult;\r\n    creature.bodyShot = result.normalMult;\r\n    creature.averageShot = parseFloat(result.averageMult.toFixed(2));\r\n    creature.damageReduction = result.reduction;\r\n    creature.immuneToPoison = result.immuneToPoison;\r\n    creature.immuneToRadiation = result.immuneToRad;\r\n    creature.damageReductions = result.reductions;\r\n    creature.damageReductionOnlyNotBleeding = result.reductionOnlyNotBleeding;\r\n    creature.bodyParts = result.body;\r\n    creature.bodyParts.average = {name: 'Average', damage_mult: creature.averageShot};\r\n    if (result.physical) {\r\n        creature.b = result.physical;\r\n        creature.e = result.energy;\r\n        creature.f = result.fire;\r\n        creature.p = result.poison;\r\n        creature.c = result.cold;\r\n        creature.r = result.radiation;\r\n        creature.h = result.health;\r\n    }\r\n    return creature;\r\n}","export function defaultPlayer() {\r\n    return {\r\n        team: false,\r\n        strange: 0.0,\r\n        freak: 0.0,\r\n        alcoholEffects: 1.0,\r\n        health: {\r\n            name: \"Health\",\r\n            value: 100.0,\r\n        }\r\n    };\r\n}","export function defaultPlayerStats() {\r\n    return {\r\n        strength: {\r\n            name: \"Strength\",\r\n            value: 5.0,\r\n        },\r\n        luck: {\r\n            name: \"Luck\",\r\n            value: 1.0,\r\n        },\r\n    };\r\n}","function getStrangeMult(player) {\r\n    return (player.team) ? (1 + player.strange / 100.0) : 1.0;\r\n}\r\n\r\nfunction getFreakReduction(player) {\r\n    return (1 - player.freak / 100.0);\r\n}\r\n\r\nexport const functions = {\r\n    nukeTheMan: (player) => {\r\n        return (player.team) ? 5 : 0;\r\n    },\r\n\r\n    partyGirlBoy: (player, defValue) => {\r\n        return parseInt(player.alcoholEffects * defValue);\r\n    },\r\n\r\n    adrenalineReaction: (player) => {\r\n        const health = player.health.value;\r\n        const mult = getStrangeMult(player);\r\n        let ar = 0.0;\r\n\r\n        // The data is hardcoded into a perk\r\n        if (mult > 1) {\r\n            if (health <= 20) {\r\n                ar = 63.0;\r\n            } else if (health <= 30) {\r\n                ar = 55.0;\r\n            } else if (health <= 40) {\r\n                ar = 48.0;\r\n            } else if (health <= 50) {\r\n                ar = 39.0;\r\n            } else if (health <= 60) {\r\n                ar = 31.0;\r\n            } else if (health <= 70) {\r\n                ar = 24.0;\r\n            } else if (health <= 80) {\r\n                ar = 16.0;\r\n            } else if (health <= 90) {\r\n                ar = 8.0;\r\n            }\r\n        } else {\r\n            if (health <= 20) {\r\n                ar = 50.0;\r\n            } else if (health <= 30) {\r\n                ar = 44.0;\r\n            } else if (health <= 40) {\r\n                ar = 38.0;\r\n            } else if (health <= 50) {\r\n                ar = 31.0;\r\n            } else if (health <= 60) {\r\n                ar = 25.0;\r\n            } else if (health <= 70) {\r\n                ar = 19.0;\r\n            } else if (health <= 80) {\r\n                ar = 13.0;\r\n            } else if (health <= 90) {\r\n                ar = 6.0;\r\n            }\r\n        }\r\n        return ar;\r\n    },\r\n\r\n    eagleEyes: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 003c4037\r\n        if (mult > 1) {\r\n            return 62.5\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    eagleEyesNegative: (player, defValue) => {\r\n        const mult = getFreakReduction(player);\r\n        return defValue * mult;\r\n    },\r\n\r\n    empathSerum: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n        if (mult > 1) {\r\n            return 2;\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    carnivoreSerum: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n        return mult * defValue;\r\n    },\r\n\r\n    herbivoreSerum: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n        return mult * defValue;\r\n    },\r\n\r\n    foodCalc: (player, defValue, foodPref, foodType) => {\r\n        if ((foodType === \"Meet\" && foodPref.herbivore) || (foodType === \"Plant\" && foodPref.carnivore)) {\r\n            return 0;\r\n        }\r\n        let mult = 1;\r\n        let strange = getStrangeMult(player);\r\n        if (foodType === \"Meet\" && foodPref.carnivore && !foodPref.herbivore) {\r\n            mult = 2 * strange;\r\n        } else if (foodType === \"Plant\" && foodPref.herbivore && !foodPref.carnivore) {\r\n            mult = 2 * strange;\r\n        }\r\n        return mult * defValue;\r\n    },\r\n\r\n    herdMentality: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n        const red = getFreakReduction(player);\r\n\r\n        // Positives is hardcoded inside 004e1f1e\r\n        let posValue = defValue;\r\n        if (mult > 1) {\r\n            posValue = 3;\r\n        }\r\n        return (player.team) ? posValue : -defValue * red;\r\n    },\r\n\r\n    speedDemonMove: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 004df1e0\r\n        if (mult > 1) {\r\n            return 25;\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    speedDemonReload: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 004df1e0\r\n        if (mult > 1) {\r\n            return 40;\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    talons1: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 0028d3bc\r\n        if (mult > 1) {\r\n            return 35;\r\n        }\r\n        return defValue;\r\n    },\r\n\r\n    talons2: (player, defValue) => {\r\n        return defValue;\r\n    },\r\n\r\n    twistedMuscles: (player, defValue) => {\r\n        const mult = getStrangeMult(player);\r\n\r\n        // Hardcoded in 00386acd\r\n        if (mult > 1) {\r\n            return 35;\r\n        }\r\n        return defValue;\r\n    }\r\n}","import { functions } from '../boostStuff/BoostFunctions';\r\n\r\n\r\nexport function convertStuffBoost(stuffBoost) {\r\n    const result = new Set();\r\n    collectBoosts(result, stuffBoost.creature);\r\n    collectBoosts(result, stuffBoost.weapon);\r\n    return Array.from(result);\r\n}\r\n\r\nfunction collectBoosts(result, boosts) {\r\n    boosts.forEach((value, key) => {\r\n        for (let i = 0; i < value.length; i++) {\r\n            result.add(value[i].parentId);\r\n        }\r\n    });\r\n}\r\n\r\nexport function prepareItems(items, loadedStuff=null) {\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        item.index = i;\r\n        if (loadedStuff && loadedStuff.has(item.id)) {\r\n            item.used = true;\r\n        } else {\r\n            item.used = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function applyBoost(foodPref, item, stuffBoost, player, anyway) {\r\n    let result = false;\r\n    for (let i = 0; i < item.boosts.length; i++) {\r\n        let boost = item.boosts[i];\r\n        const funcUsed = boost.func && boost.func.length > 0;\r\n        if (anyway || funcUsed) {\r\n            let id = item.id + \"_\" + i;\r\n            if (boost.id) {\r\n                id = boost.id;\r\n            }\r\n            result = true;\r\n            if (funcUsed) {\r\n                if (item.type === \"Meet\" || item.type === \"Plant\") {\r\n                    boost.value = functions[boost.func](player, boost.defValue, foodPref, item.type);\r\n                } else if (boost.defValue) {\r\n                    boost.value = functions[boost.func](player, boost.defValue);\r\n                } else {\r\n                    boost.value = functions[boost.func](player);\r\n                }\r\n            }\r\n            boost.parentId = item.id;\r\n            const stuff = stuffBoost[boost.category];\r\n            const things = stuff.get(id);\r\n\r\n            // Add things from the same category to apply the best (between Whiskey and Vodka the first will be applied)\r\n            if (things) {\r\n                things.push(boost);\r\n                stuff.set(id, things);\r\n            } else {\r\n                stuff.set(id, [boost]);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function loadBoosts(magazines, bobbles, food, drink, psycho, serums, others, foodPref, player) {\r\n    const stuffBoost = {\r\n        creature: new Map(),\r\n        weapon: new Map(),\r\n    }\r\n    applyAllStuff(foodPref, magazines, stuffBoost, player);\r\n    applyAllStuff(foodPref, bobbles, stuffBoost, player);\r\n    applyAllStuff(foodPref, food, stuffBoost, player);\r\n    applyAllStuff(foodPref, drink, stuffBoost, player);\r\n    applyAllStuff(foodPref, psycho, stuffBoost, player);\r\n    applyAllStuff(foodPref, serums, stuffBoost, player);\r\n    applyAllStuff(foodPref, others, stuffBoost, player);\r\n    return stuffBoost;\r\n}\r\n\r\nfunction applyAllStuff(foodPref, items, stuffBoost, player) {\r\n    for (let i = 0; i < items.length; i++) {\r\n        applyStuff(foodPref, items[i], stuffBoost, player);\r\n    }\r\n}\r\n\r\nfunction deleteBoost(item, stuffBoost) {\r\n    for (let i = 0; i < item.boosts.length; i++) {\r\n        let boost = item.boosts[i];\r\n        let id = item.id + \"_\" + i;\r\n        if (boost.id) {\r\n            id = boost.id;\r\n        }\r\n        let stuff = stuffBoost[boost.category].get(id);\r\n        if (!stuff) {\r\n            return;\r\n        }\r\n        const remainStuff = stuff.filter(b => b.parentId !== item.id);\r\n        if (!remainStuff || remainStuff.length === 0) {\r\n            stuffBoost[boost.category].delete(id);\r\n        } else {\r\n            stuffBoost[boost.category].set(id, remainStuff);\r\n        }\r\n    }\r\n}\r\n\r\nexport function applyStuff(foodPref, item, stuffBoost, player) {\r\n    if (item.used) {\r\n        applyBoost(foodPref, item, stuffBoost, player, true);\r\n    } else {\r\n        deleteBoost(item, stuffBoost);\r\n    }\r\n}\r\n","import getMods from '../helpers/Mods';\r\nimport { currentLegendaryIds } from '../helpers/Global';\r\nimport { getCritDamages } from '../helpers/CritView';\r\nimport { collectAllDamages, convertDamageDataToDamageItem } from '../helpers/mods/DamageSetter';\r\nimport { ModParser } from '../helpers/mods/ModParser';\r\nimport Strings from '../helpers/Strings';\r\n\r\n\r\nconst modParser = new ModParser();\r\n\r\n// Id, value, type (BDB, TDB...)\r\nexport function getDefaultLegs(legIds=null) {\r\n    if (legIds) {\r\n        return [[legIds[0], 0, \"\"], [legIds[1], 0, \"\"], [legIds[2], 0, \"\"], [legIds[3], 0, \"\"], [legIds[4], 0, \"\"]];\r\n    }\r\n    return [[\"\", 0, \"\"], [\"\", 0, \"\"], [\"\", 0, \"\"], [\"\", 0, \"\"], [\"\", 0, \"\"]];\r\n\r\n}\r\n\r\nexport function convertTemplateToSpecs(template, assignCurrentlyActiveUserLegendary=true) {\r\n    let fireRate = (template.isAuto[1]) ? template.defRate : ((10 / template.manualRate[1]) / template.speed[1]);\r\n    fireRate = parseFloat(fireRate.toFixed(3));\r\n    const defReloadTime = template.reloadTime[1] * template.reloadSpeed[1];\r\n    let mods = [];\r\n    for (const modCategoryName in template.allMods) {\r\n        if (modCategoryName.includes(\"Legendary\")) {\r\n            continue;\r\n        }\r\n        const categoryMods = template.allMods[modCategoryName];\r\n        for (let j = 0; j < categoryMods.length; j++) {\r\n            if (categoryMods[j][1]) {\r\n                let mod = getMods().get(categoryMods[j][0]);\r\n                mods.push({group: modCategoryName, id: mod.id, name: mod.name});\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    const leg1 = template.legendary1.id ? template.legendary1.id : \"\";\r\n    const leg2 = template.legendary2.id ? template.legendary2.id : \"\";\r\n    const leg3 = template.legendary3.id ? template.legendary3.id : \"\";\r\n    const leg4 = template.legendary4.id ? template.legendary4.id : \"\";\r\n    const leg5 = template.legendary5.id ? template.legendary5.id : \"\";\r\n    const legs = getDefaultLegs([leg1, leg2, leg3, leg4, leg5]);\r\n\r\n\r\n    let bonusMult = template.bonusMult[1] * 100;\r\n\r\n    // As damage bonus multiplier can be adjusted by legendary it will be calculated separately, so we need to remove\r\n    // this value from bonus multiplier\r\n    bonusMult = replaceAdjustableLegs(legs, bonusMult);\r\n\r\n    let creatures = [];\r\n    for (let i = 0; i < template.creature.length; i++) {\r\n        const creature = template.creature[i];\r\n        creatures.push({\"name\": creature.name, \"value\": creature.value})\r\n    }\r\n    const damages = collectAllDamages(template);\r\n\r\n    // Remove ignored (it can be useful later though (for now they are useless)\r\n    const sortedDamages = [];\r\n    let k = 0;\r\n    for (let i = 0; i < damages.length; i++) {\r\n        const d = damages[i];\r\n        if (!d.ignore) {\r\n            d.index = k++;\r\n            sortedDamages.push(d);\r\n        }\r\n    }\r\n\r\n    const critDamagesData = getCritDamages(template.crSpellId[1], template.id);\r\n    let critDamages = [];\r\n    for (let i = 0; i < critDamagesData.length; i++) {\r\n        const critDamageData = critDamagesData[i];\r\n        for (let j = 0; j < critDamageData.length; j++) {\r\n            const critItem = critDamageData[j];\r\n            critDamages.push(convertDamageDataToDamageItem(critItem));\r\n        }\r\n    }\r\n    let wSpec = {\r\n        weaponId: template.id,\r\n        shot_size: template.shotSize[1],\r\n        defReloadTime: defReloadTime,\r\n        reloadSpeed: template.reloadSpeed[1],\r\n        fireRate: fireRate,\r\n        is_auto: template.isAuto[1],\r\n        hand: template.hand[1],\r\n        ammoCapacity: template.capacity[1],\r\n        speed: template.speed[1],\r\n        totalD: template.totalD[1],\r\n        aa: template.antiArmor[1],\r\n        strengthBoost: template.strengthBoost[1],\r\n        crit: template.crit[1],\r\n        sneak: template.sneak[1],\r\n        cripple: template.cripple[1],\r\n        exp: template.exp[1],\r\n        bonus: bonusMult,\r\n        crippleChance: 50,\r\n        creature: creatures,\r\n        strPoints: template.strPoints[1],\r\n        powerAttack: template.powerAttack[1],\r\n        bash: template.bash[1],\r\n        type: template.type[1],\r\n        ammoType: {name: template.ammoType.name, type: template.ammoType.type, codeName: template.ammoType.codeName},\r\n        level: template.level,\r\n        defaultName: template.name,\r\n        weaponName: template.name,\r\n        chargeTime: template.chargeTime[1],\r\n        maxChargeTime: template.chargeTime[1],\r\n        iconName: template.iconName[template.type[1]],\r\n        tags: template.tags,\r\n        mods: mods,\r\n        legendary: legs,\r\n        damages: sortedDamages,\r\n        critDamages: critDamages,\r\n        legendaryHealthUpdated: false,\r\n    };\r\n\r\n    if (assignCurrentlyActiveUserLegendary) {\r\n\r\n        // Assign previous legs to not reset them if a weapon does not have legendary\r\n        for (let i = 0; i < currentLegendaryIds.length; i++) {\r\n            if (legs[i][0] === \"\") {\r\n                const current = currentLegendaryIds[i];\r\n                if (current[0] !== \"\") {\r\n                    modParser.applyLegendaryModToWSpec(current[0], wSpec, i, 100, false, true);\r\n                    legs[i] = [current[0], current[1], current[2]];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return wSpec;\r\n}\r\n\r\nexport function defaultWeaponSpecs() {\r\n    return {\r\n        shot_size: 1,\r\n        defReloadTime: 0,\r\n        reloadSpeed: 1,\r\n        fireRate: 20,\r\n        is_auto: 1,\r\n        hand: 1,\r\n        ammoCapacity: 1,\r\n        aa: 0,\r\n        strengthBoost: 0,\r\n        bonus: 0,\r\n        crit: 0,\r\n        speed: 1,\r\n        sneak: 0,\r\n        totalD: 0,\r\n        chargeTime: 0,\r\n        maxChargeTime: 0,\r\n        cripple: 0,\r\n        crippleChance: 50,\r\n        bash: 0,\r\n        strPoints: 0,\r\n        powerAttack: 0,\r\n        exp: 0,\r\n        creature: [],\r\n        level: 1,\r\n        ammoType: {name: \"\", type: \"\", codeName: \"\"},\r\n        defaultName: \"Weapon\",\r\n        weaponName: \"Weapon\",\r\n        iconName: \"\",\r\n        weaponId: \"\",\r\n        type: \"All\",\r\n        tags: [],\r\n        mods: [],\r\n        legendary: getDefaultLegs(),\r\n        damages: [],\r\n        critDamages: [],\r\n        legendaryHealthUpdated: true,\r\n    };\r\n}\r\n\r\n// TODO: get rid of hardcore values\r\n// This workaround is acceptable only for 'Damage Bonus' as it has\r\n// the special cell to be placed (only for legendary) because it can be adjusted by a user\r\nfunction replaceAdjustableLegs(legs, bonusMult) {\r\n    for (let i = 0; i < legs.length; i++) {\r\n        const leg = legs[i];\r\n        switch (leg[0]) {\r\n            case '004f6aab':\r\n            case '00606b71':\r\n            case '004f6aae':\r\n            case '004f6aa7':\r\n                bonusMult -= 50;\r\n                leg[1] = 50;\r\n                leg[2] = \"BDB\";\r\n                break;\r\n            case '004f6aa0':\r\n                bonusMult -= 95;\r\n                leg[1] = 95;\r\n                leg[2] = \"BDB\";\r\n                break;\r\n            case '0072a8c1':\r\n            case '006069f2':\r\n                bonusMult -= 24;\r\n                leg[1] = 24;\r\n                leg[2] = \"BDB\";\r\n                break;\r\n            case '00606b73':\r\n            case '005299f5':\r\n            case '004f6d76':\r\n            case '00606c8d':\r\n            case '0052414e':\r\n                bonusMult -= 25;\r\n                leg[1] = 25;\r\n                leg[2] = \"BDB\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return bonusMult;\r\n}\r\n\r\nexport function isWeaponRanged(wSpec) {\r\n    return !(wSpec.type === Strings.Melee || wSpec.type === Strings.Unarmed);\r\n}","export function defaultExtraDamage() {\r\n    return {\r\n        useCrit: false,\r\n        useSneak: false,\r\n        useHead: false,\r\n        critFreq: 4.0,\r\n        headFreq: 80,\r\n    };\r\n}\r\n","import { keyValueBadge } from './RowBuilder';\r\nimport {  Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { collectAllDamages } from './mods/DamageSetter';\r\n\r\n\r\nexport function getSymbolStyle(dType, kind) {\r\n    switch(dType) {\r\n        case \"dtPhysical\":\r\n            if (kind === 'bleed') {\r\n                return [\"🩸\", \"badge bg-lite-shadow m-1\"];\r\n            } else if (kind === 'explosive') {\r\n                return [\"🧨\", \"badge bg-lite-shadow m-1\"];\r\n            }\r\n            return [\"💥\", \"badge bg-ballistic-shadow m-1\"];\r\n        case \"dtEnergy\":\r\n            return [\"⚡\", \"badge bg-energy-shadow m-1\"];\r\n        case \"dtFire\":\r\n            return [\"🔥\", \"badge bg-fire-shadow m-1\"];\r\n        case \"dtCryo\":\r\n            return [\"❄️\", \"badge bg-cold-shadow m-1\"];\r\n        case \"dtPoison\":\r\n            return [\"☣️\", \"badge bg-poison-shadow m-1\"];\r\n        case \"dtRadiationExposure\":\r\n            return [\"☢️\", \"badge bg-rad-shadow m-1\"];\r\n        default:\r\n            return [\"\", \"\"];\r\n    }\r\n}\r\n\r\nfunction getItems(adDamage, bonusMult, creatures) {\r\n    let result = [];\r\n    let k = 0;\r\n    for (let i = 0; i < adDamage.length; i++) {\r\n        const damage = adDamage[i];\r\n        if (damage.ignore) {\r\n            continue;\r\n        }\r\n        const [symbol, style] = getSymbolStyle(damage.type, damage.kind);\r\n        let value = damage.damage.toFixed(1);\r\n        if (bonusMult > 0) {\r\n            const bMult = (value * bonusMult).toFixed(1);\r\n            value += \" (+\" + bMult + \") \";\r\n        } else if (bonusMult < 0) {\r\n            const bMult = (value * bonusMult).toFixed(1);\r\n            value += \" (\" + bMult + \") \";\r\n        }\r\n        if (damage.time > 0) {\r\n            value += \" - \" + damage.time + \"s\";\r\n        }\r\n        if (damage.interval > 0) {\r\n            value += \" (\" + damage.interval.toFixed(1) + \")\";\r\n        }\r\n        if (damage.area > 0) {\r\n            value += \" (\" + damage.area.toFixed(0) + \" area)\";\r\n        }\r\n        result.push(keyValueBadge(style, '10rem', symbol, value, k++));\r\n    }\r\n    for (let i = 0; i < creatures.length; i++) {\r\n        const creature = creatures[i];\r\n        const value = \"+\" + creature.value + \"%\";\r\n        const name = \"🐵 \" + creature.name;\r\n        result.push(keyValueBadge(\"badge bg-lite-shadow m-1\", '10rem', name, value, k++));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function AdditionalDView({template}) {\r\n    const adDamage = collectAllDamages(template);\r\n\r\n    if (!adDamage || adDamage.length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className='m-1 p-1'>Damage</Divider>\r\n            <Row className=\"m-1 d-flex justify-content-center\">\r\n                {getItems(adDamage, template.bonusMult[1], template.creature)}\r\n            </Row>\r\n        </>\r\n    );\r\n}","import items from '../resources/ammo.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getAmmo() {\r\n    return iMap;\r\n}","const magazines = require.context('../resources/boostStuff/magazines', true, /\\.webp/);\r\nconst magazinesList = magazines.keys().map(magazine => magazines(magazine));\r\n\r\nconst bobbleHeads = require.context('../resources/boostStuff/bobbleHeads', true, /\\.webp/);\r\nconst bobbleHeadsList = bobbleHeads.keys().map(bobbleHead => bobbleHeads(bobbleHead));\r\n\r\nconst foods = require.context('../resources/boostStuff/food', true, /\\.webp/);\r\nconst foodsList = foods.keys().map(food => foods(food));\r\n\r\nconst drinks = require.context('../resources/boostStuff/drink', true, /\\.webp/);\r\nconst drinksList = drinks.keys().map(drink => drinks(drink));\r\n\r\nconst psychos = require.context('../resources/boostStuff/psycho', true, /\\.webp/);\r\nconst psychoList = psychos.keys().map(psycho => psychos(psycho));\r\n\r\nconst serums = require.context('../resources/boostStuff/serums', true, /\\.webp/);\r\nconst serumList = serums.keys().map(serum => serums(serum));\r\n\r\nconst others = require.context('../resources/boostStuff/others', true, /\\.webp/);\r\nconst othersList = others.keys().map(other => others(other));\r\n\r\n\r\nexport function getOther(name) {\r\n    return getItem(name, othersList);\r\n}\r\n\r\nexport function getBobbleHead(name) {\r\n    return getItem(name, bobbleHeadsList);\r\n}\r\n\r\nexport function getMagazine(name) {\r\n    return getItem(name, magazinesList);\r\n}\r\n\r\nexport function getFood(name) {\r\n    return getItem(name, foodsList);\r\n}\r\n\r\nexport function getDrink(name) {\r\n    return getItem(name, drinksList);\r\n}\r\n\r\nexport function getPsycho(name) {\r\n    return getItem(name, psychoList);\r\n}\r\n\r\nexport function getSerum(name) {\r\n    return getItem(name, serumList);\r\n}\r\n\r\nfunction getItem(name, nameList) {\r\n    for (let i = 0; i < nameList.length; i++) {\r\n        const item = nameList[i];\r\n        const firstIndex = item.lastIndexOf(\"/\") + 1;\r\n        const lastIndex = item.indexOf(\".\");\r\n        const mName = item.substring(firstIndex, lastIndex);\r\n        if (mName === name) {\r\n            return item;\r\n        }\r\n    }\r\n    return null;\r\n}","import WeaponFactory from '../damage/weapon/WeaponFactory';\r\nimport CreaturesProduction from '../creature/CreaturesProduction';\r\nimport DamageEmulator from '../damage/DamageEmulator';\r\nimport Global from './Global';\r\n\r\n\r\nexport function calcDamage(weaponFactory, creaturesInfo) {\r\n    return new DamageEmulator(weaponFactory.build(WeaponFactory.DEFAULT), creaturesInfo).emulate();\r\n}\r\n\r\nfunction buildGraphValues(xValues, yValues, creaturesInfo, weapon, shotsPerSecond, crit=true) {\r\n    weapon.setEnableCrit(crit);\r\n    for (let i = 0; i < xValues.length; i++) {\r\n        const xValue = xValues[i];\r\n        const armor = [xValue, xValue, xValue, xValue, xValue, xValue];\r\n        const creature = CreaturesProduction.produceByArmor(creaturesInfo, armor);\r\n        creature.reduceArmor(weapon.getAntiArmor());\r\n        creature.takeDamage(weapon.getMaxHit());\r\n        yValues.push(creature.getLastTotalDamageWithAccuracy() * shotsPerSecond);\r\n    }\r\n}\r\n\r\nexport function graphDamage(creaturesInfo, weaponFactory, resistanceByAntiArmor=false, addResPoints=false, accuracy=100, pointsSize=0, staticResistance=0) {\r\n    const weapon = weaponFactory.build(WeaponFactory.DEFAULT, creaturesInfo);\r\n    weapon.setAlwaysMaxHit(true);\r\n\r\n    // We multiply result by headShot frequency later, to calc correct dps\r\n    weapon.setEnableHeadShot(false);\r\n    const headShotPercent = weapon.getHeadShotFrequency() / 100.0;\r\n    const normalShotPercent = 1 - headShotPercent;\r\n    const headShotMult = creaturesInfo.headShot;\r\n    const critFreq = weapon.getCritShotFrequency()\r\n    const normalShotCount = (critFreq > 0) ? critFreq - 1 : 1;\r\n    const critShotCount = (critFreq > 0) ? 1 : 0;\r\n    const shotSum = normalShotCount + critShotCount;\r\n    accuracy = accuracy / 100.0;\r\n\r\n    // In case we have only 1 ammo to not count reloading\r\n    weapon.disableReloadTimeCounting();\r\n\r\n    // Actual shot per second + we need to care about reloading time\r\n    let fireRate = weapon.getFireRate() / 10.0;\r\n    fireRate = 1 / fireRate + weapon.getChargeTime();\r\n    fireRate = 1 / fireRate;\r\n    let ammoCapacity = weapon.getAmmoCapacity();\r\n    if (ammoCapacity === 0) { // Melee\r\n        ammoCapacity = 1;\r\n    }\r\n    const totalTime = ammoCapacity / fireRate + weapon.getReloadTime();\r\n    const shotTime = totalTime / ammoCapacity;\r\n    const shotsPerSecond = 1 / shotTime;\r\n\r\n    // 1 Hit per second which later will be multiplied by actual fire rate to get correct DPS\r\n    weapon.setFireRate(10);\r\n    weapon.setChargeTime(0);\r\n    weapon.setFirstBloodBonus(0);\r\n    weapon.setLastShotBonus(0);\r\n    let yValues = [];\r\n    let yValuesNoCrit = [];\r\n    let xValues = [];\r\n    const r = (creaturesInfo.immuneToRadiation) ? 0 : creaturesInfo.r;\r\n    const p = (creaturesInfo.immuneToPoison) ? 0 : creaturesInfo.p;\r\n\r\n    // Max resistance with armor penetration\r\n    let maxRes = staticResistance;\r\n    const creatureRes = [creaturesInfo.b, creaturesInfo.e, creaturesInfo.f, p, creaturesInfo.c, r];\r\n    if (maxRes < 1) {\r\n        maxRes = Math.max(...creatureRes);\r\n        if (maxRes > 0 && resistanceByAntiArmor) {\r\n            const creature = CreaturesProduction.produceByArmor(creaturesInfo, [maxRes, maxRes, maxRes, maxRes, maxRes, maxRes]);\r\n            const cArmor = creature.reduceArmor(weapon.getAntiArmor()).getArmor();\r\n            maxRes = Math.max(...cArmor);\r\n        }\r\n    }\r\n    let points = pointsSize;\r\n    if (points < 1) {\r\n        points = Global.graphPoints;\r\n    }\r\n\r\n    if (maxRes < 0) {\r\n        maxRes = 0;\r\n    }\r\n    if (maxRes < points) {\r\n        points = maxRes;\r\n    }\r\n    const coef = (points === 0) ? 0 : maxRes / points;\r\n    for (let i = 0; i <= points; i++) {\r\n        xValues.push(Math.ceil(coef * i));\r\n    }\r\n    if (addResPoints) {\r\n        for (let i = 0; i < creatureRes.length; i++) {\r\n            const res = creatureRes[i];\r\n            xValues.push(res);\r\n        }\r\n        xValues = [...new Set(xValues)]; // Get rid of duplicates\r\n        xValues.sort((a, b) => a - b);\r\n    }\r\n    buildGraphValues(xValues, yValues, creaturesInfo, weapon, shotsPerSecond);\r\n    buildGraphValues(xValues, yValuesNoCrit, creaturesInfo, weapon, shotsPerSecond, false);\r\n    for (let i = 0; i < yValues.length; i++) {\r\n        const yVal = yValues[i];\r\n        const yValNoCrit = yValuesNoCrit[i];\r\n        let result = (yVal * critShotCount + yValNoCrit * normalShotCount) / shotSum;\r\n        result = result * headShotMult * headShotPercent + result * normalShotPercent;\r\n        result = result * accuracy;\r\n        yValues[i] = result;\r\n    }\r\n\r\n    return {\r\n        xValues: xValues,\r\n        yValues: yValues,\r\n    }\r\n}\r\n\r\n\r\n","export function getColorsForHotMeter() {\r\n    let colors = []\r\n    let r = 64;\r\n    let g = 255;\r\n    let b = 255;\r\n    let s = 12;\r\n    for (let i = 0; i < 50; i++) {\r\n        if (b > 64) {\r\n            b = b - s;\r\n            b = (b < 64) ? 64 : b;\r\n        } else if (r < 255) {\r\n            r = r + s;\r\n            r = (r > 255) ? 255 : r;\r\n        } else if (g > 64) {\r\n            g = g - s;\r\n            g = (g < 64) ? 64 : g;\r\n        }\r\n        colors.push(\"rgb(\" + r + \", \" + g + \", \" + b + \")\");\r\n    }\r\n    return colors;\r\n}\r\n","import { keyValueBadge } from './RowBuilder';\r\nimport {  Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\nimport DamageExtractor from './mods/DamageExtractor';\r\nimport { getSymbolStyle } from './AdditionalDView';\r\n\r\n\r\nconst damageExtractor = new DamageExtractor();\r\n\r\n\r\n// It does not handle possible crit damages from enchantments (seems we do not have them)\r\nexport default function CritView({crits, weapId}) {\r\n    if (!crits || crits.length === 0) {\r\n        return (<></>);\r\n    }\r\n    let allItems = getCritDamages(crits, weapId, true);\r\n    if (allItems.length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className='m-1 p-1'>Critical Hit</Divider>\r\n            <Row className=\"m-1 d-flex justify-content-center\">\r\n                {allItems}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function getCritDamages(crits, weapId, visual=false) {\r\n    let allItems = [];\r\n    if (!crits) {\r\n        return allItems;\r\n    }\r\n    for (let i = 0; i < crits.length; i++) {\r\n        let result = {};\r\n        const ench = crits[i];\r\n        damageExtractor.extractEnch(ench, result, \"Base Crit\", false, weapId);\r\n        for (const property in result) {\r\n            const spells = result[property];\r\n            if (visual) {\r\n                allItems.push(getItems(spells));\r\n\r\n            } else {\r\n                allItems.push(spells);\r\n            }\r\n        }\r\n    }\r\n    return allItems;\r\n}\r\n\r\nfunction getItems(crits) {\r\n    let result = [];\r\n    for (let i = 0; i < crits.length; i++) {\r\n        const damage = crits[i];\r\n        const [symbol, style] = getSymbolStyle(damage.type_name);\r\n        let value = damage.curv;\r\n        if (value === 0) {\r\n            value = damage.value;\r\n            if (value === 0) {\r\n                value = damage.magnitude;\r\n            }\r\n        }\r\n        if (damage.time > 0) {\r\n            value += \" - \" + damage.time + \"s\";\r\n        }\r\n        if (damage.interval > 0) {\r\n            value += \" (\" + damage.interval.toFixed(1) + \")\";\r\n        }\r\n        result.push(keyValueBadge(style, '10rem', symbol,  value, i));\r\n    }\r\n    return result;\r\n}","import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n\r\nexport function getUniqueDropdownItemsByNames(names) {\r\n    const result = [];\r\n    for (let i = 0; i < names.length; i++) {\r\n        const name = names[i];\r\n        result.push(<Dropdown.Item key={name + i} eventKey={name}>{name}</Dropdown.Item>)\r\n    }\r\n    return result;\r\n}","import effects from '../resources/effects.json';\r\n\r\n\r\nconst vmadObjects = new Map();\r\n\r\n// PERK, SPEL, MGEF\r\nexport function getEffect(id) {\r\n    return effects[0][id];\r\n}\r\n\r\nexport function setVMADObject(id, object) {\r\n    vmadObjects.set(id, object);\r\n}\r\n\r\nexport function getVMADObject(id) {\r\n    return vmadObjects.get(id);\r\n}\r\n\r\nexport function clearVMADObjects() {\r\n    vmadObjects.clear();\r\n}\r\n\r\nexport function printVMADS() {\r\n    console.log(vmadObjects);\r\n}","import iBullet from '../resources/icons/bullet3.webp';\r\nimport iAmmo from '../resources/icons/ammo5.webp';\r\nimport iFireRate from '../resources/icons/fireRate.webp';\r\nimport iTAmmo from '../resources/icons/tAmmo.webp';\r\nimport iGun from '../resources/icons/gun.webp';\r\nimport iRifle from '../resources/icons/rifle.webp';\r\nimport iShotgun from '../resources/icons/shotgun.webp';\r\nimport iBow from '../resources/icons/bow.webp';\r\nimport iMelee from '../resources/icons/melee.webp';\r\nimport iHeavy from '../resources/icons/heavy.webp';\r\nimport iUnarmed from '../resources/icons/unarmed.webp';\r\nimport iThrown from '../resources/icons/thrown.webp';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\n\r\nexport function getNumberEmoji(number) {\r\n    switch(number) {\r\n        case 0:\r\n            return \"0️⃣\";\r\n        case 1:\r\n            return \"1️⃣\";\r\n        case 2:\r\n            return \"2️⃣\";\r\n        case 3:\r\n            return \"3️⃣\";\r\n        case 4:\r\n            return \"4️⃣\";\r\n        case 5:\r\n            return \"5️⃣\";\r\n        case 6:\r\n            return \"6️⃣\";\r\n        case 7:\r\n            return \"7️⃣\";\r\n        case 8:\r\n            return \"8️⃣\";\r\n        case 9:\r\n            return \"9️⃣\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nexport function getSymbolText(symbol, text) {\r\n    switch (symbol) {\r\n        case \"B\":\r\n            return <>💥 {text}</>\r\n        case \"E\":\r\n            return <>⚡ {text}</>\r\n        case \"F\":\r\n            return <>🔥 {text}</>;\r\n        case \"P\":\r\n            return <>☣️ {text}</>;\r\n        case \"C\":\r\n            return <>❄️ {text}</>;\r\n        case \"R\":\r\n            return <>☢️ {text}</>;\r\n        default:\r\n            return <> {text}</>\r\n    }\r\n}\r\n\r\nfunction image(maxHeight, src, className=null) {\r\n    if (!className) {\r\n        className = \"mt-auto mb-auto m-0\";\r\n    }\r\n    return (<Image className={className} style={{ maxHeight: maxHeight }} src={src} fluid />);\r\n}\r\n\r\nexport function bullet(maxHeight) {\r\n    return image(maxHeight, iBullet);\r\n}\r\n\r\nexport function ammo(maxHeight, className=null) {\r\n    return image(maxHeight, iAmmo, className);\r\n}\r\n\r\nexport function fireRate(maxHeight) {\r\n    return image(maxHeight, iFireRate);\r\n}\r\n\r\nexport function tAmmo(maxHeight) {\r\n    return image(maxHeight, iTAmmo);\r\n}\r\n\r\nexport function gun(maxHeight) {\r\n    return image(maxHeight, iGun);\r\n}\r\n\r\nexport function rifle(maxHeight) {\r\n    return image(maxHeight, iRifle);\r\n}\r\n\r\nexport function shotgun(maxHeight) {\r\n    return image(maxHeight, iShotgun);\r\n}\r\n\r\nexport function bow(maxHeight) {\r\n    return image(maxHeight, iBow);\r\n}\r\n\r\nexport function melee(maxHeight) {\r\n    return image(maxHeight, iMelee);\r\n}\r\n\r\nexport function heavy(maxHeight) {\r\n    return image(maxHeight, iHeavy);\r\n}\r\n\r\nexport function unarmed(maxHeight) {\r\n    return image(maxHeight, iUnarmed);\r\n}\r\n\r\nexport function thrown(maxHeight) {\r\n    return image(maxHeight, iThrown);\r\n}\r\n\r\nexport function addText(imageF, maxHeight, marginLeft, text) {\r\n    return (<>{imageF(maxHeight)} <span style={{marginLeft: marginLeft}}>{text}</span></>)\r\n}","export function checkLength(e) {\r\n    if (e.target.value === \"\" || e.target.value === null) {\r\n        e.currentTarget.value = 0;\r\n        return true;\r\n    }\r\n    const val = parseFloat(e.currentTarget.value);\r\n    if (val < 0) {\r\n         e.currentTarget.value = 0;\r\n    } else if (e.currentTarget.value.length > e.currentTarget.maxLength) {\r\n         e.currentTarget.value = e.currentTarget.value.slice(0, e.currentTarget.maxLength);\r\n    } else if (val > e.currentTarget.max) {\r\n        e.currentTarget.value = e.currentTarget.max;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function truncate(str, maxLength) {\r\n    if (!str || str.length <= maxLength) {\r\n        return str;\r\n    }\r\n    return str.slice(0, maxLength) + \"…\";\r\n}\r\n\r\nexport function truncateLongWords(str, maxLength) {\r\n    if (!str || str.length <= maxLength) {\r\n        return str;\r\n    }\r\n    const words = str.split(' ');\r\n    for (let i = 0; i < words.length; i++) {\r\n        let word = words[i];\r\n        if (word.length > maxLength) {\r\n            words[i] = truncate(word, maxLength);\r\n        }\r\n    }\r\n    return words.join(' ');\r\n}","import { convertStuffBoost } from \"../entities/EStuffBoost\";\r\nimport {getAverageTimeMillis } from \"../entities/ECreatures\";\r\n\r\n\r\nexport function getHotPercentage(creatures) {\r\n    const time = getAverageTimeMillis(creatures);\r\n    return timeToPercent(time);\r\n}\r\n\r\nexport function timeToPercent(time) {\r\n    let percent = 0;\r\n    if (time <= 30000) {\r\n        percent = 100;\r\n    } else {\r\n        percent = (3000000 / time).toFixed(0);\r\n    }\r\n    return percent;\r\n}\r\n\r\nexport function buildItem(id, name, player, playerStats, creatures, boostDamage, wSpec, extraDamage, additionalDamages, resultDamage, stuffBoost) {\r\n    const stuff = convertStuffBoost(stuffBoost);\r\n    const wSpecCopy = JSON.parse(JSON.stringify(wSpec));\r\n    wSpecCopy.weaponName = name;\r\n    return {\r\n        id: id,\r\n        name: name,\r\n        averageTime: getAverageTimeMillis(creatures),\r\n        player: JSON.parse(JSON.stringify(player)),\r\n        playerStats: JSON.parse(JSON.stringify(playerStats)),\r\n        boostDamage: JSON.parse(JSON.stringify(boostDamage)),\r\n        wSpec: wSpecCopy,\r\n        extraDamage: JSON.parse(JSON.stringify(extraDamage)),\r\n        additionalDamages: JSON.parse(JSON.stringify(additionalDamages)),\r\n        creatures: JSON.parse(JSON.stringify(creatures)),\r\n        resultDamage: JSON.parse(JSON.stringify(resultDamage)),\r\n        stuff: JSON.parse(JSON.stringify(stuff)),\r\n    }\r\n};","import items from '../resources/legendary.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    let legendary = [[{name: \"None\", id: \"1\"}], [{name: \"None\", id: \"2\"}], [{name: \"None\", id: \"3\"}], [{name: \"None\", id: \"4\"}], [{name: \"None\", id: \"5\"}]];\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item.id, item);\r\n        legendary[item.star - 1].push(item);\r\n    }\r\n    return [map, legendary];\r\n}\r\n\r\nconst [iMap, legendary] = createMap();\r\n\r\nexport function getLegendary(id) {\r\n    return iMap.get(id);\r\n}\r\n\r\nexport function getLegendaryByStar() {\r\n    return legendary;\r\n}\r\n\r\nexport function getLegendaryNameFromSpec(wSpec, star) {\r\n    if (wSpec && wSpec.legendary) {\r\n        const leg = wSpec.legendary[star - 1][0];\r\n        if (leg && leg !== \"\") {\r\n            const legObj = getLegendary(leg);\r\n            if (legObj) {\r\n                return legObj.name;\r\n            }\r\n            return \"\";\r\n        }\r\n    }\r\n    return \"\";\r\n}","import { keyValueBadge } from './RowBuilder';\r\nimport {  Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nfunction formatName(legendaryName) {\r\n    const tail = \" Legendary Mod\";\r\n    if (legendaryName.endsWith(tail)) {\r\n        return legendaryName.slice(0, legendaryName.length - tail.length);\r\n    }\r\n    return legendaryName;\r\n}\r\n\r\nexport function getLegendaryBoxView(legendaryName, starsCount) {\r\n    if (!legendaryName || legendaryName === \"\") {\r\n        return null;\r\n    }\r\n    let stars = \"⭐\";\r\n    stars = stars.repeat(starsCount);\r\n    return keyValueBadge(\"bg-yellow m-1 ps-1 pe-1 shadow-gold\", '20rem', stars, formatName(legendaryName));\r\n}\r\n\r\nexport default function LegendaryView({template}) {\r\n    const isLeg1 = (Object.keys(template.legendary1).length > 0);\r\n    const isLeg2 = (Object.keys(template.legendary2).length > 0);\r\n    const isLeg3 = (Object.keys(template.legendary3).length > 0);\r\n    const isLeg4 = (Object.keys(template.legendary4).length > 0);\r\n    const isLeg5 = (Object.keys(template.legendary5).length > 0);\r\n    if (isLeg1 || isLeg2 || isLeg3 || isLeg4 || isLeg5) {\r\n        const leg1 = (isLeg1) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐\", formatName(template.legendary1.name)) : (<></>);\r\n        const leg2 = (isLeg2) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐⭐\", formatName(template.legendary2.name)) : (<></>);\r\n        const leg3 = (isLeg3) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐⭐⭐\", formatName(template.legendary3.name)) : (<></>);\r\n        const leg4 = (isLeg4) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐⭐⭐⭐\", formatName(template.legendary4.name)) : (<></>);\r\n        const leg5 = (isLeg5) ? keyValueBadge(\"bg-yellow m-1 shadow-gold\", '20rem', \"⭐⭐⭐⭐⭐\", formatName(template.legendary5.name)) : (<></>);\r\n        return (\r\n            <>\r\n                <Divider className='m-1 p-1'>Legendary</Divider>\r\n                <Row className=\"m-1 d-flex justify-content-center\">\r\n                    {leg1}\r\n                    {leg2}\r\n                    {leg3}\r\n                    {leg4}\r\n                    {leg5}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import items from '../resources/mods.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getMods() {\r\n    return iMap;\r\n}","import items from '../resources/perk.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getPerks() {\r\n    return iMap;\r\n}\r\n\r\nexport function getPerk(id) {\r\n    return getPerks().get(id);\r\n}","import items from '../resources/proj.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getProj() {\r\n    return iMap;\r\n}","import getProj from '../helpers/Proj';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Collapse } from 'antd';\r\nimport { getField, getResolvedField } from './ViewHelper';\r\nimport { getCardSpell } from './SpellView';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { WeaponPopoverOverlay, renderWeaponPopover } from './WeaponPopoverOverlay';\r\n\r\n\r\nfunction getProjectileOverlay(proj) {\r\n    const overlayButton = (<Button className=\"d-flex justify-content-center mb-1 m-auto\" size='sm' style={{width: '15rem'}}>Projectile: {proj['id']}</Button>);\r\n    return (\r\n        <WeaponPopoverOverlay popoverHeader={\"Projectile\"} popoverContent={buildProjView(proj)} itemToOverly={overlayButton}></WeaponPopoverOverlay>\r\n    );\r\n}\r\n\r\nfunction getHazardOverlay(hazard) {\r\n    const overlayButton = (<Button className=\"d-flex justify-content-center mt-1 mb-1 m-auto\" variant=\"success\" size='sm' style={{width: '15rem'}}>Hazard: {hazard['id']}</Button>);\r\n    return (\r\n        <WeaponPopoverOverlay popoverHeader={\"Hazard\"} popoverContent={buildHazardView(hazard)} itemToOverly={overlayButton}></WeaponPopoverOverlay>\r\n    );\r\n}\r\n\r\nfunction getProjButton(proj) {\r\n    function onClick(e) {\r\n        renderWeaponPopover(buildProjView(proj, true));\r\n    }\r\n    return (\r\n        <Button className=\"d-flex justify-content-center mb-1 m-auto\" size='sm' onClick={onClick} style={{width: '15rem'}}>Projectile: {proj['id']}</Button>\r\n    );\r\n}\r\n\r\nexport function getExpView(expl, header=\"Explosive\", popover=false) {\r\n    let projectile = (<></>);\r\n    let hazard = (<></>);\r\n    let objectExplosion = (<></>);\r\n    let placedWeapon = '';\r\n    let combined = (<></>);\r\n    if (expl && expl !== '' && expl !== '00000000') {\r\n        if (expl.projectile !== '00000000') {\r\n            if (expl.projectile === 'Same') {\r\n                projectile = getResolvedField('Projectile:', 'Same', 'default', '20rem');\r\n            } else {\r\n                const proj = getProj().get(expl.projectile);\r\n\r\n                // If it is not a popover we need to create a button to open a pover, otherwise we need to create a content for an opened popover\r\n                if (!popover) {\r\n                    projectile = getProjectileOverlay(proj);\r\n                } else {\r\n                    projectile = getProjButton(proj);\r\n                }\r\n            }\r\n        }\r\n        if (expl.object !== '') {\r\n            if (expl.object.type === 'HAZD') {\r\n                hazard = getHazardOverlay(expl.object.value);\r\n            } else if (expl.object.type === 'WEAP') {\r\n                placedWeapon = expl.object.value.id + \" / \" + expl.object.value.name;\r\n            } else if (expl.object.type === 'EXPL') {\r\n                objectExplosion = getExpView(expl.object.value, \"Explosive\", true);\r\n            } else if (expl.object.type === 'MSTT') {\r\n                combined = (\r\n                    <>\r\n                        {getExpView(expl.object.value.expl, \"Explosive\", true)}\r\n                        <div className='pb-2'></div>\r\n                        {getHazardOverlay(expl.object.value.hazd)}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        let dType = expl.d_type;\r\n        if (dType && dType !== '' && dType !== '00000000') {\r\n            dType = dType.id + \" - \" + dType.name + \" / \" + dType.full;\r\n        }\r\n        return (\r\n            <Card className=\"m-0 mt-2 p-0\">\r\n                <Card.Header className='m-0 p-1 ps-2 bg-proj-header'><small>{header}</small></Card.Header>\r\n                <Card.Body className=\"p-1\">\r\n                    <Row>\r\n                        {getField(expl, 'Id:', 'id', 'default', '20rem')}\r\n                        {getField(expl, 'Name:', 'name', 'purple', '20rem')}\r\n                        {getField(expl, 'Damage:', 'damage', 'blue', '20rem', false)}\r\n                        {getField(expl, 'Force:', 'force', 'blue', '20rem', false)}\r\n                        {getField(expl, 'ExpCurv:', 'exp_curv', 'blue', '20rem', false)}\r\n                        {getField(expl, 'DMult:', 'damage_mult', 'blue', '20rem', false, 3)}\r\n                        {getResolvedField('DType:', dType, 'blue', '20rem')}\r\n                        {getResolvedField('Placed Weapon:', placedWeapon, 'blue', '20rem')}\r\n                        {getField(expl, 'DValue:', 'd_value', 'blue', '20rem', false)}\r\n                        {getField(expl, 'DCurv:', 'd_curv', 'blue', '20rem', false)}\r\n                    </Row>\r\n                    <div className=\"m-1\" />\r\n                    {projectile}\r\n                    {getCardSpell(expl.enchantment)}\r\n                    {hazard}\r\n                    {objectExplosion}\r\n                    {combined}\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\n// It should have resolved data object already or '' / '00000000' for empty\r\nexport function getExplosiveForPopover(expl, header=\"Explosive\") {\r\n    return getExpView(expl, header, true);\r\n}\r\n\r\nexport function buildProjViewById(projId) {\r\n    const proj = getProj().get(projId);\r\n    if (!proj || proj === '' || proj === '00000000') {\r\n        return (<></>);\r\n    }\r\n    return buildProjView(proj)\r\n}\r\n\r\nfunction buildProjView(proj, popover=false) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                {getField(proj, 'Id:', 'id', 'default', '20rem')}\r\n                {getField(proj, 'Code Name:', 'name', 'pink', '20rem')}\r\n                {getField(proj, 'Full Name:', 'full', 'pink', '20rem')}\r\n                {getField(proj, 'Gravity:', 'gravity', 'blue', '20rem', true, 3)}\r\n                {getField(proj, 'Range:', 'range', 'blue', '20rem')}\r\n                {getField(proj, 'Relaunch:', 'relaunch', 'blue', '20rem', true, 3)}\r\n                {getField(proj, 'Speed:', 'speed', 'blue', '20rem')}\r\n            </Row>\r\n            {getExpView(proj.expl, \"Explosive\", popover)}\r\n            {getExpView(proj.destructible, \"Destructible\", popover)}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction buildHazardView(hazard) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                {getField(hazard, 'Id:', 'id', 'default', '20rem')}\r\n                {getField(hazard, 'Code Name:', 'name', 'pink', '20rem')}\r\n                {getField(hazard, 'Full Name:', 'full', 'pink', '20rem')}\r\n                {getField(hazard, 'Radius:', 'radius', 'blue', '20rem')}\r\n                {getField(hazard, 'Life Time:', 'lifeTime', 'blue', '20rem')}\r\n                {getField(hazard, 'Interval:', 'interval', 'blue', '20rem', true, 3)}\r\n            </Row>\r\n            {getCardSpell(hazard.effect)}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction buildProjViewByIds(ids) {\r\n    const result = [];\r\n    for (let i = 0; i < ids.length; i++) {\r\n        const proj = getProj().get(ids[i]);\r\n        result.push(<Card key={ids[i]} className=\"p-1 mb-1\">{buildProjView(proj)}</Card>);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction projInfo(className, ids) {\r\n    if (!ids || ids.length === 0) {\r\n        return (<></>);\r\n    }\r\n\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>Additional Projectile</strong>,\r\n            children: <>{buildProjViewByIds(ids)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Collapse size='small' items={items} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function ProjView({className, projId}) {\r\n    return projInfo(className, projId);\r\n}","import items from '../resources/spel.json';\r\n\r\nfunction createMap() {\r\n    let map = new Map();\r\n    for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        map.set(item['id'], item);\r\n    }\r\n    return map;\r\n}\r\n\r\nconst iMap = createMap();\r\n\r\nexport default function getSpell() {\r\n    return iMap;\r\n}","import { getField, getResolvedField } from './ViewHelper';\r\nimport getPerks from './PerkProvider';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { getSpellHeader, getEffectsForPopover } from './SpellView';\r\nimport { getActorData } from '../templates/EffectPopover';\r\nimport getSpell from './Spell';\r\n\r\n// TODO: Deprecated. Must be deleted in the future.\r\n\r\nconst kind = {1: \"Float\", 3: \"List\", 4: \"Activate\", 5: \"Spell\", 8: \"Actor\", 9: \"Item\"};\r\n\r\nexport default function perkPopover(perk) {\r\n    return (\r\n        <div>Perk</div>\r\n    );\r\n}\r\n\r\nexport function getEffects(effects, width) {\r\n    const result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        const vType = effect.v_type;\r\n        if (vType === 8) {\r\n            result.push(buildEightEffect(effect, width, kind[vType]));\r\n        } else if (vType === 5 || vType === 0) {\r\n            result.push(buildFifthEffect(effect, width, kind[vType]));\r\n        } else if (vType === 1) {\r\n            result.push(buildFirstEffect(effect, width, kind[vType]));\r\n        } else {\r\n            throw new Error(\"Unsupported vType: \" + vType);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction buildFirstEffect(effect, width, kind) {\r\n    return (\r\n        <Card border=\"secondary\" className=\"mt-1 mb-1 p-0 m-0\">\r\n            <Row className=\"pt-1 pb-2\">\r\n                {getResolvedField('Kind:', kind, 'pink', width)}\r\n                {getField(effect, 'Type:', 'e_type', 'pink', width)}\r\n                {getField(effect, 'Entry:', 'entry', 'pink', width)}\r\n                {getField(effect, 'Operation:', 'op', 'pink', width)}\r\n                {getField(effect, 'Value:', 'value', 'pink', width, false)}\r\n            </Row>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction buildFifthEffect(effect, width, kind) {\r\n    let spell = effect.value;\r\n    if (typeof spell === typeof '') {\r\n        spell = getSpell().get(spell);\r\n    }\r\n    return (\r\n        <Card border=\"secondary\" className=\"mt-1 mb-1 p-0 m-0\">\r\n            <Row className=\"pt-1 pb-2\">\r\n                {getResolvedField('Kind:', kind, 'purple', width)}\r\n                {getField(effect, 'Type:', 'e_type', 'purple', width)}\r\n                {getField(effect, 'Entry:', 'entry', 'purple', width)}\r\n                {getField(effect, 'Operation:', 'op', 'purple', width)}\r\n            </Row>\r\n            {getSpellHeader(spell)}\r\n            <div className=\"pt-1\" />\r\n            {getEffectsForPopover(spell.mag_effects)}\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction buildEightEffect(effect, width, kind) {\r\n    const actor1 = getActorData(effect.value.actor1);\r\n    const actor2 = getActorData(effect.value.actor2);\r\n    return (\r\n        <Card border=\"secondary\" className='mt-1 mb-1 p-0 m-0'>\r\n            <Row className=\"pt-1 pb-2\">\r\n                {getResolvedField('Kind:', kind, 'blue', width)}\r\n                {getField(effect, 'Type:', 'e_type', 'blue', width)}\r\n                {getField(effect, 'Entry:', 'entry', 'blue', width)}\r\n                {getField(effect, 'Operation:', 'op', 'blue', width)}\r\n                {getField(effect.value, 'Value:', 'value', 'blue', width, false, 3)}\r\n                {getResolvedField(\"Actor1:\", actor1, 'blue', width)}\r\n                {getResolvedField(\"Actor2:\", actor2, 'blue', width)}\r\n            </Row>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport function getPerkContent(perkId, width='20rem') {\r\n    const perk = getPerks().get(perkId);\r\n    return (\r\n        <Row>\r\n            {getField(perk, 'Id:', 'id', 'default', width)}\r\n            {getField(perk, 'Code Name:', 'name', 'purple', width)}\r\n            {getField(perk, 'Name:', 'full', 'purple', width)}\r\n            {getEffects(perk.effects, width)}\r\n        </Row>\r\n    );\r\n}\r\n","import Card from 'react-bootstrap/Card';\r\nimport { keyValueTag } from '../helpers/RowBuilder';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { getPerkContent } from '../helpers/PerkPopover';\r\nimport { renderWeaponPopover } from '../helpers/WeaponPopoverOverlay';\r\nimport { getNameValueField } from '../helpers/ViewHelper';\r\nimport { getExplosiveForPopover } from '../helpers/ProjView';\r\nimport { truncate } from '../helpers/Input';\r\n\r\n\r\nfunction getField(lValue, rValue, color) {\r\n    if (rValue && typeof rValue === typeof '') {\r\n        rValue = rValue.toString();\r\n        rValue = truncate(rValue, 30);\r\n    }\r\n    return (\r\n        <Row className=\"d-flex justify-content-center ps-1 pe-1\">\r\n            {keyValueTag(lValue, rValue, color)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport function getActorData(actor) {\r\n    if (actor === \"\" || actor === '00000000' || actor === '00000392') {\r\n        return '';\r\n    }\r\n    return actor.id + \" / \" + actor.name;\r\n}\r\n\r\nexport function getActor(name, actor, color, width, under_row=true) {\r\n    const actorData = getActorData(actor);\r\n    if (actorData === '') {\r\n        return (<></>);\r\n    }\r\n    if (under_row) {\r\n        return getField(name, actorData, color);\r\n    }\r\n    return getNameValueField(name, actorData, color);\r\n}\r\n\r\nexport function getPerkButton(perkId) {\r\n    if (!perkId || perkId === '00000000') {\r\n        return (<></>)\r\n    }\r\n    function onClick(e) {\r\n        renderWeaponPopover(getPerkContent(perkId));\r\n    }\r\n    return (\r\n        <Row className=\"d-flex justify-content-center ps-1 pe-1\">\r\n            <Button size='sm' onClick={onClick} style={{width: '15rem'}}>Perk: {perkId}</Button>\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction getGlobDuration(effect) {\r\n    const dur = effect.glob_duration;\r\n    if (dur !== '') {\r\n        return (\r\n            <Card className='mt-1 mb-1'>\r\n                <Card.Header className=\"bg-spell-header p-0 ps-2\">Glob Duration</Card.Header>\r\n                <Card.Body>\r\n                    {getField(\"Id:\", dur.id, \"purple\")}\r\n                    {getField(\"Name:\", dur.name, \"purple\")}\r\n                    {getField(\"Value:\", dur.value, \"purple\")}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return getField(\"GlobDuration:\", \"0\", \"purple\")\r\n}\r\n\r\nfunction getGlobMagnitude(effect) {\r\n    const mag = effect.glob_magnitude;\r\n    if (mag !== '') {\r\n        return (\r\n            <Card className='mt-1 mb-1'>\r\n                <Card.Header className=\"bg-spell-header p-0 ps-2\">Glob Magnitude</Card.Header>\r\n                <Card.Body>\r\n                    {getField(\"Id:\", mag.id, \"purple\")}\r\n                    {getField(\"Name:\", mag.name, \"purple\")}\r\n                    {getField(\"Value:\", mag.value, \"purple\")}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return getField(\"GlobMagnitude:\", \"0\", \"purple\");\r\n}\r\n\r\nexport function getEffectContent(effect) {\r\n    const mEffect = effect['m_effect'];\r\n    const id = mEffect.id;\r\n    if (mEffect.projectile !== '00000000')\r\n        throw new Error('Projectile Found in spell: ' + id);\r\n    if (mEffect.ability !== '00000000')\r\n        throw new Error('Ability Found in spell: ' + id);\r\n    const resist = (mEffect.resist === '00000000') ? mEffect.resist : mEffect.resist.full;\r\n    return (\r\n        <>\r\n            {getField(\"Id:\", mEffect.id, 'indigo')}\r\n            {getField(\"Name:\", mEffect.full, \"purple\")}\r\n            {getField(\"CodeName:\", mEffect.name, \"purple\")}\r\n            {getActor(\"SpellActor:\", effect.actor, \"purple\")}\r\n            {getField(\"Type:\", mEffect.a_type, \"purple\")}\r\n            {getField(\"Ability:\", mEffect.ability, \"purple\")}\r\n            {getField(\"Resistance:\", resist, \"purple\")}\r\n            {getField(\"Target:\", mEffect.target, \"purple\")}\r\n            {getField(\"Activity:\", mEffect.e_type, \"purple\")}\r\n            {getField(\"Magnitude:\", effect.magnitude, \"purple\")}\r\n            {getField(\"Area:\", effect.area, \"purple\")}\r\n            {getField(\"OnlyForPlayer:\", effect.only_player, \"purple\")}\r\n            {getField(\"Duration:\", effect.duration, \"purple\")}\r\n            {getField(\"DCurv:\", effect.d_curv, \"purple\")}\r\n            {getExplosiveForPopover(mEffect.explosion)}\r\n            {getField(\"Projectile:\", mEffect.projectile, \"purple\")}\r\n            {getActor(\"Actor1:\", mEffect.actor_value1, \"purple\")}\r\n            {getActor(\"Actor2:\", mEffect.actor_value2, \"purple\")}\r\n            {getGlobDuration(effect)}\r\n            {getGlobMagnitude(effect)}\r\n            {getPerkButton(mEffect.perk)}\r\n        </>\r\n    );\r\n}\r\n","import Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Divider } from 'antd';\r\nimport { getField } from './ViewHelper';\r\nimport getSpell from '../helpers/Spell';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { getPerkButton, getEffectContent } from '../templates/EffectPopover';\r\nimport { WeaponPopoverOverlay, renderWeaponPopover } from '../helpers/WeaponPopoverOverlay';\r\n\r\n// TODO: This class is Deprecated\r\nfunction getOverlay(effect, buttonStyle, key) {\r\n    const mEffect = effect['m_effect'];\r\n    const overlayButton = (<Button className=\"d-flex justify-content-center m-1\" size='sm' style={buttonStyle}>Effect: {mEffect['id']}</Button>);\r\n    return (\r\n        <WeaponPopoverOverlay key={key} popoverHeader={mEffect.full} popoverContent={getEffectContent(effect)} itemToOverly={overlayButton}></WeaponPopoverOverlay>\r\n    );\r\n}\r\n\r\nfunction getEffectButton(effect, key) {\r\n    function onClick(e) {\r\n        renderWeaponPopover(getEffectContent(effect));\r\n    }\r\n    const mEffect = effect['m_effect'];\r\n    return (\r\n        <Button key={key} className=\"d-flex justify-content-center mb-1 m-auto\" size='sm' onClick={onClick} style={{width: '15rem'}}>Effect: {mEffect['id']}</Button>\r\n    );\r\n}\r\n\r\nexport function getEffectsForPopover(effects) {\r\n    let result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        result.push(getEffectButton(effect, i));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getEffects(effects, buttonStyle={width: '15rem'}) {\r\n    let result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        result.push(getOverlay(effect, buttonStyle, i));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getSpellHeader(spell, width='20rem') {\r\n    return (\r\n        <>\r\n            {getField(spell, 'Id:', 'id', 'default', width)}\r\n            {getField(spell, 'Code Name:', 'name', 'purple', width)}\r\n            {getField(spell, 'Name:', 'full', 'purple', width)}\r\n            {getField(spell, 'Type:', 'type', 'blue', width)}\r\n            {getField(spell, 'Activity:', 'e_type', 'blue', width)}\r\n            {getField(spell, 'Target:', 'target', 'blue', width)}\r\n            {getPerkButton(spell.perk)}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction buildSpellView(spell) {\r\n    const effects = spell['mag_effects'];\r\n    return (\r\n        <>\r\n            <Row>\r\n                {getSpellHeader(spell)}\r\n            </Row>\r\n            <Divider className='m-0 pt-2 pb-1 ps-4 pe-4'>Effects</Divider>\r\n            <Row className='d-flex justify-content-center ps-1 pe-1'>\r\n                {getEffects(effects)}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function getCardSpell(spellId, header) {\r\n    const spell = getSpell().get(spellId);\r\n    if (!spell) {\r\n        return (<></>);\r\n    }\r\n    if (!header) {\r\n        header = \"Spell\"\r\n    }\r\n    return (\r\n        <Card className=\"bg-spell-body\">\r\n            <Card.Header className=\"bg-spell-header m-0 ps-2 p-1\">\r\n                <small>{header}</small>\r\n            </Card.Header>\r\n            <Card.Body className=\"p-0 ms-1 me-1\">\r\n                {buildSpellView(spell)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function SpellView({spellId, header}) {\r\n    return getCardSpell(spellId, header);\r\n}","export function numberToString(number, round=0) {\r\n    if (round > 0) {\r\n        return (+number.toFixed(round)).toString();\r\n    }\r\n    return number.toString();\r\n}\r\n\r\nconst emojis = ['🍦', '🍧', '🍨', '🍩', '🍪', '🎂', '🍰', '🧁', '🥧', '🍫', '🍬', '🍭', '🥨', '🥯',\r\n                '🥞', '🧇', '🧀', '🍖', '🍗', '🥩', '🥓', '🍔', '🍮', '🍯'];\r\n\r\nexport function getRandomNumber(max) {\r\n    return Math.floor(Math.random() * max);\r\n}\r\n\r\nexport function getRandomEmoji() {\r\n    return emojis[getRandomNumber(emojis.length)];\r\n}\r\n\r\nexport function buildRandomEmojiString(length, space=1) {\r\n    const spaceChar = '\\xa0';\r\n    let spaceChars = \"\";\r\n    if (space > 0) {\r\n        spaceChars = spaceChar.repeat(space);\r\n    }\r\n    let result = \"\";\r\n    const eSize = emojis.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += emojis[getRandomNumber(eSize)];\r\n        if (i < (length - 1)) {\r\n            result += spaceChars;\r\n        }\r\n    }\r\n    return result;\r\n}","export default class Strings {\r\n    static Melee = \"Melee\";\r\n    static Unarmed = \"Unarmed\";\r\n\r\n    static getFireRate(wType=null) {\r\n        return (wType && (wType === Strings.Melee || wType === Strings.Unarmed)) ? \"Hit Rate\" : \"Fire Rate\";\r\n    }\r\n}","const templates = require.context('../resources/weaponTemplates', true, /\\.json$/);\r\nconst templateList = templates.keys().map(template => templates(template)[0]);\r\n\r\n\r\nexport default function getTemplates() {\r\n    return templateList;\r\n}\r\n\r\n// Returns a copy of a template with specified id.\r\nexport function getTemplateCopyById(id) {\r\n\r\n    // The amount of templates will never exceed several hundreds, so it is ok.\r\n    for (let i = 0; i < templateList.length; i++) {\r\n        const template = templateList[i];\r\n        if (template.id === id) {\r\n            return JSON.parse(JSON.stringify(template));\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n// Only for reading purposes\r\nexport function getTemplateById(id) {\r\n    for (let i = 0; i < templateList.length; i++) {\r\n        const template = templateList[i];\r\n        if (template.id === id) {\r\n            return template;\r\n        }\r\n    }\r\n    return null;\r\n}","export function millisToTime(value) {\r\n    value = parseInt(value);\r\n    if ((!value && value !== 0) || value === Infinity) {\r\n        return \"Infinity\";\r\n    } else if (value > 3599999999) {\r\n        return \"+999:59:59:999\";\r\n    }\r\n    const t = [3600000, 60000, 1000];\r\n    let time = [];\r\n    for (let i = 0; i < t.length; i++) {\r\n        let r = value % t[i];\r\n        let q = (value - r) / t[i];\r\n        time.push(q);\r\n        value = r;\r\n    }\r\n    let strTime = \"\";\r\n    strTime += (time[0] < 10) ? (\"00\" + time[0] + \":\") : ((time[0] < 100) ? (\"0\" + time[0] + \":\") : time[0] + \":\");\r\n    strTime += (time[1] < 10) ? (\"0\" + time[1] + \":\") : time[1] + \":\";\r\n    strTime += (time[2] < 10) ? (\"0\" + time[2] + \":\") : time[2] + \":\";\r\n    if (value < 10) {\r\n        strTime += ( \"00\" + value);\r\n    } else if (value < 100) {\r\n        strTime += (\"0\" + value);\r\n    } else {\r\n        strTime += value;\r\n    }\r\n    return strTime;\r\n}","import Col from 'react-bootstrap/Col';\r\nimport { keyValueTag } from '../helpers/RowBuilder';\r\nimport { truncate } from '../helpers/Input';\r\n\r\n// TODO: DEPRECATED, HAS TO BE DELETED\r\nexport function getField(data, name, id, color, width, hideEmpty=true, round=0, cell=-1, css=\"\") {\r\n    let value = data[id];\r\n    return getResolvedField(name, value, color, width, hideEmpty, round, cell, css);\r\n}\r\n\r\nexport function getResolvedField(name, value, color, width, hideEmpty=true, round=0, cell=-1, css=\"\") {\r\n    if (cell > -1) {\r\n        value = value[cell];\r\n    }\r\n    if (round > 0) {\r\n        value = value.toFixed(round);\r\n    }\r\n    if (hideEmpty) {\r\n        if (!value || value === 0 || value === '00000000' || value === '') {\r\n            return <></>;\r\n        }\r\n    }\r\n    return getNameValueField(name, value, color, width, css);\r\n}\r\n\r\nexport function getNameValueField(value1, value2, color, width, css=\"\") {\r\n    if (value2 && typeof value2 === typeof '') {\r\n        value2 = truncate(value2, 30);\r\n    }\r\n    return (\r\n        <Col className={'d-flex justify-content-center ' + css} >\r\n            {keyValueTag(value1,  value2, color, {width: width})}\r\n        </Col>\r\n    );\r\n}\r\n\r\n\r\n","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport { memo } from 'react';\r\nimport { addText, gun, rifle, shotgun, bow, melee, heavy, unarmed, thrown } from '../helpers/Emoji';\r\n\r\n\r\nconst WTypeDropdown = memo(function WTypeDropdown({weaponType, setWeaponType, resetPage=null, onSelect=null, title=null}) {\r\n    function onSelectCustom(e) {\r\n        setWeaponType(e);\r\n        if (resetPage) {\r\n            resetPage();\r\n        }\r\n        if (onSelect) {\r\n            onSelect(e);\r\n        }\r\n    }\r\n    const customTitle = (title) ? title : weaponType;\r\n    return (\r\n        <DropdownButton onSelect={onSelectCustom} id=\"dropdown-basic-button\" title={customTitle}>\r\n            <Dropdown.Item eventKey=\"All\">All</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Heavy\">{addText(heavy, '1.1rem', '0.27rem', \"Heavy\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Shotgun\">{addText(shotgun, '1.1rem', '0.27rem', \"Shotgun\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Rifle\">{addText(rifle, '1.1rem', '0.27rem', \"Rifle\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Pistol\">{addText(gun, '1.1rem', '0.27rem', \"Pistol\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Bow\">{addText(bow, '1.1rem', '0.27rem', \"Bow\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Melee\">{addText(melee, '1.1rem', '0.27rem', \"Melee\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Unarmed\">{addText(unarmed, '1.1rem', '0.27rem', \"Unarmed\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Thrown\">{addText(thrown, '1.1rem', '0.27rem', \"Thrown\")}</Dropdown.Item>\r\n        </DropdownButton>\r\n    );\r\n});\r\n\r\nexport default WTypeDropdown;\r\n\r\nexport function getRowWithImage(name, customName=null, maxHeight='1.1rem', space='0.27rem') {\r\n    if (!customName) {\r\n        customName = name;\r\n    }\r\n    switch(name) {\r\n        case \"Heavy\":\r\n            return addText(heavy, maxHeight, space, customName);\r\n        case \"Shotgun\":\r\n            return addText(shotgun, maxHeight, space, customName);\r\n        case \"Rifle\":\r\n            return addText(rifle, maxHeight, space, customName);\r\n        case \"Pistol\":\r\n            return addText(gun, maxHeight, space, customName);\r\n        case \"Bow\":\r\n            return addText(bow, maxHeight, space, customName);\r\n        case \"Melee\":\r\n            return addText(melee, maxHeight, space, customName);\r\n        case \"Unarmed\":\r\n            return addText(unarmed, maxHeight, space, customName);\r\n        case \"Thrown\":\r\n            return addText(thrown, maxHeight, space, customName);\r\n        default:\r\n            return customName;\r\n    }\r\n};\r\n\r\nexport function getImage(name, maxHeight='1.3rem') {\r\n    switch(name) {\r\n        case \"Heavy\":\r\n            return heavy(maxHeight);\r\n        case \"Shotgun\":\r\n            return shotgun(maxHeight);\r\n        case \"Rifle\":\r\n            return rifle(maxHeight);\r\n        case \"Pistol\":\r\n            return gun(maxHeight);\r\n        case \"Bow\":\r\n            return bow(maxHeight);\r\n        case \"Melee\":\r\n            return melee(maxHeight);\r\n        case \"Unarmed\":\r\n            return unarmed(maxHeight);\r\n        case \"Thrown\":\r\n            return thrown(maxHeight);\r\n        default:\r\n            return \"\";\r\n    }\r\n}","import React from 'react';\r\nimport Image from 'react-bootstrap/Image';\r\nconst images = require.context('../resources/weapon_icons', true, /\\.webp$/);\r\nconst imageList = images.keys().map(image => images(image));\r\n\r\n\r\nexport function getImageElement(name, maxHeight='1.5rem', className=\"\") {\r\n    for (let i = 0; i < imageList.length; i++) {\r\n        const firstIndex = imageList[i].lastIndexOf(\"/\") + 1;\r\n        const lastIndex = imageList[i].indexOf(\".\");\r\n        const wName = imageList[i].substring(firstIndex, lastIndex);\r\n        if (wName === name) {\r\n            return (<Image className={\"p-0 m-0 \" + className} style={{ maxHeight: maxHeight }} src={imageList[i]} fluid />)\r\n        }\r\n    }\r\n    return (\r\n        <></>\r\n    );\r\n}","import OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ReactDOM from 'react-dom/client';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nlet number = 0;\r\nlet popoverContent = [];\r\n\r\nexport function WeaponPopoverOverlay({popoverHeader, popoverContent, itemToOverly}) {\r\n    const popover = weaponPopover(popoverHeader, popoverContent);\r\n    function openPopover(e) {\r\n        if (e) {\r\n            initWeaponPopover(popoverContent);\r\n        }\r\n    }\r\n    return (\r\n        <OverlayTrigger onToggle={openPopover} trigger=\"click\" placement=\"top\" rootClose='true' overlay={popover}>\r\n            {itemToOverly}\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nfunction weaponPopover(header, content) {\r\n    return (\r\n        <Popover className=\"popover-adjustable2\">\r\n            <Popover.Header>\r\n                <Row style={{minHeight: '2rem'}}>\r\n                    <Col className=\"col-10 d-flex justify-content-start\">\r\n                        <strong className=\"m-auto ms-2\">{header}</strong>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button className=\"\" style={{display: 'none', borderRadius: '1rem', height: '2.0rem', paddingTop: '0.22rem', paddingLeft: '0.4rem'}} variant=\"blue-white-border\" id=\"WeaponDetailsPopoverBackButton\" onClick={popoverBack}>\r\n                            <h6>⇜</h6>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Popover.Header>\r\n            <Popover.Body className=\"popover-body2\">\r\n                <div id=\"WeaponDetailsPopover\">\r\n                    {content}\r\n                </div>\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nfunction initWeaponPopover(content) {\r\n    number = 0;\r\n    popoverContent = [content];\r\n}\r\n\r\n// Use this method if you want to render specific content in the popover (after tap on button for example)\r\n// content - a batch of html tags which will be rendered by ReactDom.render\r\nexport function renderWeaponPopover(content) {\r\n    number += 1;\r\n    popoverContent[number] = content;\r\n    document.getElementById(\"WeaponDetailsPopoverBackButton\").style.display = 'inline';\r\n    ReactDOM.createRoot(document.getElementById(\"WeaponDetailsPopover\")).render(content);\r\n}\r\n\r\nfunction popoverBack(e) {\r\n    number -= 1;\r\n    if (number < 1) {\r\n        document.getElementById(\"WeaponDetailsPopoverBackButton\").style.display = 'none';\r\n    }\r\n    ReactDOM.createRoot(document.getElementById(\"WeaponDetailsPopover\")).render(popoverContent[number]);\r\n}","import getAmmo from '../Ammo';\r\nimport getProj from '../Proj';\r\nimport getSpell from '../Spell';\r\nimport getPerks from '../PerkProvider';\r\nimport { getTemplateCopyById } from '../TemplatesRegister';\r\n\r\nexport default class DamageExtractor {\r\n\r\n    damageTypes = {\r\n        \"electrical\": {\r\n            \"id\": \"00060a80\",\r\n            \"name\": \"dtElectrical\",\r\n            \"full\": \"Electrical Damage\"\r\n        },\r\n        \"energy\": {\r\n            \"id\": \"00060a81\",\r\n            \"name\": \"dtEnergy\",\r\n            \"full\": \"Energy Damage\"\r\n        },\r\n        \"radiation\": {\r\n            \"id\": \"00060a85\",\r\n            \"name\": \"dtRadiationExposure\",\r\n            \"full\": \"Radiation Damage\"\r\n        },\r\n        \"fire\": {\r\n            \"id\": \"00060a82\",\r\n            \"name\": \"dtFire\",\r\n            \"full\": \"Fire Damage\"\r\n        },\r\n        \"cryo\": {\r\n            \"id\": \"00060a83\",\r\n            \"name\": \"dtCryo\",\r\n            \"full\": \"Cryo Damage\"\r\n        },\r\n        \"poison\": {\r\n            \"id\": \"00060a84\",\r\n            \"name\": \"dtPoison\",\r\n            \"full\": \"Poison Damage\"\r\n        },\r\n        \"physical\": {\r\n            \"id\": \"00060a87\",\r\n            \"name\": \"dtPhysical\",\r\n            \"full\": \"Physical Damage\"\r\n        },\r\n        \"pure\": {\r\n            \"id\": \"00060a8d\",\r\n            \"name\": \"dtPureDamage\",\r\n            \"full\": \"Pure Damage\"\r\n        },\r\n    };\r\n\r\n    // Based on resistance\r\n    resTypes = {\r\n        '000002ea': this.damageTypes['radiation'],\r\n        '000002eb': this.damageTypes['energy'],\r\n        '000002e7': this.damageTypes['cryo'],\r\n        '000002e4': this.damageTypes['poison'],\r\n        '000002e5': this.damageTypes['fire'],\r\n        '000002e6': this.damageTypes['electrical'],\r\n        '000002e3': 'DamageResistance',\r\n    };\r\n\r\n    constructor(extractPlacedObjects=true) {\r\n\r\n        // Some of the weapon's projectiles contain weapons inside\r\n        if (extractPlacedObjects) {\r\n            this.tomahawk = getTemplateCopyById('000042f2');\r\n            this.throwingKnife = getTemplateCopyById('003879a3');\r\n            this.extractFromTemplate(this.tomahawk);\r\n            this.extractFromTemplate(this.throwingKnife);\r\n        }\r\n    }\r\n\r\n    extract(templates) {\r\n        for (let i = 0; i < templates.length; i++) {\r\n            this.extractFromTemplate(templates[i]);\r\n        }\r\n    }\r\n\r\n    extractFromTemplate(template) {\r\n\r\n        // Ammo\r\n        const ammoId = template.ammoId[1];\r\n        const curWeapId = template.id;\r\n        if (!curWeapId) {\r\n            throw new Error(\"Weapon has no id\");\r\n        }\r\n        if (ammoId && ammoId !== '00000000' && ammoId !== '') {\r\n            const ammoData = getAmmo().get(ammoId);\r\n            this.extractAmmo(ammoData, template.damageData, \"Ammo: \" + ammoId, curWeapId);\r\n        }\r\n\r\n        // Additional Proj\r\n        const projIds = template.projId[1];\r\n        for (let i = 0; i < projIds.length; i++) {\r\n            const projId = projIds[i];\r\n            if (projId !== '00000000' && projId !== '') {\r\n                if (typeof projId !== typeof '') {\r\n                    throw new Error(\"ProjId is not an Id\");\r\n                }\r\n                const projData = getProj().get(projId);\r\n                this.extractProj(projData, template.damageData, \"Projectile: \" + projId, false, curWeapId);\r\n            }\r\n        }\r\n\r\n        // Additional Mod Effects\r\n        const effectIds = template.adEffects[1];\r\n        for (let i = 0; i < effectIds.length; i++) {\r\n            const effectId = effectIds[i];\r\n            if (effectId !== '00000000' && effectId !== '') {\r\n                if (typeof effectId !== typeof '') {\r\n                    throw new Error(\"EffectId is not an Id\");\r\n                }\r\n                this.extractEnch(effectId, template.damageData, \"Spell: \" + effectId, false, curWeapId, 0, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    extractAmmo(ammo, result, parent, curWeapId) {\r\n        const ammoDamage = ammo.damage;\r\n        const ammoId = ammo.id;\r\n        if (!parent) {\r\n            parent = \"Ammo: \" + ammoId;\r\n        }\r\n        if (ammoDamage > 0) {\r\n            if (ammo.ammo_type !== 'Ballistic') {\r\n                throw new Error(\"Ammo type is not 'Ballistic'\");\r\n            }\r\n            const dTypes = this.damageTypes.physical;\r\n            this.addDamageNode(result, \"Ammo\", false, \"Ammo Damage\", dTypes.name, dTypes.id, dTypes.full, 0,\r\n                                 ammoDamage, 0, 0, 0, 0, parent, ammoId, curWeapId, \"No\", false, false, false);\r\n        }\r\n        const projId = ammo.projectile;\r\n        if (projId && projId !== '' && projId !== '00000000') {\r\n            const projData = getProj().get(projId);\r\n            this.extractProj(projData, result, parent, false, curWeapId);\r\n        }\r\n    }\r\n\r\n    extractProj(proj, result, parent, destructible, curWeapId) {\r\n        this.extractExp(proj.destructible, result, parent, true, curWeapId);\r\n        this.extractExp(proj.expl, result, parent, destructible, curWeapId); // In case if some inner proj comes from destructible parent\r\n    }\r\n\r\n    resolveAndExtractProj(projId, result, parent, destructible, curWeapId) {\r\n        if (projId !== '' && projId !== '00000000') {\r\n            if (typeof projId !== typeof '') {\r\n                throw new Error(\"Proj id is not an id\");\r\n            }\r\n            const projData = getProj().get(projId);\r\n            this.extractProj(projData, result, parent, destructible, curWeapId);\r\n        }\r\n    }\r\n\r\n    extractEnch(ench, result, parent, destructible, curWeapId, time = 0, interval = 0) {\r\n        if (ench && typeof ench !== typeof '') {\r\n            throw new Error(\"Enchantment is not an id\");\r\n        }\r\n        ench = getSpell().get(ench);\r\n        let perk = ench.perk;\r\n        this.extractPerk(perk, result, parent, destructible, curWeapId);\r\n        let duration = ench.duration;\r\n        if (duration && duration > 0) {\r\n            throw new Error(\"Enchantment has duration\");\r\n        }\r\n        let enchTime = ench.time;\r\n        if (!enchTime) {\r\n            enchTime = 0;\r\n        }\r\n        if (enchTime === 0) {\r\n            enchTime = time;\r\n        }\r\n        this.extractEffects(ench.mag_effects, ench.id, result, parent, destructible, curWeapId, enchTime, interval);\r\n    }\r\n\r\n    extractEffects(effects, enchId, result, parent, destructible, curWeapId, time, interval) {\r\n        if (!effects) {\r\n            return;\r\n        }\r\n        let existedEffects = new Set();\r\n        for (let e = 0; e < effects.length; e++) {\r\n            const effect = effects[e];\r\n\r\n            // Effect part\r\n            let magnitude = effect.magnitude;\r\n            let curv = effect.d_curv;\r\n            let area = effect.area;\r\n            let duration = effect.duration;\r\n            let globMagnitude = effect.glob_magnitude;\r\n            let globDuration = effect.glob_duration;\r\n            let onlyPlayer = effect.only_player;\r\n            if (!onlyPlayer) {\r\n                onlyPlayer = 'No';\r\n            }\r\n\r\n            // MEffect\r\n            const mEffect = effect.m_effect;\r\n            if (existedEffects.has(mEffect.id)) {\r\n                continue;\r\n            }\r\n            // Crit check\r\n            const name = mEffect.name;\r\n            const full = mEffect.full;\r\n            let crit = false;\r\n            if (name.toLowerCase().includes(\"crit\") || full.toLowerCase().includes(\"crit\")) {\r\n                crit = true;\r\n            }\r\n\r\n            // Blood check\r\n            let blood = false;\r\n            if (name.toLowerCase().includes(\"bleed\") || full.toLowerCase().includes(\"bleed\")) {\r\n                blood = true;\r\n            }\r\n            existedEffects.add(mEffect.id);\r\n            this.extractPerk(mEffect.perk, result, parent, destructible, curWeapId);\r\n            this.extractExp(mEffect.explosion, result, parent, destructible, curWeapId);\r\n            const proj = mEffect.projectile;\r\n            if (proj !== '00000000') {\r\n                throw new Error(\"Proj / Expl found in mag effects\");\r\n            }\r\n            if (magnitude !== 0 || (curv !== '' && curv !== 0) || globMagnitude !== '') {\r\n                if (globDuration && globDuration !== '' && globDuration !== '00000000') {\r\n                    globDuration = globDuration.value;\r\n                } else {\r\n                    globDuration = 0\r\n                }\r\n                if (globDuration > 0) {\r\n                    duration = globDuration;\r\n                }\r\n                if (duration > 0) {\r\n                    time = duration;\r\n                }\r\n                if (globMagnitude && globMagnitude !== '' && globMagnitude !== '00000000') {\r\n                    globMagnitude = globMagnitude.value;\r\n                } else {\r\n                    globMagnitude = 0;\r\n                }\r\n                if (globMagnitude > 0) { // Override magnitude by glob\r\n                    magnitude = globMagnitude;\r\n                }\r\n                curv = this.resolveCurv(curv);\r\n                if (curv === 0 && magnitude === 0) {\r\n                    continue;\r\n                }\r\n                let dType = this.findEffectDamageType(mEffect, enchId, curWeapId);\r\n                if (dType && onlyPlayer === 'No') {\r\n                    let name = '';\r\n                    if (destructible) {\r\n                        name = \"Destructible Spell\";\r\n                    } else {\r\n                        name = \"Spell\";\r\n                    }\r\n\r\n                    // Armor penetration\r\n                    if (dType.id === '00097341') {\r\n                        name = \"Armor Penetration\";\r\n                    } else if (dType.id === '0018eee1' || dType.id === '00312d66') {\r\n                        name = \"Damage Bonus\";\r\n                    }\r\n                    let source = '';\r\n                    if (crit) {\r\n                        source = \"Crit Spell\";\r\n                    } else {\r\n                        source = \"Spell\";\r\n                    }\r\n                    this.addDamageNode(result, source, destructible, name, dType['name'], dType['id'],\r\n                                         dType['full'], curv, 0, magnitude, time, interval, area, parent, mEffect.id, curWeapId, onlyPlayer, false, crit, blood);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findEffectDamageType(mEffect, enchId, curWeapId) {\r\n        if (mEffect['id'] === '00239552' || mEffect['id'] === '00239550') { // Radiation healing damage\r\n            return null;\r\n        }\r\n        let result = mEffect['d_type']['id'];\r\n        if (result) {\r\n            return mEffect['d_type'];\r\n        }\r\n        let resId = mEffect['resist']['id'];\r\n        if (resId) {\r\n            return this.resTypes[resId];\r\n        }\r\n        let actor1 = mEffect['actor_value1']['id'];\r\n        if (actor1 === '000002e3') { // Damage resistance\r\n            return null;\r\n        } else if (actor1 === '00097341') { // Armor Penetration\r\n            return mEffect['actor_value1'];\r\n        } else if (actor1 === '0018eee1') { // STAT_DmgAll this is bonus mult\r\n            return mEffect['actor_value1'];\r\n        } else if (actor1 === '00312d66') { // STAT_DmgMelee this is bonus mult\r\n            return mEffect['actor_value1'];\r\n        } else if (actor1 === '000002d4') { // Health\r\n            console.log(\"Actor: \" + mEffect.actor_value1.name + \" WId: \" + curWeapId + \" AId: \" + mEffect.actor_value1.id + \" EId: \" + enchId);\r\n        }\r\n        let actor2 = mEffect['actor_value2']['name'];\r\n        if (actor2) {\r\n            throw new Error(\"Actor2 Exists\");\r\n        }\r\n        return null;\r\n    }\r\n\r\n    extractObject(obj, result, parent, destructible, curWeapId) {\r\n        if (!obj || obj === '' || obj === '00000000' || obj === '0017a580') {\r\n            return;\r\n        }\r\n\r\n        if (obj['type'] === 'WEAP') {\r\n            const wId = obj['value']['id'];\r\n            let damageData = null;\r\n            if (curWeapId === wId) {\r\n                return;\r\n            } else if (wId === '000042f2') {\r\n                damageData = this.tomahawk.damageData;\r\n            } else if (wId === '003879a3') {\r\n                damageData = this.throwingKnife.damageData;\r\n            } else {\r\n                throw new Error(\"Unknown weapon id: \" + wId);\r\n            }\r\n            for (const property in damageData) {\r\n                const damages = damageData[property];\r\n                for (let i = 0; i < damages.length; i++) {\r\n                    const damage = damages[i];\r\n                    this.addDamageNode(result, damage['source'], damage['destructible'], damage['view_name'],\r\n                                             damage['type_name'],\r\n                                             damage['type_id'], damage['type_full_name'], damage['curv'], damage['value'],\r\n                                             damage['magnitude'], damage['time'], damage['interval'], 0, parent, wId, curWeapId, \"No\", false, false, false);\r\n                }\r\n            }\r\n        } else if (obj['type'] === 'HAZD') {\r\n            const hazd = obj['value'];\r\n            this.extractEnch(hazd['effect'], result, parent, destructible, curWeapId, hazd['lifeTime'], hazd['interval']);\r\n        } else if (obj['type'] === 'MSTT') {\r\n            const value = obj['value'];\r\n            const spell = value['spell'];\r\n            if (spell && spell !== '' && spell !== '00000000') {\r\n                throw new Error(\"Spell in explosive object\");\r\n            }\r\n            this.extractExp(value['expl'], result, parent, destructible, curWeapId);\r\n            const hazd = value['hazd'];\r\n            this.extractEnch(hazd['effect'], result, parent, destructible, curWeapId, hazd['lifeTime'], hazd['interval']);\r\n        } else if (obj['type'] === 'EXPL') {\r\n            this.extractExp(obj['value'], result, parent, destructible, curWeapId);\r\n        } else {\r\n            throw new Error(\"Unknown object type\");\r\n        }\r\n    }\r\n\r\n    e_type_name = {256: \"Ability\", 512: \"Function\"}\r\n\r\n    v_type_name = {1: \"Float\", 3: \"List\", 4: \"Activate\", 5: \"Spell\", 8: \"Actor\", 9: \"Item\"}\r\n\r\n    operation = {\r\n        1: \"SetValue\", 2: \"AddValue\", 3: \"MulValue\", 5: \"MulAddValue\", 6: \"Abs\", 8: \"AddItem\",\r\n        9: \"AddActivate\", 10: \"SetSpell\", 12: \"AddValueToActor\", 13: \"MultiplyActorValueMultiply\",\r\n        14: \"MulAddValueToActor\", 16: \"SetItem\"\r\n    }\r\n\r\n    // TODO: LimbBash and WeaponAttackDamage for v_type 1 - 'Float'\r\n    // 3 - 'List' is not presented, 4 - 'Activate' is not presented, 9 - 'Item' is not presented\r\n    // 5 - 'Spell' is solved, 8 - 'Actor' is solved.\r\n    // Check this - 00621a92 0077176b 198 1 (Zeta's Revenge)\r\n    skipFunctions = [\"198\", \"OutgoingLimbBashDamage\", \"OutgoingLimbDamage\", \"MaxConsecutiveHits\",\r\n        \"SetDamageOnConsecutiveHits\", \"LossCondition\", \"WeaponAttackDamage\"];\r\n\r\n    extractPerk(perkId, result, parent, destructible, curWeapId) {\r\n        if (perkId && perkId !== '00000000' && perkId !== '') {\r\n            const perk = getPerks().get(perkId);\r\n            const effects = perk.effects;\r\n            for (let i = 0; i < effects.length; i++) {\r\n                const effect = effects[i];\r\n\r\n                if (effect.v_type === 1) {\r\n                    // if (this.skipFunctions.includes(effect.entry)) {\r\n                    //     continue;\r\n                    // }\r\n                } else if (effect.v_type === 3) {\r\n                    throw new Error(\"Found v_type 3\");\r\n                } else if (effect.v_type === 4) {\r\n                    throw new Error(\"Found v_type 4\");\r\n                } else if (effect.v_type === 5) {\r\n                    this.extractEnch(effect.value, result, parent, destructible, curWeapId)\r\n                } else if (effect.v_type === 8) { // Do we really need this 1% what is the purpose of it?\r\n                    // console.log(\"Perk8: \" + curWeapId + \" \" + perkId + \" \" + effect.entry + \" \" + effect.value.value);\r\n                } else if (effect.v_type === 9) {\r\n                    throw new Error(\"Found v_type 9\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    extractExp(exp, result, parent, destructible, curWeapId) {\r\n        if (!exp || exp === '' || exp === '00000000') {\r\n            return;\r\n        }\r\n        if (typeof exp !== typeof {}) {\r\n            throw new Error(\"Explosive is not an object but id: \" + exp);\r\n        }\r\n        const ench = exp.enchantment;\r\n        if (ench && ench !== '' && ench !== '00000000') {\r\n            this.extractEnch(ench, result, parent, destructible, curWeapId);\r\n        }  \r\n        this.resolveAndExtractProj(exp.projectile, result, parent, destructible, curWeapId);\r\n        this.extractObject(exp.object, result, parent, destructible, curWeapId);\r\n        this.dDamage(exp, result, destructible, parent, curWeapId);\r\n        const damageType = this.damageTypes.physical;\r\n        const damage = exp.damage;\r\n        const expCurv = exp.exp_curv;\r\n        let curv = 0;\r\n        if (expCurv !== '' && expCurv !== '00000000') {\r\n            curv = this.resolveCurv(expCurv);\r\n        }\r\n        let name = '';\r\n        if (destructible) {\r\n            name = \"Destructible Explosive Damage\";\r\n        } else {\r\n            name = \"Explosive Damage\";\r\n        }\r\n        this.addDamageNode(result, \"Projectile\", destructible, name, damageType.name, damageType.id, damageType.full, curv,\r\n            damage, 0, 0, 0, 0, parent, exp.id, curWeapId, \"No\", true, false, false);\r\n\r\n        if (exp.damage_mult > 0) {\r\n            this.addDamageNode(result, \"Projectile\", destructible, \"Explosive Damage Multiplier\", \"ExpDamageMult\", \"\", \"\", 0,\r\n                exp.damage_mult, 0, 0, 0, 0, parent, exp.id, curWeapId, \"No\", true, false, false);\r\n        }\r\n    }\r\n\r\n    addDamageNode(result, source, destructible, view_name, type_name, type_id, type_full_name, curv, value,\r\n                    magnitude, time, interval, area, parent, directParent, weapId, only_player, exp, crit, blood) {\r\n        if (curv === 0 && magnitude === 0 && value === 0) {\r\n            return;\r\n        }\r\n        if (crit && parent !== \"Base Crit\") {\r\n            console.log(\"Spell Crit is found\");\r\n        }\r\n        const obj = {\r\n            \"destructible\": destructible,\r\n            \"source\": source,\r\n            \"view_name\": view_name,\r\n            \"type_name\": type_name,\r\n            \"type_id\": type_id,\r\n            \"weaponId\": weapId,\r\n            \"type_full_name\": type_full_name,\r\n            \"curv\": curv,\r\n            \"value\": value,\r\n            \"magnitude\": magnitude,\r\n            \"time\": time,\r\n            \"area\": area,\r\n            \"interval\": interval,\r\n            \"parent\": parent,\r\n            \"directParent\": directParent,\r\n            \"only_player\": only_player,\r\n            \"exp\": exp,\r\n            \"crit\": crit,\r\n            \"blood\": blood,\r\n        };\r\n        const entries = result[source];\r\n        if (!entries) {\r\n            result[source] = [obj];\r\n        } else {\r\n            entries.push(obj);\r\n        }\r\n    }\r\n\r\n    resolveCurv(expCurv) {\r\n        if (expCurv !== '' && expCurv !== '00000000') {\r\n            if (typeof expCurv === typeof '') {\r\n                console.log(\"ExpCurv: \" + expCurv);\r\n                throw new Error(\"expCurv must be already evaluated: \" + expCurv);\r\n                /*\r\n                let curv = expCurv.split(\"\\n\");\r\n                try {\r\n                    curv = eval(curv[1])[\"curve\"];\r\n                    return curv[curv.length - 1]['y'];\r\n                } catch(error) {\r\n                    return 0;\r\n                }\r\n                */\r\n            } else {\r\n                return expCurv; // Consider it is a number.\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    dDamage(explosive, result, destructible, parent, weaponId) {\r\n        let value = explosive['d_value'];\r\n        if (Math.abs(value) < 0.01) {\r\n            value = 0;\r\n        }\r\n        let curv = explosive['d_curv'];\r\n        if (value > 0 || (curv !== '' && curv !== '00000000')) {\r\n            curv = this.resolveCurv(curv);\r\n            let dType = explosive.d_type;\r\n            if (dType === '' || dType === '00000000') {\r\n                dType = this.damageTypes.physical;\r\n            }\r\n            let name = '';\r\n            if (destructible) {\r\n                name = \"Destructible Damage\";\r\n            } else {\r\n                name = \"Damage\";\r\n            }\r\n            this.addDamageNode(result, \"Projectile\", destructible, name, dType.name, dType.id, dType.full, curv, value,\r\n                                 0, 0, 0, 0, parent, explosive.id, weaponId, \"No\", true, false, false);\r\n        }\r\n    }\r\n}","export default class DamageBlackList {\r\n    static ignoreMap = {\r\n        \"0055c152\": [\"005894a9\", \"005894a7\"],\r\n        \"0060e0ef\": [\"000fd3aa\"],\r\n        \"0055c166\": [\"000fd3aa\"],\r\n        \"0042b0cc\": [\"001b5edc\"],\r\n        \"0001ec47\": [\"000fd3aa\"],\r\n        \"00646880\": [\"001b5edc\"],\r\n        \"0001f669\": [\"001b5edc\"],\r\n        \"00011bf6\": [\"001b5edc\"],\r\n        \"001109cf\": [\"00215e08\"],\r\n        \"0042b0d0\": [\"00215e08\"],\r\n        \"000fe268\": [\"00215e08\"],\r\n        \"002fd97a\": [\"000fd3aa\"],\r\n        \"00100ae9\": [\"000fd3aa\"],\r\n        \"005a366e\": [\"000fd3aa\"],\r\n        \"005ea441\": [\"000fd3aa\"],\r\n    }\r\n\r\n    static check(weaponId, damageId) {\r\n        const list = DamageBlackList.ignoreMap[weaponId];\r\n        if (list) {\r\n            return list.includes(damageId);\r\n        }\r\n        return false;\r\n    }\r\n}","import DamageBlackList from \"../../damage/DamageBlackList\";\r\n\r\n\r\nexport function buildDamageItem(weaponId, damageId, type, kind, name, damage, time, interval, area, chance, accuracy, stack, index=0, isUsed=true) {\r\n    const ignore = DamageBlackList.check(weaponId, damageId);\r\n    return {\r\n        \"isUsed\": isUsed,\r\n        \"type\": type,\r\n        \"kind\": kind,\r\n        \"name\": name,\r\n        \"damage\": damage,\r\n        \"time\": time,\r\n        \"interval\": interval,\r\n        \"area\": area,\r\n        \"chance\": chance,\r\n        \"accuracy\": accuracy, // Accuracy from weapon and mods or from user\r\n        \"finalAccuracy\": accuracy, // Final accuracy with perks, consumables, legendary\r\n        \"stack\": stack,\r\n        \"index\": index,\r\n        \"weaponId\": weaponId,\r\n        \"damageId\": damageId,\r\n        \"ignore\": ignore,\r\n    };\r\n}\r\n\r\nexport function buildBleedDamage(damage, time, chance=100, accuracy=100, stack=false) {\r\n    return buildDamageItem(\"\", \"\", \"dtPhysical\", \"bleed\", \"Bleed\", damage, time, 0, 0, chance, accuracy, stack, -1, true);\r\n}\r\n\r\nexport function convertDamageDataToDamageItem(damageData) {\r\n    const type = getDamageTypeFromCellName(damageData.type_name);\r\n    const damage = getDamageValue(damageData);\r\n    return buildDamageItem(damageData.weaponId, damageData.directParent, type[0], type[1], type[2], damage, damageData.time, damageData.interval, damageData.area, 100, 100, false);\r\n}\r\n\r\nexport function makeDamageItemCopy(damageItem) {\r\n    return buildDamageItem(damageItem.weaponId, damageItem.damageId, damageItem.type, damageItem.kind, damageItem.name, damageItem.damage, damageItem.time,\r\n        damageItem.interval, damageItem.area, damageItem.chance, damageItem.accuracy, damageItem.stack, damageItem.index, damageItem.isUsed);\r\n}\r\n\r\nfunction getDamageValue(damage) {\r\n    if (damage.curv > 0) {\r\n        return damage.curv;\r\n    } else if (damage.value > 0) {\r\n        return damage.value;\r\n    }\r\n    return damage.magnitude;\r\n}\r\n\r\nconst cellNames = ['bbDamage', 'ebDamage', 'fbDamage', 'pbDamage', 'cbDamage', 'rbDamage', 'projExp', 'bleed'];\r\n\r\nexport function collectAllDamages(template) {\r\n    let result = [];\r\n    for (let i = 0; i < template.adDamage.length; i++) {\r\n        result.push(makeDamageItemCopy(template.adDamage[i]));\r\n    }\r\n\r\n    for (let i = 0; i < cellNames.length; i++) {\r\n        const name = cellNames[i];\r\n        let damage = template[name][1];\r\n        let damageId = template[name][2];\r\n        if (typeof damage === typeof '') {\r\n            const split = damage.split(\" / \");\r\n            damage = parseFloat(split[0]);\r\n            const time = parseFloat(split[1].slice(0, -1));\r\n            const type = getDamageTypeFromCellName(name);\r\n            const obj = buildDamageItem(template.id, damageId, type[0], type[1], type[2], damage, time, 0, 0, 100, 100, false);\r\n            result.push(obj);\r\n        } else if (damage > 0) {\r\n            const type = getDamageTypeFromCellName(name);\r\n            const obj = buildDamageItem(template.id, damageId, type[0], type[1], type[2], damage, 0, 0, 0, 100, 100, false);\r\n            result.push(obj);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getDamageTypeFromCellName(cellName) {\r\n    switch(cellName) {\r\n        case 'bleed':\r\n            return ['dtPhysical', 'bleed', \"Bleed\"];\r\n        case 'projExp':\r\n            return ['dtPhysical', 'explosive', \"Explosive\"];\r\n        case 'bbDamage':\r\n        case 'dtPhysical':\r\n            return ['dtPhysical', 'physical', \"Physical\"];\r\n        case 'ebDamage':\r\n        case 'dtEnergy':\r\n        case 'dtElectrical':\r\n            return ['dtEnergy', 'energy', \"Energy\"];\r\n        case 'fbDamage':\r\n        case 'dtFire':\r\n            return ['dtFire', 'fire', \"Fire\"];\r\n        case 'pbDamage':\r\n        case 'dtPoison':\r\n            return ['dtPoison', 'poison', \"Poison\"];\r\n        case 'cbDamage':\r\n        case 'dtCryo':\r\n            return ['dtCryo', 'cryo', \"Cryo\"];\r\n        case 'rbDamage':\r\n        case 'dtRadiationExposure':\r\n            return ['dtRadiationExposure', 'radiation', \"Radiation\"];\r\n        default:\r\n            console.log(\"Can't determine appropriate damate type by cell name: \" + cellName);\r\n            return ['dtPhysical', 'ballistic', \"Physical\"];\r\n    }\r\n}\r\n\r\nexport default class DamageSetter {\r\n\r\n    setDamages(templates) {\r\n        for (let i = 0; i < templates.length; i++) {\r\n            this.setDamage(templates[i]);\r\n        }\r\n    }\r\n\r\n    setDamage(template) {\r\n        template.adDamage = []; // Additional damages\r\n        this.setDamageForCategory(template, \"Base\");\r\n        this.setDamageForCategory(template, \"Ammo\");\r\n        this.setDamageForCategory(template, \"Projectile\");\r\n        this.setDamageForCategory(template, \"Base Spell\");\r\n        this.setDamageForCategory(template, \"Spell\");\r\n    }\r\n\r\n    setDamageForCategory(template, category) {\r\n        const damageData = template.damageData;\r\n        for (const property in damageData) {\r\n            if (property !== category) {\r\n                continue;\r\n            }\r\n            const damages = damageData[property];\r\n            for (let i = 0; i < damages.length; i++) {\r\n                const damage = damages[i];\r\n                this.setCurrent(template, damage);\r\n            }\r\n        }\r\n    }\r\n\r\n    setCurrent(template, damage) {\r\n        if (damage.destructible === false && damage.only_player === \"No\") {\r\n            const damageValue = getDamageValue(damage);\r\n            if (damageValue === 0) {\r\n                return;\r\n            }\r\n            this.placeValueByType(template, damage, damageValue);\r\n        }\r\n    }\r\n\r\n    placeValueByType(template, damageData, damageValue) {\r\n        const damage = [damageValue, damageValue];\r\n        const exp = damageData.exp;\r\n        const blood = damageData.blood;\r\n        switch(damageData.type_name) {\r\n            case \"ArmorPenetration\":\r\n                template.antiArmor = damage;\r\n                break;\r\n            case \"ExpDamageMult\":\r\n                template.exp[1] = damage[1] * 100;\r\n                break;\r\n            case \"STAT_DmgAll\":\r\n            case \"STAT_DmgMelee\":\r\n                template.bonusMult[1] += damage[1] / 100;\r\n                break;\r\n            case \"dtPhysical\":\r\n                if (exp) {\r\n                    this.putDamage(template, \"projExp\", damage, damageData);\r\n                } else if (blood) {\r\n                    const type = getDamageTypeFromCellName(\"bleed\");\r\n                    template.adDamage.push(buildDamageItem(template.id, damageData.directParent, type[0], type[1], type[2], damageValue, damageData.time, 0, 0, 100, 100, false));\r\n                } else {\r\n                    this.putDamage(template, \"bbDamage\", damage, damageData);\r\n                }\r\n                break;\r\n            case \"dtEnergy\":\r\n            case \"dtElectrical\":\r\n                this.putDamage(template, \"ebDamage\", damage, damageData);\r\n                break;\r\n            case \"dtFire\":\r\n                this.putDamage(template, \"fbDamage\", damage, damageData);\r\n                break;\r\n            case \"dtPoison\":\r\n                this.putDamage(template, \"pbDamage\", damage, damageData);\r\n                break;\r\n            case \"dtCryo\":\r\n                this.putDamage(template, \"cbDamage\", damage, damageData);\r\n                break;\r\n            case \"dtRadiationExposure\":\r\n                this.putDamage(template, \"rbDamage\", damage, damageData);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    putDamage(template, field, damage, damageData) {\r\n        const type = getDamageTypeFromCellName(field);\r\n        if (template[field][0] > 0 || damageData.time > 0 || damageData.interval > 0) { // We already have this type of damage, add it as additional\r\n\r\n            // Will be modified only by boost multiplier independently\r\n            template.adDamage.push(buildDamageItem(template.id, damageData.directParent, type[0], type[1], type[2], damage[1], damageData.time, damageData.interval, damageData.area, 100, 100, false));\r\n        } else {\r\n\r\n            // Later can be modified by boosts (current architecture does not allow to push it to adDamage\r\n            const newDamage = [damage[0], damage[1], damageData.directParent];\r\n            template[field] = newDamage;\r\n        }\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class DamageBonusMult extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const mult = super.getValue(mod);\r\n        super.addSetMullAdd(template.bonusMult, mult, mod.op, apply, true);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        super.checkOp(mod, \"legendary\", \"Add\");\r\n        const value = super.getValue(mod);\r\n        if (update) {\r\n            return false;\r\n        }\r\n\r\n        // Expected that every particular legendary has only one damage bonus multiplier\r\n        wSpec.legendary[starIndex][1] = (apply) ? value * 100 : 0;\r\n        wSpec.legendary[starIndex][2] = (apply) ? \"BDB\" : \"\";\r\n    }\r\n}","import { Apply } from './Apply';\r\nimport getAmmo from '../../Ammo';\r\n\r\n\r\nexport class Ammo extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Set\");\r\n        if (apply) {\r\n            template.ammoId[1] = mod.val1.split(\" / \")[0];\r\n        } else {\r\n            template.ammoId[1] = template.ammoId[0];\r\n        }\r\n        const ammoData = getAmmo().get(template.ammoId[1]);\r\n        template.ammoType = {name: ammoData.full, type: ammoData.ammo_type, codeName: ammoData.name};\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return true;\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n        // Expected we do not have legendary which changes ammo type\r\n        throw new Error(\"Legendary changes ammo type\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class IsAutomatic extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Set\");\r\n        if (apply) {\r\n            template.isAuto[1] = parseInt(mod.val1);\r\n        } else {\r\n            template.isAuto[1] = template.isAuto[0];\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        throw new Error(\"Legendary changes auto fire\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class Speed extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.speed, value, mod.op, apply);\r\n        template.autoRate[1] = template.defRate * template.speed[1];\r\n        template.manualRate[1] = template.manualRate[1] / template.speed[1];\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        super.checkOp(mod, \"Legendary\", \"MullAdd\");\r\n        const value = super.getValue(mod);\r\n        super.mullAddToProperty(wSpec, \"speed\", value, apply);\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class APCost extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.ap, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        // Currently there is no reason to change ap\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class Weight extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.weight, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        // Currently there is no reason to change weight\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class AttackDelay extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.manualRate, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n        // Expected we do not have legendary which changes attack delay\r\n        throw new Error(\"Legendary changes attack delay\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class CriticalDamageMult extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Add\");\r\n        const value = super.getValue(mod) * 100.0;\r\n        if (apply) {\r\n            template.crit[1] += value;\r\n        } else {\r\n            template.crit[1] -= value;\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        super.checkOp(mod, \"Legendary\", \"Add\");\r\n        const value = super.getValue(mod) * 100;\r\n        super.addToProperty(wSpec, \"crit\", value, apply);\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class AmmoCapacity extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.capacity, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        super.checkOp(mod, \"Legendary\", \"MullAdd\");\r\n        const value = super.getValue(mod);\r\n        super.mullAddToProperty(wSpec, \"ammoCapacity\", value, apply);\r\n\r\n        // Protect if a user change the number\r\n        wSpec.ammoCapacity = parseInt(wSpec.ammoCapacity);\r\n        if (wSpec.ammoCapacity < 1) {\r\n            wSpec.ammoCapacity = 1;\r\n        }\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class ReloadSpeed extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.reloadSpeed, value, mod.op, apply);\r\n        template.reloadTime[1] = template.reloadTime[0] / template.reloadSpeed[1];\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        super.checkOp(mod, \"Legendary\", \"MullAdd\");\r\n        const value = super.getValue(mod);\r\n        super.mullAddToProperty(wSpec, \"reloadSpeed\", value, apply);\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class OverrideProjectile extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const field = template.projId;\r\n        const value = mod.val1.split(\" / \")[0];\r\n        if (mod.op === \"Set\") {\r\n            if (apply) {\r\n                field[1] = [value];\r\n            } else {\r\n                field[1] = [...field[0]];\r\n            }\r\n        } else if (mod.op === \"MullAdd\" || mod.op === \"Add\") {\r\n            if (apply) {\r\n                field[1].push(value);\r\n            } else {\r\n\r\n                // Avoid removing default one if it is previously was overridden by 'set'\r\n                if (field[1].toString() === field[0].toString()) {\r\n                    return;\r\n                }\r\n                const index = field[1].indexOf(value);\r\n                if (index > -1) {\r\n                    field[1].splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return true;\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        throw new Error(\"Legendary changes projectile\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class HasRepeatableSingleFire extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Set\");\r\n        if (apply) {\r\n            template.isAuto[1] = 1;\r\n        } else {\r\n            template.isAuto[1] = template.isAuto[0];\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        throw new Error(\"Legendary changes auto fire\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class ActorValues extends Apply {\r\n\r\n    getValue(mod, weapId) {\r\n        super.checkOp(mod, weapId, \"Add\");\r\n        let value = super.getCurvValue(mod);\r\n        if (value === 0) {\r\n            value = parseFloat(mod.val2);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    applyValue(mod, obj, name, value, apply, isLegendary=false) {\r\n        switch(mod.val1) {\r\n            case '00058d36 / STAT_DmgVsScorched':\r\n                this.damageToCreature(obj, name, value, apply, \"Scorched\");\r\n                break;\r\n            case '0018eeee / STAT_DmgVsGhouls':\r\n                this.damageToCreature(obj, name, value, apply, \"Ghoul\");\r\n                break;\r\n            case '00674c85 / STAT_DmgVsMoleMiners':\r\n                this.damageToCreature(obj, name, value, apply, \"MoleMiner\");\r\n                break;\r\n            case '0018eef2 / STAT_DmgVsHumans':\r\n                this.damageToCreature(obj, name, value, apply, \"Human\");\r\n                break;\r\n            case '004f5775 / STAT_DmgVsBugs':\r\n                this.damageToCreature(obj, name, value, apply, \"Bug\");\r\n                break;\r\n            case '0018eeed / STAT_DmgVsSuperMutants':\r\n                this.damageToCreature(obj, name, value, apply, \"SuperMutant\");\r\n                break;\r\n            case '0018eeef / STAT_DmgVsRobots':\r\n                this.damageToCreature(obj, name, value, apply, \"Robot\");\r\n                break;\r\n            case '00674c84 / STAT_DmgVsMolerats':\r\n                this.damageToCreature(obj, name, value, apply, \"Molerat\");\r\n                break;\r\n            case '00690c78 / STAT_DmgVsCryptids':\r\n                this.damageToCreature(obj, name, value, apply, \"Cryptid\");\r\n                break;\r\n            case '0018eeec / STAT_DmgVsMirelurks':\r\n                this.damageToCreature(obj, name, value, apply, \"Mirelurk\");\r\n                break;\r\n            case '0018eeeb / STAT_DmgVsAnimals':\r\n                this.damageToCreature(obj, name, value, apply, \"Animal\");\r\n                break;\r\n            case '00097341 / ArmorPenetration':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"aa\", value, apply);\r\n                } else {\r\n                    super.add(obj.antiArmor, value, apply);\r\n                }\r\n                break;\r\n            case '006e1052 / STAT_SneakAttackBonus':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"sneak\", value, apply);\r\n                } else {\r\n                    super.add(obj.sneak, value, apply);\r\n                }\r\n                break;\r\n            case '007a6c35 / LGND_ExplosivePayload':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"exp\", value, apply);\r\n                } else {\r\n                    this.checkZero(obj.exp, obj.id);\r\n                    obj.exp[1] = (apply) ? value : obj.exp[0];\r\n                }\r\n                break;\r\n            case '001ef5d9 / STAT_DmgLimbs':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"cripple\", value, apply);\r\n                } else {\r\n                    super.add(obj.cripple, value, apply);\r\n                }\r\n                break;\r\n\r\n            case '006c1fa9 / STAT_DmgPowerAttack':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"powerAttack\", value, apply);\r\n                } else {\r\n                    super.add(obj.powerAttack, value, apply);\r\n                }\r\n                break;\r\n            case '006c2221 / STAT_DmgBash':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"bash\", value, apply);\r\n                } else {\r\n                    super.add(obj.bash, value, apply);\r\n                }\r\n                break;\r\n            case '00527f83 / LGND_ExecuteDmg':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"totalD\", value, apply);\r\n                } else {\r\n                    super.add(obj.totalD, value, apply);\r\n                }\r\n                break;\r\n            case '000002c2 / Strength':\r\n                if (isLegendary) {\r\n                    super.addToProperty(obj, \"strPoints\", value, apply);\r\n                } else {\r\n                    super.add(obj.strPoints, value, apply);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    apply(template, mod, apply) {\r\n        const value = this.getValue(mod, template.id);\r\n        this.applyValue(mod, template, \"creature\", value, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        const value = this.getValue(mod, \"Legendary\");\r\n        this.applyValue(mod, wSpec, \"creature\", value, apply, true);\r\n    }\r\n\r\n    damageToCreature(obj, property, value, apply, name) {\r\n        const creatures = obj[property];\r\n        let applied = false;\r\n        let needToRemove = -1;\r\n\r\n        // Apply to existing one\r\n        for (let i = 0; i < creatures.length; i++) {\r\n            const creature = creatures[i];\r\n            if (creature.name === name) {\r\n                applied = true;\r\n                if (apply) {\r\n                    creature.value += value;\r\n                } else {\r\n                    creature.value -= value;\r\n                }\r\n                if (creature.value <= 0) {\r\n                    needToRemove = i;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Remove existed because the value of it less than or equal to zero\r\n        if (needToRemove > -1) {\r\n            creatures.splice(needToRemove, 1);\r\n        }\r\n\r\n        // Add new one\r\n        if (apply && !applied) {\r\n            creatures.push({ \"name\": name, \"value\": value });\r\n        }\r\n    }\r\n\r\n    checkZero(field, weaponId) {\r\n        if (field[1] > 0) {\r\n            console.log(\"ActorValues already has a value: \" + weaponId);\r\n        }\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class Keywords extends Apply {\r\n\r\n    addTag(template, tag, apply) {\r\n        if (apply) {\r\n            template.tags.push(tag);\r\n        } else {\r\n            let k = -1;\r\n            for (let i = 0; i < template.tags.length; i++) {\r\n                if (template.tags[i] === tag) {\r\n                    k = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (k > -1) {\r\n                template.tags.splice(k, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    print(name) {\r\n        if (!name.includes(\"IsAmmoType\") && !name.includes(\"dn_Has\") && !name.includes(\"HasS\") && !name.includes(\"legendary\")\r\n            && !name.includes(\"s_30\") && !name.includes(\"Anims\") && !name.includes(\"remapNode\") && !name.includes(\"CustomItem\")\r\n            && !name.includes(\"Legendary\") && !name.includes(\"ATX\") && !name.includes(\"UI_\") && !name.includes(\"s_35\")\r\n            && !name.includes(\"ma_\") && !name.includes(\"s_20\") && !name.includes(\"FeaturedItem\") && !name.includes(\"00000000\")\r\n            && !name.includes(\"WeaponTypePistol\") && !name.includes(\"WeaponTypeRifle\") && !name.includes(\"VATSWeaponLongBurst\")\r\n            && !name.includes(\"DamageType\") && !name.includes(\"s_00\")) {\r\n            console.log(\"Keywords: \" + name);\r\n        }\r\n    }\r\n\r\n    apply(template, mod, apply) {\r\n        const name = mod.val1;\r\n        switch(name) {\r\n            case '005c3874 / IsAmmoType_FusionCore':\r\n            case '005dc32d / IsAmmoType_FusionCore_AntiScorchBeast':\r\n                this.addTag(template, \"FusionCore\", apply);\r\n                return;\r\n            case '00060a81 / dtEnergy':\r\n            case '0033a7c9 / WeaponTypeEnergy':\r\n                this.addTag(template, \"Energy\", apply);\r\n                return;\r\n            case '001e05d6 / HasSilencer':\r\n                this.addTag(template, \"HasSilencer\", apply);\r\n                return;\r\n            case '0004a0a2 / WeaponTypeAutomatic':\r\n            case '0034087a / WeaponTypeAutomaticRifle':\r\n                this.addTag(template, \"Automatic\", apply);\r\n                if (apply) {\r\n                    template.isAuto[1] = 1;\r\n                } else {\r\n                    template.isAuto[1] = template.isAuto[0];\r\n                }\r\n                return;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // Some weapons like MG-42 can have 'Rifle' keyword we skip it to not change its type\r\n        if (template.type[0] !== 'Rifle' && template.type[0] !== 'Pistol') {\r\n            return;\r\n        }\r\n        switch(name) {\r\n            case '0004a0a1 / WeaponTypeRifle':\r\n                template.type[1] = (apply) ? \"Rifle\" : template.type[0];\r\n                break;\r\n            case '0004a0a0 / WeaponTypePistol':\r\n                template.type[1] = (apply) ? \"Pistol\" : template.type[0];\r\n                break;\r\n             default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        const name = mod.val1;\r\n        if (name.includes(\"dt\") || name.includes(\"WeaponType\")) {\r\n            throw new Error(\"Legendary changes weapon or damage type\");\r\n        }\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class CritEffect extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const field = template.crSpellId;\r\n        const value = mod.val1.split(\" / \")[0];\r\n        if (mod.op === \"Set\") {\r\n            if (apply) {\r\n                field[1] = [value];\r\n            } else {\r\n                field[1] = [...field[0]];\r\n            }\r\n        } else if (mod.op === \"Add\" || mod.op === \"MullAdd\") {\r\n            if (apply) {\r\n                field[1].push(value);\r\n            } else {\r\n\r\n                // Avoid removing default one if it is previously was overridden by 'set'\r\n                if (field[1].toString() === field[0].toString()) {\r\n                    return;\r\n                }\r\n                const index = field[1].indexOf(value);\r\n                if (index > -1) {\r\n                    field[1].splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return true;\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n        // Expected we do not have legendary which changes crit effect\r\n        throw new Error(\"Legendary changes crit effect\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class AttackDamage extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.bbDamage, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n        // Expected we do not have legendary which changes attack damage\r\n        throw new Error(\"Legendary changes attack damage\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class DamageTypeValues extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        let value = super.getCurvValue(mod);\r\n        if (value === 0) {\r\n            value = parseFloat(mod.val2);\r\n        }\r\n        let from = null;\r\n        switch (mod.val1) {\r\n            case '00060a81 / dtEnergy':\r\n                from = template.ebDamage[0] === 0 ? template.bbDamage : template.ebDamage;\r\n                this.setDamage(template.ebDamage, from, value, mod.op, apply);\r\n                break;\r\n            case '00060a82 / dtFire':\r\n                from = template.fbDamage[0] === 0 ? template.bbDamage : template.fbDamage;\r\n                this.setDamage(template.fbDamage, from, value, mod.op, apply);\r\n                break;\r\n            case '00060a84 / dtPoison':\r\n                from = template.pbDamage[0] === 0 ? template.bbDamage : template.pbDamage;\r\n                this.setDamage(template.pbDamage, from, value, mod.op, apply);\r\n                break;\r\n            case '00060a83 / dtCryo':\r\n                from = template.cbDamage[0] === 0 ? template.bbDamage : template.cbDamage;\r\n                this.setDamage(template.cbDamage, from, value, mod.op, apply);\r\n                break;\r\n            case '00060a85 / dtRadiationExposure':\r\n                from = template.rbDamage[0] === 0 ? template.bbDamage : template.rbDamage;\r\n                this.setDamage(template.rbDamage, from, value, mod.op, apply);\r\n                break;\r\n            default:\r\n                throw new Error(\"New damage type values: \" + mod.val1);\r\n        }\r\n    }\r\n\r\n    setDamage(to, from, value, op, apply) {\r\n        if (op === 'MullAdd') {\r\n            super.mullAddFromTo(from, to, value, apply);\r\n        } else if (op === 'Set') {\r\n            super.set(to, value, apply);\r\n        } else if (op === 'Add') {\r\n            super.add(to, value, apply);\r\n        }\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        throw new Error(\"Legendary changes damage type values\");\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class WeightReduction extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        super.checkOp(mod, template.id, \"Add\");\r\n        const value = super.getValue(mod);\r\n        super.mullAdd(template.weight, value, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        // Currently there is no reason to change weight\r\n    }\r\n}","import { Apply } from './Apply';\r\nimport DamageExtractor from '../DamageExtractor';\r\n\r\n\r\nexport class Enchantments extends Apply {\r\n\r\n    constructor() {\r\n        super();\r\n        this.damageExtractor = new DamageExtractor();\r\n    }\r\n    apply(template, mod, apply) {\r\n        const field = template.adEffects;\r\n        const value = mod.val1.split(\" / \")[0];\r\n        if (mod.op === \"Set\") {\r\n            if (apply) {\r\n                field[1] = [value];\r\n            } else {\r\n                field[1] = [...field[0]];\r\n            }\r\n        } else if (mod.op === \"MullAdd\" || mod.op === \"Add\") {\r\n            if (apply) {\r\n                field[1].push(value);\r\n            } else {\r\n                // Possibly useless cause now any changes lead to full recalculation.\r\n                // Avoid removing default one if it is previously was overridden by 'set'\r\n                if (field[1].toString() === field[0].toString()) {\r\n                    return;\r\n                }\r\n                const index = field[1].indexOf(value);\r\n                if (index > -1) {\r\n                    field[1].splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return true;\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        let result = [];\r\n        const ench = mod.val1.split(\" / \")[0];\r\n        this.damageExtractor.extractEnch(ench, result, \"Legendary\", false, \"\");\r\n        for (const property in result) {\r\n            const effects = result[property];\r\n            for (let i = 0; i < effects.length; i++) {\r\n                const effect = effects[i];\r\n                if (effect.type_name === 'STAT_DmgAll' || effect.type_name === \"STAT_DmgMelee\") {\r\n                    let value = effect.curv;\r\n                    if (value === 0) {\r\n                        value = effect.magnitude;\r\n                        if (value === 0) {\r\n                            throw new Error(\"Effect damage for legendary is 0\");\r\n                        }\r\n                    }\r\n                    const [newValue, depend] = this.adjustValueByHealth(modId, value, health);\r\n\r\n                    // We do not want to update values which do not depend on health\r\n                    // because they can be adjusted by user and updating just reset them to default.\r\n                    if (!depend && update) {\r\n                        continue;\r\n                    }\r\n\r\n                    wSpec.legendary[starIndex][1] = (apply) ? newValue : 0;\r\n                    wSpec.legendary[starIndex][2] = (apply) ? \"BDB\" : \"\";\r\n                } else {\r\n                    // throw new Error(\"Not known effect type for legendary: \" + effect.type_name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    adjustValueByHealth(modId, value, health) {\r\n        switch(modId) {\r\n            case '00606b73': // Juggernaut's\r\n                if (health > 95) {\r\n                    health = 95;\r\n                }\r\n                health -= 5;\r\n                return [parseInt(24 / 90 * health + 1), true];\r\n            case '004f6aa0': // Bloodied\r\n                return [100 - health, true];\r\n            default:\r\n                return [value, false];\r\n        }\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class NumProjectiles extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.shotSize, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n        if (update) {\r\n            return;\r\n        }\r\n        const value = super.getValue(mod);\r\n        super.checkOp(mod, \"legendary\", \"Add\");\r\n        super.addToProperty(wSpec, \"shot_size\", value, apply);\r\n\r\n        // Protect projectile if a user change the value\r\n        if (wSpec.shot_size === 0) {\r\n            wSpec.shot_size = 1;\r\n        }\r\n    }\r\n}","import { DamageBonusMult } from './DamageBonusMult';\r\nimport { Ammo } from './Ammo';\r\nimport { IsAutomatic } from './IsAutomatic';\r\nimport { Speed } from './Speed';\r\nimport { APCost } from './APCost';\r\nimport { Weight } from './Weight';\r\nimport { AttackDelay } from './AttackDelay';\r\nimport { CriticalDamageMult } from './CriticalDamageMult';\r\nimport { AmmoCapacity } from './AmmoCapacity';\r\nimport { ReloadSpeed } from './ReloadSpeed';\r\nimport { OverrideProjectile } from './OverrideProjectile';\r\nimport { HasRepeatableSingleFire } from './HasRepeatableSingleFire';\r\nimport { ActorValues } from './ActorValues';\r\nimport { Keywords } from './Keywords';\r\nimport { CritEffect } from './CritEffect';\r\nimport { AttackDamage } from './AttackDamage';\r\nimport { DamageTypeValues } from './DamageTypeValues';\r\nimport { WeightReduction } from './WeightReduction';\r\nimport { Enchantments } from './Enchantments';\r\nimport { NumProjectiles } from './NumProjectiles';\r\nimport { ConIronSight } from './ConIronSight';\r\nimport { SightedTransition } from './SightedTransition';\r\nimport { MaxConDegree } from './MaxConDegree';\r\nimport { MinConDegree } from './MinConDegree';\r\nimport { RecoilMaxDegree } from './RecoilMaxDegree';\r\nimport { RecoilMinDegree } from './RecoilMinDegree';\r\n\r\n\r\nexport default class Appliers {\r\n    \r\n    constructor() {\r\n        \r\n        // TODO: Has to be generated and set automatically via names instead of manual setting\r\n        this.appliers = new Map();\r\n        this.appliers.set(\"DamageBonusMult\", new DamageBonusMult());\r\n        this.appliers.set(\"Ammo\", new Ammo());\r\n        this.appliers.set(\"IsAutomatic\", new IsAutomatic());\r\n        this.appliers.set(\"Speed\", new Speed());\r\n        this.appliers.set(\"APCost\", new APCost());\r\n        this.appliers.set(\"Weight\", new Weight());\r\n        this.appliers.set(\"AttackDelay\", new AttackDelay());\r\n        this.appliers.set(\"CriticalDamageMult\", new CriticalDamageMult());\r\n        this.appliers.set(\"AmmoCapacity\", new AmmoCapacity());\r\n        this.appliers.set(\"ReloadSpeed\", new ReloadSpeed());\r\n        this.appliers.set(\"OverrideProjectile\", new OverrideProjectile());\r\n        this.appliers.set(\"HasRepeatableSingleFire\", new HasRepeatableSingleFire());\r\n        this.appliers.set(\"ActorValues\", new ActorValues());\r\n        this.appliers.set(\"Keywords\", new Keywords());\r\n        this.appliers.set(\"CritEffect\", new CritEffect());\r\n        this.appliers.set(\"AttackDamage\", new AttackDamage());\r\n        this.appliers.set(\"DamageTypeValues\", new DamageTypeValues());\r\n        this.appliers.set(\"WeightReduction\", new WeightReduction());\r\n        this.appliers.set(\"Enchantments\", new Enchantments());\r\n        this.appliers.set(\"NumProjectiles\", new NumProjectiles());\r\n        this.appliers.set(\"ConIronSight\", new ConIronSight());\r\n        this.appliers.set(\"SightedTransition\", new SightedTransition());\r\n        this.appliers.set(\"MaxConDegree\", new MaxConDegree());\r\n        this.appliers.set(\"MinConDegree\", new MinConDegree());\r\n        this.appliers.set(\"RecoilMaxDegree\", new RecoilMaxDegree());\r\n        this.appliers.set(\"RecoilMinDegree\", new RecoilMinDegree());\r\n    }\r\n}","import Appliers from './appliers/Appliers';\r\nimport getMods from '../Mods';\r\n\r\n\r\nexport class ModParser {\r\n\r\n    constructor() {\r\n        this.appliers = new Appliers().appliers;\r\n        this.skip_legendary = [\"0040bd7c\", \"004f577d\", \"004f5776\", \"004f5778\", \"004ed02f\", \"004e89af\", \"00529a02\"];\r\n    }\r\n\r\n    // mutatingDamage is used when default damages like (ammo, projectile) must be overridden\r\n    // this types of modes must be applied separately to correctly multiply buffs.\r\n    applyOrRevoke(modData, template, apply, mutatingDamage=false) {\r\n        for (let i = 0; i < modData.modifiers.length; i++) {\r\n            const mod = modData.modifiers[i];\r\n            const applier = this.appliers.get(mod.prop);\r\n            if (applier) {\r\n                const changeDefault = applier.isChangingDefaultDamage();\r\n                if ((mutatingDamage && changeDefault) || (!mutatingDamage && !changeDefault)) {\r\n                    applier.apply(template, mod, apply);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static applySpecific(template, modData, modEffects) {\r\n        for (let i = 0; i < modData.modifiers.length; i++) {\r\n            const mod = modData.modifiers[i];\r\n            const applier = modEffects.get(mod.prop);\r\n            if (applier) {\r\n                applier.apply(template, mod, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Update means that it can be applied to legendary which reset their value according to health\r\n    // Effects which add and remove their static values can not be updated (otherwise they will stack values up every time)\r\n    applyLegendaryModToWSpec(modId, wSpec, starIndex, health, update, apply) {\r\n        if (this.skip_legendary.includes(modId)) {\r\n            return;\r\n        }\r\n        const modData = getMods().get(modId);\r\n        if (modData) {\r\n            for (let i = 0; i < modData.modifiers.length; i++) {\r\n                const mod = modData.modifiers[i];\r\n                const applier = this.appliers.get(mod.prop);\r\n                if (applier) {\r\n                    applier.applyLegendary(wSpec, mod, modId, starIndex, health, update, apply);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import getMods from '../Mods';\r\n\r\n\r\nexport class ModTools {\r\n\r\n    static hasSilencerById(modId) {\r\n        return ModTools.hasSilencer(getMods().get(modId));\r\n    }\r\n\r\n    static hasSilencer(modData) {\r\n        for (let i = 0; i < modData.modifiers.length; i++) {\r\n            const val = modData.modifiers[i].val1;\r\n            if (val === '001e05d6 / HasSilencer') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","export class Apply {\r\n\r\n    checkOp(mod, weaponId, expected) {\r\n        if (mod.op !== expected) {\r\n            throw new Error(\"Mult must have '\" + expected + \"' op, but not '\" + mod.op + \"', \" +\r\n            \"WeaponId: \" + weaponId + \" Prop: \" + mod.prop);\r\n        }\r\n    }\r\n\r\n    getCurvValue(mod) {\r\n        if (!mod.curv || mod.curv === '') {\r\n            return 0;\r\n        } else {\r\n            const val1 = parseFloat(mod.curv);\r\n            if (!val1) {\r\n                return 0;\r\n            }\r\n            return val1;\r\n        }\r\n    }\r\n\r\n    getValue(mod) {\r\n        const val1 = this.getCurvValue(mod);\r\n        const val2 = parseFloat(mod.val1);\r\n        const val3 = parseFloat(mod.val2);\r\n        if (val1 !== 0) {\r\n            return val1;\r\n        } else if (val2 !== 0) {\r\n            return val2;\r\n        } else {\r\n            return val3;\r\n        }\r\n    }\r\n\r\n    mullAddFromTo(from, to, value, apply, allowNegative=false) {\r\n        if (apply) {\r\n            to[1] += (from[0] * value);\r\n        } else {\r\n            to[1] -= (from[0] * value);\r\n        }\r\n        if (to[1] < 0 && !allowNegative) {\r\n            to[1] = 0;\r\n        }\r\n    }\r\n\r\n    mullAdd(field, value, apply, allowNegative=false) {\r\n        this.mullAddFromTo(field, field, value, apply, allowNegative);\r\n    }\r\n\r\n    add(field, value, apply, allowNegative=false, index=1) {\r\n        if (apply) {\r\n            field[index] += value;\r\n        } else {\r\n            field[index] -= value;\r\n        }\r\n        if (field[index] < 0 && !allowNegative) {\r\n            field[index] = 0;\r\n        }\r\n    }\r\n\r\n    addToProperty(obj, property, value, apply, allowNegative=false) {\r\n        if (apply) {\r\n            obj[property] += value;\r\n        } else {\r\n            obj[property] -= value;\r\n        }\r\n        if (obj[property] < 0 && !allowNegative) {\r\n            obj[property] = 0;\r\n        }\r\n    }\r\n\r\n    mullAddToProperty(obj, property, value, apply) {\r\n        if (apply) {\r\n            obj[property] += (obj[property] * value);\r\n        } else {\r\n            obj[property] /= (value + 1);\r\n        }\r\n    }\r\n\r\n    setToProperty(obj, property, value) {\r\n        obj[property] = value;\r\n    }\r\n\r\n    set(field, value, apply, allowNegative=false) {\r\n        if (apply) {\r\n            field[1] = value;\r\n            if (field[1] < 0 && !allowNegative) {\r\n                field[1] = 0;\r\n            }\r\n        } else {\r\n            field[1] = field[0];\r\n        }\r\n    }\r\n\r\n    mullSet(field, value, apply, allowNegative=false) {\r\n        if (apply) {\r\n            field[1] = field[0] * value;\r\n            if (field[1] < 0 && !allowNegative) {\r\n                field[1] = 0;\r\n            }\r\n        } else {\r\n            field[1] = field[0];\r\n        }\r\n    }\r\n\r\n    addSetMullAdd(field, value, op, apply, allowNegative=false) {\r\n        if (op === 'Add') {\r\n            this.add(field, value, apply, allowNegative);\r\n        } else if (op === 'MullAdd') {\r\n            this.mullAdd(field, value, apply, allowNegative);\r\n        } else if (op === 'Set') {\r\n            this.set(field, value, apply, allowNegative);\r\n        }\r\n    }\r\n\r\n    isChangingDefaultDamage() {\r\n        return false;\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class ConIronSight extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.conIronSight, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class MaxConDegree extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.maxConDegree, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class MinConDegree extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.minConDegree, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class RecoilMaxDegree extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.recoilMaxDegree, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class RecoilMinDegree extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.recoilMinDegree, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","import { Apply } from './Apply';\r\n\r\n\r\nexport class SightedTransition extends Apply {\r\n\r\n    apply(template, mod, apply) {\r\n        const value = super.getValue(mod);\r\n        super.addSetMullAdd(template.sightedTransition, value, mod.op, apply);\r\n    }\r\n\r\n    applyLegendary(wSpec, mod, modId, starIndex, health, update, apply) {\r\n\r\n    }\r\n}","function getButtons(pairs, selectedValue, onClick, small) {\r\n    const result = [];\r\n    let style = null;\r\n    for(const name in pairs) {\r\n        const value = pairs[name];\r\n        if (selectedValue === value) {\r\n            style = {color: '#0068ae', borderColor: '#0098ff', marginRight: '1px'};\r\n        } else {\r\n            style = {marginRight: '1px'};\r\n        }\r\n        let tail = \"\";\r\n        if (small) {\r\n            tail = \"-small\";\r\n        }\r\n        result.push(<button key={name} type=\"button\" value={value} style={style} onClick={onClick} className={\"btn btn-blue-white\" + tail}>{name}</button>);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n    pairs={{Name1: value1, Name2: value2, ...}}\r\n    selectedValue={currentValue}\r\n    setSelectedValue={setSelectedValue} can be null if onClick is set\r\n    onClick, if null then setSelectedValue is used\r\n*/\r\nexport default function BSRadio(props) {\r\n    let onClick = null;\r\n    if (!props.onClick) {\r\n        onClick = onClick = (e) => {\r\n            if (props.setSelectedValue) {\r\n                if (props.parseValueInt) {\r\n                    props.setSelectedValue(parseInt(e.target.value));\r\n                } else {\r\n                    props.setSelectedValue(e.target.value);\r\n                }\r\n            }\r\n        };\r\n    } else {\r\n        onClick = props.onClick;\r\n    }\r\n    return (\r\n        <div className={props.className}>\r\n            <div className=\"btn-group\" role=\"group\">\r\n                {getButtons(props.pairs, props.selectedValue, onClick, props.small)}\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default function GroupView(props) {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\" style={props.style}>\r\n            <div>\r\n                <div className={props.className} style={{width: 'max-content', borderRadius: '6px'}}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import Modal from 'react-bootstrap/Modal';\r\n\r\n\r\nexport default function LoadingModal(props) {\r\n    function onHide(e) {\r\n\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Body className=\"modal-scroll-80-60\">\r\n                <b>Loading...</b>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\n","import { getUniqueDropdownItemsByNames } from '../DropdownHelpers';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\n\r\nexport default function SimpleNameDropdown(props) {\r\n    return (\r\n        <DropdownButton variant={props.variant} size={props.size} onSelect={props.onSelect} title={props.title}>\r\n            {getUniqueDropdownItemsByNames(props.names)}\r\n        </DropdownButton>\r\n    );\r\n}\r\n","import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { leftRightTag, leftRight2 } from './RowBuilder';\r\nimport { getEffect, setVMADObject } from './EffectProvider';\r\nimport { getItem } from '../consumables/view/ConsumableItems';\r\n\r\n\r\nexport const blue = {\r\n    backgroundColor: '#f7fbff',\r\n    borderColor: '#0072a3',\r\n    color: '#005691',\r\n}\r\n\r\nexport const orange = {\r\n    backgroundColor: '#fffaf0',\r\n    borderColor: '#ffa800',\r\n    color: '#b77100',\r\n}\r\n\r\nexport const magenta = {\r\n    backgroundColor: '#fff1fa',\r\n    borderColor: '#ca007c',\r\n    color: '#830f57',\r\n}\r\n\r\nexport const darkBlue = {\r\n    backgroundColor: '#e6f7ff',\r\n    borderColor: '#0085c6',\r\n    color: '#003e5d',\r\n}\r\n\r\nexport const indigo = {\r\n    backgroundColor: '#fdfaff',\r\n    borderColor: '#5a008a',\r\n    color: '#430067',\r\n}\r\n\r\nexport const redRounded = {\r\n    backgroundColor: '#fff4f4',\r\n    borderColor: '#890000',\r\n    color: '#c90000',\r\n    borderRadius: '0.5rem',\r\n}\r\n\r\nexport function getNameByLabel(label) {\r\n    switch(label) {\r\n        case 'SPEL':\r\n            return \"Spell\";\r\n        case 'PERK':\r\n            return \"Perk\";\r\n        case 'PCRD':\r\n            return \"Card\";\r\n        case 'ENCH':\r\n            return \"Enchantment\";\r\n        case 'MGEF':\r\n            return \"Effect\";\r\n        case 'ALCH':\r\n            return \"Alchemy\";\r\n        case 'HZRD':\r\n            return \"Hazard\";\r\n        case 'QUST':\r\n            return \"Quest\";\r\n        case 'KYWD':\r\n            return \"Tag\";\r\n        case 'RACE':\r\n            return \"Race\";\r\n        default:\r\n            return label;\r\n    }\r\n}\r\n\r\nexport function resolveEffectOrNull(effectId) {\r\n    if (typeof(effectId) === typeof({})) {\r\n        return effectId;\r\n    }\r\n    if (isEffectIdEmpty(effectId)) {\r\n        return null;\r\n    }\r\n    return getEffect(effectId);\r\n}\r\n\r\nexport function isEffectIdEmpty(effectId) {\r\n    return (!effectId || effectId === \"\" || effectId === \"00000000\");\r\n}\r\n\r\nexport function getVMADButton(effectId, vmad, onEffectClick, buttonName='VMAD') {\r\n    const id = \"vmad\" + effectId;\r\n    const vmadObject = {label: \"VMAD\", vmad: vmad, id: id};\r\n    setVMADObject(id, vmadObject);\r\n    return (\r\n        <Button className=\"w-100 p-1 mt-1\" name={id} variant=\"blue-border\" onClick={onEffectClick}>\r\n            {buttonName}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport function getEffectButton(effectId, onEffectClick) {\r\n    if (isEffectIdEmpty(effectId)) {\r\n        return (<></>);\r\n    }\r\n    let effect = getEffect(effectId);\r\n    if (!effect) {\r\n        effect = getItem(effectId);\r\n        if (!effect) {\r\n            return (<>Can not resolve effect: {effectId}</>);\r\n        }\r\n    }\r\n    const name = (effect.full === \"\") ? effect.name : effect.full;\r\n    return (\r\n        <Button className=\"w-100 p-0 mt-1\" name={effectId} variant=\"blue-border\" onClick={onEffectClick}>\r\n            <div><b><small>{name}</small></b></div>\r\n            {leftRight2(<div className=\"mt-0\" style={{fontSize: '.6rem'}}><b>{getNameByLabel(effect.label)}</b></div>,\r\n            <div className=\"mt-0\" style={{fontSize: '.6rem'}}>{effectId}</div>, -1, \"w-100 ps-1 pe-1 p-0\")}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport function vmadView(id, vmad, onEffectClick) {\r\n    if (!vmad || vmad.length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <div className=\"m-2\">\r\n            {getVMADButton(id, vmad, onEffectClick)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function buildRow(left, right, color, border=true, skipZero=false, skipEmpty=true) {\r\n    if (skipEmpty && (right === null || right === \"\")) {\r\n        return (<></>);\r\n    }\r\n    if (skipZero && right === 0) {\r\n        return (<></>);\r\n    }\r\n    return leftRightTag(<b className=\"ps-1\">{left}</b>, <b className=\"pe-1\">{right}</b>, color, border, -1, \"w-100 p-0 mt-1 mb-1\")\r\n}\r\n\r\nexport function buildConditionStrings(conditions, className=\"mt-1\", color='#332500', bgColor='#fffdf6') {\r\n    const conditionStrings = [];\r\n    if (!conditions) {\r\n        return conditionStrings;\r\n    }\r\n    for (let i = 0; i < conditions.length; i++) {\r\n        const cond = conditions[i];\r\n        conditionStrings.push(<div className={className} style={{fontSize: '0.7rem', textAlign: 'center', textWrap: 'balance', backgroundColor: bgColor, color: color}} key={i}><b>{cond}</b></div>);\r\n    }\r\n    return conditionStrings;\r\n}\r\n\r\nexport function buildTextBlock(text, header=null, footer=null, className=\"mt-2\", color=\"#003112\", borderColor=\"#effff5\", backgroundColor=\"#effff5\") {\r\n    if (!text || text === \"\") {\r\n        return (<></>);\r\n    }\r\n    if (typeof text === typeof \"\" && text.trim() === \"\") {\r\n        return (<></>);\r\n    }\r\n    const headerView = (header) ? (<div className=\"mb-1\"><b>{header}</b></div>) : (<></>);\r\n    const footerView = (footer) ? (<div className=\"mt-1\">{footer}</div>) : (<></>);\r\n    return (\r\n        <div className={className} style={{fontSize: '0.7rem', borderWidth: '1px', borderStyle: 'solid', borderColor: borderColor, textAlign: 'center', textWrap: 'balance', backgroundColor: backgroundColor, color: color}}>\r\n            {headerView}\r\n            <div><b>{text}</b></div>\r\n            {footerView}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function buildActor(actor, header=\"Actor\", footer=null) {\r\n    if (!actor || actor === \"\" || actor === \"00000000\") {\r\n        return (<></>);\r\n    }\r\n    const label = actor.label;\r\n    if (label === \"AVIF\") {\r\n        return (\r\n            <Card className=\"mt-1 mb-1 m-0\">\r\n                <Card.Header className='pt-0 pb-0'>\r\n                    <b><small>{header}</small></b>\r\n                </Card.Header>\r\n                <Card.Body className=\"p-1\">\r\n                    {buildTextBlock(actor.desc, null, null, \"p-1\")}\r\n                    {buildRow(\"Id:\", actor.id, 'purple')}\r\n                    {buildRow(\"Name:\", actor.name, 'purple')}\r\n                    {buildRow(\"Full:\", actor.full, 'purple')}\r\n                    {buildRow(\"Default value:\", actor.def, 'purple')}\r\n                    {buildRow(\"Min value:\", actor.min, 'purple')}\r\n                    {buildRow(\"Max value:\", actor.max, 'purple')}\r\n                    {footer}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    } else if (label === \"DMGT\") {\r\n        return (\r\n            <Card className=\"mt-1 mb-1 m-0\">\r\n                <Card.Header className='pt-0 pb-0'>\r\n                    <b><small>{header}</small></b>\r\n                </Card.Header>\r\n                <Card.Body className=\"p-1\">\r\n                    {buildRow(\"Id:\", actor.id, 'purple')}\r\n                    {buildRow(\"Name:\", actor.name, 'purple')}\r\n                    {buildRow(\"Full:\", actor.full, 'purple')}\r\n                    {footer}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    } else {\r\n        return (<>Unsupported label for actor: {label}</>);\r\n    }\r\n}\r\n\r\nexport function idNameRow(id, name) {\r\n    return (\r\n        <div className=\"d-flex flex-nowrap\" style={{width: '100%'}}>\r\n            <span className=\"pe-0 d-flex justify-content-start\" style={{width: 'auto'}}>\r\n                <b className=\"tag\">{id}</b>\r\n            </span>\r\n            <div className=\"d-flex justify-content-end ms-2\" style={{width: '100%', textWrap: 'nowrap', overflow: 'hidden'}}>\r\n                <b className=\"tag\" style={darkBlue}>{name}</b>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function getGlobDuration(effect) {\r\n    return getGlob(effect.glob_duration, \"duration\");\r\n}\r\n\r\nfunction getGlob(glob, name, footerView=null) {\r\n    const footer = (footerView) ? <Card.Footer className=\"bg-spell-header p-0 ps-2\">{footerView}</Card.Footer> : <></>;\r\n    if (glob !== '') {\r\n        return (\r\n            <Card className='mt-1 mb-1'>\r\n                <Card.Header className=\"bg-spell-header p-0 ps-2\"><small>Glob {name}</small></Card.Header>\r\n                <Card.Body className=\"p-1\">\r\n                    {buildRow(\"Id:\", glob.id, \"purple\")}\r\n                    {buildRow(\"Name:\", glob.name, \"purple\")}\r\n                    {buildRow(\"Value:\", glob.value, \"purple\")}\r\n                </Card.Body>\r\n                {footer}\r\n            </Card>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\nexport function getGlobMagnitude(effect) {\r\n    return getGlob(effect.glob_magnitude, \"magnitude\");\r\n}\r\n\r\nexport function getGlobValue(obj, name=\"value\", footerView=null) {\r\n    return getGlob(obj, name, footerView);\r\n}\r\n\r\nexport function buildEffect(index, body) {\r\n    return (\r\n        <Card key={index} className=\"mt-1 mb-1 m-0\">\r\n            <Card.Header className='pt-0 pb-0'>\r\n                <b><small>E{index + 1}</small></b>\r\n            </Card.Header>\r\n            <Card.Body className='p-1'>\r\n                {body}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport function buildCurve(curve, maxValue, className=\"mt-1\") {\r\n    if (!curve || curve === \"\") {\r\n        return (<></>);\r\n    }\r\n\r\n    const pathCurve = curve.split(\"\\n\");\r\n    return (\r\n        <>\r\n            {buildTextBlock(\r\n                <>\r\n                    <div className=\"pb-1\">\r\n                        Curve magnitude\r\n                    </div>\r\n                    <div className=\"pb-1\">\r\n                        {pathCurve[0]}\r\n                    </div>\r\n                    <div>\r\n                        {pathCurve[1]}\r\n                    </div>\r\n                    <div className=\"pt-1\">\r\n                        Curve magnitude max: {maxValue}\r\n                    </div>\r\n                </>, null, null, className, \"#7b3b00\", \"#fff9f3\", \"#fff9f3\"\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport function buildBadge(name, color=\"#000\", backgroundColor=\"#fff\") {\r\n    return (<div className=\"badge p-1 ps-2 pe-2 bg-lite-shadow2\" style={{backgroundColor: backgroundColor, color: color}}>{name}</div>)\r\n}\r\n\r\nexport function buildBadge2(name, color=\"#000\", backgroundColor=\"#fff\") {\r\n    return (<div className=\"badge p-1 ps-2 pe-2\" style={{borderStyle: 'solid', borderColor: backgroundColor, borderWidth: '0.5px', backgroundColor: backgroundColor, color: color}}>{name}</div>)\r\n}","import { idNameRow, buildTextBlock } from '../../helpers/EffectViewHelper';\r\nimport { getPerkCard } from '../PerkCardProvider';\r\nimport PerkCardTools from '../PerkCardTools';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Divider } from 'antd';\r\nimport { getEffect } from '../../helpers/EffectProvider';\r\n\r\n\r\nfunction perkButtons(perk, onPerkClick) {\r\n    const result = [];\r\n    const perkData = [];\r\n    const costs = [];\r\n    for (const fieldName in perk) {\r\n        if (fieldName.startsWith(\"rankCost\")) {\r\n            costs.push(fieldName);\r\n        }\r\n    }\r\n    for (let i = 0; i < costs.length; i++) {\r\n        const fieldName = costs[i];\r\n        const number = fieldName.slice(8, 9);\r\n        const cost = perk[fieldName];\r\n        const mPerkId = perk['mPerk' + number];\r\n        const fPerkId = perk['fPerk' + number];\r\n        const mPerk = getEffect(mPerkId);\r\n        const fPerk = getEffect(fPerkId);\r\n        if (mPerk) {\r\n            perkData.push({name: mPerk.name, id: mPerk.id, cost: cost});\r\n        }\r\n        if (fPerk) {\r\n            perkData.push({name: fPerk.name, id: fPerk.id, cost: cost});\r\n        }\r\n    }\r\n    function getCostView(cost, legendary) {\r\n        if (legendary) {\r\n            return (<></>);\r\n        }\r\n        return (\r\n            <div className=\"ps-1 pe-1 pt-0 pb-0\" style={{color: '#fff', backgroundColor: '#ffb000', borderColor: '#ffb000', borderWidth: '1px', borderRadius: '2px', borderStyle: 'solid'}}>\r\n                <b>{cost}</b>\r\n            </div>\r\n        );\r\n    }\r\n    for (let i = 0; i < perkData.length; i++) {\r\n        const data = perkData[i];\r\n        result.push(\r\n            <div key={data.id} className=\"d-flex justify-content-center m-1\">\r\n                <Button className=\"w-100\" name={data.id} variant=\"blue-white-border\" onClick={onPerkClick}>\r\n                    <div className=\"mt-1\"><b>{data.name}</b></div>\r\n                    <div className=\"mt-0 mb-0\" style={{display: 'flex', flexDirection: 'row'}}>\r\n                        <div className=\"w-100 d-flex justify-content-start mb-1\">\r\n                            {getCostView(data.cost, perk.legendary)}\r\n                        </div>\r\n                        <div className=\"w-100 d-flex justify-content-end mt-2\">\r\n                            <small><b style={{color: '#520021'}}>{data.id}</b></small>\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function PerkCardCompactView(props) {\r\n    let perkCard = props.perkCard;\r\n    if (!perkCard) {\r\n        perkCard = getPerkCard(props.perkCardId);\r\n    }\r\n    const desc = (perkCard.desc && perkCard.desc !== \"\") ? perkCard.desc : \"-\";\r\n    const bgColor = PerkCardTools.getColor(perkCard.type);\r\n    const legBadge = (perkCard.legendary) ? <div className=\"badge p-1 ps-2 pe-2 bg-lite-shadow2\" style={{backgroundColor: '#ffc700', color: '#513f00'}}>Legendary</div> : <></>;\r\n    return (\r\n        <div>\r\n            {idNameRow(perkCard.id, perkCard.name)}\r\n            {buildTextBlock(desc, null, null, \"mt-2 p-1\")}\r\n            <div className=\"mt-3 mb-3 ms-1 me-1\" style={{display: 'flex', flexDirection: 'row'}}>\r\n                <div className=\"w-100 d-flex justify-content-start\">\r\n                    {legBadge}\r\n                </div>\r\n                <div className=\"w-100 d-flex justify-content-center\">\r\n                    <div className=\"badge p-1 ps-2 pe-2 bg-lite-shadow2\" style={{backgroundColor: bgColor, color: '#fff'}}>{perkCard.type}</div>\r\n                </div>\r\n                <div className=\"w-100 d-flex justify-content-end\">\r\n                    <div className=\"badge p-1 ps-2 pe-2 bg-lite-shadow2\">Lvl {perkCard.level}</div>\r\n                </div>\r\n            </div>\r\n            <Divider>Perks</Divider>\r\n            {perkButtons(perkCard, props.onEffectClick)}\r\n        </div>\r\n    );\r\n}","import { idNameRow, buildConditionStrings, buildRow, getEffectButton, buildActor, buildTextBlock, buildEffect, vmadView } from '../../helpers/EffectViewHelper';\r\nimport { Divider } from 'antd';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nfunction buildPerkEffect(effect, key, onEffectClick) {\r\n    const rows = getRows(effect, onEffectClick);\r\n    const conditions = buildConditionStrings(effect.conditions, \"mt-1 p-1\");\r\n    const indent = (conditions.length > 0) ? (<div className=\"m-1\" />) : null;\r\n    const body = (\r\n        <>\r\n            {conditions}\r\n            {indent}\r\n            {buildRow(\"Type:\", effect.e_type, 'blue')}\r\n            {rows}\r\n        </>\r\n    );\r\n    return buildEffect(key, body);\r\n}\r\n\r\nfunction getRows(effect, onEffectClick) {\r\n    const vType = effect.v_type;\r\n    if (vType === 0 && effect.e_type === \"Ability\") {\r\n        return (\r\n            <>\r\n                {getEffectButton(effect.spell, onEffectClick)}\r\n            </>\r\n        );\r\n    } else if (vType === 1) {\r\n        return (\r\n            <>\r\n                {buildRow(\"Name:\", effect.entry, 'blue')}\r\n                {buildRow(\"Operation:\", effect.op, 'blue')}\r\n                {buildRow(\"Value:\", effect.value, 'blue')}\r\n            </>\r\n        );\r\n    } else if (vType === 4) {\r\n        return (\r\n            <>\r\n                {buildRow(\"Name:\", effect.entry, 'blue')}\r\n                {buildRow(\"Operation:\", effect.op, 'blue')}\r\n            </>\r\n        )\r\n    } else if (vType === 5) {\r\n        return (\r\n            <>\r\n                {buildRow(\"Name:\", effect.entry, 'blue')}\r\n                {buildRow(\"Operation:\", effect.op, 'blue')}\r\n                {getEffectButton(effect.value, onEffectClick)}\r\n            </>\r\n        );\r\n    } else if (vType === 8) {\r\n        return (\r\n            <>\r\n                {buildRow(\"Name:\", effect.entry, 'blue')}\r\n                {buildRow(\"Operation:\", effect.op, 'blue')}\r\n                {buildActors(effect.value)}\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"d-flex justify-content-center\">\r\n                <b><small>Does not have a view for type: {vType}</small></b>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction buildActors(value) {\r\n    const actor1 = value.actor1;\r\n    const actor2 = value.actor2;\r\n    const val = value.value;\r\n    return (\r\n        <Card className=\"mt-1 mb-1 p-1 m-0\">\r\n            {buildActor(actor1)}\r\n            {buildActor(actor2)}\r\n            {buildRow(\"Value:\", val, 'blue')}\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction getEffects(effects, onEffectClick) {\r\n    const result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        result.push(buildPerkEffect(effect, i, onEffectClick));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function PerkCompactView(props) {\r\n    const perk = props.perk;\r\n    return (\r\n        <>\r\n            {idNameRow(perk.id, perk.name)}\r\n            {buildTextBlock(perk.desc, null, null, \"mt-2 p-1\")}\r\n            {buildConditionStrings(perk.conditions, \"mt-2 p-1\")}\r\n            {vmadView(perk.id, perk.vmad, props.onEffectClick)}\r\n            <Divider className=\"pt-0 mt-2 mb-2\">Effects</Divider>\r\n            {getEffects(perk.effects, props.onEffectClick)}\r\n        </>\r\n    );\r\n}","import { idNameRow, buildRow, buildActor, buildConditionStrings, buildCurve, buildEffect, getGlobDuration, getGlobMagnitude, getEffectButton, vmadView } from '../../helpers/EffectViewHelper';\r\nimport { Divider } from 'antd';\r\n\r\n\r\nexport function getEffects(effects, onEffectClick) {\r\n    const result = [];\r\n    for (let i = 0; i < effects.length; i++) {\r\n        const effect = effects[i];\r\n        const body = (\r\n            <>\r\n                {getEffectButton(effect.m_effect, onEffectClick)}\r\n                <div className=\"m-1\" />\r\n                {buildConditionStrings(effect.conditions, \"mt-1 p-1\")}\r\n                {buildCurve(effect.d_curv, effect.curve_max_value)}\r\n                {buildRow(\"Magnitude:\", effect.magnitude, 'magenta', true, true)}\r\n                {getGlobMagnitude(effect)}\r\n                {buildRow(\"Duration:\", effect.duration, 'purple', true, true)}\r\n                {getGlobDuration(effect)}\r\n                {buildRow(\"Area:\", effect.area, 'blue', true, true)}\r\n                {buildActor(effect.actor)}\r\n            </>\r\n        );\r\n        result.push(buildEffect(i, body));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getPerk(perkId, onEffectClick) {\r\n    if (!perkId || perkId === \"\" || perkId === \"00000000\") {\r\n        return (<></>);\r\n    }\r\n    return getEffectButton(perkId, onEffectClick);\r\n}\r\n\r\nexport default function SpellCompactView(props) {\r\n    const spell = props.spell;\r\n    return (\r\n        <>\r\n            {idNameRow(spell.id, spell.name)}\r\n            <Divider className=\"pt-0 mt-2 mb-2\">Properties</Divider>\r\n            {buildRow(\"Name:\", spell.full, 'purple', false)}\r\n            {buildRow(\"Type:\", spell.type, 'blue', false)}\r\n            {buildRow(\"Target:\", spell.target, 'purple', false)}\r\n            {buildRow(\"Charge Time:\", spell.time, 'blue', false)}\r\n            {buildRow(\"Range:\", spell.range, 'purple', false)}\r\n            {buildRow(\"Duration:\", spell.duration, 'blue', false)}\r\n            {buildRow(\"Duration type:\", spell.e_type, 'purple', false)}\r\n            {vmadView(spell.id, spell.vmad, props.onEffectClick)}\r\n            {getPerk(spell.perk, props.onEffectClick)}\r\n            <Divider className=\"pt-0 mt-2 mb-2\">Effects</Divider>\r\n            {getEffects(spell.mag_effects, props.onEffectClick)}\r\n        </>\r\n    );\r\n}","import { idNameRow, buildRow, buildActor, buildConditionStrings, buildTextBlock, getEffectButton, vmadView } from '../../helpers/EffectViewHelper';\r\nimport { Divider } from 'antd';\r\nimport { getExpView } from '../../helpers/ProjView';\r\n\r\n\r\nfunction checkEmpty(obj) {\r\n    return (!obj || obj === \"\" || obj === \"00000000\");\r\n}\r\n\r\nfunction getPerk(perkId, onEffectClick) {\r\n    if (checkEmpty(perkId)) {\r\n        return (<></>);\r\n    }\r\n    return getEffectButton(perkId, onEffectClick);\r\n}\r\n\r\nfunction getAbility(spellId, onEffectClick) {\r\n    if (checkEmpty(spellId)) {\r\n        return (<></>);\r\n    }\r\n    return getEffectButton(spellId, onEffectClick);\r\n}\r\n\r\nfunction getDamageType(damageType) {\r\n    if (checkEmpty(damageType)) {\r\n        return (<></>);\r\n    }\r\n    if (typeof damageType === typeof \"\") {\r\n        return buildRow(\"Value:\", damageType, 'purple', false);\r\n    }\r\n    return buildActor(damageType, \"Damage type\");\r\n}\r\n\r\nfunction getExplosion(explosion) {\r\n    if (checkEmpty(explosion)) {\r\n        return (<></>);\r\n    }\r\n    return getExpView(explosion);\r\n}\r\n\r\nfunction getProjectile(projectile) {\r\n    if (checkEmpty(projectile)) {\r\n        return (<></>);\r\n    }\r\n    return (<>View for projectile is not implemented</>);\r\n}\r\n\r\nfunction getResistance(resistance) {\r\n    return buildActor(resistance, \"Resistance\");\r\n}\r\n\r\nexport default function EffectCompactView(props) {\r\n    const effect = props.effect;\r\n    return (\r\n        <>\r\n            {idNameRow(effect.id, effect.name)}\r\n            {vmadView(effect.id, effect.vmad, props.onEffectClick)}\r\n            <Divider className=\"pt-0 mt-2 mb-2\">Properties</Divider>\r\n            {buildTextBlock(effect.desc, null, null, \"mt-1 p-1\")}\r\n            {buildConditionStrings(effect.conditions, \"mt-1 p-1\")}\r\n            {buildRow(\"Name:\", effect.full, 'purple', false)}\r\n            {buildRow(\"Type:\", effect.a_type, 'blue', false)}\r\n            {buildRow(\"Duration type:\", effect.e_type, 'purple', false)}\r\n            {buildRow(\"Target:\", effect.target, \"blue\", false)}\r\n            {buildActor(effect.actor_value1)}\r\n            {buildActor(effect.actor_value2)}\r\n            {getAbility(effect.ability, props.onEffectClick)}\r\n            {getPerk(effect.perk, props.onEffectClick)}\r\n            {getDamageType(effect.d_type)}\r\n            {getExplosion(effect.explosion)}\r\n            {getProjectile(effect.projectile)}\r\n            {getResistance(effect.resist)}\r\n        </>\r\n    );\r\n}","import { Tag, Divider } from 'antd';\r\nimport ConsumableTools from '../ConsumableTools';\r\n\r\n\r\nfunction getTagView(tag, color) {\r\n    const tagName = ConsumableTools.getTagName(tag);\r\n    return (\r\n        <Tag key={tagName} className=\"mt-1 m-auto d-flex\" bordered={true} color={color}>\r\n            <b><small>{ConsumableTools.removePrefixSuffix(tagName)}</small></b>\r\n        </Tag>\r\n    );\r\n}\r\n\r\nexport default function ConsumableTagsView(props) {\r\n    if (props.tags && props.tags.length > 0) {\r\n        const result = [];\r\n        for (let i = 0; i < props.tags.length; i++) {\r\n            result.push(getTagView(props.tags[i], props.color));\r\n        }\r\n        return (\r\n            <div className={props.className}>\r\n                 <Divider className=\"p-0 m-0\"><small>{props.title}</small></Divider>\r\n                 <div style={{flexWrap: \"wrap\"}} className=\"d-flex justify-content-center\">\r\n                    {result}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import ConsumableTagsView from './ConsumableTagsView';\r\nimport { idNameRow, getEffectButton, indigo, redRounded } from '../../helpers/EffectViewHelper';\r\nimport { numberToString } from '../../helpers/StringHelpers';\r\nimport { Divider, Tag } from 'antd';\r\nimport { getEffects } from '../../spell/view/SpellCompactView';\r\n// import { useState } from 'react';\r\n\r\n\r\nfunction getItemDescription(desc) {\r\n    if (!desc || desc === \"\") {\r\n        return (<></>);\r\n    }\r\n    const mt = 2;\r\n    const mb = 2;\r\n    return (\r\n        <div style={{width: '100%', backgroundColor: '#fffaf0'}} className={\"mt-\" + mt + \" mb-\" + mb + \" d-flex justify-content-center\"}>\r\n            <div style={{textAlign: 'center', padding: '0.3rem'}}>\r\n                <small><b style={{color: '#bf6400'}}>{desc}</b></small>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getTag3(value, style, mt, mb) {\r\n    return (\r\n        <div style={{width: '100%'}} className={\"mt-\" + mt + \" mb-\" + mb + \" d-flex justify-content-center\"}>\r\n            <div className=\"tag\" style={style}>\r\n                <div style={{textWrap: 'nowrap', overflow: \"hidden\", textOverflow: 'ellipsis'}}>\r\n                    {value}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getWeight(item) {\r\n    const weight = \"Weight: \" + numberToString(item.weight, 3);\r\n    return getTag3(weight, indigo, 2, 0)\r\n}\r\n\r\nfunction getAddictionView(item, onEffectClick) {\r\n    let addictionChance = \"\";\r\n    if (item.addiction_chance > 0) {\r\n        addictionChance = \"Addiction chance: \" + (item.addiction_chance * 100).toFixed(1) + \"%\";\r\n    }\r\n    if (addictionChance === \"\") {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className=\"mt-2 mb-0\"><small>Addiction</small></Divider>\r\n            {getTag3(addictionChance, redRounded, 1, 1)}\r\n            {getEffectButton(item.addiction_spell, onEffectClick)}\r\n        </>\r\n    )\r\n}\r\n/*\r\nfunction viewButton(isMain, setIsMain) {\r\n    function onClick(e) {\r\n        setIsMain(!isMain);\r\n    }\r\n    const name = (isMain) ? \"Details\" : \"Main\";\r\n    return (\r\n        <Button className=\"w-100 p-1 mt-2 mb-2\" variant=\"blue-border\" onClick={onClick}>\r\n            {name}\r\n        </Button>\r\n    );\r\n}*/\r\n\r\nexport function mainView(item, onEffectClick) {\r\n    return (\r\n        <>\r\n            {idNameRow(item.id, item.name)}\r\n            {getItemDescription(item.dnam_desc)}\r\n            {getItemDescription(item.desc)}\r\n            {getWeight(item)}\r\n            <ConsumableTagsView className=\"pt-2\" tags={item.tags} color='blue' title=\"Tags\" />\r\n            <ConsumableTagsView className=\"pt-2\" color='magenta' tags={item.effectTags} title=\"Effect Tags\" />\r\n            {getAddictionView(item, onEffectClick)}\r\n            <Divider className=\"mt-2 mb-0\"><small>Effects</small></Divider>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction detailsView(alchemy, onEffectClick) {\r\n    return (\r\n        <>\r\n            {getEffects(alchemy.effects, onEffectClick)}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function AlchemyCompactView(props) {\r\n    // const [isMain, setIsMain] = useState(true);\r\n    const alchemy = props.alchemy;\r\n    // const view = (isMain) ? mainView(alchemy, props.onEffectClick, isMain, setIsMain) : detailsView(alchemy, props.onEffectClick, isMain, setIsMain);\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-center mb-3\">\r\n                <Tag bordered={false} color=\"volcano\"><b>{alchemy.full}</b></Tag>\r\n            </div>\r\n            {mainView(alchemy, props.onEffectClick)}\r\n            {detailsView(alchemy, props.onEffectClick)}\r\n        </>\r\n    );\r\n}","import { buildTextBlock, getEffectButton, getNameByLabel, buildActor, getVMADButton, getGlobValue } from '../../helpers/EffectViewHelper';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n// float, bool, int, string, object, array_obj, array_int, struct, struct_array\r\nfunction buildBody(vmad, id, onEffectClick) {\r\n    const result = [];\r\n    for (let i = 0; i < vmad.length; i++) {\r\n        const obj = vmad[i];\r\n        const type = obj.type;\r\n        const vmadId = obj.name + i + id;\r\n        if (type === \"float\" || type === \"bool\" || type === \"int\" || type === \"string\") {\r\n            result.push(<div key={i}>{textBlock(obj.name, obj.value, obj.script_name)}</div>);\r\n        } else if (type === \"obj\") {\r\n            result.push(<div key={i}>{objView(obj.value, obj.name, obj.script_name, onEffectClick)}</div>);\r\n        } else if (type === \"array_obj\") {\r\n            result.push(<div key={i}>{objArrayView(obj, onEffectClick)}</div>);\r\n        } else if (type === \"struct\") {\r\n            result.push(<div key={i}><b>{obj.name} {obj.type}</b></div>);\r\n        } else if (type === \"struct_array\") {\r\n            result.push(<div key={i}>{structArrayView(obj, vmadId, onEffectClick)}</div>);\r\n        } else {\r\n            result.push(<div key={i}><b>{obj.name} {obj.type}</b></div>);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction textBlock(header, text, footer) {\r\n    return buildTextBlock(text, header, <div className=\"d-flex justify-content-end pe-1\">{footer}</div>, \"mt-1 mb-1\", \"#003112\", \"#c8ffdc\");\r\n}\r\n\r\n/* TODO: Integrate Struct View\r\nfunction vmadStruct(obj, vmad, id, onEffectClick) {\r\n    return (\r\n        <div key={id} className=\"mt-1 mb-1 p-1\" style={{borderWidth: '1px', borderStyle: 'solid', borderColor: '#ffd560', backgroundColor: '#fff4d7'}}>\r\n            <div className=\"d-flex justify-content-center\"><small><b style={{color: '#5e4500'}}>{obj.name}</b></small></div>\r\n            {getVMADButton(id, vmad, onEffectClick)}\r\n        </div>\r\n    )\r\n}*/\r\n\r\nfunction objArrayView(objArray, onEffectClick) {\r\n    const result = [];\r\n    const objs = objArray.value;\r\n    for (let i = 0; i < objs.length; i++) {\r\n        const obj = objs[i];\r\n        result.push(<div key={i}>{objView(obj, objArray.name, objArray.script_name, onEffectClick)}</div>);\r\n    }\r\n    return (\r\n        <div className=\"mt-1 mb-1 p-1 pb-0\" style={{borderWidth: '1px', borderStyle: 'solid', borderColor: '#61faff', backgroundColor: '#eafdff'}}>\r\n            {result}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction structArrayView(obj, id, onEffectClick) {\r\n    const result = [];\r\n    const vmads = obj.value;\r\n    for (let i = 0; i < vmads.length; i++) {\r\n        const vmad = vmads[i];\r\n        const key = id + i;\r\n        result.push(<div key={key}>{getVMADButton(key, vmad, onEffectClick, \"VMAD \" + (i + 1))}</div>);\r\n    }\r\n    return (\r\n        <div className=\"mt-1 mb-1 p-1 pb-0\" style={{borderWidth: '1px', borderStyle: 'solid', borderColor: '#61faff', backgroundColor: '#eafdff'}}>\r\n            <div className=\"d-flex justify-content-center\"><small><b style={{color: '#003e3e'}}>{obj.name}</b></small></div>\r\n            {result}\r\n            <div style={{fontSize: '0.7rem'}} className=\"d-flex justify-content-end pt-1\">{obj.script_name}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction effectButtonView(obj, name, scriptName, onEffectClick) {\r\n    return (\r\n        <div className=\"mt-1 mb-1 p-1 pb-0\" style={{borderWidth: '1px', borderStyle: 'solid', borderColor: '#ffd560', backgroundColor: '#fff4d7'}}>\r\n            <div className=\"d-flex justify-content-center\"><small><b style={{color: '#5e4500'}}>{name}</b></small></div>\r\n            {getEffectButton(obj.id, onEffectClick)}\r\n            {getScriptNameView(scriptName)}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getScriptNameView(scriptName) {\r\n    if (!scriptName) {\r\n        return (<></>);\r\n    }\r\n    return (<div style={{fontSize: '0.7rem'}} className=\"d-flex justify-content-end pt-1\">{scriptName}</div>);\r\n}\r\n\r\nfunction objView(obj, name, scriptName, onEffectClick) {\r\n    if (obj.label === 'SPEL' || obj.label === 'MGEF' || obj.label === 'PERK' || obj.label === 'ALCH') {\r\n        return effectButtonView(obj, name, scriptName, onEffectClick);\r\n    } else if (obj.label === 'AVIF') {\r\n        return buildActor(obj, name, getScriptNameView(scriptName));\r\n    } else if (obj.label === 'GLOB') {\r\n        return getGlobValue(obj, name, getScriptNameView(scriptName));\r\n    }\r\n    return textBlock(name, getNameByLabel(obj.label) + \" - (\" + name + \" / \" + obj.id + \")\", scriptName);\r\n}\r\n\r\nfunction buildView(vmad, id, onEffectClick) {\r\n    return (\r\n        <Card className=\"mt-1 mb-1 m-0\">\r\n            <Card.Header className='pt-0 pb-0'>\r\n                <b><small>VMAD</small></b>\r\n            </Card.Header>\r\n            <Card.Body className='p-1'>\r\n                {buildBody(vmad, id, onEffectClick)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function VMADCompactView(props) {\r\n    const vmad = props.vmad.vmad;\r\n    const id = props.vmad.id;\r\n    return (\r\n        <>\r\n            {buildView(vmad, id, props.onEffectClick)}\r\n        </>\r\n    );\r\n}","import { getEffect, getVMADObject, clearVMADObjects } from '../EffectProvider';\r\nimport { useState, useRef } from 'react';\r\nimport PerkCardCompactView from '../../perkCard/view/PerkCardCompactView';\r\nimport PerkCompactView from '../../perk/view/PerkCompactView';\r\nimport SpellCompactView from '../../spell/view/SpellCompactView';\r\nimport EffectCompactView from '../../effect/view/EffectCompactView';\r\nimport AlchemyCompactView from '../../consumables/view/AlchemyCompactView';\r\nimport VMADCompactView from '../../vmad/view/VMADCompactView';\r\nimport { getItem } from '../../consumables/view/ConsumableItems';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nfunction effectView(effect, onEffectClick, backButton) {\r\n    const label = effect['label'];\r\n    if (label === \"PCRD\") {\r\n        return (\r\n            <div>\r\n                <PerkCardCompactView perkCard={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </div>\r\n        );\r\n    } else if (label === \"PERK\") {\r\n        return (\r\n            <>\r\n                <PerkCompactView perk={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"SPEL\") {\r\n        return (\r\n            <>\r\n                <SpellCompactView spell={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"MGEF\") {\r\n        return (\r\n            <>\r\n                <EffectCompactView effect={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"VMAD\") {\r\n        return (\r\n             <>\r\n                <VMADCompactView vmad={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"ENCH\") {\r\n        return (\r\n            <>\r\n                ENCHANTMENT\r\n                {backButton}\r\n            </>\r\n        );\r\n    } else if (label === \"ALCH\") {\r\n        return (\r\n            <>\r\n                <AlchemyCompactView alchemy={effect} onEffectClick={onEffectClick} />\r\n                {backButton}\r\n            </>\r\n        )\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getEffectItem(viewIdStackRef, startItem) {\r\n    const lastViewIdIndex = viewIdStackRef.current.length - 1;\r\n    if (lastViewIdIndex > -1) {\r\n        const id = viewIdStackRef.current[lastViewIdIndex];\r\n        if (id.startsWith(\"vmad\")) {\r\n            return getVMADObject(id);\r\n        }\r\n        const effect = getEffect(id);\r\n        if (!effect) {\r\n            return getItem(id);\r\n        }\r\n        return effect;\r\n    }\r\n    if (typeof startItem === typeof '') {\r\n        return getEffect(startItem);\r\n    }\r\n    return startItem;\r\n}\r\n\r\nfunction getBackButton(viewIdStackRef, onBackClick) {\r\n    if (viewIdStackRef.current.length > 0) {\r\n        return (<Button className=\"w-100 mt-2 mb-0 p-1\" variant=\"blue-white-border\" onClick={onBackClick}>Back</Button>);\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nexport default function StackEffectView(props) {\r\n    const [,setRedraw] = useState(null);\r\n    const viewIdStackRef = useRef([]);\r\n    const startItemIdRef = useRef(null);\r\n    if (!startItemIdRef.current) { // Was closed and opened\r\n        clearVMADObjects();\r\n        startItemIdRef.current = props.item.id;\r\n    } else if (startItemIdRef.current !== props.item.id) { // Re-Rendered but new item was chosen\r\n        startItemIdRef.current = props.item.id;\r\n        clearVMADObjects();\r\n        viewIdStackRef.current = [];\r\n    }\r\n    \r\n    function onBackClick(e) {\r\n        const newLength = viewIdStackRef.current.length - 1;\r\n        viewIdStackRef.current.length = (newLength < 0) ? 0 : newLength;\r\n        setRedraw({});\r\n    }\r\n    function onEffectClick(e) {\r\n        const id = e.currentTarget.name;\r\n        viewIdStackRef.current.push(id);\r\n        setRedraw({});\r\n    }\r\n    const effect = getEffectItem(viewIdStackRef, props.item);\r\n    const backButton = getBackButton(viewIdStackRef, onBackClick);\r\n    return effectView(effect, onEffectClick, backButton);\r\n}","import ADRow from \"./ADRow\";\r\nimport { memo } from 'react';\r\n\r\n\r\nconst marks100P = {\r\n    marks: {\r\n        0: '0%',\r\n        20: '20%',\r\n        40: '40%',\r\n        60: '60%',\r\n        80: '80%',\r\n        100: '100%'\r\n    },\r\n    min: 0,\r\n    max: 100,\r\n    step: 1,\r\n    defaultValue: 0,\r\n};\r\n\r\nconst marks200 = {\r\n    marks: {\r\n        0: '0%',\r\n        40: '40%',\r\n        80: '80%',\r\n        120: '120%',\r\n        160: '160%',\r\n        200: '200%',\r\n    },\r\n    min: 0,\r\n    max: 200,\r\n    step: 1,\r\n    defaultValue: 0,\r\n};\r\n\r\nconst qTDB = \"Effect that increases your total damage like (Executioner, Tenderizer, TOFT, Follow Through, Legendary Explosion). For example: a weapon with 43 base damage \" +\r\n\" and 200 its total damage will be boosted by +50% BDB up to 221.5 whereas +50% TDB gives 300.\"\r\n\r\nconst AdditionalTable = memo(function AdditionalTable({additionalDamages, setAdditionalDamages}) {\r\n    console.log(\"AdditionalTable\");\r\n    function updateAdditionalDamages() {\r\n        setAdditionalDamages({\r\n            ...additionalDamages,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ADRow additionalDamage={additionalDamages.tdb} updateAdditionalDamages={updateAdditionalDamages} marks={marks100P} text={qTDB}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.ballisticBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.energyBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.fireBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.poisonBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.coldBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.radBDB} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n            <ADRow additionalDamage={additionalDamages.damageToCreature} updateAdditionalDamages={updateAdditionalDamages} marks={marks200}></ADRow>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default AdditionalTable;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport AdditionalTable from \"../additional/AdditionalTable\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst AdditionalDamage = memo(function AdditionalDamage({additionalDamages, setAdditionalDamages, showStatRef, setShowStat}) {\r\n    console.log(\"AdditionalDamage\");\r\n    const openStat = (e) => {\r\n        setShowStat(!showStatRef.current);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"3\">\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">Additional Damage</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"p-auto\">\r\n                    <AdditionalTable additionalDamages={additionalDamages} setAdditionalDamages={setAdditionalDamages}></AdditionalTable>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default AdditionalDamage;\r\n","import { useState } from 'react';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\n\r\nfunction buildOverlay(show, setShow, target, props) {\r\n    function onHide(e) {\r\n        setShow(false);\r\n    };\r\n    const body = (show) ? props.bodyBuilder(props.id) : (<></>);\r\n    const header = (show) ? props.headerBuilder(props.title) : (<></>);\r\n    return (\r\n        <Overlay\r\n            show={show}\r\n            target={target}\r\n            rootClose='true'\r\n            onHide={onHide}\r\n            placement={props.placement}>\r\n            <Popover id=\"info-popover\" className=\"popover-adjustable2\">\r\n                <Popover.Header>\r\n                    {header}\r\n                </Popover.Header>\r\n                <Popover.Body className=\"p-2\" style={props.popoverBodyStyle}>\r\n                    {body}\r\n                </Popover.Body>\r\n            </Popover>\r\n        </Overlay>\r\n    );\r\n\r\n}\r\n\r\nexport default function InfoPopover(props) {\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n    let sign = \"!\";\r\n    if (props.sign) {\r\n        sign = props.sign;\r\n    }\r\n    function handleClick(e) {\r\n        setShow(!show);\r\n        setTarget(e.target);\r\n    };\r\n    const overlay = (show) ? buildOverlay(show, setShow, target, props) : (<></>);\r\n    return (\r\n        <div className={props.className}>\r\n            <Badge bg=\"danger\" pill onClick={handleClick} style={{cursor: \"pointer\"}}>{sign}</Badge>\r\n            {overlay}\r\n        </div>\r\n    );\r\n}","import Card from 'react-bootstrap/Card';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport StackEffectView from '../helpers/views/StackEffectView';\r\nimport { useEffect, memo, useState } from 'react';\r\nimport { applyBoost, applyStuff } from '../entities/EStuffBoost';\r\nimport InfoPopover from '../viewComponents/popover/InfoPopover';\r\nimport { getItem } from '../consumables/view/ConsumableItems';\r\nimport { buildRandomEmojiString, getRandomEmoji } from '../helpers/StringHelpers';\r\n\r\n\r\n// Find dynamically used items to recalculate them\r\nfunction recalculateDynamicItems(foodPref, item, stuffBoost, setStuffBoost, player) {\r\n    if (item.used && applyBoost(foodPref, item, stuffBoost, player, false)) {\r\n        setStuffBoost({...stuffBoost});\r\n    }\r\n}\r\n\r\nfunction getPopoverInfoBody(popoverId) {\r\n    const item = getItem(popoverId);\r\n    if (item) {\r\n        return (\r\n            <StackEffectView item={item} />\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getPopoverInfoHeader(title) {\r\n    return (<b>{title}</b>);\r\n}\r\n\r\nconst EffectItem = memo(function EffectItem({categoryName, foodPref, setFoodPref, player, item, height, picHeight, imPadding, items, setItems, colorName, colorValue, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched}) {\r\n    const [, setUpdate] = useState([]);\r\n    useEffect(() => {\r\n        recalculateDynamicItems(foodPref, item, stuffBoost, setStuffBoost, player);\r\n    }, [player, foodPref]);\r\n    function cardClick(e) {\r\n        item.used = !item.used;\r\n        setUpdate([]);\r\n        if (item.id === \"carnivore_serum\") {\r\n            foodPref.carnivore = item.used;\r\n            setFoodPref({...foodPref});\r\n        } else if (item.id === \"herbivore_serum\") {\r\n            foodPref.herbivore = item.used;\r\n            setFoodPref({...foodPref});\r\n        }\r\n        applyStuff(foodPref, item, stuffBoost, player);\r\n\r\n        // Say to parent to recalculate\r\n        setConsumableTouched([]);\r\n\r\n        // Do not say to react to update view for every boost item\r\n        setItems(items);\r\n        setStuffBoost(stuffBoost);\r\n    }\r\n    const boosts = item.boosts.map((boost) => {\r\n        let tail = \"\";\r\n        if (boost.valueType === \"percent\") {\r\n            tail = \"%\"\r\n        } else if (boost.valueType === \"multiplier\") {\r\n            tail = \"x\"\r\n        }\r\n        let sign = \"\";\r\n        if (boost.value > 0 && boost.valueType !== \"multiplier\") {\r\n            sign = \"+\";\r\n        }\r\n        const value = (item.used) ? sign + boost.value + tail : \"-\";\r\n        return keyValueRow(boost.description, value, colorName, colorValue, 0);\r\n    });\r\n    const emptyRows = maxRows - boosts.length;\r\n    //if (!item.emojiStrings) {\r\n    const result = []\r\n    for (let i = 0; i < emptyRows; i++) {\r\n        result.push(buildRandomEmojiString(3, 3));\r\n    }\r\n    item.emojiStrings = result;\r\n    //}\r\n    const secondEmoji = (item.used) ? getRandomEmoji() : \"-\";\r\n    for (let i = 0; i < item.emojiStrings.length; i++) {\r\n        boosts.push(keyValueRow(item.emojiStrings[i], secondEmoji, colorName, colorValue, 0));\r\n    }\r\n    const filter = item.used ? \"grayscale(0%)\" : \"grayscale(90%)\";\r\n    const outline = item.used ? \"shadow-outline-gold\" : \"shadow-outline-unselected\";\r\n    const head = (useHeader) ? (<Card.Header className='d-flex justify-content-center p-0 m-0 pt-1 pb-1'><div style={{textWrap: 'nowrap', overflow: 'hidden', textAlign: 'center', width: '100%', fontSize: '0.75rem', backgroundColor: '#f2efe1', fontWeight: 'bold'}}>{item.name}</div></Card.Header>) : (<></>);\r\n    const maxPopoverHeight = document.documentElement.style.getPropertyValue('--screen-modal-body-height-60');\r\n    return (\r\n        <Card key={item.id} className={outline} style={{width: '10.5rem', height: height, filter: filter }}>\r\n            <Card.Img variant='top' style={{cursor: \"pointer\", height: picHeight, padding: imPadding}} src={getPicture(item.imName)} onClick={cardClick} />\r\n                {head}\r\n            <Card.Body onClick={cardClick} style={{cursor: \"pointer\"}} className=\"ps-1 pe-1 p-0 mb-1\">\r\n                {boosts}\r\n            </Card.Body>\r\n            <Card.Footer className=\"p-1\">\r\n                <InfoPopover id={item.gameId} title={item.name} sign='?' className=\"d-flex justify-content-end\" popoverBodyStyle={{maxHeight: maxPopoverHeight, overflow: 'auto'}} headerBuilder={getPopoverInfoHeader} bodyBuilder={getPopoverInfoBody} placement='top' />\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default EffectItem;\r\n","import Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport EffectItem from '../boostStuff/EffectItem';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { memo } from 'react';\r\n\r\n\r\nfunction couple(key, categoryName, foodPref, setFoodPref, player, first, second, items, setItems, colorName, colorValue, cardHeight, picHeight, imPadding, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched) {\r\n    if (first === null && second === null) {\r\n        return(<></>);\r\n    } else if (second === null) {\r\n        return (\r\n            <Col key={key} className='p-0 ms-1 me-1 m-0 d-flex justify-content-center'>\r\n                <Stack className='pb-2 m-auto' direction=\"horizontal\" gap={2}>\r\n                    <EffectItem key={first.id} categoryName={categoryName} foodPref={foodPref} setFoodPref={setFoodPref} player={player} item={first} height={cardHeight} picHeight={picHeight} imPadding={imPadding} items={items} setItems={setItems} colorName={colorName} colorValue={colorValue} getPicture={getPicture} useHeader={useHeader} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={maxRows} setConsumableTouched={setConsumableTouched} />\r\n                </Stack>\r\n            </Col>\r\n        );\r\n    }\r\n    return (\r\n        <Col key={key} className='p-0 ms-1 me-1 m-0 d-flex justify-content-center'>\r\n            <Stack className='pb-2 m-auto' direction=\"horizontal\" gap={2}>\r\n                <EffectItem key={first.id} categoryName={categoryName} foodPref={foodPref} setFoodPref={setFoodPref} player={player} item={first} height={cardHeight} picHeight={picHeight} imPadding={imPadding} items={items} setItems={setItems} colorName={colorName} colorValue={colorValue} getPicture={getPicture} useHeader={useHeader} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={maxRows} setConsumableTouched={setConsumableTouched} />\r\n                <EffectItem key={second.id} categoryName={categoryName} foodPref={foodPref} setFoodPref={setFoodPref} player={player} item={second} height={cardHeight} picHeight={picHeight} imPadding={imPadding} items={items} setItems={setItems} colorName={colorName} colorValue={colorValue} getPicture={getPicture} useHeader={useHeader} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={maxRows} setConsumableTouched={setConsumableTouched} />\r\n            </Stack>\r\n        </Col>\r\n    );\r\n}\r\n\r\nconst EffectItems = memo(function EffectItems({categoryName, foodPref, setFoodPref, player, items, setItems, colorName, colorValue, cardHeight, picHeight, imPadding, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched}) {\r\n    console.log(\"EffectItems \" + categoryName);\r\n    const size = items.length;\r\n    let k = 0;\r\n    let rItems = [];\r\n    let key = 0;\r\n    while (size > 0 && true) {\r\n        const item1 = items[k++];\r\n        let item2 = null;\r\n        if (k < size) {\r\n            item2 = items[k++];\r\n        }\r\n        rItems.push(couple(key++, categoryName, foodPref, setFoodPref, player, item1, item2, items, setItems, colorName, colorValue, cardHeight, picHeight, imPadding, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched));\r\n        if (k >= size) {\r\n            break;\r\n        }\r\n    }\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"pb-0 mb-0\">\r\n                {rItems}\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default EffectItems;","import Accordion from 'react-bootstrap/Accordion';\r\nimport EffectItems from \"./EffectItems\";\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nexport default function EffectView({foodPref, setFoodPref, player, showStat, setShowStat, eventKey, categoryName, items, setItems, colorName, colorValue, cardHeight, picHeight, imPadding, getPicture, useHeader, stuffBoost, setStuffBoost, maxRows, setConsumableTouched}) {\r\n    const openStat = (e) => {\r\n        setShowStat(!showStat);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey={eventKey}>\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">{categoryName}</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1 pb-1\">\r\n                    <EffectItems categoryName={categoryName} foodPref={foodPref} setFoodPref={setFoodPref} player={player} items={items} setItems={setItems} colorName={colorName} colorValue={colorValue} cardHeight={cardHeight} picHeight={picHeight} imPadding={imPadding} getPicture={getPicture} useHeader={useHeader} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={maxRows} setConsumableTouched={setConsumableTouched}></EffectItems>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\n\r\n\r\nfunction buildPopover() {\r\n    return (\r\n        <Popover className=\"popover-adjustable\">\r\n            <Popover.Header as=\"h3\"><strong>Team</strong></Popover.Header>\r\n            <Popover.Body>\r\n                <p>When 'Strange in numbers' is activated the calculator considers that you have at least one teammate and your teammates have mutations you have.</p>\r\n                <p>Not all effects are presented in consumables section, usually only those whose values are important for damage. More comprehensive list of consumables with details can be seen under 'Main' section.</p>\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nfunction qa() {\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={buildPopover()}>\r\n            <Button variant=\"danger\">?</Button>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nfunction ANRow({player, setPlayer, boostDamage, setBoostDamage}) {\r\n    function changeTeam(e) {\r\n        player.team = !player.team;\r\n        boostDamage.toft.displayed_value = (player.team) ? boostDamage.toft.value : 0.0;\r\n        setPlayer({...player});\r\n        setBoostDamage({...boostDamage});\r\n    }\r\n    const value = (player.team && boostDamage.strange_in_numbers.is_used) ? 25.0: 0;\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Card className=\"mb-2 pt-2 pb-2 ps-3 pe-3\">\r\n                <Col>\r\n                    <InputGroup className=\"mb-1\">\r\n                        <InputGroup.Text style={{ width: '2.5rem' }} >\r\n                            <UCheckbox onChange={changeTeam} checked={player.team}></UCheckbox>\r\n                        </InputGroup.Text>\r\n                        <InputGroup.Text style={{ width: '6.9rem' }}>\r\n                            <strong>👨‍👩‍👧‍👦 Team</strong>\r\n                        </InputGroup.Text>\r\n                        {qa()}\r\n                        <InputGroup.Text style={{width: '4.6rem'}}>\r\n                            <div className=\"badge bg-info\" style={{width: '3rem'}}>{value}</div>\r\n                        </InputGroup.Text>\r\n                    </InputGroup>\r\n                </Col>\r\n                </Card>\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ANRow;","import Accordion from 'react-bootstrap/Accordion';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ANRow from \"./ANRow\";\r\nimport ADRow from \"../additional/ADRow\";\r\n\r\n/*\r\nconst marks100 = {\r\n    marks: {\r\n        5: '5',\r\n        20: '20',\r\n        40: '40',\r\n        60: '60',\r\n        80: '80',\r\n        100: '100'\r\n    },\r\n    min: 5,\r\n    max: 100,\r\n    step: 0.25,\r\n    defaultValue: 5,\r\n};\r\n*/\r\n\r\nconst marks50 = {\r\n    marks: {\r\n        5: '5',\r\n        10: '10',\r\n        20: '20',\r\n        30: '30',\r\n        40: '40',\r\n        50: '50'\r\n    },\r\n    min: 5,\r\n    max: 50,\r\n    step: 0.25,\r\n    defaultValue: 5,\r\n};\r\n\r\nconst marksH = {\r\n    marks: {\r\n        5: '5%',\r\n        20: {\r\n            style: {\r\n                color: '#f50',\r\n            },\r\n            label: <strong>20%</strong>,\r\n        },\r\n        40: '40%',\r\n        60: '60%',\r\n        80: '80%',\r\n        100: '100%'\r\n    },\r\n    min: 5,\r\n    max: 100,\r\n    step: 1,\r\n    defaultValue: 100,\r\n};\r\n\r\nconst General = function General({eventKey, categoryName, showStat, setShowStat, player, setPlayer, boostDamage, setBoostDamage, playerStats, setPlayerStats}) {\r\n    const openStat = (e) => {\r\n        setShowStat(!showStat);\r\n        e.stopPropagation();\r\n    }\r\n    function updateAdditionalDamages() {\r\n        setPlayerStats({\r\n            ...playerStats,\r\n        });\r\n    };\r\n\r\n    function changeHealth() {\r\n        boostDamage.nerd_rage.displayed_value = (boostDamage.nerd_rage.is_used && player.health.value <= 20.0) ? boostDamage.nerd_rage.value : 0.0;\r\n        setPlayer({...player});\r\n        setBoostDamage({...boostDamage});\r\n    };\r\n\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey={eventKey}>\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">{categoryName}</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1 pb-1\">\r\n                    <Container fluid className=\"ps-0 pe-0\">\r\n                        <Card className=\"text-center mb-2\">\r\n                            <Card.Body className=\"pb-2\">\r\n                                <ANRow player={player} setPlayer={setPlayer} boostDamage={boostDamage} setBoostDamage={setBoostDamage}></ANRow>\r\n                                <ADRow additionalDamage={player.health} updateAdditionalDamages={changeHealth} marks={marksH}></ADRow>\r\n                                <ADRow additionalDamage={playerStats.strength} updateAdditionalDamages={updateAdditionalDamages} marks={marks50}></ADRow>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Container>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default General;","import { memo } from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport EffectView from '../boostStuff/EffectView';\r\nimport General from '../boostStuff/General';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { getMagazine, getBobbleHead, getFood, getDrink, getPsycho, getSerum, getOther } from '../helpers/BoostStuffProvider';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ConsumablesBuilder from '../boostStuff/ConsumablesBuilder';\r\nimport { leftRight2 } from '../helpers/RowBuilder';\r\nimport LoadingModal from '../helpers/views/LoadingModal';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction buildLicense() {\r\n    return (\r\n        <Popover className=\"popover-adjustable\">\r\n            <Popover.Header as=\"h3\"><strong>Licensing</strong></Popover.Header>\r\n            <Popover.Body>\r\n                Image files from 'Magazines' / 'Bobble Heads' / 'Chemicals' / 'Food' / 'Drink' / 'Serums' / 'Others' sections were taken from the video game Fallout 76 or from websites created and owned by Bethesda Softworks, the copyright of which is held by Bethesda Softworks, or were released to the press for promotional purposes by the same.\r\n                The use of images to illustrate items of the game concerning the subject of the images in question is believed to qualify as fair use under United States copyright law, as such display does not significantly impede the right of the copyright holder to sell the copyrighted material and is not being used to generate profit.\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nfunction getInfo() {\r\n    return (\r\n        <div className=\"center-text\">\r\n            <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={buildLicense()}>\r\n                <Badge variant=\"black\" pill>!</Badge>\r\n            </OverlayTrigger>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst BoostStuff = memo(function BoostStuff({foodPref, setFoodPref, magazines, setMagazines, bobbleHeads, setBobbleHeads, food, setFood, drink, setDrink, psycho, setPsycho, serum, setSerum, others, setOthers, player, setPlayer, stuffBoost, setStuffBoost, showStat, setShowStat, boostDamage, setBoostDamage, playerStats, setPlayerStats, setConsumableTouched}) {\r\n    const [loading, setLoading] = useState(false);\r\n    function onClick(e) {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            player.health.value = 100;\r\n            player.team = false;\r\n            setPlayer({...player});\r\n\r\n            playerStats.luck.value = 1;\r\n            playerStats.strength.value = 5;\r\n            setPlayerStats({...playerStats});\r\n\r\n            const [foodPref, allStuffBoosts, consumables] = ConsumablesBuilder.buildFromList([], player);\r\n            ConsumablesBuilder.setConsumableItems(consumables, setMagazines, setBobbleHeads, setFood, setDrink, setPsycho, setSerum, setOthers);\r\n            setFoodPref({...foodPref});\r\n            setStuffBoost({...allStuffBoosts});\r\n            setLoading(false);\r\n        }, 100);\r\n    }\r\n    return (\r\n        <Accordion>\r\n            <LoadingModal show={loading} />\r\n            <div className=\"ps-3 pe-3 mb-2\">\r\n                {leftRight2(getInfo(), <Button size=\"sm\" variant=\"warning\" onClick={onClick}><b className=\"best-button-shadow\">Reset</b></Button>)}\r\n            </div>\r\n            <General eventKey=\"0\" categoryName={\"General\"} showStat={showStat} setShowStat={setShowStat} player={player} setPlayer={setPlayer} boostDamage={boostDamage} setBoostDamage={setBoostDamage} playerStats={playerStats} setPlayerStats={setPlayerStats}></General>\r\n            <EffectView eventKey=\"1\" player={player} showStat={showStat} setShowStat={setShowStat} categoryName={\"Magazines\"} items={magazines} setItems={setMagazines} colorName={\"orange\"} colorValue={\"orange\"} cardHeight={'17.2rem'} picHeight={'12rem'} getPicture={getMagazine} useHeader={false} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={2} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"2\" showStat={showStat} setShowStat={setShowStat} categoryName={\"Bobble Heads\"} items={bobbleHeads} setItems={setBobbleHeads} colorName={\"blue\"} colorValue={\"blue\"} cardHeight={'13.4rem'} picHeight={'8rem'} getPicture={getBobbleHead} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={1} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"3\" showStat={showStat} setShowStat={setShowStat} categoryName={\"Chemicals\"} items={psycho} setItems={setPsycho} colorName={\"magenta\"} colorValue={\"magenta\"} cardHeight={'16.9rem'} picHeight={'8.5rem'} getPicture={getPsycho} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={3} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"4\" foodPref={foodPref} player={player} showStat={showStat} setShowStat={setShowStat} categoryName={\"Food\"} items={food} setItems={setFood} colorName={\"volcano\"} colorValue={\"volcano\"} cardHeight={'14.3rem'} picHeight={'9rem'} getPicture={getFood} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={1} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"5\" player={player} showStat={showStat} setShowStat={setShowStat} categoryName={\"Drink\"} items={drink} setItems={setDrink} colorName={\"volcano\"} colorValue={\"volcano\"} cardHeight={'15.9rem'} picHeight={'9rem'} getPicture={getDrink} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={2} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"6\" foodPref={foodPref} setFoodPref={setFoodPref} player={player} showStat={showStat} setShowStat={setShowStat} categoryName={\"Serums\"} items={serum} setItems={setSerum} colorName={\"green\"} colorValue={\"green\"} cardHeight={'14.7rem'} picHeight={'8rem'} imPadding='1rem 2.5rem' getPicture={getSerum} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={2} setConsumableTouched={setConsumableTouched} />\r\n            <EffectView eventKey=\"7\" showStat={showStat} setShowStat={setShowStat} categoryName={\"Others\"} items={others} setItems={setOthers} colorName={\"default\"} colorValue={\"indigo\"} cardHeight={'13.3rem'} picHeight={'8rem'} getPicture={getOther} useHeader={true} stuffBoost={stuffBoost} setStuffBoost={setStuffBoost} maxRows={1} setConsumableTouched={setConsumableTouched} />\r\n        </Accordion>\r\n    );\r\n});\r\n\r\nexport default BoostStuff;","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport '../css/style.css'\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { WarningPopover } from '../helpers/WarningPopover';\r\nimport GroupView from '../helpers/views/GroupView';\r\nimport { calculateSpecial } from './BoostHelpers';\r\nimport getPerkImage from './PerkImageProvider';\r\nimport { getMark } from '../templates/calc/view/EmblemCalcRowView';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport StackEffectView from '../helpers/views/StackEffectView';\r\nimport { getPerkCard } from '../perkCard/PerkCardProvider';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\n\r\n\r\nfunction getPerkColor(category) {\r\n    return \"bg-\" + category.toLowerCase() + \"-card\";\r\n}\r\n\r\nfunction getPerkOutline(category) {\r\n    return category.toLowerCase() + \"-outline-card\";\r\n}\r\n\r\nfunction badgeIf(value, condition, onClick) {\r\n    if (condition) {\r\n        return (<Button className={\"p-1\"} onClick={onClick} style={{width: '2.5rem'}} variant=\"warning\">{value}</Button>)\r\n    }\r\n    return (<></>)\r\n}\r\n\r\nfunction checkCardConditions(card, player, setPlayer, extraDamage) {\r\n    if (card.name === \"Nerd Rage\") {\r\n        card.displayed_value = (card.is_used && player.health.value <= 20.0) ? card.value : 0.0;\r\n    } else if (card.name === \"TOFT\") {\r\n        card.displayed_value = (card.is_used && player.team) ? card.value : 0.0;\r\n    } else if (card.name === \"Follow Through\") {\r\n        card.displayed_value = (card.is_used && extraDamage.useSneak) ? card.value : 0.0;\r\n    } else {\r\n        card.displayed_value = (card.is_used) ? card.value : 0.0;\r\n    }\r\n    if (card.name === \"Party Girl / Boy\") {\r\n        if (card.displayed_value === 0) {\r\n            player.alcoholEffects = 1.0;\r\n        } else {\r\n            player.alcoholEffects = card.displayed_value;\r\n        }\r\n        setPlayer({...player});\r\n    } else if (card.name === \"Strange In Nums\") {\r\n        player.strange = card.displayed_value;\r\n        setPlayer({...player});\r\n    } else if (card.name === \"Class Freak\") {\r\n        player.freak = card.displayed_value;\r\n        setPlayer({...player});\r\n    }\r\n}\r\n\r\nfunction getItem(card, setBoostDamage, boostDamage, cardType, setCardType, xBadge=false, symbol='%', player=null, setPlayer=null, extraDamage=null) {\r\n    function onClick(e) {\r\n        changeRank();\r\n        calculateSpecial(boostDamage);\r\n        setBoostDamage({\r\n            ...boostDamage,\r\n        });\r\n    }\r\n\r\n    function changeRank() {\r\n        const rank_len = card.rank_values.length;\r\n        card.rank = card.rank % rank_len + 1;\r\n        card.value = card.rank_values[card.rank - 1] * card.x;\r\n        checkCardConditions(card, player, setPlayer, extraDamage);\r\n    }\r\n\r\n    function onClickX(e) {\r\n        card.x = card.x % card.max_x + 1;\r\n        card.value = card.rank_values[card.rank - 1] * card.x;\r\n        card.displayed_value = (card.is_used) ? card.value : 0.0;\r\n        setBoostDamage({\r\n            ...boostDamage,\r\n        });\r\n    }\r\n\r\n    function isUsed(e) {\r\n        card.is_used = e.target.checked;\r\n        checkCardConditions(card, player, setPlayer, extraDamage);\r\n        calculateSpecial(boostDamage);\r\n        setBoostDamage({\r\n            ...boostDamage,\r\n        });\r\n    }\r\n    function getInfo() {\r\n        // let info = card.info.replaceAll(\"{1}\", number).replace(\"{2}\", parseInt(number / 4)).replace(\"{3}\", parseInt(number * 2));\r\n        // info = info.replaceAll(\"{4}\", number * 3);\r\n        function onRadioClick(e) {\r\n            console.log(e);\r\n            setCardType(parseInt(e.target.value));\r\n        }\r\n        function getTypeRadio() {\r\n            if (card.id.length > 1) {\r\n                return (\r\n                    <div className=\"pt-0 pb-2 d-flex justify-content-center\">\r\n                        <BSRadio small='true' pairs={{Basic: 0, Expert: 1, Master: 2}} selectedValue={cardType} onClick={onRadioClick} />\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (<></>);\r\n            }\r\n        }\r\n        const index = (card.id.length > 1) ? cardType : 0;\r\n        return (\r\n            <>\r\n                {getTypeRadio()}\r\n                <StackEffectView item={getPerkCard(card.id[index])} />\r\n            </>\r\n        );\r\n    }\r\n    const outline = card.is_used ?  getPerkOutline(card.category) : \"\";\r\n    const w = (xBadge) ? '9rem' : '11.5rem';\r\n    const perkColor = getPerkColor(card.category);\r\n    const cName = \"btn text-start \" + perkColor;\r\n    const filter = card.is_used ? \"grayscale(0%) contrast(1.1)\" : \"grayscale(80%) contrast(1.1)\";\r\n    const imagePath = getPerkImage(card.im_name);\r\n    const header = <div className=\"d-flex center-text\">{getMark(card.im_name, imagePath, \"mt-0 mb-0 ms-0 me-3 shadow-outline-gold2\", '2rem', '1.8rem', '4px')}{card.name}</div>\r\n    const bgCardColor = getComputedStyle(document.documentElement).getPropertyValue(\"--\" + perkColor + \"-color\");\r\n    return (\r\n        <Col className=\"ps-1 pe-1\">\r\n            <GroupView className={outline}>\r\n                <InputGroup className=\"justify-content-center mb-1 mt-1 flex-nowrap\" style={{filter: filter}}>\r\n                    <InputGroup.Text className={\"ps-2 pe-2\"} >\r\n                        <UCheckbox onChange={isUsed} checked={card.is_used} checkBorderColor={bgCardColor} checkBgColor={bgCardColor}></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <Button className={cName} style={{width: w}} onClick={onClick}>\r\n                        <Badge className=\"ms-0 me-2\" bg=\"warning\">{card.cost[card.rank - 1]}</Badge>\r\n                        {card.name}\r\n                    </Button>\r\n                    {badgeIf(\"x\" + card.x, xBadge, onClickX)}\r\n                    <InputGroup.Text className={\"justify-content-center p-0\"} style={{width: '3.5rem'}}>\r\n                        <div className={\"badge \" + perkColor} style={{width: '2.7rem'}}>{card.displayed_value}{symbol}</div>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text className={\"ps-1 pe-1 p-0\"}>\r\n                        <WarningPopover element={infoButton()} message={getInfo()} header={header} className=\"popover-adjustable2\" />\r\n                    </InputGroup.Text>\r\n                </InputGroup>\r\n            </GroupView>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction infoButton() {\r\n    return (\r\n        <Button className=\"p-1\" variant=\"white\">\r\n            <strong><small>❗</small></strong>\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction BRow1({setBoostDamage, boostDamage, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.incisor, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.lock_and_load, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.martial_artist, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.scattershot, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow2({setBoostDamage, boostDamage, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.gladiator, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.heavy_gunner, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.shotgunner, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.slugger, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow3({setBoostDamage, boostDamage, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.iron_fist, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.archer, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.commando, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.rifleman, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow4({setBoostDamage, boostDamage, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.glow_sight, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.bow_before_me, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.exterminator, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.tank_killer, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow5({setBoostDamage, boostDamage, player, setPlayer, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.ground_pounder, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.tenderizer, setBoostDamage, boostDamage, cardType, setCardType, true)}\r\n            {getItem(boostDamage.party_girl_boy, setBoostDamage, boostDamage, cardType, setCardType, false, \"x\", player, setPlayer)}\r\n            {getItem(boostDamage.strange_in_numbers, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", player, setPlayer)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow6({setBoostDamage, boostDamage, player, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.stabilized, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.demolition_expert, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.science, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.nerd_rage, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", player)}\r\n        </Row>\r\n    );\r\n};\r\n\r\nfunction BRow7({setBoostDamage, boostDamage, player, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.power_user, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.adrenaline, setBoostDamage, boostDamage, cardType, setCardType, true)}\r\n            {getItem(boostDamage.gun_fu, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.covert_operative, setBoostDamage, boostDamage, cardType, setCardType, false, 'x')}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction BRow8({setBoostDamage, boostDamage, player, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.mister_sandman, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.ninja, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.guerrilla, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.gunslinger, setBoostDamage, boostDamage, cardType, setCardType)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction BRow9({setBoostDamage, boostDamage, player, setPlayer, cardType, setCardType}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.bloody_mess, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.better_criticals, setBoostDamage, boostDamage, cardType, setCardType)}\r\n            {getItem(boostDamage.class_freak, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", player, setPlayer)}\r\n            {getItem(boostDamage.toft, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", player, setPlayer)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction BRow10({setBoostDamage, boostDamage, cardType, setCardType, extraDamage}) {\r\n    return (\r\n        <Row>\r\n            {getItem(boostDamage.follow_through, setBoostDamage, boostDamage, cardType, setCardType, false, \"%\", null, null, extraDamage)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport {BRow1, BRow2, BRow3, BRow4, BRow5, BRow6, BRow7, BRow8, BRow9, BRow10};","import Container from 'react-bootstrap/Container';\r\nimport {BRow1, BRow2, BRow3, BRow4, BRow5, BRow6, BRow7, BRow8, BRow9, BRow10} from \"./BRows\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport { memo } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport { getRowWithImage } from '../helpers/WTypeDropdown';\r\nimport PerkCardBuilder from './PerkCardBuilder';\r\nimport { useState } from 'react';\r\n\r\nconst popover = (\r\n    <Popover className=\"popover-adjustable\">\r\n        <Popover.Header as=\"h3\">Perks</Popover.Header>\r\n        <Popover.Body>\r\n            'Incisor' is applied to 'All / Melee / Unarmed' weapon's type.\r\n            'Stabilized' is applied to 'All / Heavy' weapon's type.\r\n            'Tank Killer' is applied to 'All / Pistol / Rifle' weapon's type.\r\n            'TOFT' can reduce ballistic resistance of a creature when it hits back so you have to handle this manually\r\n            under the 'Creature' section if you want to see the exact damage number as in the game.\r\n        </Popover.Body>\r\n    </Popover>\r\n);\r\n\r\nfunction getStatBadge(name, value) {\r\n    const cParams = 'ms-1 me-1 mt-0 mb-0 pt-1 pb-1 bg-' + name + \"-card shadow-outline\";\r\n    const letter = name.charAt(0).toUpperCase();\r\n    const color = (value > 15) ? \"red\" : \"black\";\r\n    return (\r\n        <Badge className={cParams} style={{width: '2.5rem'}}><div style={{fontSize: '1rem' , fontWeight: 'bold'}}>{letter}</div>\r\n            <Badge className=\"mt-1 p-auto\" bg=\"white\" text=\"black\"><div style={{fontSize: '0.75rem' , fontWeight: 'bold', color: color}}>{value}</div></Badge>\r\n        </Badge>\r\n    );\r\n}\r\n\r\nfunction getDropdown(setBoostDamage, player, setPlayer) {\r\n    function onSelect(e) {\r\n        PerkCardBuilder.build(e, setBoostDamage, player, setPlayer);\r\n    }\r\n    return (\r\n        <DropdownButton className=\"d-flex justify-content-center mb-3\" onSelect={onSelect} title={<small><b>Choose a build</b></small>} variant=\"warning\">\r\n        <Dropdown.Item eventKey=\"Reset\">{getRowWithImage(\"Reset\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Heavy\">{getRowWithImage(\"Heavy\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Heavy Explosive\">{getRowWithImage(\"Heavy\", \"Heavy Explosive\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Heavy FullHouse\">{getRowWithImage(\"Heavy\", \"Heavy FullHouse\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Shotgun\">{getRowWithImage(\"Shotgun\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Automatic Rifle\">{getRowWithImage(\"Rifle\", \"Automatic Rifle\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Non-Automatic Rifle\">{getRowWithImage(\"Rifle\", \"Non-Automatic Rifle\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Automatic Pistol\">{getRowWithImage(\"Pistol\", \"Automatic Pistol\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Non-Automatic Pistol\">{getRowWithImage(\"Pistol\", \"Non-Automatic Pistol\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Bow\">{getRowWithImage(\"Bow\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Melee One-Handed\">{getRowWithImage(\"Melee\", \"Melee One-Handed\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Melee Two-Handed\">{getRowWithImage(\"Melee\", \"Melee Two-Handed\")}</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"Unarmed\">{getRowWithImage(\"Unarmed\")}</Dropdown.Item>\r\n        </DropdownButton>\r\n    );\r\n}\r\n\r\nconst BoostTable = memo(function BoostTable({player, setPlayer, setBoostDamage, boostDamage, extraDamage}) {\r\n    console.log(\"BoostTable\");\r\n    const [cardType, setCardType] = useState(0); // Basic Expert Master\r\n    return (\r\n        <Container className=\"ps-0 pe-0\">\r\n            {getDropdown(setBoostDamage, player, setPlayer)}\r\n            <Card className=\"mb-3\">\r\n                <Card.Header className='ps-3'>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        {getStatBadge(\"strength\", boostDamage.special.strength)}\r\n                        {getStatBadge(\"perception\", boostDamage.special.perception)}\r\n                        {getStatBadge(\"endurance\", boostDamage.special.endurance)}\r\n                        {getStatBadge(\"charisma\", boostDamage.special.charisma)}\r\n                        {getStatBadge(\"intelligence\", boostDamage.special.intelligence)}\r\n                        {getStatBadge(\"agility\", boostDamage.special.agility)}\r\n                        {getStatBadge(\"luck\", boostDamage.special.luck)}\r\n                    </div>\r\n                </Card.Header>\r\n\r\n                <Card.Body className=\"bg-lite p-1 m-0\">\r\n                    <Container className=\"p-0 m-0\">\r\n                        <BRow1 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow1>\r\n                        <BRow2 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow2>\r\n                        <BRow3 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow3>\r\n                        <BRow4 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow4>\r\n                        <BRow5 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow5>\r\n                        <BRow6 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow6>\r\n                        <BRow7 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow7>\r\n                        <BRow8 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow8>\r\n                        <BRow9 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType}></BRow9>\r\n                        <BRow10 setBoostDamage={setBoostDamage} boostDamage={boostDamage} player={player} setPlayer={setPlayer} cardType={cardType} setCardType={setCardType} extraDamage={extraDamage}></BRow10>\r\n                    </Container>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={popover}>\r\n                        <Badge className='ms-3 mt-0 mb-1 p-auto' bg=\"danger\" style={{cursor: 'pointer'}} pill>?</Badge>\r\n                    </OverlayTrigger>\r\n                </Card.Footer>\r\n            </Card>\r\n\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default BoostTable;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport BoostTable from \"../perkCardBoosts/BoostTable\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst DamageBoosts = memo(function DamageBoosts({player, setPlayer, boostDamage, extraDamage, setBoostDamage, showStatRef, setShowStat}) {\r\n    console.log(\"DamageBoosts\")\r\n    const openStat = (e) => {\r\n        setShowStat(!showStatRef.current);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"1\">\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">Card Boosts</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <BoostTable player={player} setPlayer={setPlayer} extraDamage={extraDamage} setBoostDamage={setBoostDamage} boostDamage={boostDamage}></BoostTable>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default DamageBoosts;\r\n","import Card from 'react-bootstrap/Card';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { Progress } from 'antd';\r\nimport ResistanceChart from './ResistanceChart';\r\nimport { timeToPercent } from '../helpers/Item';\r\n\r\n\r\nexport default function GraphInfoView(props) {\r\n    const creature = props.creatures[\"creature\" + props.creatureChartNumber];\r\n    const cPercent = timeToPercent(creature.lifeTime);\r\n    return (\r\n        <Card className={props.className}>\r\n            <Card.Header>\r\n                <span className=\"d-flex m-0 p-0 w-100\">\r\n                    <div className=\"m-auto p-0 w-100 d-flex justify-content-start\">\r\n                        <Badge className=\"bg-orange-outline\" bg=\"warning\" text=\"dark\">\r\n                            <strong>DPS: {props.graphValues.yValues[0].toFixed(1)}</strong>\r\n                        </Badge>\r\n                    </div>\r\n                    <div className=\"m-0 p-0 w-100\">\r\n                        <Progress\r\n                            type=\"dashboard\"\r\n                            steps={50}\r\n                            percent={cPercent}\r\n                            format={(percent) => percent}\r\n                            size={28}\r\n                            strokeColor={props.colors}\r\n                            trailColor=\"rgba(0, 0, 0, 0.06)\"\r\n                            strokeWidth={20} />\r\n                    </div>\r\n                    <div className=\"m-auto p-0 w-100 d-flex justify-content-end\">\r\n                        <Badge bg=\"warning\" className=\"bg-orange-outline\" text=\"dark\">\r\n                            <strong>DPS: {props.graphValues.yValues[props.graphValues.yValues.length - 1].toFixed(1)}</strong>\r\n                        </Badge>\r\n                    </div>\r\n                </span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center p-1 pt-0\">\r\n                <ResistanceChart graphValues={props.graphValues} chartId={\"mainResChart\"} creatures={props.creatures} creatureNumber={props.creatureChartNumber} setCreatureNumber={props.setCreatureChartNumber} />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","import { Progress } from 'antd';\r\nimport { getHotPercentage } from '../helpers/Item';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nexport default function HotMeter({creatures, steps, colors}) {\r\n    const [index, setIndex] = useState(0);\r\n    let copyColors = [...colors];\r\n    let shiftIndex = index + 20;\r\n    shiftIndex = (shiftIndex > 49) ? 49 : shiftIndex;\r\n    copyColors[index] = copyColors[shiftIndex];\r\n    const percent = getHotPercentage(creatures);\r\n    const limit = percent / 2;\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            let newIndex = index + 1;\r\n            if (newIndex > limit) {\r\n                newIndex = 0;\r\n            }\r\n            setIndex(newIndex);\r\n        }, 200);\r\n    }); // Depends on index automatically\r\n    return (\r\n        <div className='input-group d-flex justify-content-center p-0'>\r\n            <InputGroup.Text>\r\n                &#128293;\r\n            </InputGroup.Text>\r\n            <InputGroup.Text>\r\n                <Progress showInfo={false} percent={percent} steps={steps} type=\"line\" size=\"small\" strokeColor={copyColors} />\r\n            </InputGroup.Text>\r\n        </div>\r\n    );\r\n}","import { memo } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport HotMeter from './HotMeter';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport { getColorsForHotMeter } from '../helpers/Colors';\r\nimport { getHotPercentage } from '../helpers/Item';\r\nimport DamageDetails from '../damage/DamageDetails';\r\nimport { getImageElement } from '../helpers/WeaponImages';\r\nimport CreaturesCardView from '../creature/CreaturesCardView';\r\nimport GraphInfoView from './GraphInfoView';\r\nimport SummaryView from './SummaryView';\r\nimport Container from 'react-bootstrap/Container';\r\nimport StaticPopoverRenderer from '../viewComponents/popover/StaticPopoverRenderer';\r\n\r\n\r\nconst colors = getColorsForHotMeter();\r\n\r\nconst imagePopover = new StaticPopoverRenderer(<></>, <></>, \"mainWeaponImage\", \"right\");\r\n\r\nconst MainCardsDisplay = memo(function MainCardsDisplay(props) {\r\n    console.log(\"MainCardsDisplay\");\r\n    const wSpec = props.wSpecRef.current;\r\n    if (!wSpec) {\r\n        return (<></>);\r\n    }\r\n    let weaponIcon = wSpec.iconName;\r\n    if (!weaponIcon) {\r\n        weaponIcon = \"default\";\r\n    }\r\n    const mWidth = \"19rem\";\r\n    const percentC = getHotPercentage(props.creatures);\r\n    const weaponTitleName = truncateLongWords(wSpec.weaponName, 25);\r\n    function onImageClick(e) {\r\n        imagePopover.renderToggleNewContent(e.target, <b>{wSpec.defaultName}</b>, <div className=\"d-flex justify-content-center\">{getImageElement(weaponIcon, \"12rem\")}</div>);\r\n    }\r\n    return (\r\n        <Card style={{minWidth: mWidth}} className=\"d-flex justify-content-center text-center mb-0 ms-1 me-1\">\r\n            <div id=\"mainWeaponImage\"></div>\r\n            <Card.Header className='p-0 m-0'>\r\n                <Row className='p-0 m-0'>\r\n                    <Col className=\"col-2 d-flex justify-content-start p-0 m-0 ps-2\">\r\n                        <div style={{cursor: 'pointer'}} onClick={onImageClick}>\r\n                            {getImageElement(weaponIcon, \"4rem\", \"main-weapon-image\")}\r\n                        </div>\r\n                    </Col>\r\n                    <Col className=\"col-8 d-flex justify-content-center\">\r\n                       <div className=\"m-auto p-0 weapon-label-text\"> {weaponTitleName} </div>\r\n                    </Col>\r\n                    <Col className=\"col-2 d-flex justify-content-end p-0 m-0 pe-2\">\r\n                    </Col>\r\n                </Row>\r\n            </Card.Header>\r\n            <Card.Body className=\"pt-2 bg-lite ps-1 pe-1 pb-1\">\r\n                <Container className=\"p-1 pb-0 mb-0\">\r\n                    <Row>\r\n                        <div className=\"col d-flex justify-content-center mb-2\">\r\n                            <SummaryView className=\"main-display-adjustable\" resultDamage={props.resultDamage} extraDamage={props.extraDamage} boostDamageRef={props.boostDamageRef} setBoostDamage={props.setBoostDamage} setExtraDamage={props.setExtraDamage} />\r\n                        </div>\r\n                        <div className=\"col d-flex justify-content-center mb-2\">\r\n                            <GraphInfoView className=\"main-display-adjustable\" graphValues={props.graphValues} percent={percentC} creatures={props.creatures} creatureChartNumber={props.creatureChartNumber} setCreatureChartNumber={props.setCreatureChartNumber} colors={colors} />\r\n                        </div>\r\n                        <div className=\"col d-flex justify-content-center mb-2\">\r\n                            <CreaturesCardView className=\"main-display-adjustable\" creatureNamesRef={props.creatureNamesRef} creatures={props.creatures} setCreatures={props.setCreatures} resultDamage={props.resultDamage} weaponName={wSpec.weaponName} />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted p-1\">\r\n                <Accordion className=\"accordion p-0 m-0\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header className=\"m-0 p-0\">\r\n                            <HotMeter creatures={props.creatures} steps={50} colors={colors} />\r\n                        </Accordion.Header>\r\n                        <Accordion.Body>\r\n                            <DamageDetails resultDamage={props.resultDamage}></DamageDetails>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default MainCardsDisplay;\r\n","import { useEffect } from 'react';\r\nimport BaseDropdown from '../viewComponents/dropdown/BaseDropdown';\r\nimport Badge from 'react-bootstrap/Badge';\r\nconst { Chart } = await import('chart.js/auto');\r\n\r\n\r\nfunction getConfig(graphValues) {\r\n    return {\r\n        type: \"line\",\r\n        data: {\r\n            labels: graphValues.xValues,\r\n            datasets: [{\r\n                data: graphValues.yValues,\r\n                borderColor: \"red\",\r\n                borderWidth: \"2\",\r\n                pointRadius: \"1\",\r\n                fill: true\r\n            }]\r\n        },\r\n        options: {\r\n            plugins: {\r\n                legend: {\r\n                    display: false\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Resistance',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                },\r\n                y: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Damage / sec',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                }\r\n            },\r\n            animation: false,\r\n        }\r\n    };\r\n}\r\n\r\nfunction drawChart(graphValues, chartId) {\r\n    const curChart = Chart.getChart(chartId);\r\n    if (curChart) {\r\n        curChart.destroy();\r\n    }\r\n    new Chart(document.getElementById(chartId), getConfig(graphValues));\r\n}\r\n\r\nfunction getDPS(need, yValues) {\r\n    if (need) {\r\n        return (\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <div className=\"m-auto p-0 ps-2 pt-2 w-100 d-flex justify-content-start\">\r\n                    <Badge className=\"bg-orange-outline\" bg=\"warning\" text=\"dark\">\r\n                        <strong>DPS: {yValues[0].toFixed(1)}</strong>\r\n                    </Badge>\r\n                </div>\r\n                <div className=\"m-auto p-0 pt-2 pe-2 w-100 d-flex justify-content-end\">\r\n                    <Badge bg=\"warning\" className=\"bg-orange-outline\" text=\"dark\">\r\n                        <strong>DPS: {yValues[yValues.length - 1].toFixed(1)}</strong>\r\n                    </Badge>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\nexport default function ResistanceChart(props) {\r\n    useEffect(() => {\r\n        drawChart(props.graphValues, props.chartId);\r\n    });\r\n    const dict = {};\r\n    let number = 1;\r\n    for (const creatureField in props.creatures) {\r\n        const creature = props.creatures[creatureField];\r\n        dict[number++] = creature.capName;\r\n    }\r\n    const creature = props.creatures[\"creature\" + props.creatureNumber];\r\n    return (\r\n        <>\r\n            {getDPS(props.dps, props.graphValues.yValues)}\r\n            <div className=\"d-flex justify-content-center p-0 pt-2\">\r\n                <BaseDropdown variant='blue-label' size='sm' setValue={props.setCreatureNumber} dict={dict} title={<strong>{creature.capName}</strong>} />\r\n            </div>\r\n            <div className=\"ps-1 pe-1\">\r\n                <canvas id={props.chartId}></canvas>\r\n            </div>\r\n        </>\r\n    );\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { buildItem } from '../helpers/Item';\r\nimport { memo, useState } from 'react';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport { getLegendaryNameFromSpec } from '../helpers/LegendaryProvider';\r\n\r\n\r\nfunction getLegendaryPrefix(wSpec) {\r\n    let legendaryPrefix = \"\";\r\n    for (let i = 0; i < wSpec.legendary.length; i++) {\r\n        const curLegPrefix = getLegendaryNameFromSpec(wSpec, i + 1);\r\n        if (curLegPrefix !== \"\") {\r\n            legendaryPrefix += (curLegPrefix + \" \");\r\n        }\r\n    }\r\n    return legendaryPrefix;\r\n}\r\n\r\nconst ModalNewItem = memo(function ModalNewItem(props) {\r\n    console.log(\"ModalNewItem\");\r\n    const [legPrefixCheck, setLegPrefixCheck] = useState(false);\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n    let legendaryPrefix = \"\";\r\n    if (legPrefixCheck) {\r\n        legendaryPrefix = getLegendaryPrefix(props.wSpec);\r\n    }\r\n    const limit = props.items.map.size > 1000;\r\n    function createItem(e, name) {\r\n        if (name === '' || name === null) {\r\n            name = \"Weapon\";\r\n        }\r\n        const item = buildItem(props.id, name, props.player, props.playerStats, props.creatures, props.boostDamage, props.wSpec, props.extraDamage, props.additionalDamages, props.resultDamage, props.stuffBoost);\r\n        props.items.map.set(props.id, item);\r\n        const nextId = props.id + 1;\r\n        const newItems = {\r\n            map: props.items.map,\r\n        }\r\n        props.setItems(newItems);\r\n        props.setNextId(nextId);\r\n        props.setModalNewItemShow(false);\r\n    };\r\n    function onClick(e) {\r\n        createItem(e, document.getElementById(\"wName\").value);\r\n    };\r\n    function onHide(e) {\r\n        props.setModalNewItemShow(false);\r\n    };\r\n    function onPrefixChange(e) {\r\n        const useLegPrefix = e.target.checked\r\n        setLegPrefixCheck(useLegPrefix);\r\n        const element = document.getElementById(\"wName\");\r\n        let legendaryPrefix = getLegendaryPrefix(props.wSpec);\r\n        if (useLegPrefix) {\r\n            let name = legendaryPrefix + element.value;\r\n            name = name.slice(0, element.maxLength);\r\n            element.value = name;\r\n        } else if (legendaryPrefix !== \"\" && element.value.startsWith(legendaryPrefix)) {\r\n            let name = element.value.slice(legendaryPrefix.length);\r\n            element.value = name;\r\n        }\r\n    };\r\n    const message = (limit) ? \"Limit has been achieved\" : \"Weapon name\";\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    New Weapon\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap justify-content-center\">\r\n                    <InputGroup.Text style={{ minWidth: '9rem' }}>{message}</InputGroup.Text>\r\n                    {getInputText(limit, legendaryPrefix + props.wSpec.defaultName)}\r\n                </InputGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <div style={{width: '100%'}} className=\"d-flex\">\r\n                    <div style={{width: '50%'}} className=\"center-text\">\r\n                        <UCheckbox onChange={onPrefixChange} checked={legPrefixCheck}>Legendary Prefix</UCheckbox>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end\" style={{width: '50%'}}>\r\n                        <Button disabled={limit} onClick={onClick}>Add</Button>\r\n                    </div>\r\n                </div>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nfunction getInputText(limit, weaponName) {\r\n    if (limit) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <Form.Control id='wName' className='w-auto' defaultValue={weaponName} maxLength=\"70\" />\r\n    );\r\n}\r\n\r\nexport default ModalNewItem;","export function getTextFileRef(content) {\r\n    return URL.createObjectURL(new Blob([content], {type: 'text/plain'}));\r\n}\r\n\r\nexport function getFileRef(content) {\r\n    return URL.createObjectURL(new Blob([content], {type: 'application/json'}));\r\n}\r\n\r\nexport function getJsonFileRef(content) {\r\n    return getFileRef(JSON.stringify([...content]));\r\n}\r\n","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {getJsonFileRef} from '../helpers/Files';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalDownloadSnapshots = memo (function ModalDownloadSnapshots(props) {\r\n    console.log(\"ModalDownloadSnapshots\");\r\n    if (!props.modalDownloadSnapshots) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalDownloadSnapshots(false);\r\n    }\r\n    function downloadName() {\r\n        let name = \"snapshots\";\r\n        try {\r\n            name = document.getElementById(\"dName\").value;\r\n        } catch {\r\n            return name;\r\n        }\r\n        return (name === null || name === \"\") ? \"snapshots\" : name;\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.modalDownloadSnapshots}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Download Snapshots\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <InputGroup.Text style={{ width: '9rem' }}>File name</InputGroup.Text>\r\n                    <Form.Control id='dName' className='w-auto' defaultValue={\"snapshots\"} maxLength=\"70\" />\r\n                </InputGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <a href={getJsonFileRef(props.items.map.values())} download={downloadName()}>\r\n                <Button onClick={onHide}>Download</Button>\r\n            </a>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDownloadSnapshots;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {getJsonFileRef} from '../helpers/Files';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalDownloadSnapshot = memo (function ModalDownloadSnapshot(props) {\r\n    if (props.modalDownloadSnapshot.id < 0 || !props.modalDownloadSnapshot.show) {\r\n        return (<></>);\r\n    }\r\n    console.log(\"ModalDownloadSnapshot\");\r\n    function onHide(e) {\r\n        props.setModalDownloadSnapshot({id: -1, name: 'none', show: false});\r\n    }\r\n    function downloadName() {\r\n        const name = props.modalDownloadSnapshot.name;\r\n        return (name === null || name === \"\") ? \"snapshot.json\" : name + \".json\";\r\n    }\r\n    const item = [props.items.map.get(props.modalDownloadSnapshot.id)];\r\n    const fileName = props.modalDownloadSnapshot.name;\r\n    return (\r\n        <Modal\r\n            show = {props.modalDownloadSnapshot.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Download Weapon\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <InputGroup.Text style={{ width: '9rem' }}>File name</InputGroup.Text>\r\n                    <Form.Control id='snapshotName' className='w-auto' defaultValue={fileName} maxLength=\"70\" />\r\n                </InputGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <a href={getJsonFileRef(item)} download={downloadName()}>\r\n                <Button onClick={onHide}>Download</Button>\r\n            </a>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDownloadSnapshot;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { memo } from 'react';\r\nimport { truncateLongWords } from '../helpers/Input';\r\n\r\n\r\nconst ModalDeleteItem = memo(function ModalDeleteItem(props) {\r\n    console.log(\"ModalDeleteItem\");\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalDeleteItem({id: -1, name: 'none', show:  false});\r\n    }\r\n    function removeItem(e) {\r\n        try {\r\n            props.items.map.delete(parseInt(e.target.id));\r\n            const newItems = {\r\n                map: props.items.map,\r\n            }\r\n            props.setItems(newItems);\r\n        } catch {}\r\n        props.setModalDeleteItem({id: \"-1\", name: \"none\", show: false});\r\n    }\r\n    const name = truncateLongWords(props.name, 25);\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Delete Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to delete '{name}'?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={removeItem} id={props.itemId}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDeleteItem;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalDeleteAll = memo(function ModalDeleteAll(props) {\r\n    console.log(\"ModalDeleteAll\");\r\n    if (!props.modalDeleteAll) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalDeleteAll(false);\r\n    }\r\n\r\n    function removeAll(e) {\r\n        try {\r\n            props.items.map.clear();\r\n            const newItems = {\r\n                map: props.items.map,\r\n            }\r\n            props.setItems(newItems);\r\n            props.setNextId(0);\r\n        } catch {}\r\n        onHide();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show = {props.modalDeleteAll}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Delete All Snapshots\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to delete all snapshots?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={removeAll}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDeleteAll;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction modalView(loading, name, applyItem, onHide, itemId) {\r\n    if (loading) {\r\n        return (\r\n            <Modal.Body>\r\n                <b>Loading...</b>\r\n            </Modal.Body>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Apply Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to apply '{name}'? Current settings will be replaced.\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={applyItem} id={itemId}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function ModalApplyItem(props) {\r\n    console.log(\"ModalApplyItem\");\r\n    const [loading, setLoading] = useState(false);\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        setLoading(false);\r\n        props.setModalApplyItem({id: -1, name: 'none', show: false});\r\n    }\r\n    function applyItem(e) {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const item = props.items.map.get(parseInt(e.target.id));\r\n            const copy = JSON.parse(JSON.stringify(item));\r\n            props.applySnapshot(copy.boostDamage, copy.wSpec, copy.extraDamage, copy.additionalDamages, copy.creatures, copy.player, copy.playerStats, copy.stuff);\r\n            onHide(null);\r\n        }, 100);\r\n    }\r\n\r\n    const name = truncateLongWords(props.name, 25);\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            centered>\r\n           {modalView(loading, name, applyItem, onHide, props.itemId)}\r\n        </Modal>\r\n    );\r\n}","export function readSnapshotsFromInput(inputId, setIdCallback, setItemsCallback, oldItems=null, add=true, maxItems=1000) {\r\n\r\n    const file = document.getElementById(inputId).files[0];\r\n    readSnapshotsFrom(file, setIdCallback, setItemsCallback, oldItems, add, maxItems);\r\n};\r\n\r\nexport function readSnapshotsFromResources(file, setIdCallback, setItemsCallback, maxItems=1000) {\r\n    readSnapshotsJson(file, setIdCallback, setItemsCallback, null, true, maxItems=1000);\r\n};\r\n\r\nfunction readSnapshotsJson(items, setIdCallback, setItemsCallback, oldItems, add=true, maxItems=1000) {\r\n    let map = new Map();\r\n    let k = 0;\r\n    if (oldItems && add) {\r\n        for (const [, value] of oldItems.entries()) {\r\n            value.id = k;\r\n            map.set(k++, value);\r\n        }\r\n    }\r\n    let newMaxItems = maxItems - map.size;\r\n    newMaxItems = (newMaxItems < 0) ? 0 : newMaxItems;\r\n    const length = items.length > newMaxItems ? newMaxItems : items.length;\r\n    for (let i = 0; i < length; i++) {\r\n        items[i].id = i + k;\r\n        map.set(i + k, items[i]);\r\n    }\r\n    const newItems = {\r\n        map: map,\r\n    }\r\n    setIdCallback(map.size);\r\n    setItemsCallback(newItems);\r\n}\r\n\r\nfunction readSnapshotsFrom(file, setIdCallback, setItemsCallback, oldItems, add, maxItems=1000) {\r\n    try {\r\n        const reader = new FileReader();\r\n        reader.onload = e => {\r\n            let items = JSON.parse(e.target.result);\r\n            readSnapshotsJson(items, setIdCallback, setItemsCallback, oldItems, add, maxItems);\r\n        };\r\n        reader.readAsText(file);\r\n    } catch {\r\n        // Ok\r\n    }\r\n};","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { readSnapshotsFromInput } from '../helpers/FetchSnapshots';\r\nimport { memo, useState } from 'react';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\n\r\n\r\nconst radio = {Add: '0', Replace: '1'};\r\n\r\nconst ModalUploadSnapshots = memo(function ModalUploadSnapshots(props) {\r\n    console.log(\"ModalUploadSnapshots\")\r\n    const [addOld, setAddOld] = useState('0');\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide() {\r\n        props.setModalUploadSnapshots(false)\r\n    }\r\n    function readFile() {\r\n        const add = (addOld === '0');\r\n        readSnapshotsFromInput(\"snapshotsFile\", props.setNextId, props.setItems, props.items.map, add);\r\n        props.setModalUploadSnapshots(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Load Snapshots\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"formFile\" className=\"form-label\">\r\n                        <p className=\"mb-1\"> Choose a json file with snapshots.</p>\r\n                    </label>\r\n                    <input id=\"snapshotsFile\" className=\"form-control\" type=\"file\" readOnly accept=\".json\" />\r\n                    <BSRadio className=\"mt-4 d-flex justify-content-center\" pairs={radio} selectedValue={addOld} setSelectedValue={setAddOld} />\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={readFile} id={props.itemId}>Yes</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalUploadSnapshots;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalRenameItem = memo(function ModalRenameItem(props) {\r\n    console.log(\"ModalRenameItem\");\r\n    if (!props.show) {\r\n        return (<></>);\r\n    }\r\n\r\n    function setItem(item) {\r\n        props.items.map.set(item.id, item);\r\n        const newItems = {\r\n            map: props.items.map,\r\n        }\r\n        props.setItems(newItems);\r\n    }\r\n\r\n    function onRename() {\r\n        let name = \"Weapon\";\r\n        try {\r\n            name = document.getElementById(\"weaponNameInput\").value;\r\n            name = (name === null || name === '') ? \"Weapon\" : name;\r\n            let item = props.items.map.get(props.id);\r\n            item.name = name;\r\n            item.wSpec.weaponName = name;\r\n            setItem(item);\r\n            onHide();\r\n        } catch {\r\n            // Ok (sometimes can happen on mobile devices if virtual keyboard is covering a dialog but somehow you managed\r\n            // tap Ok button).\r\n        }\r\n    };\r\n\r\n    let name = \"Weapon\";\r\n    try {\r\n        name = props.items.map.get(props.id).name;\r\n    } catch {\r\n        // Ok\r\n    }\r\n    function onHide(e) {\r\n        props.setModalRenameItem({id: -1, show: false});\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Rename Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InputGroup className=\"pb-2 flex-nowrap\">\r\n                    <InputGroup.Text>New name:</InputGroup.Text>\r\n                    <Form.Control id=\"weaponNameInput\" defaultValue={name} maxLength=\"70\" />\r\n                </InputGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={onRename}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalRenameItem;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { buildItem } from '../helpers/Item';\r\nimport { memo } from 'react';\r\nimport { truncateLongWords } from '../helpers/Input';\r\n\r\n\r\nconst ModalUpdateItem = memo (function ModalUpdateItem(props) {\r\n    console.log(\"ModalUpdateItem\");\r\n    if (!props.modalUpdateItem.show) {\r\n        return (<></>);\r\n    }\r\n    function onUpdateItem() {\r\n        const oldItem = props.items.map.get(props.modalUpdateItem.id);\r\n        const item = buildItem(oldItem.id, oldItem.name, props.player, props.playerStats, props.creatures, props.boostDamage, props.wSpec, props.extraDamage, props.additionalDamages, props.resultDamage, props.stuffBoost);\r\n        setItem(item);\r\n        props.setModalUpdateItem({id: -1, show: false});\r\n    }\r\n\r\n    function setItem(item) {\r\n        props.items.map.set(item.id, item);\r\n        const newItems = {\r\n            map: props.items.map,\r\n        }\r\n        props.setItems(newItems);\r\n    }\r\n    const name = truncateLongWords(props.name, 25);\r\n    const onHide = () => props.setModalUpdateItem({id: -1, show: false});\r\n    return (\r\n        <Modal\r\n            show = {props.modalUpdateItem.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Update Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to update '{name}'?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={onUpdateItem}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalUpdateItem;","import {UploadIcon, DownloadIcon} from '../icons/Icons';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst SnapshotsHeader = memo(function SnapshotsHeader({items, setModalDownloadSnapshots, setModalUploadSnapshots, uniqueCreatureNames, sortCreatureName, setSortCreatureName}) {\r\n    console.log(\"SnapshotsHeader\");\r\n    function downloadButton() {\r\n        return (\r\n            <Button onClick={()=>setModalDownloadSnapshots(true)}>\r\n                <UploadIcon />\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    function uploadButton(className) {\r\n        return (\r\n            <Button className={className} onClick={()=>setModalUploadSnapshots(true)}>\r\n                <DownloadIcon />\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    if (items.map.size === 0) {\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <div className='d-flex justify-content-end'>\r\n                        {uploadButton(\"ms-3\")}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else if (items.map.size === 1) {\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <div className='d-flex justify-content-end'>\r\n                        {downloadButton()}\r\n                        {uploadButton(\"ms-3\")}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    function onSelect(e) {\r\n        setSortCreatureName({name: e});\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"row d-flex justify-content-center mt-1 mb-3\">\r\n                <Col className=\"col\">\r\n                    <span>\r\n                        {downloadButton()}\r\n                        {uploadButton(\"ms-3\")}\r\n                    </span>\r\n                </Col>\r\n            </div>\r\n            <div className=\"row d-flex justify-content-center mb-1\">\r\n                <Col className=\"col\">\r\n                    <div>\r\n                        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelect} names={uniqueCreatureNames} title={<strong>{sortCreatureName.name}</strong>} />\r\n                    </div>\r\n                </Col>\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default SnapshotsHeader;","import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Tag } from 'antd';\r\nimport { millisToTime } from '../helpers/Time';\r\nimport { TrashIcon, UpdateIcon, PlayIcon, RenameIcon, UploadIcon } from '../icons/Icons';\r\nimport '../css/style.css';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { getImage } from '../helpers/WTypeDropdown';\r\nimport { ammo, addText } from '../helpers/Emoji';\r\nimport { getImageElement } from '../helpers/WeaponImages';\r\nimport { getLegendaryNameFromSpec } from '../helpers/LegendaryProvider';\r\nimport { memo, useState, useEffect } from 'react';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport BoostRowView from './BoostRowView';\r\nimport ModView from './ModView';\r\nimport { getFireRateLabel } from '../main/SummaryView';\r\n\r\n\r\nfunction row(name1, value1, colorName=\"default\", tagColor=\"default\", tagName=true) {\r\n    const line = (tagName) ? <Tag bordered={false} color={colorName}>{name1}</Tag> : name1;\r\n    return (\r\n       <Row className=\"flex-nowrap\">\r\n          <Col className=\"text-start text-nowrap\">\r\n            <strong>\r\n                 {line}\r\n            </strong>\r\n          </Col>\r\n\r\n          <Col className=\"text-end text-nowrap pb-1\">\r\n              <strong >\r\n                <Tag color={tagColor}>{value1}</Tag>\r\n              </strong>\r\n          </Col>\r\n       </Row>\r\n    );\r\n}\r\n\r\nfunction bodyContent(isOpen, index, size, item, setModalDownloadSnapshot, setModalUpdateItem, setModalRenameItem, setModalDeleteItem, setModalApplyItem) {\r\n    if (isOpen) {\r\n        const critUsed = (item.extraDamage.useCrit) ? \"(Yes 1/\" + item.extraDamage.critFreq + \")\" : \"(No)\";\r\n        const sneakUsed = (item.extraDamage.useSneak) ? \"(Yes)\" : \"(No)\";\r\n        const headUsed = (item.extraDamage.useHead) ? \"(Yes \" + item.extraDamage.headFreq + \"%)\" : \"(No)\";\r\n        const leg1Name = getLegendaryNameFromSpec(item.wSpec, 1);\r\n        const leg2Name = getLegendaryNameFromSpec(item.wSpec, 2);\r\n        const leg3Name = getLegendaryNameFromSpec(item.wSpec, 3);\r\n        const leg4Name = getLegendaryNameFromSpec(item.wSpec, 4);\r\n        const leg5Name = getLegendaryNameFromSpec(item.wSpec, 5);\r\n        let strength = (item.wSpec.strengthBoost > 0) ? item.playerStats.strength.value : \"-\";\r\n        const creature1 = item.creatures.creature1;\r\n        const creature2 = item.creatures.creature2;\r\n        const creature3 = item.creatures.creature3;\r\n        const creature4 = item.creatures.creature4;\r\n        const fireRateLabel = getFireRateLabel(item.resultDamage.weaponType);\r\n        return (\r\n            <>\r\n                <Card.Body className=\"p-1 mt-1\">\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-center mb-1\">\r\n                            <Toast style={{ width: '34rem'}} show={true} className=\"bg-snapshot\">\r\n                                <Toast.Body className=\"m-0 p-2\">\r\n                                <Row>\r\n                                    <Col>\r\n                                        {row(\"💥 Damage:\", item.resultDamage.tDamage.toFixed(1) + \" x \" + item.resultDamage.shotSize)}\r\n                                        {row(\"☠️ Crit:\", critUsed + \" +\" + item.resultDamage.displayedCrit.toFixed(1) + \"%\")}\r\n                                        {row(\"🐍 Sneak:\", sneakUsed + \" +\" + item.resultDamage.displayedSneak.toFixed(1) + \"%\")}\r\n                                        {row(\"💣 Explosive:\", item.resultDamage.explosive.toFixed(1) + \"%\")}\r\n                                        {row(\"🤕 Head Shot:\", headUsed)}\r\n                                        {row(addText(ammo, '0.7rem', '0.27rem', \"Ammo:\"), item.resultDamage.ammoCapacity)}\r\n                                        {row(fireRateLabel, item.resultDamage.fireRate.toFixed(1))}\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {row(\"⌛ Reload:\", item.resultDamage.reloadTime.toFixed(2) + \" s\")}\r\n                                        {row(\"🎯 Accuracy:\", \"100%\")}\r\n                                        {row(\"⭐\", leg1Name, \"gold\")}\r\n                                        {row(\"⭐⭐\", leg2Name, \"gold\")}\r\n                                        {row(\"⭐⭐⭐\", leg3Name, \"gold\")}\r\n                                        {row(\"⭐⭐⭐⭐\", leg4Name, \"gold\")}\r\n                                        {row(\"⭐⭐⭐⭐⭐\", leg5Name, \"gold\")}\r\n                                    </Col>\r\n                                </Row>\r\n                                </Toast.Body>\r\n                            </Toast>\r\n                        </Col>\r\n                        <Col className=\"d-flex justify-content-center mb-1\">\r\n                            <Toast className=\"bg-snapshot\" style={{ width: '34rem' }} show={true}>\r\n                                <Toast.Body className=\"m-0 p-2\">\r\n                                <Row>\r\n                                    <Col>\r\n                                        {row(\"❤️ Health / 👨‍👩‍👧‍👦 Team:\", item.player.health.value.toFixed(0) + \"% / \" + ((item.player.team) ? \"Yes\" : \"No\"))}\r\n                                        {row(\"💪 Strength:\", strength, \"default\", \"default\")}\r\n                                        {row(creature1.capName + \" (\" + creature1.level + \"Lvl):\", millisToTime(creature1.lifeTime), \"red\", \"red\")}\r\n                                        {row(creature2.capName + \" (\" + creature2.level + \"Lvl):\", millisToTime(creature2.lifeTime), \"purple\", \"purple\")}\r\n                                        {row(creature3.capName + \" (\" + creature3.level + \"Lvl):\", millisToTime(creature3.lifeTime), \"pink\", \"pink\")}\r\n                                        {row(creature4.capName + \" (\" + creature4.level + \"Lvl):\", millisToTime(creature4.lifeTime), \"blue\", \"blue\")}\r\n                                        {row(\"Average:\", millisToTime(item.averageTime), \"default\", \"default\")}\r\n                                    </Col>\r\n                                </Row>\r\n                                </Toast.Body>\r\n                            </Toast>\r\n                        </Col>\r\n                     </Row>\r\n                     <ModView wSpec={item.wSpec} />\r\n                     <BoostRowView boostDamage={item.boostDamage} stuff={item.stuff} />\r\n                </Card.Body>\r\n                <div className='card-footer'>\r\n                    <Row>\r\n                        <div className=\"col d-flex justify-content-start\">\r\n                            <Badge className=\"mt-auto mb-auto\" pill='true' text='white' bg=\"secondary\">{index} / {size}</Badge>\r\n                            <Button variant=\"white\" className=\"m-auto ms-2 p-auto\" size='sm'>{getImage(item.wSpec.type)}</Button>\r\n                        </div>\r\n                        <div className=\"col d-flex justify-content-end\">\r\n                            <Button onClick={(e) => setModalDownloadSnapshot({id: item.id, name: item.name, show: true})} variant=\"outline-primary\" className=\"ms-1 me-2 pb-auto\" size=\"sm\">\r\n                                <UploadIcon />\r\n                            </Button>\r\n                            <Button onClick={(e) => setModalUpdateItem({id: item.id, name: item.name, show: true})} variant=\"outline-primary\" className=\"ms-1 me-2 pb-auto\" size=\"sm\">\r\n                                <UpdateIcon />\r\n                            </Button>\r\n                            <Button className=\"ms-1 me-2 pb-auto\" size=\"sm\" id={item.id} name={item.name} variant=\"outline-primary\" onClick={(e) => setModalApplyItem({id: e.currentTarget.id, name: e.currentTarget.name, show: true})}>\r\n                                <PlayIcon />\r\n                            </Button>\r\n                            <Button className=\"ms-1 pb-auto\" size=\"sm\" id={item.id} name={item.name} variant=\"outline-danger\" onClick={(e) => setModalDeleteItem({id: e.currentTarget.id, name: e.currentTarget.name, show: true})}>\r\n                                <TrashIcon />\r\n                            </Button>\r\n                        </div>\r\n                    </Row>\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nfunction headerBody(item, setModalRenameItem, isItemOpen, setIsItemOpen) {\r\n    let wName = item.wSpec.iconName;\r\n    if (!wName) {\r\n        wName = \"default\";\r\n    }\r\n    function onHeaderClick(e) {\r\n        setIsItemOpen(!isItemOpen);\r\n    }\r\n    function onRenameClick(e) {\r\n        setModalRenameItem({id: item.id, show: true});\r\n        e.stopPropagation();\r\n    }\r\n    const displayedWeaponName = truncateLongWords(item.name, 25);\r\n    return (\r\n        <Container className='ps-1 pe-1' style={{cursor: \"pointer\"}} onClick={onHeaderClick}>\r\n            <div className=\"row-12 d-flex\">\r\n                <div className='col-2 p-0 ps-2 d-flex m-auto justify-content-start'>\r\n                        {getImageElement(wName, '3rem')}\r\n                </div>\r\n                <div className=\"col-8 pt-1 pb-1 d-flex justify-content-center\">\r\n                    <h6 className='m-auto'>{displayedWeaponName}</h6>\r\n                </div>\r\n                <div className=\"col-2 d-flex pe-2 justify-content-end\">\r\n                    <div className=\"m-auto me-1\">\r\n                        <Button className=\"pb-1\" id={item.id} variant=\"outline-secondary\" onClick={onRenameClick} size=\"sm\">\r\n                            <RenameIcon />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nfunction header(item, setModalRenameItem, isOpen, setIsItemOpen) {\r\n    if (isOpen) {\r\n        return (\r\n            <div className='m-0 p-0 card-header'>\r\n                {headerBody(item, setModalRenameItem, isOpen, setIsItemOpen)}\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            headerBody(item, setModalRenameItem, isOpen, setIsItemOpen)\r\n        );\r\n    }\r\n}\r\n\r\nconst SnapshotItem = memo(function SnapshotItem({index, isOpen, size, item, setModalDownloadSnapshot, setModalUpdateItem, setModalRenameItem, setModalDeleteItem, setModalApplyItem}) {\r\n    console.log(\"SnapshotItem\");\r\n    const [isItemOpen, setIsItemOpen] = useState(isOpen);\r\n    useEffect(() => {\r\n        setIsItemOpen(isOpen);\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <Card className=\"mb-2\">\r\n            {header(item, setModalRenameItem, isItemOpen, setIsItemOpen)}\r\n            {bodyContent(isItemOpen, index, size, item, setModalDownloadSnapshot, setModalUpdateItem, setModalRenameItem, setModalDeleteItem, setModalApplyItem)}\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default SnapshotItem;","import { memo } from 'react';\r\nimport SnapshotItem from './SnapshotItem'\r\nimport { Pagination } from 'antd';\r\nimport { getCreatureByName } from '../entities/ECreatures';\r\n\r\n\r\nfunction compareCreatureGeneral(item1, item2, name) {\r\n    if (item1 == null || item2 == null) {\r\n        return 0;\r\n    }\r\n    const time1 = parseInt(getCreatureByName(item1.creatures, name).lifeTime);\r\n    const time2 = parseInt(getCreatureByName(item2.creatures, name).lifeTime);\r\n    if (time1 < time2) {\r\n        return -1;\r\n    } else if (time2 < time1) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction compareAverage(item1, item2) {\r\n    if (item1 == null || item2 == null) {\r\n        return 0;\r\n    }\r\n    const time1 = parseInt(item1.averageTime);\r\n    const time2 = parseInt(item2.averageTime);\r\n    if (time1 < time2) {\r\n        return -1;\r\n    } else if (time2 < time1) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst SnapshotItems = memo(function SnapshotItems({onPageChanged, startIndex, pageSize, page, items, isOpen, sortCreatureName, filterName, weaponType, setModalDownloadSnapshot, setModalUpdateItem, setModalRenameItem, setModalDeleteItem, setModalApplyItem}) {\r\n    console.log(\"SnapshotItems\");\r\n    function compareCreature(item1, item2) {\r\n        return compareCreatureGeneral(item1, item2, sortCreatureName.name);\r\n    }\r\n    const sortAlg = (!sortCreatureName || sortCreatureName.name === \"average\") ? compareAverage : compareCreature;\r\n    let index = 1;\r\n    const filterByName = (item) => {\r\n        if (filterName === \"\" || filterName === null) {\r\n            return true;\r\n        }\r\n        return item.name.includes(filterName);\r\n    };\r\n    const filterByType = (item) => {\r\n        if (weaponType === \"All\") {\r\n            return true;\r\n        }\r\n        return weaponType === item.wSpec.type;\r\n    };\r\n    const filterByCreature = (item) => {\r\n        if (!sortCreatureName || sortCreatureName.name === \"average\") {\r\n            return true;\r\n        }\r\n        return getCreatureByName(item.creatures, sortCreatureName.name) !== null;\r\n    }\r\n    const snapshots = [...items.map.values()].filter(filterByCreature).sort(sortAlg).filter(filterByType).filter(filterByName);\r\n    const size = snapshots.length;\r\n    function result(item) {\r\n        return (\r\n            <SnapshotItem key={item.id} title={item.name} index={index++} isOpen={isOpen} size={size} item={item} setModalDownloadSnapshot={setModalDownloadSnapshot} setModalUpdateItem={setModalUpdateItem} setModalRenameItem={setModalRenameItem} setModalDeleteItem={setModalDeleteItem} setModalApplyItem={setModalApplyItem}></SnapshotItem>\r\n        );\r\n    }\r\n    const values = snapshots.map((item) => (result(item)));\r\n    let paginated = [];\r\n    for (let i = startIndex; i < startIndex + pageSize; i++) {\r\n        const value = values[i];\r\n        if (!value) {\r\n            break;\r\n        }\r\n        paginated.push(values[i]);\r\n    }\r\n    return getPagination(page, pageSize, onPageChanged, paginated, values.length);\r\n});\r\n\r\nfunction getPagination(page, pageSize, onPageChanged, paginated, total) {\r\n    if (paginated.length > 0) {\r\n        return (\r\n            <>\r\n                {paginated}\r\n                <div className=\"p-1\" />\r\n                <Pagination align=\"center\" current={page} defaultPageSize={pageSize} onChange={onPageChanged} total={total} showSizeChanger={false} />\r\n            </>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\nexport default SnapshotItems;","import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ModalNewItem from '../snapshot/ModalNewItem';\r\nimport ModalDownloadSnapshots from '../snapshot/ModalDownloadSnapshots';\r\nimport ModalDownloadSnapshot from '../snapshot/ModalDownloadSnapshot';\r\nimport ModalDeleteItem from '../snapshot/ModalDeleteItem';\r\nimport ModalDeleteAll from '../snapshot/ModalDeleteAll';\r\nimport ModalApplyItem from '../snapshot/ModalApplyItem';\r\nimport ModalUploadSnapshots from '../snapshot/ModalUploadSnapshots';\r\nimport ModalRenameItem from '../snapshot/ModalRenameItem';\r\nimport ModalUpdateItem from '../snapshot/ModalUpdateItem';\r\nimport Form from 'react-bootstrap/Form';\r\nimport snapshotsFile from '../resources/snapshots.json';\r\nimport { readSnapshotsFromResources } from '../helpers/FetchSnapshots';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport SnapshotsHeader from '../snapshot/SnapshotsHeader';\r\nimport SnapshotItems from '../snapshot/SnapshotItems';\r\nimport '../css/style.css'\r\nimport { memo, useEffect, useState } from 'react';\r\nimport WTypeDropdown from '../helpers/WTypeDropdown';\r\nimport { TrashIcon, CollapseIcon, ExpandIcon } from '../icons/Icons';\r\nimport { FloatButton } from 'antd';\r\n\r\n\r\nlet id = 0;\r\n\r\nfunction setNextId(nextId) {\r\n    id = nextId;\r\n}\r\n\r\nconst Snapshots = memo(function Snapshots(props) {\r\n\r\n    console.log(\"Snapshots\");\r\n\r\n    const player = props.playerRef.current;\r\n\r\n    const playerStats = props.playerStatsRef.current;\r\n\r\n    const stuffBoost = props.stuffBoostRef.current;\r\n\r\n    const boostDamage = props.boostDamageRef.current;\r\n\r\n    const wSpec = props.wSpecRef.current;\r\n\r\n    const extraDamage = props.extraDamageRef.current;\r\n\r\n    const additionalDamages = props.additionalDamagesRef.current;\r\n\r\n    const creatures = props.creaturesRef.current;\r\n\r\n    const resultDamage = props.resultDamageRef.current;\r\n\r\n    const applySnapshot = props.applySnapshotRef.current;\r\n\r\n    const [items, setItems] = useState({map: new Map()});\r\n\r\n    const [modalNewItemShow, setModalNewItemShow] = useState(false);\r\n\r\n    const [modalDeleteAll, setModalDeleteAll] = useState(false);\r\n\r\n    const [modalDownloadSnapshots, setModalDownloadSnapshots] = useState(false);\r\n\r\n    const [modalDownloadSnapshot, setModalDownloadSnapshot] = useState({id: -1, name: 'none', show: false});\r\n\r\n    const [modalRenameItem, setModalRenameItem] = useState({id: -1, show: false});\r\n\r\n    const [modalUpdateItem, setModalUpdateItem] = useState({id: -1, name: '', show: false});\r\n\r\n    const [filterName, setFilterName] = useState(\"\");\r\n\r\n    const [modalUploadSnapshots, setModalUploadSnapshots] = useState(false);\r\n\r\n    const [modalDeleteItem, setModalDeleteItem] = useState({id: \"-1\", name: 'none', show: false});\r\n\r\n    const [modalApplyItem, setModalApplyItem] = useState({id: \"-1\", name: 'none', show: false});\r\n\r\n    const [weaponType, setWeaponType] = useState(\"All\");\r\n\r\n    const [isOpen, setIsOpen] = useState(true);\r\n\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [pageSize, setPageSize] = useState(10);\r\n\r\n    const [startIndex, setStartIndex] = useState(0);\r\n\r\n    const [sortCreatureName, setSortCreatureName] = useState({name: \"average\"});\r\n\r\n    useEffect(() => {\r\n        readSnapshotsFromResources(snapshotsFile, setNextId, setItems);\r\n    }, []);\r\n\r\n    function buildUniqueCreatureNames() {\r\n        const defaultItems = [\"average\"];\r\n        const uniqueNames = new Set(defaultItems);\r\n        if (!items || !items.map || items.map.size === 0) {\r\n            return defaultItems;\r\n        }\r\n        for (const [, item] of items.map) {\r\n            const creatures = item.creatures;\r\n            for (const fieldName in creatures) {\r\n                const creature = creatures[fieldName];\r\n                uniqueNames.add(creature.name);\r\n            }\r\n        }\r\n        return [...uniqueNames];\r\n    }\r\n\r\n    const uniqueCreatureNames = buildUniqueCreatureNames();\r\n\r\n    // Set silently, no need to re-render\r\n    if (!uniqueCreatureNames.includes(sortCreatureName.name)) {\r\n        sortCreatureName.name = \"average\";\r\n    }\r\n\r\n    function trashAllButton() {\r\n        if (items === null || items.map === null || items.map.size < 2) {\r\n            return (<></>);\r\n        }\r\n        return (\r\n            <Button variant=\"outline-danger\" className=\"mb-2 me-0\" onClick={() => setModalDeleteAll(true)}>\r\n                <TrashIcon/> All\r\n            </Button>\r\n        );\r\n    };\r\n    const onClickOpen = () => setIsOpen(!isOpen);\r\n\r\n    function expandButton() {\r\n        if (items === null || items.map === null || items.map.size === 0) {\r\n            return (<></>);\r\n        }\r\n        if (isOpen) {\r\n            return (\r\n                <Button variant=\"outline-primary\" className=\"ms-0 mb-2\" onClick={onClickOpen}>\r\n                    <><CollapseIcon /> All</>\r\n                </Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <Button variant=\"outline-primary\" className=\"ms-0 mb-2\" onClick={onClickOpen}>\r\n                    <><ExpandIcon /> All</>\r\n                </Button>\r\n            );\r\n        }\r\n    };\r\n    function search() {\r\n        if (items === null || items.map === null || items.map.size < 2) {\r\n            return (<></>);\r\n        }\r\n        return (\r\n            <InputGroup className=\"pb-2 flex-nowrap\">\r\n                <WTypeDropdown weaponType={weaponType} setWeaponType={setWeaponType}></WTypeDropdown>\r\n                <Form.Control maxLength=\"70\" onChange={(e) => setFilterName(e.target.value)} />\r\n            </InputGroup>\r\n        );\r\n    }\r\n    function onPageChanged(page, pageSize) {\r\n        setStartIndex(pageSize * (page - 1));\r\n        setPage(page);\r\n        setPageSize(pageSize);\r\n    }\r\n\r\n    // <div className=\"overflow-auto wrapper\"></div>\r\n    return (\r\n        <div className=\"p-0 m-1 mb-2\">\r\n            <Card className=\"text-center mb-0\">\r\n                <div className='card-header'>\r\n                    <SnapshotsHeader items={items} sortCreatureName={sortCreatureName} setSortCreatureName={setSortCreatureName} uniqueCreatureNames={uniqueCreatureNames} setModalDownloadSnapshots={setModalDownloadSnapshots} setModalUploadSnapshots={setModalUploadSnapshots} />\r\n                </div>\r\n                <ModalDownloadSnapshots items={items} modalDownloadSnapshots={modalDownloadSnapshots} setModalDownloadSnapshots={setModalDownloadSnapshots}></ModalDownloadSnapshots>\r\n                <ModalDownloadSnapshot items={items} modalDownloadSnapshot={modalDownloadSnapshot} setModalDownloadSnapshot={setModalDownloadSnapshot}></ModalDownloadSnapshot>\r\n                <ModalUploadSnapshots items={items} setItems={setItems} setNextId={setNextId} show={modalUploadSnapshots} setModalUploadSnapshots={setModalUploadSnapshots}></ModalUploadSnapshots>\r\n                <ModalNewItem player={player} playerStats={playerStats} stuffBoost={stuffBoost} id={id} creatures={creatures} boostDamage={boostDamage} wSpec={wSpec} extraDamage={extraDamage} additionalDamages={additionalDamages} resultDamage={resultDamage} items={items} setItems={setItems} setNextId={setNextId} show={modalNewItemShow} setModalNewItemShow={setModalNewItemShow} />\r\n                <ModalDeleteItem items={items} setItems={setItems} itemId={modalDeleteItem.id} show={modalDeleteItem.show} name={modalDeleteItem.name} setModalDeleteItem={setModalDeleteItem} />\r\n                <ModalDeleteAll items={items} setItems={setItems} modalDeleteAll={modalDeleteAll} setModalDeleteAll={setModalDeleteAll} setNextId={setNextId} />\r\n                <ModalApplyItem applySnapshot={applySnapshot} items={items} itemId={modalApplyItem.id} show={modalApplyItem.show} name={modalApplyItem.name} setModalApplyItem={setModalApplyItem} />\r\n                <ModalRenameItem id={modalRenameItem.id} items={items} setItems={setItems} show={modalRenameItem.show} setModalRenameItem={setModalRenameItem}></ModalRenameItem>\r\n                <ModalUpdateItem player={player} playerStats={playerStats} stuffBoost={stuffBoost} name={modalUpdateItem.name} items={items} setItems={setItems} creatures={creatures} boostDamage={boostDamage} wSpec={wSpec} extraDamage={extraDamage} additionalDamages={additionalDamages} resultDamage={resultDamage} modalUpdateItem={modalUpdateItem} setModalUpdateItem={setModalUpdateItem}></ModalUpdateItem>\r\n                <Card.Body className=\"pt-2 ps-1 pe-1\">\r\n                    {search()}\r\n                    <div className=\"d-flex flex-row mt-1 mb-2\">\r\n                        <div className=\"col w-100 d-flex justify-content-start\">\r\n                            {expandButton()}\r\n                        </div>\r\n                        <div className=\"col w-100\">\r\n                            <Button className=\"mb-2\" onClick={() => setModalNewItemShow(true)}>+</Button>\r\n                        </div>\r\n                        <div className=\"col w-100 d-flex justify-content-end\">\r\n                            {trashAllButton()}\r\n                        </div>\r\n                    </div>\r\n                    <SnapshotItems onPageChanged={onPageChanged} startIndex={startIndex} pageSize={pageSize} page={page} items={items} isOpen={isOpen} sortCreatureName={sortCreatureName} filterName={filterName} weaponType={weaponType} setModalDownloadSnapshot={setModalDownloadSnapshot} setModalUpdateItem={setModalUpdateItem} setModalRenameItem={setModalRenameItem} setModalDeleteItem={setModalDeleteItem} setModalApplyItem={setModalApplyItem} />\r\n                </Card.Body>\r\n            </Card>\r\n            <FloatButton.BackTop style={{ right: 120 }} duration={100} visibilityHeight={2000} />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Snapshots;","import Popover from 'react-bootstrap/Popover';\r\n\r\nexport const mainInfoPopover = (\r\n    <Popover className=\"popover-adjustable\">\r\n        <Popover.Header as=\"h3\">\r\n            <strong>Note</strong>\r\n        </Popover.Header>\r\n        <Popover.Body className=\"popover-body3\">\r\n            <p className=\"m-1\"><b>All data</b> presented in this calculator is parsed directly from .esm files. Be sure that the version of game you are playing corresponds to the version of data presented in this calculator that can be seen via '?' button for every particular data section.</p>\r\n            <p className=\"m-1\"><strong>CRIT</strong> calculates critical damage, <strong>☠️ Fr:</strong> means crit frequency (1 / 2 - every second shot is crit).</p>\r\n            <p className=\"m-1\"><strong>SNEAK</strong> calculates sneak damage (100% hits are sneak).</p>\r\n            <p className=\"m-1\"><strong>HEAD</strong> calculates head shot damage, <strong>🤕 Fr</strong> means head shot frequency (80% - 4 of 5 shots are head shots, kill time for each time can be slightly different due to randomness).</p>\r\n            <p className=\"m-1\"><strong>DPS</strong> (damage per second) is counting reload time also. If you have only 1 slot in a magazine, 1 shot per second, 10 damage per shot and 1 second to reload, then dps = 5 provided that resistances of creature = 0. Charts show <b>DPS</b> provided that <b>Sneak</b> triggers every hit and <b>Crit</b> / <b>HeadShot</b> trigger as specified, accuracy and chance counting for every damage separately. Time damage is counting without stacking.</p>\r\n            <p className=\"m-1\"><strong>Creatures.</strong> Real NPC's can have equipment or perks which can affect resistance / damage which not presented in the calculator.</p>\r\n            <p className=\"m-1\"><strong>This calculator</strong> does not represent your real game experience, it has some limitations and it calculates creature's life time\r\n                provided that a creature is standing still under the fire until death. </p>\r\n            <p className=\"m-1\">However when all else being equal you can rely on this numbers to compare efficiency\r\n                of weapons with a pretty good accuracy. Go to GitHub page via burger menu for details.</p>\r\n            <p className=\"m-1\"><b>Usage.</b> At the beginning, go to '<b>Weapons</b>' tab, unfold a weapon's section you like, tap - '<b>Calculate</b>' - '<b>Start</b>' - '<b>Apply</b>', enjoy.</p>\r\n            <p className=\"m-1\"><b>To choose</b> creature and its level, tap on <b className=\"creature-label-text\">Creature</b> label and <b className=\"creature-label-text\">Level</b> in the <b>Creature Details View</b>. </p>\r\n        </Popover.Body>\r\n    </Popover>\r\n);\r\n","import { mainInfoPopover } from './MainInfoPopover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nexport default function MainInfoButton(props) {\r\n    return (\r\n        <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"left\" overlay={mainInfoPopover}>\r\n            <Button variant=\"white-blue-border\" style={{cursor: 'help'}}><small><b>?</b></small></Button>\r\n        </OverlayTrigger>\r\n    );\r\n}","import Card from 'react-bootstrap/Card';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport MainInfoButton from './MainInfoButton';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport { ammo, fireRate, addText } from '../helpers/Emoji';\r\nimport Strings from '../helpers/Strings';\r\nimport Button from 'react-bootstrap/Button';\r\nimport TemplateTools from '../templates/TemplateTools';\r\n\r\n\r\nexport function buildExtraDamageView(extraDamage, setExtraDamage, boostDamageRef, setBoostDamage, info=false) {\r\n    function useCrit(e) {\r\n        extraDamage.useCrit = e.target.checked;\r\n        setExtraDamage({...extraDamage});\r\n    }\r\n\r\n    function useSneak(e) {\r\n        extraDamage.useSneak = e.target.checked;\r\n        const card = boostDamageRef.current.follow_through;\r\n        card.displayed_value = (card.is_used && extraDamage.useSneak) ? card.value : 0.0;\r\n        setExtraDamage({...extraDamage});\r\n        setBoostDamage({...boostDamageRef.current});\r\n    }\r\n\r\n    function useHead(e) {\r\n        extraDamage.useHead = e.target.checked;\r\n        setExtraDamage({...extraDamage});\r\n    }\r\n    const infoButton = (info) ? (<MainInfoButton />) : (<></>);\r\n    return (\r\n        <Stack className='p-0 m-0 justify-content-evenly' direction=\"horizontal\" gap={1}>\r\n            <UCheckbox onChange={useCrit} checked={extraDamage.useCrit}><strong className=\"ps-1\"><small>☠️ CRIT</small></strong></UCheckbox>\r\n            <UCheckbox onChange={useSneak} checked={extraDamage.useSneak}><strong className=\"ps-1\"><small>🐍 SNEAK</small></strong></UCheckbox>\r\n            <UCheckbox onChange={useHead} checked={extraDamage.useHead}><strong className=\"ps-1\"><small>🤕 HEAD</small></strong></UCheckbox>\r\n            {infoButton}\r\n        </Stack>\r\n    );\r\n}\r\n\r\nexport function getFireRateLabel(weaponType) {\r\n    const isRanged = TemplateTools.isWeaponRangedByType(weaponType);\r\n    const fireRateLabel = Strings.getFireRate(weaponType) + \":\";\r\n    return (isRanged) ? (addText(fireRate, '0.7rem', '0.27rem', fireRateLabel)) : ('👊🏼 ' + fireRateLabel);\r\n}\r\n\r\nexport function buildExtraDamageButtons(extraDamage, setExtraDamage) {\r\n    function crf(e) {\r\n        extraDamage.critFreq -= 1;\r\n        if (extraDamage.critFreq === 0) {\r\n            extraDamage.critFreq = 7;\r\n        }\r\n        setExtraDamage({...extraDamage});\r\n    }\r\n    function hef(e) {\r\n        extraDamage.headFreq += 10;\r\n        if (extraDamage.headFreq > 100) {\r\n            extraDamage.headFreq = 20;\r\n        }\r\n        setExtraDamage({...extraDamage});\r\n    }\r\n    return (\r\n        <div className=\"text-muted d-flex justify-content-between\">\r\n            <Button variant=\"blue-white-border\" style={{ width: '6.5rem', height: '2rem'}} className=\"ms-2 me-2\" onClick={crf}><strong>☠️ Fr: 1 / {extraDamage.critFreq}</strong></Button>\r\n            <Button variant=\"blue-white-border\" style={{ width: '6.5rem', height: '2rem'}} className=\"ms-2 me-2\" onClick={hef}><strong>🤕 Fr: {extraDamage.headFreq}%</strong></Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SummaryView(props) {\r\n    let damageText = \"\";\r\n    let fireRateText = \"\";\r\n    let displayedCrit = 0;\r\n    let displayedSneak = 0;\r\n    let reloadTime = 0;\r\n    let ammoCapacity = 0;\r\n    let tDamage = 0;\r\n    let shotSize = 1;\r\n    let fRate = 10;\r\n    if (props.resultDamage && Object.keys(props.resultDamage).length > 0) {\r\n        reloadTime = props.resultDamage.reloadTime;\r\n        displayedCrit = props.resultDamage.displayedCrit;\r\n        displayedSneak = props.resultDamage.displayedSneak;\r\n        tDamage = props.resultDamage.tDamage;\r\n        shotSize = props.resultDamage.shotSize;\r\n        damageText = tDamage.toFixed(1) + \" x \" + shotSize;\r\n        fRate = props.resultDamage.fireRate;\r\n        fireRateText = fRate.toFixed(0) + \" - \" + (fRate / 10.0).toFixed(2) + \" shots / sec\";\r\n        ammoCapacity = props.resultDamage.ammoCapacity;\r\n    }\r\n    const fireRateLabel = getFireRateLabel(props.resultDamage.weaponType);\r\n    return (\r\n        <Card className={props.className}>\r\n            <Card.Header className=\"pe-0 ps-0\">\r\n                {buildExtraDamageView(props.extraDamage, props.setExtraDamage, props.boostDamageRef, props.setBoostDamage, true)}\r\n            </Card.Header>\r\n            <Card.Body className=\"pt-0 pb-0\">\r\n                {keyValueRow((<span className=\"pt-0 pb-0\"><strong>💥 Damage:</strong></span>), (<span className=\"pt-0 pb-0\"><strong>{damageText}</strong></span>), \"default\", \"red\")}\r\n                {keyValueRow((<span className=\"mt-0 mb-0\"><strong>☠️ Crit:</strong></span>), (<span className=\"mt-1 mb-1\"><strong>{\"+\" + displayedCrit + \"%\"}</strong></span>), \"default\", \"magenta\")}\r\n                {keyValueRow((<span className=\"mt-0 mb-0\"><strong>🐍 Sneak:</strong></span>), (<span className=\"mt-1 mb-1\"><strong>{\"+\" + displayedSneak + \"%\"}</strong></span>), \"default\", \"green\")}\r\n                {keyValueRow((<span className=\"mt-0 mb-0\"><strong>{fireRateLabel}</strong></span>), (<span className=\"mt-1 mb-1\"><strong>{fireRateText}</strong></span>), \"default\", \"purple\")}\r\n                {keyValueRow((<div className=\"mt-0 mb-0\"><strong>{addText(ammo, '0.7rem', '0.27rem', \"Ammo:\")}</strong></div>), (<span className=\"mt-1 mb-1\"><strong>{ammoCapacity}</strong></span>), \"default\", \"default\")}\r\n                {keyValueRow((<span className=\"mt-0 mb-0\"><strong>⌛ Reload:</strong></span>), (<span className=\"mt-1 mb-1\"><strong>{reloadTime.toFixed(1) + \" s\"}</strong></span>), \"default\", \"blue\")}\r\n            </Card.Body>\r\n            <Card.Footer className=\"ps-0 pe-0\">\r\n                {buildExtraDamageButtons(props.extraDamage, props.setExtraDamage)}\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n}","import Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport { keyValueRow } from '../helpers/RowBuilder';\r\nimport { getHotPercentage } from '../helpers/Item';\r\nimport { Progress } from 'antd';\r\nimport { memo, useState } from 'react';\r\nimport { ammo, addText } from '../helpers/Emoji';\r\nimport { getImageElement } from '../helpers/WeaponImages';\r\nimport { getAverageTime } from \"../entities/ECreatures\";\r\nimport { getLegendary } from '../helpers/LegendaryProvider';\r\nimport Button from 'react-bootstrap/Button';\r\nimport AAView from '../damage/AAView';\r\nimport DamageDetailsCard from '../damage/DamageDetailsCard';\r\nimport Row from 'react-bootstrap/Row';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\nimport { buildCreatureInfo2 } from '../creature/CreatureInfoPopover';\r\nimport ResistanceChart from '../main/ResistanceChart';\r\nimport { buildExtraDamageView, getFireRateLabel } from './SummaryView';\r\n\r\n\r\nfunction getLegendaryRow(legendaryId, star) {\r\n    if (!legendaryId || legendaryId === \"\" || star > 5) {\r\n        return (<></>);\r\n    } else {\r\n        let stars = \"⭐\";\r\n        stars = stars.repeat(star);\r\n        const legData = getLegendary(legendaryId);\r\n        if (!legData) {\r\n            return (<></>);\r\n        }\r\n        return (<>{keyValueRow(stars, legData.name, \"default\", \"gold\")}</>)\r\n    }\r\n}\r\n\r\nconst ToastSpecs = memo(function ToastSpecs({creatures, legendary, iconName, weaponName, graphValues, resultDamage, showStat, setShowStat, creatureChartNumber, setCreatureChartNumber, extraDamage, setExtraDamage, boostDamageRef, setBoostDamage}) {\r\n    console.log(\"ToastSpecs\");\r\n    const [showView, setShowView] = useState(\"Main\");\r\n    const [detailIndex, setDetailIndex] = useState(-1);\r\n    const [creatureNumber, setCreatureNumber] = useState(1);\r\n    const dropdownNames = [\"Main\", \"Damage Stats\", \"Creature\", \"Chart\"];\r\n    if (resultDamage.damageDetails && (resultDamage.damageDetails.length - 1) < detailIndex) {\r\n        setDetailIndex(-1);\r\n    }\r\n    if (!resultDamage || Object.keys(resultDamage).length === 0) {\r\n        return (<></>);\r\n    }\r\n    let strengthTail = (resultDamage.strengthBonus > 0) ? \" (+\" + resultDamage.strengthBonus + \"%)\" : \"\";\r\n    const strength = resultDamage.strength + strengthTail;\r\n    let bonuses = [];\r\n    for(let property in resultDamage.bonusMult) {\r\n        bonuses.push((resultDamage.bonusMult[property] - 1) * 100);\r\n    }\r\n    const minBonus = Math.min(...bonuses).toFixed(0);\r\n    const maxBonus = Math.max(...bonuses).toFixed(0);\r\n    const bonusText = minBonus + \"% - \" + maxBonus + \"%\";\r\n    const totalBonusTextMin = (((resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer) - 1) * 100).toFixed(0) + \"%\";\r\n    const totalBonusTextMax = (((resultDamage.totalBonus.value * resultDamage.totalBonus.tenderizer * resultDamage.totalBonus.executioner) - 1) * 100).toFixed(0) + \"%\";\r\n    const totalBonusText = totalBonusTextMin + \" - \" + totalBonusTextMax;\r\n    let toastBody = null;\r\n    if (showView === \"Main\") {\r\n        toastBody = getMainToast(creatures, resultDamage, legendary, bonusText, totalBonusText, strength)\r\n    } else if (showView === \"Damage Stats\") {\r\n        toastBody = getDetails(resultDamage, detailIndex, setDetailIndex);\r\n    } else if (showView === \"Creature\") {\r\n        toastBody = getCreatures(resultDamage, creatures, creatureNumber);\r\n    } else {\r\n        toastBody = getChart(graphValues, creatures, creatureChartNumber, setCreatureChartNumber);\r\n    }\r\n    function onDropdownSelect(e) {\r\n        setShowView(e);\r\n    }\r\n    return (\r\n        <ToastContainer\r\n            className=\"position-fixed p-1\"\r\n            position={\"top-center\"}\r\n            role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\r\n            style={{ zIndex: 10 }}>\r\n            <Toast bg=\"light\" onClose={(e) => setShowStat(false)} show={showStat} animation={false}>\r\n                <Toast.Header className=\"pe-3\">\r\n                    {getImageElement(iconName, \"1.5rem\")}\r\n                    <strong className=\"ms-2 mt-auto mb-auto p-auto me-auto\">{weaponName}</strong>\r\n                    <small className=\"me-2\">\r\n                        <Progress\r\n                            type=\"dashboard\"\r\n                            steps={50}\r\n                            percent={getHotPercentage(creatures)}\r\n                            format={(percent) => percent}\r\n                            size={28}\r\n                            strokeColor=\"rgb(64, 255, 255)\"\r\n                            trailColor=\"rgba(0, 0, 0, 0.06)\"\r\n                            strokeWidth={20} />\r\n                    </small>\r\n                </Toast.Header>\r\n                <div className=\"m-1\" />\r\n                {buildExtraDamageView(extraDamage, setExtraDamage, boostDamageRef, setBoostDamage)}\r\n                {toastBody}\r\n                <Row className=\"pb-2\">\r\n                    <div className=\"col d-flex justify-content-start\">\r\n                        {getPrevButtonDetails(showView, resultDamage.damageDetails.length, detailIndex, setDetailIndex)}\r\n                        {getPrevButtonCreature(showView, creatureNumber, setCreatureNumber)}\r\n                    </div>\r\n                    <div className=\"col d-flex justify-content-center\">\r\n                        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onDropdownSelect} names={dropdownNames} title={<strong>{showView}</strong>} />\r\n                    </div>\r\n                    <div className=\"col d-flex justify-content-end\">\r\n                        {getNextButtonDetails(showView, resultDamage.damageDetails.length, detailIndex, setDetailIndex)}\r\n                        {getNextButtonCreature(showView, creatureNumber, setCreatureNumber)}\r\n                    </div>\r\n                </Row>\r\n            </Toast>\r\n        </ToastContainer>\r\n    );\r\n});\r\n\r\nfunction getChart(graphValues, creatures, creatureNumber, setCreatureNumber) {\r\n    return (<ResistanceChart graphValues={graphValues} chartId={\"toastResChart\"} dps='true' creatures={creatures} creatureNumber={creatureNumber} setCreatureNumber={setCreatureNumber} />);\r\n}\r\n\r\nfunction getPrevButtonDetails(showView, detailsLength, detailIndex, setDetailIndex) {\r\n    function onClick(e) {\r\n        let index = detailIndex - 1;\r\n        if (index < -1) {\r\n            index = detailsLength - 1;\r\n        }\r\n        setDetailIndex(index);\r\n    }\r\n    const symbol = \"<<\";\r\n    if (showView !== \"Damage Stats\" || detailsLength === 0) {\r\n        return (<></>);\r\n    } else {\r\n        return (<Button size=\"sm\" variant=\"blue-white-border\" className=\"ms-2\" onClick={onClick}>{symbol}</Button>);\r\n    }\r\n}\r\n\r\nfunction getNextButtonDetails(showView, detailsLength, detailIndex, setDetailIndex) {\r\n    function onClick(e) {\r\n        let index = detailIndex + 1;\r\n        if (index > (detailsLength - 1)) {\r\n            index = -1;\r\n        }\r\n        setDetailIndex(index);\r\n    }\r\n    if (showView !== \"Damage Stats\" || detailsLength === 0) {\r\n        return (<></>);\r\n    } else {\r\n        return (<Button size=\"sm\" variant=\"blue-white-border\" className=\"me-2\" onClick={onClick}>>></Button>);\r\n    }\r\n}\r\n\r\nfunction getNextButtonCreature(showView, creatureNumber, setCreatureNumber) {\r\n    function onClick(e) {\r\n        let number = creatureNumber + 1;\r\n        if (number > 4) {\r\n            number = 1;\r\n        }\r\n        setCreatureNumber(number);\r\n    }\r\n    if (showView !== \"Creature\") {\r\n        return (<></>);\r\n    } else {\r\n        return (<Button size=\"sm\" variant=\"blue-white-border\" className=\"me-2\" onClick={onClick}>>></Button>);\r\n    }\r\n}\r\n\r\nfunction getPrevButtonCreature(showView, creatureNumber, setCreatureNumber) {\r\n    function onClick(e) {\r\n        let number = creatureNumber - 1;\r\n        if (number < 1) {\r\n            number = 4;\r\n        }\r\n        setCreatureNumber(number);\r\n    }\r\n    if (showView !== \"Creature\") {\r\n        return (<></>);\r\n    } else {\r\n        return (<Button size=\"sm\" variant=\"blue-white-border\" className=\"ms-2\" onClick={onClick}>{\"<<\"}</Button>);\r\n    }\r\n}\r\n\r\nfunction getCreatures(resultDamage, creatures, creatureNumber) {\r\n    const creature = creatures[\"creature\" + creatureNumber];\r\n    return (\r\n        <Toast.Body className=\"p-2\">\r\n            {buildCreatureInfo2(creature, resultDamage)}\r\n        </Toast.Body>\r\n    );\r\n}\r\n\r\nfunction getDetails(resultDamage, detailIndex, setDetailIndex) {\r\n    let view = null;\r\n    if (detailIndex === -1) {\r\n        view = (<AAView resultDamage={resultDamage}></AAView>);\r\n    } else {\r\n        view = (<DamageDetailsCard resultDamage={resultDamage} damageData={resultDamage.damageDetails[detailIndex]}></DamageDetailsCard>);\r\n    }\r\n    return (\r\n        <Toast.Body className=\"p-2\">\r\n            {view}\r\n        </Toast.Body>\r\n    );\r\n}\r\n\r\n/*\r\n            {keyValueRow('💣 Explosive:', \"+\" + resultDamage.explosive.toFixed(0) + \"%\", \"default\", \"pink\")}\r\n            {keyValueRow('🚀️ Bonus:', bonusText, \"default\", \"blue\")}\r\n            {keyValueRow('⏫ Total Bonus:', totalBonusText, \"default\", \"blue\")}\r\n            {keyValueRow('🐍 Sneak:', \"+\" + resultDamage.displayedSneak + \"%\", \"default\", \"darkGreen\")}\r\n            {keyValueRow('☠️ Crit:', \"+\" + resultDamage.displayedCrit + \"%\", \"default\", \"black\")}\r\n            {keyValueRow('💪 Strength:', strength, \"default\", \"brown\")}\r\n*/\r\nfunction getMainToast(creatures, resultDamage, legendary, bonusText, totalBonusText, strength) {\r\n    const fireRateLabel = getFireRateLabel(resultDamage.weaponType);\r\n    return (\r\n        <Toast.Body className=\"p-2\">\r\n            {keyValueRow('💥 Damage:', resultDamage.tDamage.toFixed(1) + ' x ' + resultDamage.shotSize, \"default\", \"indigo\")}\r\n            {keyValueRow(fireRateLabel, resultDamage.fireRate.toFixed(2) + \" - \" + (resultDamage.fireRate / 10.0).toFixed(1) + \" shots / sec\", \"default\", \"purple\")}\r\n            {keyValueRow(addText(ammo, '0.7rem', '0.27rem', \"Ammo / Hit:\"), resultDamage.ammoCapacity, \"default\", \"purple\")}\r\n            {keyValueRow('⌛ Reload:', resultDamage.reloadTime.toFixed(1) + ' s', \"default\", \"purple\")}\r\n            {keyValueRow('💪 Strength:', strength, \"default\", \"brown\")}\r\n            {keyValueRow('💀 Average Time:', getAverageTime(creatures), \"default\", \"red\")}\r\n            {getLegendaryRow(legendary[0][0], 1)}\r\n            {getLegendaryRow(legendary[1][0], 2)}\r\n            {getLegendaryRow(legendary[2][0], 3)}\r\n            {getLegendaryRow(legendary[3][0], 4)}\r\n            {getLegendaryRow(legendary[4][0], 5)}\r\n        </Toast.Body>\r\n    );\r\n}\r\nexport default ToastSpecs;","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport '../css/style.css'\r\nimport { checkLength } from '../helpers/Input';\r\nimport { bullet, ammo, fireRate } from '../helpers/Emoji';\r\nimport { memo } from 'react';\r\nimport { WarningPopover } from '../helpers/WarningPopover';\r\nimport Strings from '../helpers/Strings';\r\nimport TemplateTools from '../templates/TemplateTools';\r\n\r\n\r\nfunction column2(wSpec, onChange1, onChange2, icon, name, id1, id2, max1, max2, message) {\r\n    const value1 = wSpec[id1];\r\n    const value2 = wSpec[id2];\r\n    return (\r\n        <Col>\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                <WarningPopover message={message} header={name} element={<InputGroup.Text color='red' style={{ width: '2.58rem', backgroundColor: '#ff5795', cursor: 'pointer' }}>{icon}</InputGroup.Text>} />\r\n                <InputGroup.Text style={{ width: '6rem' }}>{name}</InputGroup.Text>\r\n                <Form.Control style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={value1} max={max1} maxLength=\"5\" onChange={onChange1} id={id1} />\r\n                <InputGroup.Text style={{ width: '2rem' }}>/</InputGroup.Text>\r\n                <Form.Control style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={value2} max={max2} maxLength=\"5\" onChange={onChange2} id={id2} />\r\n            </InputGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction column(wSpec, onChange, icon, name, id, max) {\r\n    let value = 0;\r\n    if (id.includes(\"creature\")) {\r\n        const index = parseInt(id.split(\"_\")[1]);\r\n        value = wSpec[\"creature\"][index].value;\r\n    } else {\r\n        value = wSpec[id];\r\n    }\r\n    return (\r\n        <Col key={id}>\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                <InputGroup.Text style={{ width: '2.58rem' }}>{icon}</InputGroup.Text>\r\n                <InputGroup.Text style={{ width: '10rem' }}>{name}</InputGroup.Text>\r\n                <Form.Control style={{ minWidth: '4rem' }} type=\"number\" min=\"0\" value={value} max={max} maxLength=\"5\" onChange={onChange} id={id} />\r\n            </InputGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nconst WRow = memo(function WRow({wSpec, setWSpec}) {\r\n\r\n    function onChange(e) {\r\n        checkLength(e);\r\n        let creatureIndex = -1;\r\n        if (e.target.id.includes(\"creature\")) {\r\n            creatureIndex = parseInt(e.target.id.split(\"_\")[1]);\r\n        } else if ((e.target.id === 'shot_size' || e.target.id === 'fireRate' || e.target.id === 'ammoCapacity') && e.target.value < 1) {\r\n            e.target.value = 1;\r\n        } else if (e.target.id === 'accuracy' && e.target.value < 10) {\r\n            e.target.value = 10;\r\n        } else if ((e.target.id === 'speed' || e.target.id === 'reloadSpeed') && e.target.value < 0.1) {\r\n            e.target.value = 0.1;\r\n        }\r\n        const val = parseFloat(e.target.value);\r\n        if (creatureIndex > -1) {\r\n            wSpec[\"creature\"][creatureIndex].value = val;\r\n        } else {\r\n            wSpec[e.target.id] = val;\r\n        }\r\n        setWSpec({\r\n            ...wSpec,\r\n        });\r\n    }\r\n    // const shotSize = (<>{bullet(\"1.1rem\")} <div style={{marginLeft: '0.35rem'}}>Shot Size</div></>);\r\n    // const fRate = (<>{fireRate(\"1.1rem\")} <div style={{marginLeft: '0.45rem'}}>Fire Rate</div></>);\r\n    // const iAmmo = (<>{ammo(\"1.1rem\")} <div style={{marginLeft: '0.42rem'}}>Ammo Capacity</div></>);\r\n    let creatureViews = [];\r\n    for (let i = 0; i < wSpec.creature.length; i++) {\r\n        const creature = wSpec.creature[i];\r\n        creatureViews.push(column(wSpec, onChange, \"🐵\", creature.name, \"creature_\" + i, 500));\r\n    }\r\n    const isRanged = TemplateTools.isWeaponRangedByType(wSpec.type);\r\n    const fireRateIcon = (isRanged) ? (fireRate(\"1.1rem\")) : ('👊🏼');\r\n    const defFireRateLabel = \"Def \" + Strings.getFireRate(wSpec.type);\r\n    return (\r\n        <Row>\r\n            {column(wSpec, onChange, bullet(\"1.1rem\"), \"Shot Size\", \"shot_size\", 16)}\r\n            {column(wSpec, onChange, '⌛', \"Def Reload Time\", \"defReloadTime\", 60)}\r\n            {column(wSpec, onChange, fireRateIcon, defFireRateLabel, \"fireRate\", 199)}\r\n            {column(wSpec, onChange, ammo(\"1.1rem\"), \"Ammo Capacity\", \"ammoCapacity\", 9999)}\r\n            {column(wSpec, onChange, \"🛡️\", \"Anti Armor\", \"aa\", 40)}\r\n            {column(wSpec, onChange, \"💪\", \"Strength Boost\", \"strengthBoost\", 25)}\r\n            {column(wSpec, onChange, \"☠️\", \"Crit\", \"crit\", 200)}\r\n            {column(wSpec, onChange, \"🐍\", \"Sneak\", \"sneak\", 100)}\r\n            {column(wSpec, onChange, \"🌪️\", \"Bash\", \"bash\", 200)}\r\n            {column(wSpec, onChange, \"💣\", \"Explosive\", \"exp\", 100)}\r\n            {creatureViews}\r\n            {column(wSpec, onChange, \"🚀\", \"Damage Bonus\", \"bonus\", 500)}\r\n            {column(wSpec, onChange, \"☄️\", \"Weapon Speed\", \"speed\", 5)}\r\n            {column(wSpec, onChange, \"💨\", \"Reload Speed\", \"reloadSpeed\", 5)}\r\n            {column(wSpec, onChange, \"🪓\", \"Power Attack\", \"powerAttack\", 200)}\r\n            {column2(wSpec, onChange, onChange, \"🦵\", \"Cripple\", \"cripple\", \"crippleChance\", 100, 100, \"% Damage Boost / Chance (100% if headshot)\")}\r\n            {column2(wSpec, onChange, onChange, \"🔋\", \"Charge\", \"chargeTime\", \"maxChargeTime\", 5, 5, \"Charge Time / Max Charge Time\")}\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default WRow;","import { setCurrentLegendaryIds } from '../helpers/Global';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { useState } from 'react';\r\nimport { Slider } from 'antd';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nconst allMarks = {\r\n\r\n    marks3: {\r\n        0: '0',\r\n        1: '1',\r\n        2: '2',\r\n        3: '3',\r\n    },\r\n\r\n    marks25: {\r\n        0: '0%',\r\n        5: '5%',\r\n        10: '10%',\r\n        15: '15%',\r\n        20: '20%',\r\n        25: '25%',\r\n    },\r\n\r\n    marks40: {\r\n        0: '0%',\r\n        10: '10%',\r\n        20: '20%',\r\n        30: '30%',\r\n        40: '40%',\r\n    },\r\n\r\n    marks50: {\r\n        0: '0%',\r\n        10: '10%',\r\n        20: '20%',\r\n        30: '30%',\r\n        40: '40%',\r\n        50: '50%',\r\n    },\r\n\r\n    marks95: {\r\n        0: '0%',\r\n        20: '20%',\r\n        40: '40%',\r\n        60: '60%',\r\n        80: '80%',\r\n        95: '95%',\r\n    },\r\n\r\n    marks100: {\r\n        0: '0%',\r\n        20: '20%',\r\n        40: '40%',\r\n        60: '60%',\r\n        80: '80%',\r\n        100: '100%',\r\n    },\r\n\r\n    marks20: {\r\n        0: '0%',\r\n        5: '5%',\r\n        10: '10%',\r\n        15: '15%',\r\n        20: '20%',\r\n    },\r\n\r\n    marks24: {\r\n        0: '0%',\r\n        6: '6%',\r\n        12: '12%',\r\n        18: '18%',\r\n        24: '24%',\r\n    },\r\n\r\n    marks300: {\r\n        0: '0%',\r\n        50: '50%',\r\n        100: '100%',\r\n        150: '150%',\r\n        200: '200%',\r\n        250: '250%',\r\n        300: '300%',\r\n    },\r\n\r\n    marks15: {\r\n        0: '0%',\r\n        3: '3%',\r\n        6: '6%',\r\n        9: '9%',\r\n        12: '12%',\r\n        15: '15%',\r\n    },\r\n};\r\n\r\nfunction LegSlider({legendaryInfo, marksName, wSpec, setWSpec, disabled=false}) {\r\n    const marks = allMarks[marksName];\r\n    const wSpecLeg = wSpec.legendary[legendaryInfo.star - 1];\r\n    const [redraw, setRedraw] = useState(false);\r\n\r\n    let value = legendaryInfo.max;\r\n\r\n    // Use adjustable value instead of default max\r\n    if (wSpecLeg[2] && wSpecLeg[2] !== \"\") {\r\n        value = wSpecLeg[1];\r\n    }\r\n\r\n    function slideChanged(e) {\r\n        wSpecLeg[1] = e;\r\n        setRedraw(!redraw);\r\n        setCurrentLegendaryIds(wSpec);\r\n    }\r\n\r\n    function slideFinished(e) {\r\n        setWSpec({...wSpec});\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Card className=\"mt-3 mb-2 pt-2 pb-2 ps-3 pe-3\">\r\n            <Col className=\"pt-2\">\r\n                <Slider disabled={!legendaryInfo.adjustable} open={true} onAfterChange={slideFinished} onChange={slideChanged} marks={marks} min={legendaryInfo.min} max={legendaryInfo.max} step={legendaryInfo.step} value={value} />\r\n            </Col>\r\n            </Card>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default LegSlider;","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { useEffect } from 'react';\r\nimport LegSlider from './LegSlider';\r\nimport { Collapse } from 'antd';\r\nimport { getLegendaryByStar, getLegendary } from '../helpers/LegendaryProvider';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport getMods from '../helpers/Mods';\r\nimport { setCurrentLegendaryIds } from '../helpers/Global';\r\nimport { popoverContent } from '../templates/ModPropsPopover';\r\nimport { WeaponPopoverOverlay } from '../helpers/WeaponPopoverOverlay';\r\nimport { ModParser } from '../helpers/mods/ModParser';\r\nimport { Tag } from 'antd';\r\n\r\n\r\nconst legendaryItems = getLegendaryByStar();\r\n\r\nconst modParser = new ModParser();\r\n\r\nfunction getQuestionMark() {\r\n    return (\r\n        <Badge className=\"ps-2 pe-2 mb-auto mt-auto\" bg={\"danger\"} style={{cursor: 'point'}} pill>?</Badge>\r\n    );\r\n}\r\n\r\nfunction updateLegendary(wSpec, setWSpec, health) {\r\n    for (let i = 0; i < wSpec.legendary.length; i++) {\r\n        const legendary = wSpec.legendary[i];\r\n        modParser.applyLegendaryModToWSpec(legendary[0], wSpec, i, health, true, true);\r\n    }\r\n    setWSpec({...wSpec});\r\n}\r\n\r\n// health, important if a value of a legendary effect depends on health\r\nfunction getLegendaryDropdown(legendaryInfo, wSpec, setWSpec, health, index) {\r\n    function onSelectCustom(e) {\r\n        modParser.applyLegendaryModToWSpec(wSpec.legendary[index][0], wSpec, index, health, false, false);\r\n        modParser.applyLegendaryModToWSpec(e, wSpec, index, health, false, true);\r\n        wSpec.legendary[index][0] = e;\r\n        setWSpec({...wSpec});\r\n    }\r\n    let result = [];\r\n    const legs = legendaryItems[index];\r\n    for (let i = 0; i < legs.length; i++) {\r\n        const legName = legs[i].name;\r\n        const legId = legs[i].id;\r\n        result.push(<Dropdown.Item key={i} eventKey={legId}>{legName}</Dropdown.Item>);\r\n    }\r\n    const title = (legendaryInfo) ? legendaryInfo.name : \"Legendary\";\r\n    const mod = (legendaryInfo) ? getMods().get(legendaryInfo.id) : null;\r\n    function getQM(mod) {\r\n        if (mod) {\r\n            return (\r\n                <Col className=\"d-flex justify-content-end\">\r\n                    <WeaponPopoverOverlay popoverHeader={mod.name} popoverContent={popoverContent(mod)} itemToOverly={getQuestionMark()}></WeaponPopoverOverlay>\r\n                </Col>\r\n            );\r\n        }\r\n        return (<></>);\r\n    };\r\n    return (\r\n        <Row>\r\n            <Col className=\"d-flex justify-content-start\">\r\n                <DropdownButton variant='warning' size=\"sm\" onSelect={onSelectCustom} title={<strong>{title}</strong>}>\r\n                    {result}\r\n                </DropdownButton>\r\n            </Col>\r\n            {getQM(mod)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction getEffectTag(effect) {\r\n    return (\r\n        <div className=\"mt-2 d-flex justify-content-end\">\r\n            <strong>\r\n                <Tag bordered={false} color={\"indigo\"}>{effect}</Tag>\r\n            </strong>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getLegendaryAdjust(legendaryInfo, wSpec, setWSpec) {\r\n    if (legendaryInfo && legendaryInfo.type !== \"Not affect\" && legendaryInfo.type !== \"Not affect (not tested)\") {\r\n        const marksName = \"marks\" + legendaryInfo.max;\r\n        const effect = legendaryInfo.type;\r\n        return (\r\n            <>\r\n                <LegSlider legendaryInfo={legendaryInfo} marksName={marksName} wSpec={wSpec} setWSpec={setWSpec}></LegSlider>\r\n                {getEffectTag(effect)}\r\n            </>\r\n        );\r\n    } else if (legendaryInfo) {\r\n        return (<>{getEffectTag(legendaryInfo.type)}</>);\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getLegendaryDetails(legendaryInfo) {\r\n    if (legendaryInfo) {\r\n        return (\r\n            <div className=\"pt-3 m-3\"><strong>{legendaryInfo.description}</strong></div>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction legBody(legendaryInfo, wSpec, setWSpec, health, index) {\r\n    return (\r\n        <>\r\n            {getLegendaryDropdown(legendaryInfo, wSpec, setWSpec, health, index)}\r\n            {getLegendaryDetails(legendaryInfo)}\r\n            {getLegendaryAdjust(legendaryInfo, wSpec, setWSpec)}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction getCollapse(header, legendaryInfo, wSpec, setWSpec, health, index) {\r\n    const legName = (legendaryInfo) ? legendaryInfo.name : \"\";\r\n    const headerName = header + \" \" + legName;\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>{headerName}</strong>,\r\n            children: <>{legBody(legendaryInfo, wSpec, setWSpec, health, index)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"mt-2 mb-2\">\r\n            <Collapse items={items} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function LegendarySelector({header, wSpec, setWSpec, health, index}) {\r\n    useEffect(() => {\r\n        setCurrentLegendaryIds(wSpec);\r\n        if (!wSpec.legendaryHealthUpdated) {\r\n            wSpec.legendaryHealthUpdated = true;\r\n            updateLegendary(wSpec, setWSpec, health);\r\n        }\r\n    }, [wSpec, health]);\r\n    useEffect(() => {\r\n        updateLegendary(wSpec, setWSpec, health);\r\n    }, [health]);\r\n    let legendaryInfo = null;\r\n    if (wSpec.legendary[index]) {\r\n        legendaryInfo = getLegendary(wSpec.legendary[index][0]);\r\n    }\r\n    return (\r\n        <>{getCollapse(header, legendaryInfo, wSpec, setWSpec, health, index)}</>\r\n    );\r\n}","import { memo } from 'react';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\n\r\n\r\nfunction empty() {\r\n    return (\r\n        <></>\r\n    );\r\n}\r\n\r\nconst autoW = {\"Non Automatic\": 0, \"Automatic\": 1};\r\nconst handW = {\"One Handed\": 0, \"TwoHanded\": 1};\r\n\r\nfunction auto(wSpec, setWSpec) {\r\n    const onClick = (e) => {\r\n        wSpec.is_auto = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    };\r\n    return (\r\n        <BSRadio className=\"pt-2 pb-2 d-flex justify-content-center\" pairs={autoW} selectedValue={wSpec.is_auto} onClick={onClick} />\r\n    );\r\n}\r\n\r\nfunction hand(wSpec, setWSpec) {\r\n    const onClick = (e) => {\r\n        wSpec.hand = parseInt(e.target.value);\r\n        setWSpec({...wSpec});\r\n    };\r\n    return (\r\n        <BSRadio className=\"pt-2 pb-2 d-flex justify-content-center\" pairs={handW} selectedValue={wSpec.hand} onClick={onClick} />\r\n    );\r\n}\r\n\r\nfunction content(wSpec, setWSpec) {\r\n    if (wSpec.type === \"Melee\") {\r\n        return hand(wSpec, setWSpec);\r\n    } else if (wSpec.type === \"Heavy\" || wSpec.type === \"Rifle\" || wSpec.type ===\"Shotgun\" || wSpec.type === \"Pistol\") {\r\n        return auto(wSpec, setWSpec);\r\n    }\r\n    return empty();\r\n}\r\n\r\nconst AutoHandSelector = memo(function AutoHandSelector({wSpec, setWSpec}) {\r\n    return (\r\n       <>{content(wSpec, setWSpec)}</>\r\n    );\r\n});\r\n\r\nexport default AutoHandSelector;","import { useState } from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\n\r\nexport default function NotificationToast({toastState}) {\r\n    const [show, setShow] = useState(toastState);\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={2000} autohide>\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">Limit</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>\r\n                        Damage limit has been achieved\r\n                    </Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport NotificationToast from '../helpers/NotificationToast';\r\nimport { getDamageTypeFromCellName, buildDamageItem } from '../helpers/mods/DamageSetter';\r\nimport { useState } from 'react';\r\nimport { notification } from 'antd';\r\n\r\n\r\nfunction getDropdown(wSpec, setWSpec, toastState, setToastState, openNotification) {\r\n    function onSelectCustom(e) {\r\n        if (wSpec.damages.length >= 6) {\r\n            openNotification();\r\n            return;\r\n        }\r\n        const type = getDamageTypeFromCellName(e);\r\n        const damageItem = buildDamageItem(wSpec.weaponId, \"custom\", type[0], type[1], type[2], 0, 0, 0, 0, 100, 100, false, wSpec.damages.length, true);\r\n        wSpec.damages.push(damageItem);\r\n\r\n        // Reindex\r\n        for (let i = 0; i < wSpec.damages.length; i++) {\r\n            wSpec.damages[i].index = i;\r\n        }\r\n        setWSpec({...wSpec});\r\n    }\r\n    return (\r\n        <Row className=\"p-2 mb-2 mt-1\">\r\n            <NotificationToast toastState={toastState}></NotificationToast>\r\n            <Col className=\"d-flex justify-content-center\">\r\n                <DropdownButton variant='warning' size=\"sm\" onSelect={onSelectCustom} title={<strong>Add Damage</strong>}>\r\n                    <Dropdown.Item eventKey=\"bbDamage\">💥 Physical</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"bleed\">🩸 Bleed</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"projExp\">🧨 Explosive</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"ebDamage\">⚡ Energy</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"fbDamage\">🔥 Fire</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"cbDamage\">❄️ Cryo</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"pbDamage\">☣️ Poison</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"rbDamage\">☢️ Radiation</Dropdown.Item>\r\n                </DropdownButton>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\n\r\nexport default function DamageAdd({wSpec, setWSpec}) {\r\n    const [toastState, setToastState] = useState(false);\r\n    const [api, contextHolder] = notification.useNotification();\r\n\r\n    const openNotification = () => {\r\n        api.open({\r\n            key: \"limit\",\r\n            message: 'Warning',\r\n            description: 'Damage limit has been achieved',\r\n            duration: 2,\r\n        });\r\n    };\r\n    return (\r\n        <>\r\n            {contextHolder}\r\n            {getDropdown(wSpec, setWSpec, toastState, setToastState, openNotification)}\r\n        </>\r\n    );\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst ModalDeleteDamage = memo(function ModalDeleteDamage(props) {\r\n    console.log(\"ModalDeleteDamage\");\r\n    if (!props.modalDeleteDamage.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalDeleteDamage({id: -1, name: 'none', show:  false});\r\n    }\r\n    function removeItem(e) {\r\n        try {\r\n            const index = props.modalDeleteDamage.id;\r\n            props.wSpec.damages.splice(index, 1);\r\n\r\n            // Reindex\r\n            for (let i = 0; i < props.wSpec.damages.length; i++) {\r\n                props.wSpec.damages[i].index = i;\r\n            }\r\n            props.setWSpec({...props.wSpec});\r\n        } catch {}\r\n        props.setModalDeleteDamage({id: -1, name: \"none\", show: false});\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.modalDeleteDamage.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Delete Item\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to delete '{props.modalDeleteDamage.name}' damage?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={removeItem}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ModalDeleteDamage;","import { Divider } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n\r\n\r\nexport default function AmmoInfoView({wSpec}) {\r\n    const name = wSpec.ammoType.name;\r\n    const type = wSpec.ammoType.type;\r\n    const codeName = wSpec.ammoType.codeName;\r\n    if (name && name !== \"\") {\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-3 mb-0\">Ammo</Divider>\r\n                <Row className=\"mt-2 mb-3\">\r\n                     <Col>\r\n                         <InputGroup className=\"mb-1 mt-1 d-flex justify-content-center\">\r\n                             <InputGroup.Text className=\"p-1 justify-content-center shadow-outline-ammo\" style={{ minWidth: '18rem' }}><small>{type}</small></InputGroup.Text>\r\n                         </InputGroup>\r\n                     </Col>\r\n                     <Col>\r\n                         <InputGroup className=\"mb-1 mt-1 d-flex justify-content-center\">\r\n                             <InputGroup.Text className=\"p-1 justify-content-center shadow-outline-ammo\" style={{ minWidth: '18rem' }}><small>{name}</small></InputGroup.Text>\r\n                         </InputGroup>\r\n                     </Col>\r\n                     <Col>\r\n                         <InputGroup className=\"mb-1 mt-1 d-flex justify-content-center\">\r\n                             <InputGroup.Text className=\"p-1 justify-content-center shadow-outline-ammo\" style={{ minWidth: '18rem' }}><small>{codeName}</small></InputGroup.Text>\r\n                         </InputGroup>\r\n                     </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag, Divider } from 'antd';\r\n\r\n\r\nfunction getTagView(tag) {\r\n    return (\r\n        <Col key={tag} className=\"m-1 ps-0 pe-0 d-flex justify-content-center\">\r\n            <Tag className=\"m-1 shadow-gold2\" bordered={true} color=\"volcano\">\r\n                <b>{tag}</b>\r\n            </Tag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function TagInfoView({tags}) {\r\n    if (tags && tags.length > 0) {\r\n        const result = [];\r\n        for (let i = 0; i < tags.length; i++) {\r\n            result.push(getTagView(tags[i]));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-3 mb-2\">Tags</Divider>\r\n                <Row className=\"ps-1 pe-1\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import Container from 'react-bootstrap/Container';\r\nimport WRow from \"./WRow\";\r\nimport LegendarySelector from \"./LegendarySelector\";\r\nimport { memo, useState } from 'react';\r\nimport { Divider, Tag } from 'antd';\r\nimport Row from 'react-bootstrap/Row';\r\nimport WTypeDropdown from '../helpers/WTypeDropdown';\r\nimport { getRowWithImage } from '../helpers/WTypeDropdown'\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport AutoHandSelector from '../damage/AutoHandSelector';\r\nimport DamageItem from './DamageItem';\r\nimport DamageAdd from './DamageAdd';\r\nimport ModalDeleteDamage from './ModalDeleteDamage';\r\nimport AmmoInfoView from './AmmoInfoView';\r\nimport TagInfoView from './TagInfoView';\r\n\r\n\r\nfunction modElement(mod) {\r\n    return (\r\n         <div key={mod.id} className=\"col d-flex\">\r\n            <InputGroup className=\"mb-1 mt-1 flex-nowrap justify-content-center\">\r\n                <InputGroup.Text className='bg-mod-cat' style={{ width: '8rem' }}><small>{mod.group}</small></InputGroup.Text>\r\n                <InputGroup.Text className='bg-mod-name' style={{ minWidth: '12rem' }}><small>{mod.name}</small></InputGroup.Text>\r\n            </InputGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DamageTable = memo(function DamageTable({setWSpec, wSpec, health}) {\r\n    console.log(\"DamageTable\");\r\n    const [weaponType, setWeaponType] = useState(wSpec.type);\r\n    const [modalDeleteDamage, setModalDeleteDamage] = useState({id: -1, name: 'none', show: false});\r\n    function onWeaponChange(e) {\r\n        wSpec.type = e;\r\n        setWSpec({...wSpec});\r\n    }\r\n    const mods = wSpec.mods.map((mod) => (modElement(mod)));\r\n    let dItems = [];\r\n    for (let i = 0; i < wSpec.damages.length; i++) {\r\n        dItems.push(<DamageItem key={i} item={wSpec.damages[i]} wSpec={wSpec} setWSpec={setWSpec} setModalDeleteDamage={setModalDeleteDamage}></DamageItem>);\r\n    }\r\n    return (\r\n        <Container fluid className=\"p-0\">\r\n            <ModalDeleteDamage wSpec={wSpec} setWSpec={setWSpec} modalDeleteDamage={modalDeleteDamage} setModalDeleteDamage={setModalDeleteDamage}></ModalDeleteDamage>\r\n            <DamageAdd wSpec={wSpec} setWSpec={setWSpec}></DamageAdd>\r\n            {dItems}\r\n            <Divider className=\"p-0 mt-2 mb-2\">Specs</Divider>\r\n            <WRow wSpec={wSpec} setWSpec={setWSpec}></WRow>\r\n            <Divider className=\"p-0 mt-2 mb-2\"></Divider>\r\n            <Row>\r\n                <div className=\"col d-flex justify-content-start\">\r\n                    <WTypeDropdown weaponType={weaponType} setWeaponType={setWeaponType} onSelect={onWeaponChange} title={\"Type\"}></WTypeDropdown>\r\n                </div>\r\n                 <div className=\"col d-flex justify-content-end pe-1\">\r\n                    <Tag bordered={true} color=\"volcano\" className=\"pt-2\"><h6 className=\"m-auto p-auto\"><strong>{getRowWithImage(wSpec.type)}</strong></h6></Tag>\r\n               </div>\r\n            </Row>\r\n            <Divider className=\"p-0 mt-2 mb-2\"></Divider>\r\n            <AutoHandSelector wSpec={wSpec} setWSpec={setWSpec}></AutoHandSelector>\r\n            <Divider className=\"p-0 mt-2 mb-2\">Legendary Effects</Divider>\r\n            <LegendarySelector index={0} header={\"⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <LegendarySelector index={1} header={\"⭐⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <LegendarySelector index={2} header={\"⭐⭐⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <LegendarySelector index={3} header={\"⭐⭐⭐⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <LegendarySelector index={4} header={\"⭐⭐⭐⭐⭐\"} wSpec={wSpec} setWSpec={setWSpec} health={health}></LegendarySelector>\r\n            <Divider className=\"p-0 mt-2 mb-2\">Modifications</Divider>\r\n            <Row className=\"d-flex\">\r\n                {mods}\r\n            </Row>\r\n            <AmmoInfoView wSpec={wSpec}></AmmoInfoView>\r\n            <TagInfoView tags={wSpec.tags}></TagInfoView>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default DamageTable;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport DamageTable from \"../damage/DamageTable\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { memo } from 'react';\r\n\r\n\r\nconst WeaponSpecs = memo(function WeaponSpecs({wSpec, setWSpec, showStatRef, setShowStat, health}) {\r\n    console.log(\"WeaponSpecs\");\r\n    const openStat = (e) => {\r\n        setShowStat(!showStatRef.current);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"0\">\r\n                <Accordion.Header>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '10rem'}}>\r\n                            <span className=\"ac-text\">Weapon Specs</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '4rem'}} onClick={openStat}>Stats</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"p-2\">\r\n                    <DamageTable setWSpec={setWSpec} wSpec={wSpec} health={health}></DamageTable>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default WeaponSpecs;\r\n","export function calculateSpecial(boostDamage) {\r\n    for (let key in boostDamage.special) {\r\n        boostDamage.special[key] = 0;\r\n    }\r\n    for (let key in boostDamage) {\r\n        if (key === \"special\") {\r\n            continue;\r\n        }\r\n        const card = boostDamage[key];\r\n        const special = boostDamage.special;\r\n        const type = card.category.toLowerCase();\r\n        if (card.is_used) {\r\n            special[type] += card.cost[card.rank - 1];\r\n        }\r\n    }\r\n}","import { defaultBoosts } from '../entities/EBoosts';\r\nimport { calculateSpecial } from './BoostHelpers';\r\n\r\n\r\nexport default class PerkCardBuilder {\r\n\r\n    static build(buildName, setBoostDamage, player, setPlayer) {\r\n        let boosts = defaultBoosts();\r\n        if (buildName !== \"Reset\") {\r\n            PerkCardBuilder.setupGeneral(boosts, player);\r\n        }\r\n        switch(buildName) {\r\n            case \"Heavy\":\r\n                PerkCardBuilder.setupCard(boosts.stabilized, 3);\r\n                PerkCardBuilder.setupCard(boosts.heavy_gunner, 11);\r\n                PerkCardBuilder.setupCard(boosts.lock_and_load, 3);\r\n                break;\r\n            case \"Heavy Explosive\":\r\n                PerkCardBuilder.setupCard(boosts.stabilized, 3);\r\n                PerkCardBuilder.setupCard(boosts.heavy_gunner, 11);\r\n                PerkCardBuilder.setupCard(boosts.lock_and_load, 3);\r\n                PerkCardBuilder.setupCard(boosts.demolition_expert, 5);\r\n                break;\r\n            case \"Heavy FullHouse\":\r\n                PerkCardBuilder.setupCard(boosts.stabilized, 3);\r\n                PerkCardBuilder.setupCard(boosts.heavy_gunner, 11);\r\n                PerkCardBuilder.setupCard(boosts.lock_and_load, 3);\r\n                PerkCardBuilder.setupCard(boosts.demolition_expert, 5);\r\n                PerkCardBuilder.setupCard(boosts.adrenaline, 5, 6);\r\n                PerkCardBuilder.setupCard(boosts.tenderizer, 3);\r\n                PerkCardBuilder.setupCard(boosts.toft, 4);\r\n                break;\r\n            case \"Shotgun\":\r\n                PerkCardBuilder.setupCard(boosts.shotgunner, 11);\r\n                PerkCardBuilder.setupCard(boosts.scattershot, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Automatic Rifle\":\r\n                PerkCardBuilder.setupCard(boosts.commando, 11);\r\n                PerkCardBuilder.setupCard(boosts.ground_pounder, 3);\r\n                PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Non-Automatic Rifle\":\r\n                PerkCardBuilder.setupCard(boosts.rifleman, 11);\r\n                PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Automatic Pistol\":\r\n                PerkCardBuilder.setupCard(boosts.guerrilla, 11);\r\n                PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Non-Automatic Pistol\":\r\n                PerkCardBuilder.setupCard(boosts.gunslinger, 11);\r\n                PerkCardBuilder.setupCard(boosts.tank_killer, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Bow\":\r\n                PerkCardBuilder.setupCard(boosts.archer, 11);\r\n                PerkCardBuilder.setupCard(boosts.bow_before_me, 3);\r\n                PerkCardBuilder.setupCard(boosts.better_criticals, 3);\r\n                break;\r\n            case \"Melee One-Handed\":\r\n                PerkCardBuilder.setupCard(boosts.incisor, 3);\r\n                PerkCardBuilder.setupCard(boosts.martial_artist, 3);\r\n                PerkCardBuilder.setupCard(boosts.gladiator, 11);\r\n                PerkCardBuilder.setupCard(boosts.party_girl_boy, 2);\r\n                break;\r\n            case \"Melee Two-Handed\":\r\n                PerkCardBuilder.setupCard(boosts.incisor, 3);\r\n                PerkCardBuilder.setupCard(boosts.martial_artist, 3);\r\n                PerkCardBuilder.setupCard(boosts.slugger, 11);\r\n                PerkCardBuilder.setupCard(boosts.party_girl_boy, 2);\r\n                break;\r\n            case \"Unarmed\":\r\n                PerkCardBuilder.setupCard(boosts.incisor, 3);\r\n                PerkCardBuilder.setupCard(boosts.martial_artist, 3);\r\n                PerkCardBuilder.setupCard(boosts.iron_fist, 3);\r\n                PerkCardBuilder.setupCard(boosts.party_girl_boy, 2);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        calculateSpecial(boosts);\r\n        player.strange = boosts.strange_in_numbers.displayed_value;\r\n        player.freak = boosts.class_freak.displayed_value;\r\n        player.alcoholEffects = (boosts.party_girl_boy.displayed_value) > 0 ? boosts.party_girl_boy.displayed_value : 1;\r\n        setPlayer({...player});\r\n        setBoostDamage(boosts);\r\n    }\r\n\r\n    static setupGeneral(boosts, player) {\r\n        PerkCardBuilder.setupCard(boosts.bloody_mess, 3);\r\n        PerkCardBuilder.setupCard(boosts.class_freak, 3);\r\n        PerkCardBuilder.setupCard(boosts.strange_in_numbers, 1);\r\n        PerkCardBuilder.setupCard(boosts.nerd_rage, 3);\r\n        boosts.nerd_rage.displayed_value = (player.health.value <= 20.0) ? boosts.nerd_rage.value : 0.0;\r\n    }\r\n\r\n    static setupCard(card, rank, x=1) {\r\n        if (rank === 0) {\r\n            x = 1;\r\n        }\r\n        card.rank = rank;\r\n        card.x = x;\r\n        card.value = card.rank_values[card.rank - 1] * x;\r\n        card.is_used = (rank !== 0);\r\n        card.displayed_value = card.value;\r\n    }\r\n\r\n    static getImageNamesForPickedCards(boosts) {\r\n        const result = [];\r\n        for (const name in boosts) {\r\n            const perk = boosts[name];\r\n            if (perk.is_used) {\r\n                result.push(perk.im_name);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static setupIfAccessible(boosts, fieldName, rank, accessibleItems, x=1) {\r\n        if (accessibleItems[fieldName]) {\r\n            PerkCardBuilder.setupCard(boosts[fieldName], rank, x);\r\n        }\r\n    }\r\n\r\n    static buildWithOptions(wType, automatic, energyTag, explosiveTag, fusionTag, oneHandedTag, twoHandedTag, silencerTag,\r\n                            shotgunTag, main, temp, leg, drink, team, lowHp, pa, explosive, crit, sneak, night, useSerums,\r\n                            player, bodyTags, creatureTags, accessiblePerks) {\r\n        let boosts = defaultBoosts();\r\n        if (main) {\r\n            PerkCardBuilder.setupIfAccessible(boosts, \"bloody_mess\", 3, accessiblePerks.main);\r\n            if (bodyTags.includes(\"glowing\")) {\r\n                PerkCardBuilder.setupIfAccessible(boosts, \"glow_sight\", 3, accessiblePerks.main);\r\n            }\r\n        }\r\n        if (silencerTag && sneak && night && main) {\r\n            PerkCardBuilder.setupIfAccessible(boosts, \"mister_sandman\", 2, accessiblePerks.main);\r\n        }\r\n        if (useSerums && main) {\r\n            PerkCardBuilder.setupIfAccessible(boosts, \"class_freak\", 3, accessiblePerks.main);\r\n        }\r\n        if (team && main) {\r\n            PerkCardBuilder.setupIfAccessible(boosts, \"strange_in_numbers\", 1, accessiblePerks.main);\r\n        }\r\n        if (crit && main) {\r\n            PerkCardBuilder.setupIfAccessible(boosts, \"better_criticals\", 3, accessiblePerks.main);\r\n        }\r\n        if (lowHp && main) {\r\n            player.health.value = 20;\r\n            PerkCardBuilder.setupIfAccessible(boosts, \"nerd_rage\", 3, accessiblePerks.main);\r\n        }\r\n        if (energyTag && wType !== \"Heavy\" && main) {\r\n            PerkCardBuilder.setupIfAccessible(boosts, \"science\", 6, accessiblePerks.main);\r\n        }\r\n        if (fusionTag && main) {\r\n            PerkCardBuilder.setupIfAccessible(boosts, \"power_user\", 3, accessiblePerks.main);\r\n        }\r\n        if (temp) {\r\n            PerkCardBuilder.setupIfAccessible(boosts, \"adrenaline\", 5, accessiblePerks.temp, 6);\r\n            PerkCardBuilder.setupIfAccessible(boosts, \"tenderizer\", 3, accessiblePerks.temp);\r\n        }\r\n        if (leg) {\r\n            if (sneak) {\r\n                PerkCardBuilder.setupIfAccessible(boosts, \"follow_through\", 4, accessiblePerks.leg);\r\n            } else {\r\n                PerkCardBuilder.setupIfAccessible(boosts, \"toft\", 4, accessiblePerks.leg);\r\n            }\r\n        }\r\n        if (sneak && main) {\r\n            if (wType === \"Melee\" || wType === \"Unarmed\") {\r\n                PerkCardBuilder.setupIfAccessible(boosts, \"ninja\", 3, accessiblePerks.main);\r\n            } else {\r\n                PerkCardBuilder.setupIfAccessible(boosts, \"covert_operative\", 3, accessiblePerks.main);\r\n            }\r\n        }\r\n        if (explosive && main) { // Works with rockets / grenades?\r\n            PerkCardBuilder.setupIfAccessible(boosts, \"demolition_expert\", 5, accessiblePerks.main);\r\n        }\r\n        if (main) {\r\n            switch(wType) {\r\n                case \"Heavy\":\r\n                    if (pa) {\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"stabilized\", 3, accessiblePerks.main); // Works with rockets / grenades?\r\n                    }\r\n                    PerkCardBuilder.setupIfAccessible(boosts, \"lock_and_load\", 3, accessiblePerks.main); // Works with rockets / grenades?\r\n                    if (!explosiveTag) { // Are rockets / grenades weapons boosted by heavy cards?\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"heavy_gunner\", 11, accessiblePerks.main);\r\n                    }\r\n                    if (shotgunTag) {\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"lock_and_load\", 2, accessiblePerks.main);\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"heavy_gunner\", 9, accessiblePerks.main);\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"shotgunner\", 8, accessiblePerks.main);\r\n                    }\r\n                    break;\r\n                case \"Shotgun\":\r\n                    PerkCardBuilder.setupIfAccessible(boosts, \"shotgunner\", 11, accessiblePerks.main);\r\n                    PerkCardBuilder.setupIfAccessible(boosts, \"scattershot\", 3, accessiblePerks.main);\r\n                    break;\r\n                case \"Rifle\":\r\n                    PerkCardBuilder.setupIfAccessible(boosts, \"tank_killer\", 3, accessiblePerks.main);\r\n                    if (automatic) {\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"commando\", 11, accessiblePerks.main);\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"ground_pounder\", 3, accessiblePerks.main);\r\n                    } else {\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"rifleman\", 11, accessiblePerks.main);\r\n                    }\r\n                    break;\r\n                case \"Pistol\":\r\n                    PerkCardBuilder.setupIfAccessible(boosts, \"tank_killer\", 3, accessiblePerks.main);\r\n                    if (automatic) {\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"guerrilla\", 11, accessiblePerks.main);\r\n                    } else {\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"gunslinger\", 11, accessiblePerks.main);\r\n                    }\r\n                    break;\r\n                case \"Bow\":\r\n                    PerkCardBuilder.setupIfAccessible(boosts, \"archer\", 11, accessiblePerks.main);\r\n                    PerkCardBuilder.setupIfAccessible(boosts, \"bow_before_me\", 3, accessiblePerks.main);\r\n                    break;\r\n                case \"Melee\":\r\n                    PerkCardBuilder.setupIfAccessible(boosts, \"incisor\", 3, accessiblePerks.main);\r\n                    if (!automatic) {\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"martial_artist\", 3, accessiblePerks.main);\r\n                    }\r\n                    if (drink) {\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"party_girl_boy\", 2, accessiblePerks.main);\r\n                    }\r\n                    if (oneHandedTag) {\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"gladiator\", 11, accessiblePerks.main);\r\n                    } else if (twoHandedTag) {\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"slugger\", 11, accessiblePerks.main);\r\n                    }\r\n                    break;\r\n                case \"Unarmed\":\r\n                    PerkCardBuilder.setupIfAccessible(boosts, \"incisor\", 3, accessiblePerks.main);\r\n                    PerkCardBuilder.setupIfAccessible(boosts, \"martial_artist\", 3, accessiblePerks.main);\r\n                    PerkCardBuilder.setupIfAccessible(boosts, \"iron_fist\", 3, accessiblePerks.main);\r\n                    if (drink) {\r\n                        PerkCardBuilder.setupIfAccessible(boosts, \"party_girl_boy\", 2, accessiblePerks.main);\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        calculateSpecial(boosts);\r\n        if (temp && boosts.special.agility > 15) {\r\n            const extra = boosts.special.agility - 15;\r\n            let adr = 5 - extra;\r\n            if (adr < 0) {\r\n                adr = 0;\r\n            }\r\n            if (adr > 0) {\r\n                PerkCardBuilder.setupIfAccessible(boosts, \"adrenaline\", adr, accessiblePerks.temp, 6);\r\n            }\r\n            calculateSpecial(boosts);\r\n        }\r\n        if (main && boosts.special.perception < 15 && creatureTags.includes(\"bug\")) {\r\n            let extra = 15 - boosts.special.perception;\r\n            if (extra > 3) {\r\n                extra = 3;\r\n            }\r\n            if (extra > 0) {\r\n                PerkCardBuilder.setupIfAccessible(boosts, \"exterminator\", extra, accessiblePerks.main);\r\n            }\r\n            calculateSpecial(boosts);\r\n        }\r\n        player.strange = boosts.strange_in_numbers.displayed_value;\r\n        player.freak = boosts.class_freak.displayed_value;\r\n        player.team = team;\r\n        player.alcoholEffects = (boosts.party_girl_boy.displayed_value) > 0 ? boosts.party_girl_boy.displayed_value : 1;\r\n        return boosts;\r\n    }\r\n}","const perks = require.context('../resources/perks', true, /\\.webp/);\r\n\r\nexport default function getPerkImage(name) {\r\n    try {\r\n        return perks('./' + name + '.webp');\r\n    } catch {\r\n        return '';\r\n    }\r\n}","import perkCards from '../resources/perkCards.json';\r\nimport { getEffect } from '../helpers/EffectProvider';\r\n\r\n\r\nfunction prepareName(name, card) {\r\n    if (!card.legendary && name.startsWith(\"Expert\")) {\r\n        name = name.slice(7, name.length) + \" (Expert)\";\r\n    } else if (!card.legendary && name.startsWith(\"Master\")) {\r\n        name = name.slice(7, name.length) + \" (Master)\";\r\n    }\r\n    return name;\r\n}\r\n\r\nfor (let i = 0; i < perkCards.length; i++) {\r\n    const card = perkCards[i];\r\n    let name;\r\n    if (!card.mPerk1) {\r\n        name = card.mName;\r\n    } else {\r\n        const mPerk = getEffect(card.mPerk1);\r\n        name = mPerk.full;\r\n    }\r\n    name = prepareName(name, card);\r\n    if (card.fPerk1 && card.fPerk1 !== \"\") {\r\n        const fPerk = getEffect(card.fPerk1);\r\n        const name2 = prepareName(fPerk.full, card);\r\n        name = name + \" / \" + name2;\r\n    }\r\n    card[\"fullName\"] = name;\r\n}\r\n\r\nfunction nameComparator(item1, item2) {\r\n    return item1.fullName.localeCompare(item2.fullName);\r\n}\r\n\r\nconst sortedItems = perkCards.sort(nameComparator);\r\n\r\nexport function getSortedPerkCards() {\r\n    return sortedItems;\r\n}\r\n\r\nexport function getPerkCard(id) {\r\n    for (let i = 0; i < sortedItems.length; i++) {\r\n        const item = sortedItems[i];\r\n        if (item.id === id) {\r\n            return item;\r\n        }\r\n    }\r\n    return null;\r\n}","export default class PerkCardTools {\r\n\r\n    static getColor(type) {\r\n        return getComputedStyle(document.documentElement).getPropertyValue(\"--bg-\" + type.toLowerCase() + \"-card-color\");\r\n    }\r\n}","import Button from 'react-bootstrap/Button';\r\nimport PerkCardTools from '../PerkCardTools';\r\n\r\n\r\nexport default function PerkCardButton(props) {\r\n    const bgColor = PerkCardTools.getColor(props.item.type);\r\n    const desc = (props.item.desc && props.item.desc !== \"\") ? props.item.desc : \"-\";\r\n    const legBadge = (props.item.legendary) ? <div className=\"badge bg-lite-shadow2\" style={{backgroundColor: '#ffc700', color: '#513f00'}}>Legendary</div> : <></>;\r\n    return (\r\n        <div>\r\n            <Button id={props.item['id']} className=\"lite-shadow\" variant=\"blue-white-border\" style={{width: '100%', margin: '0.1rem', paddingTop: '0.2rem', paddingBottom: '0.1rem', padding: \"0.3rem\"}} onClick={props.onClick}>\r\n                <div className=\"mb-2\">\r\n                    <h6><b>{props.item.fullName}</b></h6>\r\n                </div>\r\n                <div className=\"p-1 perk-description\">\r\n                    {desc}\r\n                </div>\r\n                <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                    <div className=\"w-100 d-flex pt-2 justify-content-start\">\r\n                        {legBadge}\r\n                    </div>\r\n                    <div className=\"w-100 d-flex pt-2 justify-content-end\">\r\n                        <div className=\"badge bg-lite-shadow2\" style={{backgroundColor: bgColor, color: '#fff'}}>{props.item.type}</div>\r\n                    </div>\r\n                </div>\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import Container from 'react-bootstrap/Container';\r\nimport PerkCardButton from './PerkCardButton';\r\nimport { memo, useState } from 'react';\r\nimport { Pagination, FloatButton } from 'antd';\r\nimport { getPerkCard, getSortedPerkCards } from '../PerkCardProvider';\r\n\r\n\r\n\r\nconst PerkCardItems = memo(function PerkCardItems(props) {\r\n    console.log(\"Perk Card Items\");\r\n    const [pageSize, setPageSize] = useState(20);\r\n    function onItemClick(e) {\r\n        const id = e.currentTarget.id;\r\n        if (!props.currentItem) {\r\n            props.setShowToast(true);\r\n        } else {\r\n            props.setShowToast(!(props.currentItem.id === id && props.showToast));\r\n        }\r\n        props.setCurrentItem(getPerkCard(id));\r\n    }\r\n    const items = [];\r\n    const sortedItems = getSortedPerkCards();\r\n    const needTypeFilter = props.filterType !== 'All';\r\n    for (let i = 0; i < sortedItems.length; i++) {\r\n        const item = sortedItems[i];\r\n        if (needTypeFilter && item.type !== props.filterType) {\r\n            continue;\r\n        }\r\n        if (props.filterStatus === \"Legendary\" && !item.legendary) {\r\n            continue;\r\n        } else if (props.filterStatus === \"Ordinary\" && item.legendary) {\r\n            continue;\r\n        }\r\n        if (props.filterName && props.filterName !== \"\" && !item.fullName.toLowerCase().includes(props.filterName.toLowerCase())) {\r\n            continue;\r\n        }\r\n        items.push(\r\n            <PerkCardButton key={item.id} index={i} item={item} onClick={onItemClick} />\r\n        );\r\n    }\r\n    function onPageChanged(page, pageSize) {\r\n        props.setCurrentPage(page);\r\n        setPageSize(pageSize);\r\n    }\r\n    const paginated = [];\r\n    const start = (props.currentPage - 1) * pageSize;\r\n    const end = start + pageSize;\r\n    for (let i = start; i < end; i++) {\r\n        paginated.push(items[i]);\r\n    }\r\n    return (\r\n        <Container>\r\n            <Pagination className=\"pt-1 pb-3\" align=\"center\" current={props.currentPage} defaultPageSize={pageSize} onChange={onPageChanged} total={items.length} />\r\n            {paginated}\r\n            <Pagination className=\"pt-3\" align=\"center\" current={props.currentPage} defaultPageSize={pageSize} onChange={onPageChanged} total={items.length} />\r\n            <FloatButton.BackTop style={{ right: 60 }} duration={100} visibilityHeight={2000} />\r\n        </Container>\r\n\r\n    );\r\n});\r\n\r\nexport default PerkCardItems;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport BaseDropdown from '../../viewComponents/dropdown/BaseDropdown';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst typeDict = {All: 'All', Strength: 'Strength', Perception: 'Perception', Endurance: 'Endurance', Charisma: 'Charisma', Intelligence: 'Intelligence', Agility: 'Agility', Luck: 'Luck'};\r\nconst statusDict = {All: 'All', Legendary: 'Legendary', Ordinary: 'Ordinary'};\r\n\r\nexport default function PerkCardFilter(props) {\r\n    function nameChanged(e) {\r\n        props.setFilterName(e.target.value);\r\n        props.setCurrentPage(1);\r\n    }\r\n    function onSelectType(e) {\r\n        props.setFilterType(e);\r\n        props.setCurrentPage(1);\r\n    }\r\n    function onSelectStatus(e) {\r\n        props.setFilterStatus(e);\r\n        props.setCurrentPage(1);\r\n    }\r\n    return (\r\n        <div>\r\n            <InputGroup className=\"ps-1 pe-1 pb-2 flex-nowrap\">\r\n                <BaseDropdown title={'Type'} dict={typeDict} onSelect={onSelectType}></BaseDropdown>\r\n                <Form.Control style={{width: '10rem'}} maxLength=\"70\" onChange={nameChanged} />\r\n                <BaseDropdown title={'Status'} dict={statusDict} onSelect={onSelectStatus}></BaseDropdown>\r\n            </InputGroup>\r\n        </div>\r\n    );\r\n}","import Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport StackEffectView from '../../helpers/views/StackEffectView';\r\n\r\n\r\nexport default function PerkCardToast(props) {\r\n    if (!props.showToast || !props.item) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <ToastContainer\r\n            className=\"p-3 position-fixed p-3\"\r\n            position={\"top-center\"}\r\n            role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"\r\n            style={{ zIndex: 10 }}>\r\n            <Toast bg=\"light\" onClose={(e) => props.setShowToast(false)} show={props.showToast} animation={false}>\r\n                <Toast.Header className=\"pe-3\">\r\n                    <strong className=\"ms-2 mt-auto mb-auto p-auto me-auto\">{props.item['fullName']}</strong>\r\n                </Toast.Header>\r\n                <Toast.Body className={\"pt-1 pb-2 modal-scroll-60 p-2\"}>\r\n                    <StackEffectView item={props.item} />\r\n                </Toast.Body>\r\n            </Toast>\r\n        </ToastContainer>\r\n    );\r\n}","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { memo, useState } from 'react';\r\nimport StaticPopoverRenderer from '../../viewComponents/popover/StaticPopoverRenderer';\r\nimport Global from '../../helpers/Global';\r\nimport Button from 'react-bootstrap/Button';\r\nimport PerkCardItems from './PerkCardItems';\r\nimport PerkCardFilter from './PerkCardFilter';\r\nimport PerkCardToast from './PerkCardToast';\r\nimport FilterDisplay from '../../consumables/view/FilterDisplay';\r\n\r\n\r\nconst questionPopoverHeader = (<b>Perk Cards</b>);\r\n\r\nconst questionPopoverBody = (\r\n    <>\r\n        <div><b>Items with next properties are not included:</b></div>\r\n        <div>⁃<i> Vault</i></div>\r\n        <div>⁃<i> CUT</i></div>\r\n        <div>⁃<i> zzz_Babylon</i></div>\r\n        <div className=\"mb-2\">⁃<i> zzz_deleted</i></div>\r\n        <div className=\"mb-2\"><b>Parsed from:</b></div>\r\n        <div><i>{Global.perkCardParseVersion}</i></div>\r\n        <div><i>{Global.perkCardParseVersionName}</i></div>\r\n    </>\r\n);\r\n\r\nconst questionPopover = new StaticPopoverRenderer(questionPopoverHeader, questionPopoverBody, 'PerkCardQuestionPopoverPlace');\r\n\r\nconst PerkCardView = memo(function PerkCardView() {\r\n    console.log(\"PerkCardView\");\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [filterName, setFilterName] = useState(\"\");\r\n    const [filterType, setFilterType] = useState(\"All\");\r\n    const [filterStatus, setFilterStatus] = useState(\"All\"); // Legendary / Non Legendary\r\n    function onQClick(e) {\r\n        questionPopover.renderToggle(e.target);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"8\">\r\n                <Accordion.Header>\r\n                    <div id=\"PerkCardQuestionPopoverPlace\"></div>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '12rem'}}>\r\n                            <span className=\"ac-text\">Perk Cards</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '2rem'}} onClick={onQClick}>?</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <PerkCardToast item={currentItem} showToast={showToast} setShowToast={setShowToast} />\r\n                    <PerkCardFilter setFilterType={setFilterType} setFilterName={setFilterName} filterType={filterType} setCurrentPage={setCurrentPage} filterStatus={filterStatus} setFilterStatus={setFilterStatus} />\r\n                    <FilterDisplay filterType={filterType} filterEffect={filterStatus} />\r\n                    <PerkCardItems filterType={filterType} filterName={filterName} filterStatus={filterStatus} currentPage={currentPage} setCurrentPage={setCurrentPage} currentItem={currentItem} setCurrentItem={setCurrentItem} showToast={showToast} setShowToast={setShowToast} />\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PerkCardView;","import { useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nconst { Chart } = await import('chart.js/auto');\r\n\r\n\r\nfunction getData(values, label, color) {\r\n    return {\r\n        datasets: [{\r\n            label: label,\r\n            data: values,\r\n            borderColor: color,\r\n            pointRadius: 1.5,\r\n            borderWidth: 2,\r\n            fill: false,\r\n        }],\r\n    };\r\n}\r\n\r\nfunction getConfig(data) {\r\n    return {\r\n        type: 'line',\r\n        data: data,\r\n        options: {\r\n            plugins: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n            },\r\n            elements: {\r\n                line: {\r\n                    tension: 0,\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    position: 'bottom',\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Level',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                },\r\n                y: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Resistance',\r\n                        color: 'black', // Customize title color\r\n                    },\r\n                }\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\nfunction drawChart(config, chartId) {\r\n    const curChart = Chart.getChart(chartId);\r\n    if (curChart) {\r\n        curChart.destroy();\r\n    }\r\n    new Chart(document.getElementById(chartId), config);\r\n}\r\n\r\nfunction getCanvas(id) {\r\n    if (!id) {\r\n        return (<></>);\r\n    }\r\n    return (<canvas id={id}></canvas>);\r\n}\r\n\r\nexport default function ChartView(props) {\r\n    const config = getConfig(getData(props.values, props.title + \" Resistance\", props.color));\r\n    useEffect(() => {\r\n        drawChart(config, props.chartId);\r\n    });\r\n\r\n    return (\r\n        <Card className={props.className} style={{minWidth: '18rem'}}>\r\n            <Card.Header className={props.headerClassName}>\r\n                {props.title}\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex justify-content-center p-0\">\r\n                {getCanvas(props.chartId)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag } from 'antd';\r\n\r\n\r\nexport default function GeneralRaceView(props) {\r\n    if (!props.race) {\r\n        return (<></>)\r\n    }\r\n    const codeName = props.race.name;\r\n    const id = props.race.id;\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col className=\"d-flex justify-content-end p-0 me-1\">\r\n                    <Tag bordered={true} color=\"red\" className=\"shadow-outline m-0\"><strong>Id: {id}</strong></Tag>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mt-2\">\r\n                <Col className=\"d-flex justify-content-end p-0 me-1\">\r\n                    <Tag bordered={true} color=\"blue\" className=\"shadow-outline m-0\"><strong>Code: {codeName}</strong></Tag>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag, Divider } from 'antd';\r\nimport { numberToString } from '../../helpers/StringHelpers';\r\n\r\n\r\n// const colors = [\"volcano\", \"red\", \"magenta\", \"blue\", \"purple\"];\r\n\r\nfunction getColTagView(tag, index, position=\"center\") {\r\n    // colors[getRandomNumber(colors.length)]\r\n    return (\r\n        <Col key={tag + index} className={\"m-1 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <Tag className=\"m-0 shadow-outline\" bordered={true} color={\"purple\"}>\r\n                <b>{tag}</b>\r\n            </Tag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction getTagView(tag, index, position, color) {\r\n    return (\r\n        <div className={\"m-0 ps-0 pe-0 d-flex justify-content-\" + position}>\r\n            <Tag className=\"shadow-outline m-1\" bordered={true} color={color}>\r\n                <b>{tag}</b>\r\n            </Tag>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function RaceBodyView({bodyData}) {\r\n    const body = bodyData.body;\r\n    if (body) {\r\n        const result = [];\r\n        let index = 0\r\n        for (const partName in body) {\r\n            index += 1;\r\n            const part = body[partName];\r\n            const partText = part.name + \" ‣ \" + numberToString(part.damage_mult, 2) + \"x\"\r\n            result.push(getColTagView(partText, index, \"center\"));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-4 mb-1\">Body Damage Multipliers</Divider>\r\n                {getTagView(\"Id: \" + bodyData.id, 0, \"end\", \"red\")}\r\n                {getTagView(\"Id: \" + bodyData.name, 0, \"end\", \"blue\")}\r\n                <div className=\"m-3\" />\r\n                <Row className=\"ps-1 pe-1 pb-2\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","export default class RaceTools {\r\n\r\n    static prepareRaceName(name) {\r\n        if (name.endsWith(\"_Race\")) {\r\n            name = name.substring(0, name.length - 5);\r\n        }\r\n        else if (name.endsWith(\"Race\")) {\r\n            name = name.substring(0, name.length - 4);\r\n        }\r\n        if (name.startsWith(\"ZZZ_\") || name.startsWith(\"zzz_\") || name.startsWith(\"ATX_\") || name.startsWith(\"XPD_\")) {\r\n            name = name.substring(4, name.length);\r\n        }\r\n        return name;\r\n    }\r\n}","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport RaceTools from '../RaceTools';\r\nimport { memo } from 'react';\r\n\r\n\r\nfunction getItems(pairs) {\r\n    const result = [];\r\n    for (let i = 0; i < pairs.length; i++) {\r\n        const pair = pairs[i];\r\n        const value = RaceTools.prepareRaceName(pair.value);\r\n        result.push(<Dropdown.Item key={pair.key} eventKey={pair.key}>{value}</Dropdown.Item>)\r\n    }\r\n    return result;\r\n}\r\n\r\nconst RaceDropdown = memo(function RaceDropdown(props) {\r\n    let raceName = \"Choose a race\";\r\n    if (props.raceName) {\r\n        raceName = RaceTools.prepareRaceName(props.raceName);\r\n    }\r\n    function onSelect(e) {\r\n        props.setRaceName(e);\r\n    }\r\n    return (\r\n        <Row className=\"p-1 mb-2 mt-0\">\r\n            <Col className=\"d-flex justify-content-center\">\r\n                <DropdownButton variant='warning' size=\"sm\" onSelect={onSelect} title={<strong>{raceName}</strong>}>\r\n                    {getItems(props.pairs)}\r\n                </DropdownButton>\r\n            </Col>\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default RaceDropdown;\r\n\r\n","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag, Divider } from 'antd';\r\n\r\n\r\nfunction getTagView(tag) {\r\n    return (\r\n        <Col key={tag} className=\"m-0 ps-0 pe-0 d-flex justify-content-center\">\r\n            <Tag className=\"m-1 shadow-outline\" bordered={true} color=\"default\">\r\n                <b>{tag}</b>\r\n            </Tag>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function RaceTagView({tags}) {\r\n    if (tags && tags.length > 0) {\r\n        const result = [];\r\n        for (let i = 0; i < tags.length; i++) {\r\n            result.push(getTagView(tags[i]));\r\n        }\r\n        return (\r\n            <>\r\n                <Divider className=\"p-0 mt-3 mb-1\">Tags</Divider>\r\n                <Row className=\"ps-1 pe-1\">\r\n                    {result}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    return (<></>);\r\n}","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport ResistanceView from './ResistanceView';\r\nimport RaceTagView from './RaceTagView';\r\nimport RaceBodyView from './RaceBodyView';\r\nimport { memo, useState } from 'react';\r\nimport raceItems from '../../resources/race.json';\r\nimport RaceDropdown from './RaceDropdown';\r\nimport GeneralRaceView from './GeneralRaceView';\r\nimport Container from 'react-bootstrap/Container';\r\nimport StaticPopoverRenderer from '../../viewComponents/popover/StaticPopoverRenderer';\r\nimport Global from '../../helpers/Global';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst questionPopoverHeader = (<b>Races</b>);\r\n\r\nconst questionPopoverBody = (\r\n    <>\r\n        <div className=\"mb-2\"><b>Parsed from:</b></div>\r\n        <div><i>{Global.raceParseVersion}</i></div>\r\n        <div><i>{Global.raceParseVersionName}</i></div>\r\n    </>\r\n);\r\n\r\nconst questionPopover = new StaticPopoverRenderer(questionPopoverHeader, questionPopoverBody, 'RaceViewQuestionPopoverPlace');\r\n\r\nconst raceMap = new Map();\r\nconst racePairs = [];\r\n\r\nfunction raceComparator(race1, race2) {\r\n    const name1 = race1.key;\r\n    const name2 = race2.key;\r\n    return name1.localeCompare(name2)\r\n}\r\n\r\nfor (let i = 0; i < raceItems.length; i++) {\r\n        const item = raceItems[i];\r\n        const it = raceMap.get(item.full);\r\n        if (it) {\r\n            console.log(\"Same name: \" + it.id + \" \" + item.id);\r\n        }\r\n        raceMap.set(item.full, item);\r\n        racePairs.push({key: item.full, value: item.full});\r\n}\r\n\r\nracePairs.sort(raceComparator);\r\n\r\nfunction getRaceTagView(race) {\r\n    if (!race) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <RaceTagView tags={race.tags} />\r\n    );\r\n}\r\n\r\nfunction getRaceBodyView(race) {\r\n    if (!race) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <RaceBodyView bodyData={race.bodyData} />\r\n    );\r\n}\r\n\r\nconst RaceView = memo(function RaceView() {\r\n    console.log(\"RaceView\");\r\n    const [raceName, setRaceName] = useState(null);\r\n    let race = null;\r\n    if (raceName) {\r\n        race = raceMap.get(raceName);\r\n    }\r\n    function onQClick(e) {\r\n        questionPopover.renderToggle(e.target);\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div className=\"ps-1 pe-1 pb-2\">\r\n            <Accordion.Item eventKey=\"6\">\r\n                <Accordion.Header>\r\n                    <div id=\"RaceViewQuestionPopoverPlace\"></div>\r\n                    <InputGroup>\r\n                        <InputGroup.Text style={{width: '12rem'}}>\r\n                            <span className=\"ac-text\">Races</span>\r\n                        </InputGroup.Text>\r\n                        <Button className=\"stats-text\" style={{width: '2rem'}} onClick={onQClick}>?</Button>\r\n                    </InputGroup>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"ps-1 pe-1\">\r\n                    <Container>\r\n                        <RaceDropdown pairs={racePairs} raceName={raceName} setRaceName={setRaceName} />\r\n                        <GeneralRaceView race={race} />\r\n                        {getRaceTagView(race)}\r\n                        {getRaceBodyView(race)}\r\n                        <ResistanceView race={race} />\r\n                    </Container>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default RaceView;","import ChartView from \"./ChartView\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Divider } from 'antd';\r\nimport CreatureDataProvider from '../../creature/CreatureDataProvider';\r\n\r\n\r\nfunction buildResCols(res) {\r\n    const result = [];\r\n    for (const name in res) {\r\n        const cRes = res[name];\r\n        const typeData = CreatureDataProvider.getStyle(name);\r\n        result.push(\r\n            <Col className=\"d-flex justify-content-center\" key={name}>\r\n                <ChartView className=\"d-flex justify-content-center m-1\" color={typeData[2]} headerClassName={typeData[1]} title={typeData[0]} chartId={name} values={cRes.curve} />\r\n            </Col>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function ResistanceView(props) {\r\n    if (!props.race || Object.keys(props.race.resistance).length === 0) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <>\r\n            <Divider className=\"p-0 mt-3 mb-2\">Resistance</Divider>\r\n            <Row className=\"d-flex justify-content-center\">\r\n                {buildResCols(props.race.resistance)}\r\n            </Row>\r\n        </>\r\n    )\r\n}","import { memo } from 'react';\r\nimport EmblemCalcRowView from '../templates/calc/view/EmblemCalcRowView';\r\nimport getPerkImage from '../perkCardBoosts/PerkImageProvider';\r\nimport ConsumablesBuilder from '../boostStuff/ConsumablesBuilder';\r\n\r\n\r\nconst BoostRowView = memo(function BoostRowView(props) {\r\n    const imNames = getUsedPerks(props.boostDamage);\r\n    return (\r\n        <>\r\n            <EmblemCalcRowView imNames={imNames} imageProvider={getPerkImage} iconSize='2.0rem' imageSize='1.864rem' borderRadius='5px' />\r\n            <EmblemCalcRowView imNames={props.stuff} imageProvider={ConsumablesBuilder.getImagePathById} iconSize='2.0rem' imageSize='1.864rem' />\r\n        </>\r\n    );\r\n});\r\n\r\nexport function getUsedPerks(boostDamage) {\r\n    const result = [];\r\n    for (const name in boostDamage) {\r\n        const perk = boostDamage[name];\r\n        if (perk.is_used) {\r\n            result.push(perk.im_name);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default BoostRowView;","import Row from 'react-bootstrap/Row';\r\n\r\n\r\nexport default function ModView(props) {\r\n    const mods = props.wSpec.mods;\r\n    const fontSize = (props.fontSize) ? props.fontSize : '0.7rem';\r\n    const fontWeight = (props.fontWeight) ? props.fontWeight : 'bold';\r\n    const modView = [];\r\n    for (let i = 0; i < mods.length; i++) {\r\n        const mod = mods[i];\r\n        modView.push(\r\n            <div key={mod.name} style={{width: 'auto'}} className=\"mod-item-shadow m-1 ps-1 pe-1\"><div style={{width: 'auto', textWrap: false, fontWeight: fontWeight, textAlign: 'center', color: '#555555', fontSize: fontSize, overflow: 'hidden', textOverflow: 'ellipsis'}}>{mod.name}</div></div>\r\n        );\r\n    }\r\n    return (\r\n        <Row className=\"d-flex justify-content-center m-1\">\r\n            {modView}\r\n        </Row>\r\n    );\r\n}","import { Tag, Divider } from 'antd';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { keyValueTag } from '../helpers/RowBuilder';\r\nimport { getEffectsForPopover, getSpellHeader } from '../helpers/SpellView';\r\nimport getSpell from '../helpers/Spell';\r\nimport { truncate } from '../helpers/Input';\r\n\r\n\r\nfunction buildModCard(key, mod_e, color) {\r\n    if (mod_e.prop === \"Enchantments\") {\r\n        const spell = getSpell().get(mod_e.val1);\r\n        const effects = spell.mag_effects;\r\n        return (\r\n            <Card key={key} className=\"mb-1 mt-1\">\r\n                {keyValueTag(mod_e.op, mod_e.prop, color)}\r\n                {getSpellHeader(spell, '20rem')}\r\n                {getEffectsForPopover(effects)}\r\n            </Card>\r\n        );\r\n    } else {\r\n        const val1 = truncate(mod_e.val1, 30);\r\n        const val2 = truncate(mod_e.val2, 30);\r\n        return (\r\n            <Card key={key} className=\"mb-1 mt-1\">\r\n                {keyValueTag(mod_e.op, mod_e.prop, color)}\r\n                {keyValueTag('Val1:', val1, color)}\r\n                {keyValueTag('Val2:', val2, color)}\r\n                {keyValueTag('Curv:', mod_e.curv, color)}\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nfunction getMods(mods) {\r\n    let result = []\r\n    let color = 'purple';\r\n    for (let i = 0; i < mods.length; i++) {\r\n        const mod_e = mods[i];\r\n        result.push(buildModCard(i, mod_e, color));\r\n        if (color === 'purple') {\r\n            color = 'magenta';\r\n        } else {\r\n            color = 'purple';\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function popoverContent(modData) {\r\n    return (\r\n        <>\r\n            <Tag className=\"m-1\" color={'indigo'}><strong>{modData.id}</strong></Tag>\r\n            <Tag className=\"m-1\" color={'red'}>{modData.codeName}</Tag>\r\n            <Divider className='mt-1 mb-2'></Divider>\r\n            {getMods(modData.modifiers)}\r\n        </>\r\n    );\r\n}","import { ModTools } from '../helpers/mods/ModTools';\r\nimport Strings from '../helpers/Strings';\r\n\r\n\r\nexport default class TemplateTools {\r\n\r\n    // ATTENTION! Do not exclude activated by default\r\n    static excludedModIds = {\r\n        \"00693d37\" : [\"00496566\", \"001ac24e\", \"00147b02\", \"00496564\", \"00496565\"], // Blue flamer (Holy fire)\r\n        \"000e5881\" : [\"00496566\", \"001ac24e\", \"00147b02\", \"00496564\", \"00496565\", \"006e06a3\"],\r\n    }\r\n\r\n    static excludeMod(wId, mId) {\r\n        const eIds = TemplateTools.excludedModIds[wId];\r\n        if (eIds) {\r\n            for (let i = 0; i < eIds.length; i++) {\r\n                const eId = eIds[i];\r\n                if (eId === mId) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Get rid of mods which do not influence on damage or hidden\r\n    static getDamagedModIndexes(template, includeGroups, accuracyMods, silencerDamage) {\r\n        const result = {}\r\n        for (const categoryName in template.allMods) {\r\n            const mods = template.allMods[categoryName];\r\n            const exclude = includeGroups && !includeGroups.includes(categoryName);\r\n            let defaultIndex = -1;\r\n            let accuracyBestIndex = -1;\r\n            let indexes = [];\r\n            for (let i = 0; i < mods.length; i++) {\r\n                const mod = mods[i];\r\n                const modId = mod[0];\r\n                if (exclude) { // Care only about default if it is presented\r\n                    if (mod[1]) {\r\n                        defaultIndex = i;\r\n                        break;\r\n                    }\r\n                } else if (!TemplateTools.excludeMod(template.id, modId) && !mod[3]) { // 3-hidden\r\n\r\n                    // 4-useful (means directly affecting on damage)\r\n                    if (mod[4]) {\r\n                        if (ModTools.hasSilencerById(modId)) {\r\n                            if (silencerDamage) {\r\n                                indexes.push(i);\r\n                            }\r\n                        } else {\r\n                            indexes.push(i);\r\n                        }\r\n                    } else if (accuracyBestIndex === -1) {\r\n                        const bestMod = accuracyMods[categoryName];\r\n                        if (bestMod && bestMod === modId) {\r\n                            accuracyBestIndex = i;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (exclude) { // Can't choose, using only default one\r\n                indexes = [defaultIndex];\r\n            } else if (indexes.length === 0) { // All are damage useless, using best accuracy or default\r\n                if (accuracyBestIndex === -1) {\r\n                    indexes = [defaultIndex];\r\n                } else {\r\n                    indexes = [accuracyBestIndex];\r\n                }\r\n            }\r\n            result[categoryName] = indexes;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static resetMods(template) {\r\n        const modCategories = template.allMods;\r\n        for (const modCategory in modCategories) {\r\n            const mods = modCategories[modCategory];\r\n            for (let i = 0; i < mods.length; i++) {\r\n                const mod = mods[i];\r\n                mod[1] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getImage(template) {\r\n        return template.iconName[template.type[1]];\r\n    }\r\n\r\n    static hasDefaultLegendary(template) {\r\n        const leg1 = template.legendary1;\r\n        const leg2 = template.legendary2;\r\n        const leg3 = template.legendary3;\r\n        const leg4 = template.legendary4;\r\n        const leg5 = template.legendary5;\r\n        return (leg1.id || leg2.id || leg3.id || leg4.id || leg5.id);\r\n    }\r\n\r\n    static getDefaultLegendary(template, legendarySetter) {\r\n        const result = [];\r\n        const obj = legendarySetter.extractDefaultLegendary(template);\r\n        const leg1 = obj.legendary1;\r\n        const leg2 = obj.legendary2;\r\n        const leg3 = obj.legendary3;\r\n        const leg4 = obj.legendary4;\r\n        const leg5 = obj.legendary5;\r\n        if (leg1) {\r\n            result.push([leg1.id, 0]);\r\n        }\r\n        if (leg2) {\r\n            result.push([leg2.id, 1]);\r\n        }\r\n        if (leg3) {\r\n            result.push([leg3.id, 2]);\r\n        }\r\n        if (leg4) {\r\n            result.push([leg4.id, 3]);\r\n        }\r\n        if (leg5) {\r\n            result.push([leg5.id, 4]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static isWeaponRanged(template) {\r\n        return TemplateTools.isWeaponRangedByType(template.type[1]);\r\n    }\r\n\r\n    static isWeaponRangedByType(type) {\r\n        return !(type === Strings.Melee || type === Strings.Unarmed);\r\n    }\r\n\r\n    static isWeaponExplosive(template) {\r\n        return template['exp'][1] > 0;\r\n    }\r\n\r\n    static hasPhysicalDamage(template) {\r\n        return template['bbDamage'][1] > 0;\r\n    }\r\n\r\n    static getGroups(templates, set) {\r\n        for (let i = 0; i < templates.length; i++) {\r\n            for (const name in templates[i].allMods) {\r\n                set.add(name);\r\n            }\r\n        }\r\n    }\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { convertTemplateToSpecs } from '../entities/EWeaponSpecs';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction modalView(loading, name, applyTemplate, onHide) {\r\n    if (loading) {\r\n        return (\r\n            <Modal.Body>\r\n                <b>Loading...</b>\r\n            </Modal.Body>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Apply Template\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Do you want to apply '{name}' template? Current weapon properties will be replaced.\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap\">\r\n                    <Button className=\"w-100 me-1\" onClick={applyTemplate}>Yes</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </InputGroup>\r\n            </Modal.Footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function ModalApplyTemplate(props) {\r\n    console.log(\"ModalApplyTemplate\");\r\n    const [loading, setLoading] = useState(false);\r\n    if (!props.modalTemplate.show) {\r\n        return (<></>);\r\n    }\r\n    let name = \"\";\r\n    if (props.modalTemplate.template) {\r\n        name = props.modalTemplate.template.name;\r\n    }\r\n    name = truncateLongWords(name, 25);\r\n    function onHide(e) {\r\n        setLoading(false);\r\n        props.setModalTemplate({template: null, show: false});\r\n    }\r\n\r\n    function applyTemplate(e) {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const template = props.modalTemplate.template;\r\n            const specItem = convertTemplateToSpecs(template, false);\r\n            props.setWSpec(specItem);\r\n            onHide(e);\r\n        }, 100);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show = {props.modalTemplate.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            {modalView(loading, name, applyTemplate, onHide)}\r\n        </Modal>\r\n    );\r\n}","import getAmmo from '../helpers/Ammo';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Collapse } from 'antd';\r\nimport { getField } from './ViewHelper';\r\nimport { buildProjViewById } from './ProjView';\r\n\r\n\r\nfunction buildProj(proj) {\r\n    const result = [];\r\n    if (proj && proj.length > 0) {\r\n        for (let i = 0; i < proj.length; i++) {\r\n            const projId = proj[i];\r\n            result.push(\r\n                <Card key={i} className=\"m-0 mt-2 p-0 bg-light-pink\">\r\n                    <Card.Header className='m-0 p-1 ps-2 bg-proj-header'><small>Projectile</small></Card.Header>\r\n                    <Card.Body className=\"p-1 m-0\">\r\n                        {buildProjViewById(projId)}\r\n                    </Card.Body>\r\n                </Card>\r\n            );\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction buildAmmoView(ammoData, proj) {\r\n    return (\r\n        <>\r\n            <Row className='bg-lite'>\r\n                {getField(ammoData, 'Id:', 'id', 'default', '20rem')}\r\n                {getField(ammoData, 'Code Name:', 'name', 'purple', '20rem')}\r\n                {getField(ammoData, 'Full Name:', 'full', 'purple', '20rem')}\r\n                {getField(ammoData, 'Type:', 'ammo_type', 'blue', '20rem')}\r\n                {getField(ammoData, 'Value:', 'value', 'blue', '20rem')}\r\n                {getField(ammoData, 'Weight:', 'weight', 'blue', '20rem', true, 3)}\r\n                {getField(ammoData, 'Damage:', 'damage', 'blue', '20rem', false)}\r\n                {getField(ammoData, 'Health:', 'health', 'blue', '20rem', false)}\r\n            </Row>\r\n            {buildProj(proj)}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction ammoInfo(className, id, overrideProj) {\r\n    if (id === '') {\r\n        return (<></>);\r\n    }\r\n    const ammoData = getAmmo().get(id);\r\n    let proj = [ammoData['projectile']];\r\n    if (overrideProj && overrideProj.length > 0) {\r\n        proj = overrideProj;\r\n    }\r\n\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>Ammo</strong>,\r\n            children: <>{buildAmmoView(ammoData, proj)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Collapse size='small' items={items} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// overrideProj is deprecated, only Additional projectile seems can be overridden\r\nexport default function AmmoView({className, ammoId, overrideProj}) {\r\n    return ammoInfo(className, ammoId, overrideProj);\r\n}","import { getField } from './ViewHelper';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nfunction getDamagesData(damageData, width='20rem') {\r\n    let result = [];\r\n    for (let i = 0; i < damageData.length; i++) {\r\n        result.push(getDamageData(i, damageData[i], width));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getDamageData(key, damageData, width='20rem') {\r\n    return (\r\n        <Card className='p-0 m-1' key={key}>\r\n            <Row>\r\n                {getField(damageData, 'Id:', 'type_id', 'default', width)}\r\n                {getField(damageData, 'Code Name:', 'type_name', 'purple', width)}\r\n                {getField(damageData, 'Name:', 'type_full_name', 'purple', width)}\r\n                {getField(damageData, 'DCurv:', 'curv', 'blue', width)}\r\n                {getField(damageData, 'Value:', 'value', 'blue', width)}\r\n                {getField(damageData, 'Magnitude:', 'magnitude', 'blue', width)}\r\n                {getField(damageData, 'Time:', 'time', 'blue', width)}\r\n                {getField(damageData, 'Interval:', 'interval', 'blue', width)}\r\n            </Row>\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction buildCard(damageData, header, className) {\r\n    if (damageData) {\r\n        return (\r\n            <Card className=\"bg-light-pink\">\r\n                <Card.Header className={className}>\r\n                    <small>{header}</small>\r\n                </Card.Header>\r\n                <Card.Body className=\"p-0 m-0\">\r\n                    {getDamagesData(damageData)}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nexport default function DamageView({damageData}) {\r\n    return (\r\n        <>\r\n            {buildCard(damageData.Base, \"Damage\", \"bg-damage-header m-0 p-1 ps-2\")}\r\n        </>\r\n    );\r\n}","import { keyValueTag } from '../helpers/RowBuilder';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Collapse } from 'antd';\r\nimport { getField, getResolvedField } from './ViewHelper';\r\nimport SpellView from './SpellView';\r\nimport DamageView from './DamageView';\r\n\r\n\r\nfunction getTags(template) {\r\n    let result = [];\r\n    const tagNames = template['tags'];\r\n    for (let i = 0; i < tagNames.length; i++) {\r\n        result.push(\r\n            (\r\n                <Col key={i} className='d-flex justify-content-center'>\r\n                    {keyValueTag(\"Tag: \",  tagNames[i], 'magenta', {width: '20rem'})}\r\n                </Col>\r\n            )\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction buildGeneralView(template) {\r\n    const auto = (template.isAuto[1] === 1) ? \"Yes\" : \"No\";\r\n    const crit = template.crMult + template.crit[1] / 100.0;\r\n    const crit_spells = template.crSpellId[1];\r\n    let crit_views = [];\r\n    for (let i = 0; i < crit_spells.length; i++) {\r\n        crit_views.push(<SpellView key={i} spellId={crit_spells[i]} header={\"Crit Spell\"}></SpellView>);\r\n    }\r\n    return (\r\n        <>\r\n            <Row className=\"mb-2 bg-lite\">\r\n                {getField(template, 'Id:', 'id', 'default', '20rem')}\r\n                {getField(template, 'Code Name:', 'cName', 'purple', '20rem')}\r\n                {getField(template, 'Full Name:', 'name', 'purple', '20rem')}\r\n                {getResolvedField(\"Automatic\", auto, 'blue', '20rem')}\r\n                {getField(template, 'AP:', 'ap', 'blue', '20rem', false, 3, 1)}\r\n                {getField(template, 'Weight:', 'weight', 'blue', '20rem', false, 3, 1)}\r\n                {getField(template, 'Levels:', 'levels', 'blue', '20rem')}\r\n                {getResolvedField('Crit Mult:', crit, 'blue', '20rem', false, 3)}\r\n                {getField(template, 'Crit Charge:', 'crChar', 'blue', '20rem')}\r\n                {getField(template, 'Crit Spell:', 'crSpellId', 'blue', '20rem', true, 0, 1)}\r\n                {getTags(template)}\r\n            </Row>\r\n            <DamageView damageData={template['damageData']}></DamageView>\r\n            <div className=\"mb-2\" />\r\n            <SpellView spellId={template.spellId} header={\"Base Spell\"}></SpellView>\r\n            <div className=\"mb-2\" />\r\n            {crit_views}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction general(template) {\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>General</strong>,\r\n            children: <>{buildGeneralView(template)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Collapse size='small' items={items} />\r\n    );\r\n}\r\n\r\nconst GeneralView = function GeneralView(props) {\r\n    return general(props.template);\r\n}\r\n\r\nexport default GeneralView;","import { getField, getResolvedField } from './ViewHelper';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Collapse } from 'antd';\r\n\r\n\r\nfunction getDamagesData(damageData, width='20rem') {\r\n    let result = [];\r\n    for (let i = 0; i < damageData.length; i++) {\r\n        result.push(getDamageData(i, damageData[i], width));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getDamageData(key, damageData, width='20rem') {\r\n    return (\r\n            <Card key={key} className=\"mt-1 mb-1 bg-lite\">\r\n                <Row>\r\n                    {getField(damageData, 'Damage From:', 'directParent', 'default', width, false)}\r\n                    {getField(damageData, 'Damage Type Id:', 'type_id', 'default', width, false)}\r\n                    {getField(damageData, 'Code Name:', 'type_name', 'purple', width, false)}\r\n                    {getField(damageData, 'Name:', 'type_full_name', 'purple', width, false)}\r\n                    {getField(damageData, 'DCurv:', 'curv', 'blue', width, false)}\r\n                    {getField(damageData, 'DValue:', 'value', 'blue', width, false)}\r\n                    {getField(damageData, 'Magnitude:', 'magnitude', 'blue', width, false)}\r\n                    {getField(damageData, 'Time:', 'time', 'blue', width, false)}\r\n                    {getField(damageData, 'Interval:', 'interval', 'blue', width, false, 3)}\r\n                    {getResolvedField('Destructible:', damageData.destructible.toString(), 'blue', width, false)}\r\n                    {getResolvedField('Parent:', damageData.parent, 'indigo', width, false)}\r\n                </Row>\r\n            </Card>\r\n    )\r\n}\r\n\r\nfunction buildCard(key, damageData, header, className) {\r\n    if (damageData) {\r\n        return (\r\n            <Card key={key} className=\"mt-1 mb-1\">\r\n                <Card.Header className={className}>\r\n                    <small>{header}</small>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    {getDamagesData(damageData)}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getDamageCards(damageData) {\r\n    let result = [];\r\n    let i = 0;\r\n    for (let key in damageData) {\r\n        const damage = damageData[key];\r\n        result.push(buildCard(i++, damage, key, \"bg-proj-header m-0 p-1 ps-2\"))\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction damageCollapse(damageData) {\r\n    const items = [\r\n        {\r\n            key: '1',\r\n            label: <strong>Damage Overview</strong>,\r\n            children: <>{getDamageCards(damageData)}</>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Collapse size='small' items={items} />\r\n    );\r\n}\r\n\r\nexport default function DamageOverview({damageData}) {\r\n    return (\r\n        <>{damageCollapse(damageData)}</>\r\n    );\r\n}","import getMods from '../helpers/Mods';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Tag } from 'antd';\r\nimport { UCheckbox } from '../viewComponents/checkbox/UCheckbox';\r\nimport { popoverContent } from './ModPropsPopover';\r\nimport { WeaponPopoverOverlay } from '../helpers/WeaponPopoverOverlay';\r\n\r\n\r\nfunction getModRow(modData, def, isUsed) {\r\n    let color = (modData['useful']) ? 'purple' : 'grey';\r\n    if (def) {\r\n        color = 'blue';\r\n    }\r\n    if (isUsed) {\r\n        color = 'brown';\r\n    }\r\n    return (\r\n        <Tag.CheckableTag style={{width: '100%'}}>\r\n            <strong style={{color: color}}>{modData.name}</strong>\r\n        </Tag.CheckableTag>\r\n    );\r\n}\r\n\r\nexport default function ModRow({index, weaponId, modsSameType, checkMod, defMods}) {\r\n    const modSameType = modsSameType[index];\r\n    const modData = getMods().get(modSameType[0]);\r\n    let def = defMods.includes(modSameType[0]);\r\n    const isUsed = modSameType[1];\r\n    const modRow = getModRow(modData, def, isUsed);\r\n    const disabled = !modSameType[2];\r\n    if (modData['hide']) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <Row className=\"p-1\" key={modData.id} title={modData.codeName} id={modData.id}>\r\n            <Col>\r\n                <WeaponPopoverOverlay popoverHeader={modData.name} popoverContent={popoverContent(modData)} itemToOverly={modRow}></WeaponPopoverOverlay>\r\n            </Col>\r\n            <Col className=\"col-auto d-flex justify-content-end\">\r\n                <UCheckbox onChange={(e) => checkMod(e, weaponId, modData, modSameType, modsSameType)} disabled={disabled} checked={isUsed}></UCheckbox>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","const testImagePaths = require.context('../resources/forReadme/Tests', true, /\\.webp$/);\r\nconst versionPaths = require.context('../resources/forReadme/Tests', true, /\\.json$/);\r\n\r\n\r\nexport const testedWeapons = buildTestedWeapons();\r\n\r\nexport function isTested(wId) {\r\n    return (testedWeapons.get(wId)) ? true : false;\r\n}\r\n\r\nfunction buildTestedWeapons() {\r\n    const versions = buildMap(versionPaths);\r\n    const imagesMap = buildMap(testImagePaths);\r\n    let resultMap = new Map();\r\n    imagesMap.forEach((value, key) => {\r\n        const version = versions.get(key)[0];\r\n        const obj = {\r\n            img: value,\r\n            alt: version.alt,\r\n            version: version.version,\r\n        };\r\n        resultMap.set(key, obj);\r\n    });\r\n    return resultMap;\r\n}\r\n\r\nfunction buildMap(paths) {\r\n    let result = new Map();\r\n    paths.keys().map(key => {\r\n        const firstIndex = key.indexOf(\"/\") + 1;\r\n        const lastIndex = key.indexOf(\"/\", firstIndex);\r\n        const id = key.substring(firstIndex, lastIndex);\r\n        let array = result.get(id);\r\n        const path = paths(key);\r\n        if (!array) {\r\n            result.set(id, [path]);\r\n        } else {\r\n            array.push(path);\r\n        }\r\n        return result;\r\n    });\r\n    return result;\r\n}\r\n\r\n\r\n","export const weaponRestrictions = {\r\n    \"00646880\": \"Shredder mod will not add bash damage automatically\",\r\n    \"0001f669\": \"Shredder mod will not add bash damage automatically\",\r\n    \"000d1eb0\": \"Charging has to be setup manually for this weapon\",\r\n}","import Accordion from 'react-bootstrap/Accordion';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport '../css/style.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { bullet, ammo, fireRate } from '../helpers/Emoji';\r\nimport { Tag, Divider, Collapse } from 'antd';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { keyValueBadge } from '../helpers/RowBuilder';\r\nimport { getRowWithImage } from '../helpers/WTypeDropdown'\r\nimport { getImageElement } from '../helpers/WeaponImages'\r\nimport { useState, memo } from 'react';\r\nimport { getTemplateCopyById } from '../helpers/TemplatesRegister';\r\nimport AmmoView from '../helpers/AmmoView';\r\nimport ProjView from '../helpers/ProjView';\r\nimport GeneralView from '../helpers/GeneralView';\r\nimport AdditionalDView from '../helpers/AdditionalDView';\r\nimport LegendaryView from '../helpers/LegendaryView';\r\nimport CritView from '../helpers/CritView';\r\nimport DamageOverview from '../helpers/DamageOverview';\r\nimport ModRow from './ModRow';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { modsSetter } from '../templates/TemplateItems';\r\nimport { WarningPopover } from '../helpers/WarningPopover';\r\nimport { isTested } from './TestedWeapons';\r\nimport { weaponRestrictions } from '../helpers/WeaponRestrictions';\r\n\r\n\r\nfunction getApplyButton(template, setModalTemplate, setModalCalculate, onTestClick) {\r\n    function testedMedal(wId) {\r\n        if (isTested(wId)) {\r\n            return (\r\n                <Button id={wId} variant=\"white\" className=\"p-0 ps-2 pe-2 m-0\" onClick={onTestClick}>\r\n                    <div style={{fontSize: '1.5rem'}}>🎖️</div>\r\n                </Button>\r\n            );\r\n        }\r\n        return (<></>);\r\n    }\r\n    function restrictions(wId) {\r\n        const version = weaponRestrictions[wId];\r\n        if (version) {\r\n            return (\r\n                <WarningPopover element={(\r\n                    <Button variant=\"white\" className=\"p-0 ps-2 pe-2 m-0\">\r\n                        <div style={{fontSize: '1.5rem'}}>📛</div>\r\n                    </Button>\r\n                )} message={version} header={'Restrictions'} />\r\n            );\r\n        }\r\n        return (<></>);\r\n    }\r\n    if (template.apply) {\r\n        return (\r\n            <Row className=\"mt-3\">\r\n                <Col className=\"col-2 d-flex justify-content-center\">\r\n                    {restrictions(template.id)}\r\n                </Col>\r\n                <Col className=\"col-4 d-flex justify-content-center\">\r\n                    <Button style={{minWidth: '6rem'}} onClick={(e) => setModalTemplate({template: template, show: true})}>Choose</Button>\r\n                </Col>\r\n                <Col className=\"col-4 d-flex justify-content-center\">\r\n                    <Button style={{minWidth: '6rem'}} onClick={(e) => setModalCalculate({template: template, show: true})}>Calculate</Button>\r\n                </Col>\r\n                <Col className=\"col-2 justify-content-center center-text\">\r\n                    {testedMedal(template.id)}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction getResetButton(template, itemsLength, resetButtonActive, setResetButtonActive) {\r\n    if (itemsLength === 0 || !resetButtonActive) {\r\n        return (<></>);\r\n    }\r\n    function onClick(e) {\r\n        const cleanTemplate = getTemplateCopyById(template.id);\r\n        for (const property in cleanTemplate) {\r\n            template[property] = cleanTemplate[property];\r\n        }\r\n        modsSetter.setTemplatesMods([template]);\r\n        setResetButtonActive(!resetButtonActive);\r\n    }\r\n    return (\r\n        <span className='d-flex justify-content-center'>\r\n            <Button size=\"sm\" variant=\"warning\" className='ms-0 mt-0 mb-3' onClick={onClick}>Reset</Button>\r\n        </span>\r\n    );\r\n}\r\n\r\nfunction buildInfoRows(info, badgeStyle, badgesRow) {\r\n    const filteredInfo = [];\r\n    const filteredMarks = [];\r\n    for (let i = 1; i < info.length; i += 2) {\r\n        if (info[i] !== \"\") {\r\n            filteredMarks.push(info[i - 1]);\r\n            filteredInfo.push(info[i]);\r\n        }\r\n    }\r\n    let size = filteredInfo.length;\r\n    let k = badgesRow.length;\r\n    for (let i = 0; i < size; i += 3) {\r\n        if ((i + 1) === size) {\r\n            badgesRow.push(resultBadges(k++, badgeStyle, \"-\", \"-\", filteredMarks[i], filteredInfo[i], \"-\", \"-\"));\r\n        } else if ((i + 2) === size) {\r\n            badgesRow.push(resultBadges(k++, badgeStyle, filteredMarks[i], filteredInfo[i], \"-\", \"-\", filteredMarks[i + 1], filteredInfo[i + 1]));\r\n        } else {\r\n            badgesRow.push(resultBadges(k++, badgeStyle, filteredMarks[i], filteredInfo[i], filteredMarks[i + 1], filteredInfo[i + 1], filteredMarks[i + 2], filteredInfo[i + 2]));\r\n        }\r\n    }\r\n    const badgesCols = [];\r\n    size = badgesRow.length;\r\n    for (let i = 0; i < size; i += 3) {\r\n        if ((i + 1) === size) {\r\n            badgesCols.push(\r\n                <Col key={i}>\r\n                    <Row>\r\n                        {badgesRow[i]}\r\n                    </Row>\r\n                </Col>\r\n            );\r\n        } else if ((i + 2) === size) {\r\n            badgesCols.push(\r\n                <Col key={i}>\r\n                    <Row>\r\n                        {badgesRow[i]}\r\n                        {badgesRow[i + 1]}\r\n                    </Row>\r\n                </Col>\r\n            );\r\n        } else {\r\n            badgesCols.push(\r\n                <Col key={i}>\r\n                    <Row>\r\n                        {badgesRow[i]}\r\n                        {badgesRow[i + 1]}\r\n                        {badgesRow[i + 2]}\r\n                    </Row>\r\n                </Col>\r\n            );\r\n        }\r\n    }\r\n    return badgesCols;\r\n}\r\n\r\nfunction resultBadges(key, style, left1, right1, left2, right2, left3, right3) {\r\n    return (\r\n        <div key={key} className=\"col d-flex justify-content-center\">\r\n            <Stack className='pb-1' direction=\"horizontal\" gap={1}>\r\n                {keyValueBadge(style, '6.5rem', left1,  right1)}\r\n                {keyValueBadge(style, '6.5rem', left2,  right2)}\r\n                {keyValueBadge(style, '6.5rem', left3,  right3)}\r\n            </Stack>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst WeaponTemplate = memo(function WeaponTemplate({modsSetter, template, setModalTemplate, setModalCalculate, onTestClick}) {\r\n    console.log(\"WeaponTemplate: \" + template.index);\r\n    const [changed, setChanged] = useState(false);\r\n    const [resetButtonActive, setResetButtonActive] = useState(false);\r\n    function modRow(index, modsSameType, checkMod) {\r\n        return (\r\n           <ModRow key={index} weaponId={template.id} index={index} modsSameType={modsSameType} checkMod={checkMod} defMods={template.defMods}>\r\n           </ModRow>\r\n        );\r\n    };\r\n\r\n    function checkMod(e, weaponId, modData, modSameType, modsSameType) {\r\n        const check = !modSameType[1];\r\n\r\n        // Disable mods because only one mod of the same type can be selected at the same time.\r\n        for (let i = 0; i < modsSameType.length; i++) {\r\n            modsSameType[i][1] = false;\r\n        }\r\n        modSameType[1] = check;\r\n        modsSetter.cleanTemplateAndApplyCurrentMods(template);\r\n        setChanged(!changed);\r\n        setResetButtonActive(true);\r\n    };\r\n    let result = [];\r\n    let items = [];\r\n\r\n    // All mods\r\n    if (!template.unverified) {\r\n        const mods = template.allMods;\r\n        let i = 0;\r\n        for (const property in mods) {\r\n            const modsSameType = mods[property];\r\n            let children = [];\r\n\r\n            // Modes of one type\r\n            for (let j = 0; j < modsSameType.length; j++) {\r\n                children.push(modRow(j, modsSameType, checkMod));\r\n            }\r\n            const item = {\r\n                    key: i,\r\n                    label: property,\r\n                    children: children,\r\n            }\r\n            items.push(item);\r\n            i += 1;\r\n        }\r\n    }\r\n    let divider = (<Divider className='m-1 p-1'>Modifications</Divider>);\r\n    if (items.length === 0) {\r\n        divider = (<></>);\r\n    } else {\r\n        result.push(<Collapse accordion key={template.index} items={items} />);\r\n    }\r\n    const fireRateText = (template.isAuto[1]) ? template.autoRate[1].toFixed(2) : (10 / template.manualRate[1]).toFixed(2);\r\n    const iSize = '0.75rem';\r\n    const badgeStyle = \"badge bg-lite-outline m-1\";\r\n    const critText = (template.crit[1] === 0) ? \"\" : \"+\" + template.crit[1].toFixed(1) + \"%\";\r\n    const expText = (template.exp[1] === 0) ? \"\" : \"+\" + template.exp[1].toFixed(1) +\"%\";\r\n    const strText = (template.strengthBoost[1] === 0) ? \"\" : \"+\" + template.strengthBoost[1].toFixed(1) + \"%\";\r\n    const sneakText = (template.sneak[1] === 0) ? \"\" : \"+\" + template.sneak[1].toFixed(1) + \"%\";\r\n    const bashText = (template.bash[1] === 0) ? \"\" : \"+\" + template.bash[1].toFixed(1) + \"%\";\r\n    const aaText = (template.antiArmor[1] === 0) ? \"\" : \"+\" + template.antiArmor[1].toFixed(1) + \"%\";\r\n    const bonusText = (template.bonusMult[1] === 0) ? \"\" : (((template.bonusMult[1] < 0) ? \"\" : \"+\") + (template.bonusMult[1] * 100).toFixed(1) + \"%\");\r\n    const crippleText = (template.cripple[1] === 0) ? \"\" : \"+\" + template.cripple[1].toFixed(1) + \"%\";\r\n    const batteryText = (template.chargeTime[1] === 0) ? \"\" : template.chargeTime[1].toFixed(2) + \" s\";\r\n    const powerText = (template.powerAttack[1] === 0) ? \"\" : \"+\" + (template.powerAttack[1]).toFixed(1) + \"%\";\r\n    const info = [\"☠️\", critText, \"💣\", expText, \"💪\", strText, \"🐍\", sneakText, \"🌪️\", bashText, \"🛡️\", aaText, \"🚀\", bonusText, \"🦵\", crippleText, \"🔋\", batteryText, \"🪓\", powerText];\r\n    let badgesRow = [];\r\n    badgesRow.push(resultBadges(0, badgeStyle, bullet(iSize), template.shotSize[1].toFixed(0), \"⌛\", template.reloadTime[1].toFixed(2) + \" s\", fireRate(iSize), fireRateText));\r\n    badgesRow.push(resultBadges(1, badgeStyle, ammo(iSize), template.capacity[1].toFixed(0), \"🏃\", template.ap[1].toFixed(2), \"🏋\", template.weight[1].toFixed(2)));\r\n    const infoRows = buildInfoRows(info, badgeStyle, badgesRow);\r\n    return (\r\n        <div className=\"p-1\" key={template.id} id={template.id} title={template.name}>\r\n            <Accordion.Item eventKey={template.id} className=\"p-1 m-0 out-accordion\">\r\n                <Accordion.Button className='p-0 ps-2 pe-3 m-0 out-accordion' style={{height: '3rem'}}>\r\n                    <Container fluid className=\"p-0 m-0\">\r\n                        <Row className=\"p-0 m-0\">\r\n                            <Col className=\"p-0 ps-0 m-0 center-text\">\r\n                                {getImageElement(template.iconName[template.type[1]], '2.9rem')}\r\n                                <strong className=\"ps-4\">{template.name}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Accordion.Button>\r\n                <Accordion.Body className=\"p-1\">\r\n                    <Row>\r\n                        <div className=\"col d-flex justify-content-start mb-2 pt-1\">\r\n                            <Tag bordered={true} color=\"default\" className=\"shadow-outline2\"><h6 className=\"m-0 p-1\"><strong>Level: {template.level}</strong></h6></Tag>\r\n                        </div>\r\n                         <div className=\"col d-flex justify-content-end mb-2 pt-1 pe-1\">\r\n                            <Tag bordered={true} color=\"volcano\" className=\"shadow-outline3\"><h6 className=\"m-0 p-1\"><strong>{getRowWithImage(template.type[1])}</strong></h6></Tag>\r\n                       </div>\r\n                    </Row>\r\n                    <Divider className='mt-1 mb-2'></Divider>\r\n                    <Row>\r\n                        {infoRows}\r\n                    </Row>\r\n                    <AdditionalDView template={template}></AdditionalDView>\r\n                    <CritView crits={template.crSpellId[1]} weapId={template.id}></CritView>\r\n                    <LegendaryView template={template}></LegendaryView>\r\n                    <Divider className='mt-2 mb-2'></Divider>\r\n                    <GeneralView template={template}></GeneralView>\r\n                    <AmmoView className=\"pt-2\" ammoId={template.ammoId[1]}></AmmoView>\r\n                    <ProjView className=\"pt-2\" projId={template.projId[1]}></ProjView>\r\n                    <div className=\"pt-2\" />\r\n                    <DamageOverview damageData={template.damageData}></DamageOverview>\r\n                    {divider}\r\n                    {getResetButton(template, items.length, resetButtonActive, setResetButtonActive)}\r\n                    {result}\r\n                    {getApplyButton(template, setModalTemplate, setModalCalculate, onTestClick)}\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default WeaponTemplate;","import getMods from '../Mods';\r\n\r\n\r\nexport default class LegendarySetter {\r\n\r\n    set(template, mod) {\r\n        this.privateSet(template, mod);\r\n    }\r\n\r\n    privateSet(obj, mod) {\r\n        const words = mod.ap.split(\"_\");\r\n        const lastWord = words[words.length - 1];\r\n        if (lastWord === \"Legendary1\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary1 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        } else if (lastWord === \"Legendary2\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary2 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        } else if (lastWord === \"Legendary3\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary3 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        } else if (lastWord === \"Legendary4\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary4 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        } else if (lastWord === \"Legendary5\") {\r\n            if (mod.name !== '') {\r\n                obj.legendary5 = {\"id\": mod.id, \"name\": mod.name};\r\n            }\r\n        }\r\n    }\r\n\r\n    extractDefaultLegendary(template) {\r\n        const result = {};\r\n        for (const property in template.allMods) {\r\n            const propMods = template.allMods[property];\r\n            for (let j = 0; j < propMods.length; j++) {\r\n                const mod = propMods[j];\r\n                const modId = mod[0];\r\n                const isUsed = mod[1];\r\n                const modData = getMods().get(modId);\r\n                if (modData) {\r\n                    if (isUsed) {\r\n                        this.privateSet(result, modData);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","import getTemplates from '../helpers/TemplatesRegister';\r\nimport WeaponTemplate from './WeaponTemplate';\r\nimport { memo, useState, useEffect } from 'react';\r\nimport { ModParser } from '../helpers/mods/ModParser';\r\nimport DamageExtractor from '../helpers/mods/DamageExtractor';\r\nimport DamageSetter from '../helpers/mods/DamageSetter';\r\nimport LegendarySetter from '../helpers/mods/LegendarySetter';\r\nimport ModsSetter from '../helpers/mods/ModsSetter';\r\nimport { Pagination } from 'antd';\r\nimport { Skeleton } from 'antd';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport TemplateTools from './TemplateTools';\r\n\r\n\r\nexport const modGroups = new Set();\r\n\r\nexport const weaponIds = {All: []};\r\n\r\nexport const modsSetter = new ModsSetter(new LegendarySetter(), new ModParser(), new DamageExtractor(),\r\n    new DamageSetter());\r\n\r\nfunction buildTemplates() {\r\n    console.log(\"BuildTemplates\");\r\n    const templates = JSON.parse(JSON.stringify(getTemplates()));\r\n    if (modGroups.size === 0) {\r\n        TemplateTools.getGroups(templates, modGroups);\r\n    }\r\n    const weaponIdsExists = (weaponIds.All.length > 0);\r\n    for (let i = 0; i < templates.length; i++) {\r\n        const template = templates[i];\r\n        template.index = i;\r\n        if (!weaponIdsExists) {\r\n            const type = template.type[0];\r\n            let weaponIdsByType = weaponIds[type];\r\n            if (!weaponIdsByType) {\r\n                weaponIdsByType = [];\r\n                weaponIds[type] = weaponIdsByType;\r\n            }\r\n            const obj = {id: template.id, apply: template.apply};\r\n            weaponIdsByType.push(obj);\r\n            weaponIds.All.push(obj);\r\n        }\r\n    }\r\n    modsSetter.setTemplatesMods(templates);\r\n    return templates;\r\n}\r\n\r\nfunction getSkeletons(size) {\r\n    let result = [];\r\n    for (let i = 0; i < size; i++) {\r\n        result.push(\r\n            <div key={i} className=\"p-1\">\r\n                <Accordion.Item className=\"p-1 m-0 out-accordion\">\r\n                    <div className=\"p-1\" style={{height: '3rem'}}>\r\n                        <Skeleton avatar paragraph={{ rows: 0, }} />\r\n                    </div>\r\n                </Accordion.Item>\r\n            </div>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nconst templates = buildTemplates();\r\n\r\nconst TemplateItems = memo(function TemplateItems(props) {\r\n    console.log(\"TemplateItems\");\r\n    const [wData, setWData] = useState({paginated: [], total: 0, loaded: false});\r\n\r\n    const filterByName = (item) => {\r\n        if (props.filterName === \"\" || props.filterName === null) {\r\n            return true;\r\n        }\r\n        return item.name.includes(props.filterName);\r\n    };\r\n\r\n    const filterByType = (item) => {\r\n        if (props.weaponType === \"All\") {\r\n            return true;\r\n        }\r\n        return item.type.includes(props.weaponType);\r\n    }\r\n\r\n    // TODO: Not correct as it re-renders trice instead of twice.\r\n    useEffect(() => {\r\n        setWData({paginated: [], current: wData.paginated.length, total: wData.total, loaded: false});\r\n\r\n        // Pray with might for those who called this 'setTimeout', 'setInterval' to be burning in hell as long as possible.\r\n        setTimeout(() => {\r\n                const [paginated, total] = prepareTemplates(props, filterByName, filterByType);\r\n                setWData({paginated: paginated, current: paginated.length, total: total, loaded: true});\r\n            }\r\n        );\r\n    }, [props.page, props.weaponType, props.filterName, props.pageSize, templates]);\r\n    function showData() {\r\n        if (!wData.loaded) {\r\n            return (\r\n                <>\r\n                    {getSkeletons(wData.total)}\r\n                    <div className=\"mb-2\" />\r\n                    <Pagination align=\"center\" disabled current={props.page} onChange={null} defaultPageSize={props.pageSize} total={wData.total} />\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                    {wData.paginated}\r\n                    <div className=\"mb-1\" />\r\n                    <Pagination className=\"mb-2\" align=\"center\" current={props.page} defaultPageSize={props.pageSize} onChange={props.onPageChanged} total={wData.total} />\r\n                </>\r\n            );\r\n        }\r\n    }\r\n    return (\r\n       <>{showData()}</>\r\n    );\r\n});\r\n\r\nexport default TemplateItems;\r\n\r\nfunction prepareTemplates(props, filterByName, filterByType) {\r\n    const items = templates.filter(filterByType).filter(filterByName).map((template) => <WeaponTemplate key={template.index} onTestClick={props.onTestClick} modsSetter={modsSetter} template={template} setModalTemplate={props.setModalTemplate} setModalCalculate={props.setModalCalculate}></WeaponTemplate>);\r\n    const lastIndex = items.length - 1;\r\n    let paginated = [];\r\n    for (let i = props.startIndex; i < props.startIndex + props.pageSize; i++) {\r\n        if (i > lastIndex) {\r\n            break;\r\n        }\r\n        paginated.push(items[i]);\r\n    }\r\n    return [paginated, items.length];\r\n}","import getMods from '../Mods';\r\nimport { getTemplateCopyById } from '../TemplatesRegister';\r\n\r\n\r\nexport default class ModsSetter {\r\n\r\n    constructor(legendarySetter, modParser, damageExtractor, damageSetter) {\r\n        this.legendarySetter = legendarySetter;\r\n        this.modParser = modParser;\r\n        this.damageExtractor = damageExtractor;\r\n        this.damageSetter = damageSetter;\r\n    }\r\n\r\n    // Probably deprecated (Current mods apparently have activated default mods at the beginning)\r\n    setTemplatesDefaultMods(templates) {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    cleanTemplateAndApplyCurrentMods(template) {\r\n        this.resetTemplate(template);\r\n        this.setTemplatesMods([template]);\r\n    }\r\n\r\n    // It will set mods on current template, use this only for clean ones.\r\n    setTemplatesMods(templates) {\r\n\r\n        // Apply default damage effects like (Ammo, Projectile) they will modify default damage values\r\n        // which later have to be modified by other buffs\r\n        this.applyModValues(templates, true, true);\r\n\r\n        // Extract all damages with current settings\r\n        this.damageExtractor.extract(templates);\r\n\r\n        this.damageSetter.setDamages(templates);\r\n\r\n        // Apply all buffs including those who boost damage\r\n        this.applyModValues(templates, false, false);\r\n    }\r\n\r\n    applyModValues(templates, mutatingDamage, setLegendary) {\r\n        for (let i = 0; i < templates.length; i++) {\r\n            const template = templates[i];\r\n            const allMods = template.allMods;\r\n            for (let property in allMods) {\r\n                const propMods = allMods[property];\r\n                for (let j = 0; j < propMods.length; j++) {\r\n                    const mod = propMods[j];\r\n                    const modId = mod[0];\r\n                    const isUsed = mod[1];\r\n                    if (isUsed) {\r\n                        const modData = getMods().get(modId);\r\n                        if (modData) {\r\n                            if (setLegendary) {\r\n                                this.legendarySetter.set(template, modData);\r\n                            }\r\n                            this.modParser.applyOrRevoke(modData, template, true, mutatingDamage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Forced measure due to bad-knee design\r\n    resetTemplate(template) {\r\n        const cleanTemplate = getTemplateCopyById(template.id);\r\n        for (const property in cleanTemplate) {\r\n            if (property !== \"allMods\") {\r\n                template[property] = cleanTemplate[property];\r\n            }\r\n        }\r\n    }\r\n}","\r\n// Iterate through {name11: ['A', 'B', 1], name12: [], name13: ['D', obj]}\r\n// Returning every possible combinations:\r\n// {name11: 'A', name13: 'D'}, {name11: 'B', name13: 'D'} ... {name11: 1, name13: obj}\r\nexport default class Combinator {\r\n\r\n    /*\r\n        Usage:\r\n            const comb = {name11: ['A', 'B', 'C'], name12: [], name13: ['D', 'E']};\r\n            const combinator = new Combinator(comb);\r\n            let result = combinator.current();\r\n            console.log(result); // First combination\r\n            while(combinator.next()) {\r\n                combinator.current();\r\n                console.log(result);\r\n            }\r\n    */\r\n    constructor(combinations) {\r\n        this.combinations = combinations;\r\n        this.currentCombination = {};\r\n        this.lastIndexes = [];\r\n        this.curIndexes = [];\r\n        this.names = [];\r\n        this.hbRead = false;\r\n        this.combinationsCount = 1;\r\n        for (const groupName in combinations) {\r\n            this.names.push(groupName);\r\n            const group = combinations[groupName];\r\n            const last = group.length - 1;\r\n            this.lastIndexes.push(last);\r\n            if (group.length > 0) {\r\n                this.combinationsCount *= group.length;\r\n                this.currentCombination[groupName] = this.combinations[groupName][0];\r\n                this.curIndexes.push(0);\r\n            } else {\r\n                this.curIndexes.push(-1);\r\n            }\r\n        }\r\n        this.currentNumber = 1;\r\n    }\r\n\r\n    getCombinationsCount() {\r\n        return this.combinationsCount;\r\n    }\r\n\r\n    getCurrentNumber() {\r\n        return this.currentNumber;\r\n    }\r\n\r\n    next() {\r\n        if (this.isLast()) {\r\n            return false;\r\n        }\r\n        this.currentNumber += 1;\r\n        this.nextCombination();\r\n        this.hbRead = false;\r\n        return true;\r\n    }\r\n\r\n    // Only for reading\r\n    current() {\r\n        if (this.hbRead) {\r\n            return this.currentCombinations;\r\n        } else {\r\n            for (let i = 0; i < this.curIndexes.length; i++) {\r\n                const rowPos = this.curIndexes[i];\r\n                const name = this.names[i];\r\n                if (rowPos > -1) {\r\n                    this.currentCombination[name] = this.combinations[name][rowPos];\r\n                }\r\n            }\r\n            this.hbRead = true;\r\n            return this.currentCombination;\r\n        }\r\n    }\r\n\r\n    isLast() {\r\n        let result = true;\r\n        for (let i = 0; i < this.curIndexes.length; i++) {\r\n            if (this.curIndexes[i] !== this.lastIndexes[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    nextCombination() {\r\n        for (let i = 0; i < this.curIndexes.length; i++) {\r\n            let next = false;\r\n            if (this.curIndexes[i] > -1) {\r\n                this.curIndexes[i] += 1;\r\n                if (this.curIndexes[i] > this.lastIndexes[i]) {\r\n                    this.curIndexes[i] = 0;\r\n                    next = true;\r\n                }\r\n            } else {\r\n                next = true;\r\n            }\r\n            if (!next) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import { ConIronSight } from './mods/appliers/ConIronSight';\r\nimport { SightedTransition } from './mods/appliers/SightedTransition';\r\nimport { MaxConDegree } from './mods/appliers/MaxConDegree';\r\nimport { MinConDegree } from './mods/appliers/MinConDegree';\r\nimport { RecoilMaxDegree } from './mods/appliers/RecoilMaxDegree';\r\nimport { RecoilMinDegree } from './mods/appliers/RecoilMinDegree';\r\nimport { ModParser } from './mods/ModParser';\r\nimport TemplateTools from '../templates/TemplateTools';\r\nimport { ModTools } from './mods/ModTools';\r\nimport getMods from './Mods';\r\n\r\n\r\nexport default class AccuracyHelper {\r\n    static RECOIL = 0;\r\n    static CON = 1;\r\n    static BALANCE = 2;\r\n\r\n    static ACCURACY_INFO = (\r\n        <>\r\n            <p>\r\n                <b>Only for range weapons.</b>\r\n            </p>\r\n            <p>\r\n                The calculator does not calculate accuracy from these parameters, hence it has no influence on damage,\r\n                but it still can choose the best among the raw values from mods.\r\n            </p>\r\n        </>\r\n    );\r\n\r\n    static ACC_PREFERENCE = {Recoil: AccuracyHelper.RECOIL, Spread: AccuracyHelper.CON, Balance: AccuracyHelper.BALANCE};\r\n\r\n    constructor() {\r\n        this.modEffects = new Map();\r\n        this.modEffects.set(\"ConIronSight\", new ConIronSight());\r\n        this.modEffects.set(\"SightedTransition\", new SightedTransition());\r\n        this.modEffects.set(\"MaxConDegree\", new MaxConDegree());\r\n        this.modEffects.set(\"MinConDegree\", new MinConDegree());\r\n        this.modEffects.set(\"RecoilMaxDegree\", new RecoilMaxDegree());\r\n        this.modEffects.set(\"RecoilMinDegree\", new RecoilMinDegree());\r\n    }\r\n\r\n    getCleanTemplate() {\r\n        const result = {};\r\n        result[\"maxConDegree\"] = [1, 1];\r\n        result[\"minConDegree\"] = [1, 1];\r\n        result[\"recoilMaxDegree\"] = [1, 1];\r\n        result[\"recoilMinDegree\"] = [1, 1];\r\n        result[\"conIronSight\"] = [1, 1];\r\n        result[\"sightedTransition\"] = [1, 1];\r\n        result[\"defaultMod\"] = false;\r\n        return result;\r\n    }\r\n\r\n    // Find best mods which do not affect on damage directly, not hidden and not excluded\r\n    // If all are equal then default is used.\r\n    getBestMods(template, includeGroups, preference) {\r\n        const result = {}\r\n        for (const categoryName in template.allMods) {\r\n            const mods = template.allMods[categoryName];\r\n            const resultMods = {};\r\n            if (!includeGroups.includes(categoryName)) {\r\n                continue;\r\n            }\r\n            for (let i = 0; i < mods.length; i++) {\r\n                const temp = this.getCleanTemplate();\r\n                const mod = mods[i];\r\n                const modId = mod[0]\r\n                const modData = getMods().get(modId);\r\n                if (!modData || modData.hide || !AccuracyHelper.hasAccuracyData(modData)) {\r\n                    continue;\r\n                }\r\n\r\n                // 4-useful (means directly affecting on damage, we skip them)\r\n                // Consider silencer does not affect damage except some conditions\r\n                const useful = (mod[4] && !ModTools.hasSilencer(modData));\r\n\r\n                // 3-hidden\r\n                if (!mod[3] && !useful && !TemplateTools.excludeMod(template.id, modId)) {\r\n                    temp[\"defaultMod\"] = mod[1];\r\n                    ModParser.applySpecific(temp, modData, this.modEffects);\r\n                    resultMods[modId] = temp;\r\n                }\r\n            }\r\n            result[categoryName] = resultMods;\r\n        }\r\n        return this.getTheBestModsForCategory(result, preference);\r\n    }\r\n\r\n    getTheBestModsForCategory(allMods, preference) {\r\n        const result = {};\r\n        let pFunc = null;\r\n        switch (preference) {\r\n            case AccuracyHelper.RECOIL:\r\n                pFunc = this.determineBestRecoilPriority;\r\n                break;\r\n            case AccuracyHelper.CON:\r\n                pFunc = this.determineBestConPriority;\r\n                break;\r\n            case AccuracyHelper.BALANCE:\r\n                pFunc = this.determineBestBalance;\r\n                break;\r\n            default:\r\n                pFunc = this.determineBestBalance;\r\n        }\r\n        for (const groupName in allMods) {\r\n            let best = null;\r\n            const mods = allMods[groupName];\r\n            for (const id in mods) {\r\n                const modData = mods[id];\r\n                best = pFunc(id, modData, best, this);\r\n            }\r\n            if (best) {\r\n                result[groupName] = best[0];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    determineBestBalance(currentId, currentData, best, th) {\r\n        if (!best) {\r\n            return [currentId, currentData];\r\n        }\r\n        const bestCon = th.getAverageCon(best[1]);\r\n        const currentCon = th.getAverageCon(currentData);\r\n        const bestRecoil = th.getAverageRecoil(best[1]);\r\n        const currentRecoil = th.getAverageRecoil(currentData);\r\n        const bestBalance = (bestCon + bestRecoil) / 2.0;\r\n        const currentBalance = (currentCon + currentRecoil) / 2.0;\r\n        if (bestBalance > currentBalance) {\r\n            return [currentId, currentData];\r\n        } else if (bestBalance === currentBalance) {\r\n            const bestTransition = th.getTransition(best[1]);\r\n            const currentTransition = th.getTransition(currentData);\r\n            if (bestTransition > currentTransition) {\r\n                return [currentId, currentData];\r\n            } else if (bestTransition === currentTransition) {\r\n                const bestSight = th.getSight(best[1]);\r\n                const currentSight = th.getSight(currentData);\r\n                if (bestSight > currentSight) {\r\n                    return [currentId, currentData];\r\n                } else if (bestSight === currentSight) {\r\n                    if (currentData['defaultMod']) { // Everything is equal then default is preferred\r\n                        return [currentId, currentData];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return best;\r\n    }\r\n\r\n    determineBestConPriority(currentId, currentData, best, th) {\r\n        if (!best) {\r\n            return [currentId, currentData];\r\n        }\r\n        const bestCon = th.getAverageCon(best[1]);\r\n        const currentCon = th.getAverageCon(currentData);\r\n        if (bestCon > currentCon) {\r\n            return [currentId, currentData];\r\n        } else if (bestCon === currentCon) {\r\n            const bestRecoil = th.getAverageRecoil(best[1]);\r\n            const currentRecoil = th.getAverageRecoil(currentData);\r\n            if (bestRecoil > currentRecoil) {\r\n                return [currentId, currentData];\r\n            } else if (bestRecoil === currentRecoil) {\r\n                const bestTransition = th.getTransition(best[1]);\r\n                const currentTransition = th.getTransition(currentData);\r\n                if (bestTransition > currentTransition) {\r\n                    return [currentId, currentData];\r\n                } else if (bestTransition === currentTransition) {\r\n                    const bestSight = th.getSight(best[1]);\r\n                    const currentSight = th.getSight(currentData);\r\n                    if (bestSight > currentSight) {\r\n                        return [currentId, currentData];\r\n                    } else if (bestSight === currentSight) {\r\n                        if (currentData['defaultMod']) { // Everything is equal then default is preferred\r\n                            return [currentId, currentData];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return best;\r\n    }\r\n\r\n    determineBestRecoilPriority(currentId, currentData, best, th) {\r\n        if (!best) {\r\n            return [currentId, currentData];\r\n        }\r\n        const bestRecoil = th.getAverageRecoil(best[1]);\r\n        const currentRecoil = th.getAverageRecoil(currentData);\r\n        if (bestRecoil > currentRecoil) {\r\n            return [currentId, currentData];\r\n        } else if (bestRecoil === currentRecoil) {\r\n            const bestCon = th.getAverageCon(best[1]);\r\n            const currentCon = th.getAverageCon(currentData);\r\n            if (bestCon > currentCon) {\r\n                return [currentId, currentData];\r\n            } else if (bestCon === currentCon) {\r\n                const bestTransition = th.getTransition(best[1]);\r\n                const currentTransition = th.getTransition(currentData);\r\n                if (bestTransition > currentTransition) {\r\n                    return [currentId, currentData];\r\n                } else if (bestTransition === currentTransition) {\r\n                    const bestSight = th.getSight(best[1]);\r\n                    const currentSight = th.getSight(currentData);\r\n                    if (bestSight > currentSight) {\r\n                        return [currentId, currentData];\r\n                    } else if (bestSight === currentSight) {\r\n                        if (currentData['defaultMod']) { // Everything is equal then default is preferred\r\n                            return [currentId, currentData];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return best;\r\n    }\r\n\r\n    getAverageRecoil(modData) {\r\n        const maxR = modData.recoilMaxDegree[1];\r\n        const minR = modData.recoilMinDegree[1];\r\n        return (maxR + minR) / 2.0;\r\n    }\r\n\r\n    getAverageCon(modData) {\r\n        const maxC = modData.maxConDegree[1];\r\n        const minC = modData.minConDegree[1];\r\n        return (maxC + minC) / 2.0;\r\n    }\r\n\r\n    getTransition(modData) {\r\n        return modData.sightedTransition[1];\r\n    }\r\n\r\n    getSight(modData) {\r\n        return modData.conIronSight[1];\r\n    }\r\n\r\n    static accuracyProps = [\"conIronSight\", \"maxConDegree\", \"minConDegree\", \"recoilMaxDegree\", \"recoilMinDegree\", \"sightedTransition\"]\r\n\r\n    static hasAccuracyData(modData) {\r\n        /*\r\n        let result = false;\r\n        for (let i = 0; i < modData.modifiers.length; i++) {\r\n            const mod = modData.modifiers[i];\r\n        }\r\n        return AccuracyHelper.accuracyProps.includes(modData.props)\r\n        */\r\n        return true;\r\n    }\r\n}","export default class LegsId {\r\n    static QUAD = '00692275';\r\n    static ARISTOCRAT = '00606b71';\r\n    static ANTI_ARMOR = '005281b4';\r\n    static TWO_SHOT = '004f6d76';\r\n    static EXECUTIONER = '004f6aa1';\r\n    static BLOODIED = '004f6aa0';\r\n    static STEADY = '00606c8d';\r\n    static MELEE_RAPID = '001a7bda';\r\n    static HITMAN = '0052414e';\r\n    static RANGED_RAPID = '0052414f';\r\n    static VITAL = '0052414b';\r\n    static EXPLOSIVE = '004f5771';\r\n    static CRIPPLING = '004ed02c';\r\n    static SWIFT = '00524150';\r\n    static STRENGTH = '005299fc';\r\n    static names = LegsId.getNames();\r\n\r\n    static getNames() {\r\n        const names = new Map();\r\n        names.set(LegsId.QUAD, \"Quad\");\r\n        names.set(LegsId.ARISTOCRAT, \"Aristocrat\");\r\n        names.set(LegsId.ANTI_ARMOR, \"Anti Armor\");\r\n        names.set(LegsId.TWO_SHOT, \"Two Shot\");\r\n        names.set(LegsId.EXECUTIONER, \"Executioner\");\r\n        names.set(LegsId.BLOODIED, \"Bloodied\");\r\n        names.set(LegsId.STEADY, \"Steady\");\r\n        names.set(LegsId.MELEE_RAPID, \"Melee Rapid\");\r\n        names.set(LegsId.HITMAN, \"Hitman\");\r\n        names.set(LegsId.RANGED_RAPID, \"Ranged Rapid\");\r\n        names.set(LegsId.VITAL, \"Vital\");\r\n        names.set(LegsId.EXPLOSIVE, \"Explosive\");\r\n        names.set(LegsId.CRIPPLING, \"Crippling\");\r\n        names.set(LegsId.SWIFT, \"Swift\");\r\n        names.set(LegsId.STRENGTH, \"Strength\");\r\n        return names;\r\n    }\r\n\r\n    static getName(id) {\r\n        return LegsId.names.get(id);\r\n    }\r\n\r\n    static getLeg1() {\r\n        const leg = {};\r\n        leg[LegsId.QUAD] = true;\r\n        leg[LegsId.ARISTOCRAT] = true;\r\n        leg[LegsId.ANTI_ARMOR] = true;\r\n        leg[LegsId.TWO_SHOT] = true;\r\n        leg[LegsId.EXECUTIONER] = true;\r\n        leg[LegsId.BLOODIED] = true;\r\n        return leg;\r\n    }\r\n\r\n    static getLeg2() {\r\n        const leg = {};\r\n        leg[LegsId.STEADY] = true;\r\n        leg[LegsId.MELEE_RAPID] = true;\r\n        leg[LegsId.HITMAN] = true;\r\n        leg[LegsId.RANGED_RAPID] = true;\r\n        leg[LegsId.VITAL] = true;\r\n        leg[LegsId.EXPLOSIVE] = true;\r\n        leg[LegsId.CRIPPLING] = true;\r\n        return leg;\r\n    }\r\n\r\n    static getLeg3() {\r\n        const leg = {};\r\n        leg[LegsId.SWIFT] = true;\r\n        leg[LegsId.STRENGTH] = true;\r\n        return leg;\r\n    }\r\n}\r\n\r\n","import LegsId from './LegsId';\r\n\r\n\r\nexport default class LegendaryCalcBuilder {\r\n\r\n    static pushIfAccessible(legs, id, accessibleList) {\r\n        if (accessibleList[id]) {\r\n            legs.push(id);\r\n        }\r\n    }\r\n    static getLegendary1(isRange, lowHP, accessibleList, legs=null) {\r\n        legs = LegendaryCalcBuilder.initLegs(legs);\r\n        LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.ANTI_ARMOR, accessibleList);\r\n        LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.EXECUTIONER, accessibleList);\r\n        if (isRange) {\r\n            LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.QUAD, accessibleList);\r\n            LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.TWO_SHOT, accessibleList);\r\n        }\r\n        if (lowHP) {\r\n            LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.BLOODIED, accessibleList);\r\n        } else {\r\n            LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.ARISTOCRAT, accessibleList);\r\n        }\r\n        return legs;\r\n    }\r\n\r\n    static initLegs(legs) {\r\n        if (!legs) {\r\n            legs = [];\r\n        } else {\r\n            legs.length = 0;\r\n        }\r\n        return legs;\r\n    }\r\n\r\n    static getLegendary2(isRange, explosive, scoped, accessibleList, legs=null) {\r\n        legs = LegendaryCalcBuilder.initLegs(legs);\r\n        LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.VITAL, accessibleList);\r\n        LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.CRIPPLING, accessibleList);\r\n        if (isRange) {\r\n            if (scoped) {\r\n                LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.HITMAN, accessibleList);\r\n            }\r\n            if (!explosive) {\r\n                LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.EXPLOSIVE, accessibleList);\r\n            }\r\n            LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.RANGED_RAPID, accessibleList);\r\n        } else {\r\n            LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.STEADY, accessibleList);\r\n            LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.MELEE_RAPID, accessibleList);\r\n        }\r\n        return legs;\r\n    }\r\n\r\n    static getLegendary3(isRange, accessibleList, legs=null) {\r\n        legs = LegendaryCalcBuilder.initLegs(legs);\r\n        if (isRange) {\r\n            LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.SWIFT, accessibleList);\r\n        } else {\r\n            LegendaryCalcBuilder.pushIfAccessible(legs, LegsId.STRENGTH, accessibleList);\r\n        }\r\n        return legs;\r\n    }\r\n}","import { defaultExtraDamage } from '../../entities/ExtraDamageOptions';\r\nimport { buildCreature, getAverageTimeMillis } from '../../entities/ECreatures';\r\nimport { defaultAdds } from '../../entities/EAddDamages';\r\nimport { convertTemplateToSpecs } from '../../entities/EWeaponSpecs';\r\nimport { defaultPlayerStats } from '../../entities/EPlayerStats';\r\nimport { defaultPlayer } from '../../entities/EPlayer';\r\nimport WeaponFactory from '../../damage/weapon/WeaponFactory';\r\nimport DamageEmulator from '../../damage/DamageEmulator';\r\nimport { getTemplateCopyById } from '../../helpers/TemplatesRegister';\r\nimport { modsSetter } from '../TemplateItems';\r\nimport { millisToTime } from '../../helpers/Time';\r\nimport Combinator from '../../helpers/Combinator';\r\nimport AccuracyHelper from '../../helpers/AccuracyHelper';\r\nimport PerkCardBuilder from '../../perkCardBoosts/PerkCardBuilder';\r\nimport ConsumablesBuilder from '../../boostStuff/ConsumablesBuilder';\r\nimport TemplateTools from '../TemplateTools';\r\nimport { ModParser } from '../../helpers/mods/ModParser';\r\nimport LegendaryCalcBuilder from '../../helpers/LegendaryCalcBuilder';\r\nimport LegendarySetter from '../../helpers/mods/LegendarySetter';\r\nimport { getLegendaryNameFromSpec } from '../../helpers/LegendaryProvider';\r\n\r\n\r\nexport default class ParameterCalculator {\r\n    static info = (\r\n        <>\r\n            <p>\r\n                <b>ATTENTION!</b>\r\n            </p>\r\n            <p>\r\n                ⁍ Not all weapons are tested in real game, therefore some of damage values can be incorrect or\r\n                mods (which are presented in the calculator) can be not accessible for usage in the game. The calculator will run through mods, legendary mods, perks, consumables to find the best configuration provided that a weapon has 100% accuracy.\r\n            </p>\r\n            <p>\r\n                ⁍ The calculator will try to pick mods with best recoil / spread, but they will not impact accuracy during calculations whereas in real game accuracy can greatly affect damage performance.\r\n            </p>\r\n            <p>\r\n                ⁍ Possible AP benefits are ignored.\r\n            </p>\r\n            <p>\r\n                ⁍ Weapons with default legendary mods will not be iterated through other legendary.\r\n            </p>\r\n            <p>\r\n                ⁍ Gun-Foo, Bash, all legendary perks (except TOFT, Follow Through), and some others affecting accuracy are ignored.\r\n            </p>\r\n            <p>\r\n                ⁍ Power attack, Furious are ignored (as being not tested for now).\r\n            </p>\r\n        </>\r\n    );\r\n    constructor(creatureNames, id, modGroups, cards, frCrit, frHead, main, stuff, legendaryOpts, accessibleLeg, accessibleStuff, accessiblePerks, accuracyPreference) {\r\n        this.creatureNames = creatureNames;\r\n        this.id = id;\r\n        this.modGroups = modGroups;\r\n        this.modCombinator = null;\r\n        this.boostCombinator = null;\r\n        this.bestParameters = null;\r\n        this.lastParameters = null;\r\n        this.bestTime = Infinity;\r\n        this.lastTime = Infinity;\r\n        this.creatureName = null;\r\n        this.template = null;\r\n        this.count = 0;\r\n        this.maxCount = 0;\r\n        this.cards = cards;\r\n        this.frHead = frHead;\r\n        this.frCrit = frCrit;\r\n        this.main = main;\r\n        this.stuff = stuff;\r\n        this.modParser = new ModParser();\r\n        this.legendary = null;\r\n        this.legendaryOpts = legendaryOpts;\r\n        this.accessibleLeg = accessibleLeg;\r\n        this.accessibleStuff = accessibleStuff;\r\n        this.accessiblePerks = accessiblePerks;\r\n        this.defaultLegendary = null;\r\n        this.hasGotLastCombination = false;\r\n        this.currentConfig = {};\r\n        this.bestConfig = null;\r\n        this.bestAverageHit = 0;\r\n        this.accuracyHelper = new AccuracyHelper();\r\n        this.accuracyPreference = accuracyPreference;\r\n        this.defaultExplosive = false;\r\n        this.perkImageNames = [];\r\n        this.creatureTags = [];\r\n        this.bodyTags = [];\r\n\r\n        // Currently accuracy mods do not influence on damage but, best\r\n        // values still can be calculated (without paying attention to distance)\r\n        // specify such mods in advance to reduce the number of computations\r\n        this.bestAccuracyMods = null;\r\n    }\r\n\r\n    getBestParameters() {\r\n\r\n        // We are finished, but for Non-Automatic option best parameters can still be null\r\n        // use the last one\r\n        return (this.bestParameters) ? this.bestParameters : this.lastParameters;\r\n    }\r\n\r\n    getTemplate() {\r\n        return this.template;\r\n    }\r\n\r\n    getCount() {\r\n        return this.count;\r\n    }\r\n\r\n    getMaxCount() {\r\n        return this.maxCount;\r\n    }\r\n\r\n    getBestTime(clockFormat=true) {\r\n        const time = (this.bestParameters) ? this.bestTime : this.lastTime;\r\n        if (clockFormat) {\r\n            return millisToTime(time);\r\n        }\r\n        return time;\r\n    }\r\n\r\n    prepareAndCalcFirst(creatureName=\"average\") {\r\n\r\n        // The order of invoking of functions is important!\r\n        this.creatureName = creatureName;\r\n        this.creatureTags = this.getCreatureTags();\r\n        this.bodyTags = this.getBodyTags();\r\n        this.template = getTemplateCopyById(this.id);\r\n        this.bestAccuracyMods = this.accuracyHelper.getBestMods(this.template, this.modGroups, this.accuracyPreference);\r\n        this.defaultLegendary = TemplateTools.getDefaultLegendary(this.template, new LegendarySetter());\r\n        this.defaultExplosive = this.isDefaultExplosive();\r\n        this.legendary = this.buildLegendary();\r\n        const silencerDamage = this.main.Night && this.cards.Sneak;\r\n        const modCombinations = TemplateTools.getDamagedModIndexes(this.template, this.modGroups, this.bestAccuracyMods, silencerDamage);\r\n        this.modCombinator = new Combinator(modCombinations);\r\n        this.maxCount = this.modCombinator.getCombinationsCount();\r\n        this.applyMods();\r\n        this.boostCombinator = this.buildBoostCombinator();\r\n        let consList = null;\r\n        let legsList = null;\r\n        if (this.boostCombinator) {\r\n            const current = this.boostCombinator.current();\r\n            consList = this.buildConsumableList(current);\r\n            legsList = this.buildLegendaryList(current);\r\n        }\r\n        this.calculateAndCount(consList, legsList);\r\n    }\r\n\r\n    buildLegendary() {\r\n        const legendary = {};\r\n        const range = TemplateTools.isWeaponRanged(this.template);\r\n        const lowHP = this.cards[\"Low HP\"];\r\n        const scoped = this.main[\"Scoped\"];\r\n        let leg1 = [];\r\n        let leg2 = [];\r\n        let leg3 = [];\r\n        if (this.defaultLegendary.length === 0) {\r\n            if (this.legendaryOpts.Legendary1) {\r\n                leg1 = LegendaryCalcBuilder.getLegendary1(range, lowHP, this.accessibleLeg.leg1);\r\n            }\r\n            if (this.legendaryOpts.Legendary2) {\r\n                leg2 = LegendaryCalcBuilder.getLegendary2(range, this.defaultExplosive, scoped, this.accessibleLeg.leg2);\r\n            }\r\n            if (this.legendaryOpts.Legendary3) {\r\n                leg3 = LegendaryCalcBuilder.getLegendary3(range, this.accessibleLeg.leg3);\r\n            }\r\n        }\r\n        legendary['Legendary1_l'] = leg1;\r\n        legendary['Legendary2_l'] = leg2;\r\n        legendary['Legendary3_l'] = leg3;\r\n        return legendary;\r\n    }\r\n\r\n    getBodyTags() {\r\n        let bodyTags = []\r\n        const uniqueTags = new Set();\r\n        if (this.creatureName === 'average') {\r\n            for (const fieldName in this.creatureNames) {\r\n                const creatureData = this.creatureNames[fieldName];\r\n                uniqueTags.add(creatureData[3].toLowerCase());\r\n            }\r\n            bodyTags = [...uniqueTags];\r\n        } else {\r\n            for (const fieldName in this.creatureNames) {\r\n                const creatureData = this.creatureNames[fieldName];\r\n                if (creatureData[0] === this.creatureName) {\r\n                    bodyTags = [creatureData[3].toLowerCase()];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return bodyTags;\r\n    }\r\n\r\n    getCreatureTags() {\r\n        let creatureTags = []\r\n        const uniqueTags = new Set();\r\n        if (this.creatureName === 'average') {\r\n            for (const fieldName in this.creatureNames) {\r\n                const creatureData = this.creatureNames[fieldName];\r\n                for (let i = 0; i < creatureData[2].length; i++) {\r\n                    const tag = creatureData[2][i];\r\n                    uniqueTags.add(tag.toLowerCase());\r\n                }\r\n            }\r\n            creatureTags = [...uniqueTags];\r\n        } else {\r\n            for (const fieldName in this.creatureNames) {\r\n                const creatureData = this.creatureNames[fieldName];\r\n                if (creatureData[0] === this.creatureName) {\r\n                    for (let i = 0; i < creatureData[2].length; i++) {\r\n                        const tag = creatureData[2][i];\r\n                        creatureTags.push(tag.toLowerCase());\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return creatureTags;\r\n    }\r\n\r\n    getConsumables() {\r\n        const result = {};\r\n        const wType = this.template.type[1];\r\n        const wName = this.template.name;\r\n        const tags = this.template.tags;\r\n        const ammo = (this.template.ammoType) ? this.template.ammoType.codeName : \"\";\r\n        const crit = this.cards.Crit;\r\n        const sneak = this.cards.Sneak;\r\n        const team = this.cards.Team;\r\n        const lowHP = this.cards[\"Low HP\"];\r\n        const scoped = this.main[\"Scoped\"];\r\n\r\n        if (this.stuff[\"Magazines\"]) {\r\n            result[\"Magazines_c\"] = ConsumablesBuilder.getMagazineItems(wType, wName, tags, crit, team, scoped, this.creatureTags, this.accessibleStuff.magazines);\r\n        }\r\n        if (this.stuff[\"Endangerol Syringer\"]) {\r\n            const others = ConsumablesBuilder.getOtherItems(TemplateTools.hasPhysicalDamage(this.template));\r\n            if (others.length > 0) {\r\n                result[\"Syringer_c\"] = others;\r\n            }\r\n        }\r\n        if (this.stuff[\"Bobble Heads\"]) {\r\n            const bobble = ConsumablesBuilder.getBobbleHeadItems(wType, tags, ammo, this.accessibleStuff.bobbleHeads);\r\n            if (bobble.length > 0) {\r\n                result[\"Bobble_c\"] = bobble;\r\n            }\r\n        }\r\n        if (this.stuff[\"Drink\"]) {\r\n            const drink = ConsumablesBuilder.getDrinkItems(wType, tags, crit, this.creatureTags, this.accessibleStuff.drink);\r\n            if (drink.length > 0) {\r\n                result[\"Drink_c\"] = drink;\r\n            }\r\n        }\r\n        if (this.stuff[\"Chemicals\"]) {\r\n            result[\"Chemicals_c\"] = ConsumablesBuilder.getChemicalItems(wType, crit, sneak, this.accessibleStuff.chemo);\r\n        }\r\n        if (this.stuff[\"Food\"]) {\r\n            const food = ConsumablesBuilder.getFoodItems(wType, crit, this.accessibleStuff.food);\r\n            if (food.length > 0) {\r\n                result[\"Food_c\"] = food;\r\n            }\r\n        }\r\n        if (this.stuff[\"Serums\"]) {\r\n            result[\"Serums_c\"] = ConsumablesBuilder.getSerumItems(wType, crit, lowHP, team, this.stuff[\"Food\"], this.accessibleStuff.serums);\r\n        }\r\n        return (Object.keys(result).length === 0) ? null : result;\r\n    }\r\n\r\n    calculateAndCount(consumableBoostsList, legendary) {\r\n        this.lastParameters = this.calculateCombination(consumableBoostsList, legendary);\r\n        this.lastTime = this.lastParameters[this.creatureName].lifeTime;\r\n        this.averageHit = this.lastParameters[this.creatureName].averageHit;\r\n        if (!this.lastParameters[\"Rejected\"]) {\r\n            if (this.lastTime < this.bestTime) {\r\n                this.bestParameters = this.lastParameters;\r\n                this.bestAverageHit = this.averageHit;\r\n                this.bestTime = this.lastTime;\r\n                this.updateBestConfig();\r\n            } else if (this.lastTime === this.bestTime) {\r\n                if (this.averageHit >= this.bestAverageHit) {\r\n                    this.bestAverageHit = this.averageHit;\r\n                    this.bestParameters = this.lastParameters;\r\n                    this.bestTime = this.lastTime;\r\n                    this.updateBestConfig();\r\n                }\r\n            }\r\n        }\r\n        this.count += 1;\r\n    }\r\n\r\n    buildBoostCombinator() {\r\n        let consCombinations = this.getConsumables();\r\n        if (!consCombinations) {\r\n            consCombinations = {};\r\n        }\r\n        for (const name in this.legendary) {\r\n            consCombinations[name] = this.legendary[name];\r\n        }\r\n        if (Object.keys(consCombinations).length > 0) {\r\n            return new Combinator(consCombinations);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    buildConsumableList(boostCombinations) {\r\n        const result = [];\r\n        if (!boostCombinations) {\r\n            return result;\r\n        }\r\n        for (const name in boostCombinations) {\r\n            if (name.endsWith(\"_c\")) {\r\n                const array = boostCombinations[name];\r\n                for (let i = 0; i < array.length; i++) {\r\n                    result.push(array[i]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    buildLegendaryList(boostCombinations) {\r\n        const result = [];\r\n        if (!boostCombinations) {\r\n            return result;\r\n        }\r\n        for (const name in boostCombinations) {\r\n            if (name.endsWith(\"1_l\")) {\r\n                result.push([boostCombinations[name], 0]);\r\n            } else if (name.endsWith(\"2_l\")) {\r\n                result.push([boostCombinations[name], 1]);\r\n            } else if (name.endsWith(\"3_l\")) {\r\n                result.push([boostCombinations[name], 2]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    nextBoostExists() {\r\n        return this.boostCombinator && this.boostCombinator.next();\r\n    }\r\n\r\n    calculateCombinations(maxCount=1) {\r\n        let count = 0;\r\n        while (count < maxCount) {\r\n            let modCombinationExists = false;\r\n            let currentBoosts = null;\r\n            if (!this.nextBoostExists()) {\r\n                modCombinationExists = this.modCombinator.next();\r\n                if (modCombinationExists) {\r\n                    this.applyMods();\r\n                    this.boostCombinator = this.buildBoostCombinator();\r\n                    if (this.boostCombinator) {\r\n                        currentBoosts = this.boostCombinator.current();\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            } else {\r\n                currentBoosts = this.boostCombinator.current();\r\n            }\r\n            const consList = this.buildConsumableList(currentBoosts);\r\n            const legsList = this.buildLegendaryList(currentBoosts);\r\n            this.calculateAndCount(consList, legsList);\r\n            count += 1;\r\n        }\r\n        this.hasGotLastCombination = (count === 0);\r\n        return !this.hasGotLastCombination;\r\n    }\r\n\r\n    isFinished() {\r\n        return this.hasGotLastCombination;\r\n    }\r\n\r\n    getCompletionPercent() {\r\n        if (!this.modCombinator) {\r\n            return 0;\r\n        }\r\n        const onePart =  100 / this.modCombinator.getCombinationsCount();\r\n        return parseInt(onePart * this.modCombinator.getCurrentNumber());\r\n    }\r\n\r\n    applyMods() {\r\n        TemplateTools.resetMods(this.template);\r\n        const combinations = this.modCombinator.current();\r\n        for (const name in combinations) {\r\n            const modGroup = this.template.allMods[name];\r\n            if (modGroup) {\r\n                const modIndex = combinations[name];\r\n                if (modIndex > -1) {\r\n                    modGroup[modIndex][1] = true;\r\n                }\r\n            }\r\n        }\r\n        modsSetter.cleanTemplateAndApplyCurrentMods(this.template);\r\n    }\r\n\r\n    // Considers that if explosive exists by default then it will exist for any other configuration\r\n    // must be applied before resetting template\r\n    isDefaultExplosive() {\r\n        modsSetter.cleanTemplateAndApplyCurrentMods(this.template);\r\n        return TemplateTools.isWeaponExplosive(this.template);\r\n    }\r\n\r\n    nonAutomatic() {\r\n        return (this.main[\"Non-Automatic\"] && this.template.isAuto[1] === 1);\r\n    }\r\n\r\n    applyLegendaryToWSpec(wSpec, legendary, update) {\r\n        if (!legendary) {\r\n            return;\r\n        }\r\n        const lowHP = this.cards[\"Low HP\"];\r\n        for(let i = 0; i < legendary.length; i++) {\r\n            const leg = legendary[i];\r\n            const legId = leg[0];\r\n            const legIndex = leg[1];\r\n            this.modParser.applyLegendaryModToWSpec(legId, wSpec, legIndex, ((lowHP) ? 20 : 100), update, true);\r\n            wSpec.legendary[legIndex][0] = legId;\r\n        }\r\n    }\r\n\r\n    memoConfig(wSpec, consumableBoostsList) {\r\n        const mods = [];\r\n        const leg1 = getLegendaryNameFromSpec(wSpec, 1);\r\n        const leg2 = getLegendaryNameFromSpec(wSpec, 2);\r\n        const leg3 = getLegendaryNameFromSpec(wSpec, 3);\r\n        for (let i = 0; i < wSpec.mods.length; i++) {\r\n            const mod = wSpec.mods[i];\r\n            mods.push({group: mod.group, name: mod.name});\r\n        }\r\n        this.currentConfig[\"mods\"] = mods;\r\n        this.currentConfig[\"consumables\"] = consumableBoostsList;\r\n        this.currentConfig[\"legendary\"] = [leg1, leg2, leg3];\r\n        this.currentConfig[\"perks\"] = this.perkImageNames;\r\n        return this.currentConfig;\r\n    }\r\n\r\n    updateBestConfig() {\r\n        this.bestConfig = {};\r\n        const mods = [];\r\n        const legs = [];\r\n        const consumables = [];\r\n        const perks = [];\r\n        this.bestConfig['mods'] = mods;\r\n        this.bestConfig['legendary'] = legs;\r\n        this.bestConfig['consumables'] = consumables;\r\n        this.bestConfig['perks'] = perks;\r\n        for (let i = 0; i < this.currentConfig.mods.length; i++) {\r\n            const mod = this.currentConfig.mods[i];\r\n            mods.push({group: mod.group, name: mod.name});\r\n        }\r\n\r\n        for (let i = 0; i < this.currentConfig.legendary.length; i++) {\r\n            const leg = this.currentConfig.legendary[i];\r\n            legs.push(leg);\r\n        }\r\n\r\n        for (let i = 0; i < this.currentConfig.consumables.length; i++) {\r\n            const cons = this.currentConfig.consumables[i];\r\n            consumables.push(cons);\r\n        }\r\n\r\n        for (let i = 0; i < this.currentConfig.perks.length; i++) {\r\n            const perk = this.currentConfig.perks[i];\r\n            perks.push(perk);\r\n        }\r\n    }\r\n\r\n    getBestConfig() {\r\n        return (this.bestConfig) ? this.bestConfig : this.currentConfig;\r\n    }\r\n\r\n    getCurrentConfig() {\r\n        return this.currentConfig;\r\n    }\r\n\r\n    buildNewCreatures() {\r\n        return {\r\n            creature1: buildCreature(this.creatureNames.creature1[0], this.creatureNames.creature1[1], \"creature1\"),\r\n            creature2: buildCreature(this.creatureNames.creature2[0], this.creatureNames.creature2[1], \"creature2\"),\r\n            creature3: buildCreature(this.creatureNames.creature3[0], this.creatureNames.creature3[1], \"creature3\"),\r\n            creature4: buildCreature(this.creatureNames.creature4[0], this.creatureNames.creature4[1], \"creature4\"),\r\n        };\r\n    }\r\n\r\n    calculateCombination(consumableBoostsList, legendary) {\r\n        const wSpec = convertTemplateToSpecs(this.template, false);\r\n\r\n        // Update default legs or apply new in wSpec\r\n        const updateLeg = this.defaultLegendary.length > 0;\r\n        const legToApply = (this.defaultLegendary.length > 0) ? this.defaultLegendary : legendary;\r\n        this.applyLegendaryToWSpec(wSpec, legToApply, updateLeg);\r\n        const extraDamage = defaultExtraDamage();\r\n        extraDamage.useCrit = this.cards[\"Crit\"];\r\n        extraDamage.critFreq = this.frCrit;\r\n        extraDamage.useSneak = this.cards[\"Sneak\"];\r\n        extraDamage.headFreq = this.frHead;\r\n        extraDamage.useHead = this.main[\"Head Shot\"];\r\n        const additionalDamages = defaultAdds();\r\n        const player = defaultPlayer();\r\n        const playerStats = defaultPlayerStats();\r\n        playerStats.strength.value = this.main[\"Strength\"];\r\n        const boostDamage = this.buildPerks(wSpec, player);\r\n        this.memoConfig(wSpec, consumableBoostsList);\r\n        const creatures = this.buildNewCreatures();\r\n        const [, consumableBoosts,] = ConsumablesBuilder.buildFromList(consumableBoostsList, player);\r\n        const weaponFactory = new WeaponFactory(wSpec, boostDamage, extraDamage, additionalDamages, consumableBoosts, playerStats);\r\n        const timeLimit = (this.bestTime === Infinity) ? null : [this.creatureName, this.bestTime];\r\n        const result = new DamageEmulator(weaponFactory.build(WeaponFactory.DEFAULT), creatures).emulate(35000, timeLimit);\r\n        const report = {\r\n            \"Rejected\": this.nonAutomatic(),\r\n            \"Parameters\": {\r\n                wSpec: wSpec,\r\n                creatures: creatures,\r\n                extraDamage: extraDamage,\r\n                additionalDamages: additionalDamages,\r\n                player: player,\r\n                playerStats: playerStats,\r\n                boostDamage: boostDamage,\r\n                result: result,\r\n                consumableList: consumableBoostsList,\r\n            },\r\n            \"average\": {lifeTime: getAverageTimeMillis(creatures), averageHit: (creatures.creature1.averageHit + creatures.creature2.averageHit + creatures.creature3.averageHit + creatures.creature4.averageHit) / 4},\r\n        };\r\n        report[creatures.creature1.name] = {lifeTime: creatures.creature1.lifeTime, averageHit: creatures.creature1.averageHit};\r\n        report[creatures.creature2.name] = {lifeTime: creatures.creature2.lifeTime, averageHit: creatures.creature2.averageHit};\r\n        report[creatures.creature3.name] = {lifeTime: creatures.creature3.lifeTime, averageHit: creatures.creature3.averageHit};\r\n        report[creatures.creature4.name] = {lifeTime: creatures.creature4.lifeTime, averageHit: creatures.creature4.averageHit};\r\n        return report;\r\n    }\r\n\r\n    buildPerks(wSpec, player) {\r\n        const wType = wSpec.type;\r\n        const automatic = (wSpec.is_auto === 1);\r\n        const energyTag = wSpec.tags.includes(\"Energy\");\r\n        const explosiveTag = wSpec.tags.includes(\"Explosive\");\r\n        const fusionTag = wSpec.tags.includes(\"FusionCore\");\r\n        const oneHandedTag = wSpec.tags.includes(\"Melee1H\");\r\n        const twoHandedTag = wSpec.tags.includes(\"Melee2H\");\r\n        const silencerTag = wSpec.tags.includes(\"HasSilencer\");\r\n        const shotgunTag = wSpec.tags.includes(\"Shotgun\");\r\n        const main = this.cards[\"Main Boosts\"];\r\n        const temp = this.cards[\"Temp Boosts\"];\r\n        const leg = this.cards[\"Leg Boosts\"];\r\n        const team = this.cards[\"Team\"];\r\n        const lowHp = this.cards[\"Low HP\"];\r\n        const pa = this.cards[\"Power Armor\"];\r\n        const explosive = (wSpec.exp > 0);\r\n        const crit = this.cards[\"Crit\"];\r\n        const sneak = this.cards[\"Sneak\"];\r\n        const night = this.main[\"Night\"];\r\n        const useSerums = this.stuff[\"Serums\"];\r\n        const drink = this.stuff[\"Drink\"];\r\n        const boosts = PerkCardBuilder.buildWithOptions(wType, automatic, energyTag, explosiveTag, fusionTag, oneHandedTag,\r\n                        twoHandedTag, silencerTag, shotgunTag, main, temp, leg, drink, team, lowHp, pa, explosive, crit,\r\n                        sneak, night, useSerums, player, this.bodyTags, this.creatureTags, this.accessiblePerks);\r\n        this.perkImageNames = PerkCardBuilder.getImageNamesForPickedCards(boosts);\r\n        return boosts;\r\n    }\r\n}","export default class PickedGroups {\r\n    static excludeGroups = [\"Replacement\", \"Feedthroat\", \"Handle\", \"Mod1\", \"Mod2\", \"Mod3\", \"Mod4\", \"Modelswap\", \"Meleelogo\", \"Shaft\", \"Legendary1\", \"Legendary2\", \"Legendary3\", \"Legendary4\", \"Legendary5\", \"Customname\", \"Frontsight\"];\r\n    static groups = [];\r\n\r\n    static init(template) {\r\n        PickedGroups.groups.length = 0;\r\n        for (const name in template.allMods) {\r\n            PickedGroups.push(name);\r\n        }\r\n    }\r\n\r\n    static excluded(name) {\r\n        return PickedGroups.excludeGroups.includes(name);\r\n    }\r\n\r\n    static push(name) {\r\n        if (!PickedGroups.excluded(name)) {\r\n            PickedGroups.groups.push(name);\r\n        }\r\n    }\r\n\r\n    static clear() {\r\n        PickedGroups.groups.length = 0;\r\n    }\r\n\r\n    static get() {\r\n        return PickedGroups.groups;\r\n    }\r\n}","import { useState } from 'react';\r\nimport { Divider } from 'antd';\r\nimport { UCheckbox } from '../../../viewComponents/checkbox/UCheckbox';\r\nimport GroupView from '../../../helpers/views/GroupView';\r\nimport PickedGroups from './PickedGroups';\r\nimport Row from 'react-bootstrap/Row';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nfunction getDefaultModGroups(template) {\r\n    let result = {};\r\n    if (template) {\r\n        for (const name in template.allMods) {\r\n            if (!PickedGroups.excluded(name)) {\r\n                 result[name] = true;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction buildGroupsView(groups, onGroupChange) {\r\n    let result = [];\r\n\r\n    for (const name in groups) {\r\n        result.push(getModItem(name, groups, onGroupChange));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getModItem(name, groups, onGroupChange) {\r\n    const checked = groups[name];\r\n    const outline = (checked) ? \"shadow-blue\" : \"\";\r\n    return (\r\n        <div key={name} className=\"col\">\r\n            <GroupView className={outline}>\r\n                <InputGroup className=\"mb-1 mt-1 p-0 m-0 flex-nowrap justify-content-center\">\r\n                    <InputGroup.Text style={{ width: '2.8rem'}}>\r\n                        <UCheckbox title={name} onChange={onGroupChange} checked={checked}></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text style={{ width: '15rem' }}><small>{name}</small></InputGroup.Text>\r\n                </InputGroup>\r\n            </GroupView>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function CalcModGroups(props) {\r\n    const [groups, setGroups] = useState(getDefaultModGroups(props.template));\r\n    function onGroupChange(e) {\r\n        groups[e.target.title] = e.target.checked;\r\n        PickedGroups.clear();\r\n        for (const name in groups) {\r\n            if (groups[name]) {\r\n                PickedGroups.push(name);\r\n            }\r\n        }\r\n        setGroups({...groups});\r\n    }\r\n    return (\r\n        <>\r\n            <Divider key={'ModGroups'} className=\"p-0 mt-3 mb-1\">Mod Groups</Divider>\r\n            <Container>\r\n                <Row>\r\n                    {buildGroupsView(groups, onGroupChange)}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import {checkLength} from '../../../helpers/Input';\r\nimport { Divider } from 'antd';\r\nimport { UCheckbox } from '../../../viewComponents/checkbox/UCheckbox';\r\nimport GroupView from '../../../helpers/views/GroupView';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { WarningPopover } from '../../../helpers/WarningPopover';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nfunction getInfo(name, infos) {\r\n    const info = infos[name];\r\n    if (info) {\r\n        return (\r\n            <WarningPopover element={infoButton()} message={info} header=\"Description\" />\r\n        );\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction infoButton() {\r\n    return (\r\n        <Button style={{ width: '2rem' }} variant=\"warning\"><strong>?</strong></Button>\r\n    );\r\n}\r\n\r\nfunction headButton(name, frHead, setFrHead) {\r\n    if (name !== \"Head Shot\") {\r\n        return (<></>);\r\n    }\r\n    function onClick(e) {\r\n        frHead += 20;\r\n        if (frHead > 100) {\r\n            frHead = 20;\r\n        }\r\n        setFrHead(frHead);\r\n    }\r\n    return (\r\n        <Button className={\"ps-0 pe-0 \"} style={{ width: '3rem' }} variant=\"secondary\" onClick={onClick}><strong><small>{frHead}%</small></strong></Button>\r\n    );\r\n}\r\n\r\nfunction buildView(items, setItems, frHead, setFrHead, frCrit, setFrCrit, infos) {\r\n    const result = [];\r\n    function onChange(e) {\r\n        items[e.target.title] = e.target.checked;\r\n        setItems({...items});\r\n    }\r\n    for (const opt in items) {\r\n        result.push(getItem(opt, onChange, items, setItems, frHead, setFrHead, frCrit, setFrCrit, infos));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction critButton(name, frCrit, setFrCrit) {\r\n    if (name !== \"Crit\") {\r\n        return (<></>);\r\n    }\r\n    function onClick(e) {\r\n        frCrit -= 1;\r\n        if (frCrit < 1) {\r\n            frCrit = 7;\r\n        }\r\n        setFrCrit(frCrit);\r\n    }\r\n    return (\r\n        <Button className=\"ps-0 pe-0\" style={{ width: '3rem' }} variant=\"secondary\" onClick={onClick}><strong><small>1 / {frCrit}</small></strong></Button>\r\n    );\r\n}\r\n\r\nfunction getItem(name, onChange, items, setItems, frHead, setFrHead, frCrit, setFrCrit, infos) {\r\n    let width = (infos[name]) ? '13rem' : '15rem';\r\n    width = (name === \"Head Shot\" || name === \"Crit\") ? \"12rem\" : width;\r\n    width = (name === \"Strength\") ? \"11rem\" : width;\r\n    const dis = (name === \"Strength\");\r\n    const checked = (dis) ? true : items[name];\r\n    const outline = (checked) ? \"shadow-blue\" : \"\";\r\n    return (\r\n        <Col key={name}>\r\n            <GroupView className={outline}>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap justify-content-center\">\r\n                    <InputGroup.Text style={{ width: '2.8rem'}}>\r\n                        <UCheckbox disabled={dis} title={name} onChange={onChange} checked={checked}></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text style={{ width: width }}><small>{name}</small></InputGroup.Text>\r\n                    {getInfo(name, infos)}\r\n                    {headButton(name, frHead, setFrHead)}\r\n                    {strengthField(name, items, setItems)}\r\n                    {critButton(name, frCrit, setFrCrit)}\r\n                </InputGroup>\r\n            </GroupView>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction strengthField(name, items, setItems) {\r\n    if (name !== \"Strength\") {\r\n        return (<></>);\r\n    }\r\n    function onChange(e) {\r\n        checkLength(e);\r\n        let value = parseInt(e.target.value);\r\n        let min = parseInt(e.target.min);\r\n        if (value < min) {\r\n            value = min;\r\n        }\r\n        items.Strength = value;\r\n        setItems({\r\n            ...items,\r\n        });\r\n    }\r\n    return (\r\n        <Form.Control className={\"pe-1\"} style={{ minWidth: '4rem', maxWidth: '4rem'}} type=\"number\" min=\"5\" value={items.Strength} max={\"100\"} maxLength=\"3\" onChange={onChange} />\r\n    );\r\n}\r\n\r\nexport default function CalcModOptionsView(props) {\r\n    return (\r\n        <>\r\n            <Divider key={props.header} className=\"p-0 mt-3 mb-1\">{props.header}</Divider>\r\n            <Container>\r\n                <Row>\r\n                    {buildView(props.items, props.setItems, props.frHead, props.setFrHead, props.frCrit, props.setFrCrit, props.infos)}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n}","import CalcModOptionsView from './CalcModOptionsView';\r\nimport { UCheckbox } from '../../../viewComponents/checkbox/UCheckbox';\r\n\r\n\r\nfunction buildNameFromItemId(fName) {\r\n    if (fName === 'toft') {\r\n        return 'TOFT';\r\n    }\r\n    let name = fName.replaceAll(\"_\", \" \");\r\n    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n    return name;\r\n}\r\n\r\nfunction getCheckbox(cards, setCards, header=null) {\r\n    const result = [];\r\n    function onChange(e) {\r\n        cards[e.target.id] = !cards[e.target.id];\r\n        setCards({...cards});\r\n    }\r\n    for (const fName in cards) {\r\n        const used = cards[fName];\r\n        const name = buildNameFromItemId(fName);\r\n        result.push(<div  key={fName} className=\"m-1\"><UCheckbox id={fName} onChange={onChange} checked={used}><strong className=\"ps-1\"><small>{name}</small></strong></UCheckbox></div>);\r\n    }\r\n    return (\r\n        <>\r\n            {header}\r\n            {result}\r\n            <div className=\"m-1\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function CalcCards(props) {\r\n    const infos = {\r\n        \"Temp Boosts\": getCheckbox(props.tempPerks, props.setTempPerks, <p style={{fontWeight: 'bold', paddingLeft: '0.5rem', paddingRight: '0.5rem', color: '#fff', backgroundColor: '#8a0044'}}><small>Gun Fu is not included.</small></p>),\r\n        \"Main Boosts\": getCheckbox(props.mainPerks, props.setMainPerks),\r\n        \"Leg Boosts\": getCheckbox(props.legPerks, props.setLegPerks),\r\n        \"Low HP\": <p style={{fontWeight: 'bold', paddingLeft: '0.5rem', paddingRight: '0.5rem', color:'#fff', backgroundColor: '#155a89'}}><small>20% / 100%</small></p>,\r\n        \"Power Armor\": <p style={{fontWeight: 'bold', paddingLeft: '0.5rem', paddingRight: '0.5rem', color:'#fff', backgroundColor: '#5b3115'}}><small>Used only for 'Heavy', ignored for other groups.</small></p>,\r\n    }\r\n    return (\r\n        <CalcModOptionsView header={\"Cards\"} items={props.cards} setItems={props.setCards} frCrit={props.frCrit} setFrCrit={props.setFrCrit} infos={infos}></CalcModOptionsView>\r\n    );\r\n}","import CalcModOptionsView from './CalcModOptionsView';\r\n\r\n\r\nconst infos = {\r\n    \"Non-Automatic\": <p style={{fontWeight: 'bold', paddingLeft: '0.5rem', paddingRight: '0.5rem', color:'#fff', backgroundColor: '#006031'}}><small>Calculate among non-automatic mods only. If only automatic mods are presented then default config will be used.</small></p>,\r\n    \"Night\": <p style={{fontWeight: 'bold', paddingLeft: '0.5rem', paddingRight: '0.5rem', color:'#fff', backgroundColor: '#303b36'}}><small>Only for weapons with suppressor in sneak mode.</small></p>,\r\n}\r\n\r\nexport default function CalcMain(props) {\r\n    return (\r\n        <CalcModOptionsView header={\"Main\"} items={props.main} setItems={props.setMain} frHead={props.frHead} setFrHead={props.setFrHead} infos={infos}></CalcModOptionsView>\r\n    );\r\n}","import CalcModOptionsView from './CalcModOptionsView';\r\nimport { UCheckbox } from '../../../viewComponents/checkbox/UCheckbox';\r\n\r\n\r\nfunction buildNameFromItemId(fName, cutTail) {\r\n    let name = fName.slice(0, fName.length - cutTail);\r\n    name = name.replaceAll(\"_\", \" \");\r\n    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n    return name;\r\n}\r\n\r\nfunction getCheckbox(type, cons, setCons, header=null) {\r\n    const result = [];\r\n    function onChange(e) {\r\n        cons[e.target.id][0] = !cons[e.target.id][0];\r\n        setCons({...cons});\r\n    }\r\n    for (const fName in cons) {\r\n        const array = cons[fName];\r\n        const used = array[0];\r\n        let name = array[1];\r\n        if (type === \"Magazines\") {\r\n            name = buildNameFromItemId(fName, 9);\r\n        } else if (type === \"Bobble Heads\") {\r\n            name = buildNameFromItemId(fName, 7);\r\n        } else if (type === \"Serums\") {\r\n            name = buildNameFromItemId(fName, 6);\r\n        }\r\n        result.push(<div  key={fName} className=\"m-1\"><UCheckbox id={fName} onChange={onChange} checked={used}><strong className=\"ps-1\"><small>{name}</small></strong></UCheckbox></div>);\r\n    }\r\n    return (\r\n        <>\r\n            {header}\r\n            {result}\r\n            <div className=\"m-1\" />\r\n        </>\r\n    )\r\n}\r\n\r\nconst header = (<p style={{fontWeight: 'bold', paddingLeft: '0.5rem', paddingRight: '0.5rem', color: '#fff', backgroundColor: '#81007a'}}><small>Only items below are used to reduce the number of useless combinations:</small></p>);\r\n\r\nexport default function CalcConsumables(props) {\r\n    const infos = {\r\n        \"Magazines\": getCheckbox(\"Magazines\", props.magazines, props.setMagazines),\r\n        \"Bobble Heads\": getCheckbox(\"Bobble Heads\", props.bobbleHeads, props.setBobbleHeads),\r\n        \"Drink\": getCheckbox(\"Drink\", props.drink, props.setDrink, header),\r\n        \"Food\": getCheckbox(\"Food\", props.food, props.setFood, header),\r\n        \"Chemicals\": getCheckbox(\"Chemicals\", props.chemo, props.setChemo, header),\r\n        \"Serums\": getCheckbox(\"Serums\", props.serums, props.setSerums),\r\n    }\r\n    return (\r\n        <CalcModOptionsView header={\"Consumables\"} items={props.stuff} setItems={props.setStuff} infos={infos}></CalcModOptionsView>\r\n    );\r\n}","import CalcModOptionsView from './CalcModOptionsView';\r\nimport { UCheckbox } from '../../../viewComponents/checkbox/UCheckbox';\r\nimport LegsId from '../../../helpers/LegsId';\r\n\r\n\r\nfunction getCheckbox(leg, setLeg) {\r\n    const result = [];\r\n    function onChange(e) {\r\n        leg[e.target.id] = !leg[e.target.id];\r\n        setLeg({...leg});\r\n    }\r\n    for (const fName in leg) {\r\n        const used = leg[fName];\r\n        const name = LegsId.getName(fName);\r\n        result.push(<div  key={fName} className=\"m-1\"><UCheckbox id={fName} onChange={onChange} checked={used}><strong className=\"ps-1\"><small>{name}</small></strong></UCheckbox></div>);\r\n    }\r\n    return (\r\n        <>\r\n            <p style={{fontWeight: 'bold', paddingLeft: '0.5rem', color:'#fff', backgroundColor: '#cd9d00'}}><small>Only legendary below are used to reduce the number of useless combinations:</small></p>\r\n            {result}\r\n            <div className=\"m-1\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function CalcLegendary(props) {\r\n    const infos = {\r\n        \"Legendary1\": getCheckbox(props.leg1, props.setLeg1),\r\n        \"Legendary2\": getCheckbox(props.leg2, props.setLeg2),\r\n        \"Legendary3\": getCheckbox(props.leg3, props.setLeg3),\r\n    }\r\n    return (\r\n        <CalcModOptionsView header={\"Legendary\"} items={props.leg} setItems={props.setLeg} infos={infos}></CalcModOptionsView>\r\n    );\r\n}","import { getImageElement } from '../helpers/WeaponImages';\r\nimport TemplateTools from './TemplateTools';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nexport default function WeaponEmblem(props) {\r\n    let iconName = props.iconName;\r\n    let className = \"shadow-outline-gold\";\r\n    if (props.className) {\r\n        className = props.className;\r\n    }\r\n    if (props.template) {\r\n        iconName = TemplateTools.getImage(props.template);\r\n    }\r\n    return (\r\n        <Card className={\"p-0 m-0 \" + className} style={{maxHeight: props.iconSize, width: props.iconSize}}>\r\n            <Card.Body className=\"p-1 m-0\">\r\n                {getImageElement(iconName, props.iconSize)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","export default function LegendaryCalcRowView(props) {\r\n    function getLeg(stars, index) {\r\n        return getRow(stars, props.legendary[index], props.width, false, props.fontSize, props.starSize);\r\n    }\r\n    const leg1 = getLeg(\"⭐\", 0);\r\n    const leg2 = getLeg(\"⭐⭐\", 1);\r\n    const leg3 = getLeg(\"⭐⭐⭐\", 2);\r\n    return (\r\n        <div className=\"mb-0 d-flex justify-content-center\">\r\n            {leg1}\r\n            {leg2}\r\n            {leg3}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getRow(stars, text, width, wrap, fontSize, starSize) {\r\n    return (\r\n        <div className=\"bg-yellow m-1 shadow-gold ps-1 pe-1\" style={{width: width}}>\r\n            <div className=\"d-flex justify-content-center\" style={{fontSize: starSize}}>\r\n                {stars}\r\n            </div>\r\n            <div style={{textWrap: wrap, fontWeight: 'bold', textAlign: 'center', fontSize: fontSize, overflow: 'hidden', textOverflow: 'ellipsis'}}>\r\n                {text}\r\n            </div>\r\n        </div>\r\n    );\r\n}","function getWidths(size, columns) {\r\n    let rest = size - columns;\r\n    const rows = [columns];\r\n    while (rest > 0) {\r\n        if (rest < columns) {\r\n            rows.push(rest);\r\n        } else {\r\n            rows.push(columns);\r\n        }\r\n        rest -= columns;\r\n    }\r\n    const widths = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        const row = rows[i];\r\n        for (let j = 0; j < row; j++) {\r\n            widths.push((100 / row).toFixed(2) + \"%\");\r\n        }\r\n\r\n    }\r\n    return widths;\r\n}\r\n\r\nexport default function ModsCalcRowView(props) {\r\n    const modViews = [];\r\n    let columns = 0;\r\n    let modView = [];\r\n    const wrap = (props.wrapText) ? 'wrap' : 'nowrap';\r\n    if (props.mods.length < 2) {\r\n        columns = 1;\r\n    } else if (props.mods.length < 5) {\r\n        columns = 2;\r\n    } else if (props.mods.length < 7) {\r\n        columns = 3;\r\n    } else {\r\n        columns = 4;\r\n    }\r\n    const widths = getWidths(props.mods.length, columns);\r\n    for (let i = 0; i < props.mods.length; i++) {\r\n        const mod = props.mods[i];\r\n        const width = widths[i];\r\n        modView.push(\r\n            <div key={mod.name} className=\"mod-item-shadow m-1 ps-1 pe-1\" style={{width: width, display: 'flex', alignItems: 'center', justifyContent: 'center'}}><div style={{textWrap: wrap, fontWeight: 'bold', textAlign: 'center', color: '#555555', fontSize: props.fontSize, overflow: 'hidden', textOverflow: 'ellipsis'}}>{mod.name}</div></div>\r\n        );\r\n        if (((i + 1) % columns) === 0) {\r\n            modViews.push(<div key={i} className=\"mb-0 d-flex justify-content-center\">{modView}</div>);\r\n            modView = [];\r\n        }\r\n    }\r\n    if (modView.length > 0) {\r\n        modViews.push(<div key={props.mods.length} className=\"mb-0 d-flex justify-content-center\">{modView}</div>);\r\n    }\r\n    return (\r\n        <div className=\"m-0 p-0\" style={{minHeight: props.minHeight}}>\r\n            {modViews}\r\n        </div>\r\n    );\r\n}","import { useState, useRef } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { truncateLongWords } from '../helpers/Input';\r\nimport ParameterCalculator from './calc/ParameterCalculator';\r\nimport CalcModGroups from './calc/view/CalcModGroups';\r\nimport CalcCards from './calc/view/CalcCards';\r\nimport PickedGroups from './calc/view/PickedGroups';\r\nimport CalcMain from './calc/view/CalcMain';\r\nimport CalcConsumables from './calc/view/CalcConsumables';\r\nimport CalcLegendary from './calc/view/CalcLegendary';\r\nimport LegsId from '../helpers/LegsId';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\nimport WeaponEmblem from './WeaponEmblem';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { WarningPopoverBadge } from '../helpers/WarningPopover';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\nimport TemplateTools from './TemplateTools';\r\nimport { keyValueTag } from '../helpers/RowBuilder';\r\nimport ConsumablesBuilder from '../boostStuff/ConsumablesBuilder';\r\nimport LegendaryCalcRowView from './calc/view/LegendaryCalcRowView';\r\nimport ModsCalcRowView from './calc/view/ModsCalcRowView';\r\nimport ParametersApplier from './calc/ParametersApplier';\r\nimport EmblemCalcRowView from './calc/view/EmblemCalcRowView';\r\nimport AccuracyHelper from '../helpers/AccuracyHelper';\r\nimport { Divider } from 'antd';\r\nimport getPerkImage from '../perkCardBoosts/PerkImageProvider';\r\nimport { getMainPerks, getTempPerks, getLegPerks, getDefaultCards, getDefaultMain, getDefaultStuff, getDefaultLegendary, getUsableChemo, getUsableDrink, getUsableFood, getUsableMagazines, getUsableSerums, getUsableBobbleHeads } from './calc/CalcEntities';\r\n\r\n\r\nlet parameterCalculator = null;\r\n\r\nlet firstShown = false;\r\n\r\nconst calcIterations = 4;\r\n\r\nexport default function ModalCalculateWeapon(props) {\r\n    // console.log(\"ModalCalculateWeapon\");\r\n    const minHeight = useRef(null);\r\n    const [count, setCount] = useState({config: {}, current: 0, percent: 0, bestTime: Infinity});\r\n    const [calculating, setCalculating] = useState(0); // 0 - start, 1 - calculating, 2 - finished\r\n    const [cards, setCards] = useState(getDefaultCards());\r\n    const [main, setMain] = useState(getDefaultMain());\r\n    const [stuff, setStuff] = useState(getDefaultStuff());\r\n\r\n    const [leg, setLeg] = useState(getDefaultLegendary());\r\n    const [leg1, setLeg1] = useState(LegsId.getLeg1());\r\n    const [leg2, setLeg2] = useState(LegsId.getLeg2());\r\n    const [leg3, setLeg3] = useState(LegsId.getLeg3());\r\n\r\n    const [chemo, setChemo] = useState(getUsableChemo());\r\n    const [food, setFood] = useState(getUsableFood());\r\n    const [drink, setDrink] = useState(getUsableDrink());\r\n    const [magazines, setMagazines] = useState(getUsableMagazines());\r\n    const [bobbleHeads, setBobbleHeads] = useState(getUsableBobbleHeads());\r\n    const [serums, setSerums] = useState(getUsableSerums());\r\n\r\n    const [mainPerks, setMainPerks] = useState(getMainPerks());\r\n    const [tempPerks, setTempPerks] = useState(getTempPerks());\r\n    const [legPerks, setLegPerks] = useState(getLegPerks());\r\n\r\n    const [frCrit, setFrCrit] = useState(4);\r\n    const [frHead, setFrHead] = useState(100);\r\n    const [selectedCreature, setSelectedCreature] = useState('average');\r\n    const [accuracyPref, setAccuracyPref] = useState(AccuracyHelper.BALANCE);\r\n\r\n    if (!props.modalCalculate.show) {\r\n        firstShown = false;\r\n        return (<></>);\r\n    }\r\n\r\n    if (!firstShown) {\r\n        firstShown = true;\r\n        PickedGroups.init(props.modalCalculate.template);\r\n    }\r\n\r\n    let name = \"\";\r\n    if (props.modalCalculate.template) {\r\n        name = props.modalCalculate.template.name;\r\n    }\r\n    name = truncateLongWords(name, 25);\r\n\r\n    function onHide(e) {\r\n        setCount({config: {}, current: 0, percent: 0, bestTime: Infinity});\r\n        setCalculating(0);\r\n        props.setModalCalculate({template: null, show: false});\r\n        parameterCalculator = null;\r\n        firstShown = false;\r\n    }\r\n\r\n    function applyTemplate(e) {\r\n        if (parameterCalculator) {\r\n            setCalculating(3);\r\n            setTimeout(() => {\r\n                const parameters = parameterCalculator.getBestParameters().Parameters;\r\n                ParametersApplier.applyCalculatedParameters(parameters, props);\r\n                onHide(e);\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    function startCalculation(e) {\r\n        parameterCalculator = new ParameterCalculator(props.creatureNamesRef.current, props.modalCalculate.template.id,\r\n                                                        PickedGroups.get(), cards, frCrit, frHead, main, stuff, leg,\r\n                                                        {leg1: leg1, leg2: leg2, leg3: leg3},\r\n                                                        {chemo: chemo, food: food, drink: drink, magazines: magazines, serums: serums, bobbleHeads: bobbleHeads},\r\n                                                        {main: mainPerks, temp: tempPerks, leg: legPerks},\r\n                                                        accuracyPref);\r\n        parameterCalculator.prepareAndCalcFirst(selectedCreature);\r\n        setCount({config: parameterCalculator.getCurrentConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n        setCalculating(1);\r\n    }\r\n\r\n    if (calculating === 1) {\r\n        setTimeout(\r\n            () => {\r\n                if (parameterCalculator) {\r\n                    const calculated = parameterCalculator.calculateCombinations(calcIterations);\r\n                    if (!calculated) {\r\n                        setCalculating(2);\r\n                        setCount({config: parameterCalculator.getBestConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n                    } else {\r\n                        setCount({config: parameterCalculator.getCurrentConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    function getButtons(calculating) {\r\n        if (calculating === 0) {\r\n            return (\r\n                <>\r\n                    <Button className=\"w-100 me-1\" onClick={startCalculation}>Start</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </>\r\n            );\r\n        } else if (calculating === 1) {\r\n            return (\r\n                <Button className=\"w-100 me-1\" onClick={onHide}>Stop And Close</Button>\r\n            );\r\n        } else if (calculating === 2) {\r\n            return (\r\n                <>\r\n                    <Button className=\"w-100 me-1\" onClick={applyTemplate}>Apply</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </>\r\n            );\r\n        } else {\r\n            return (<></>);\r\n        }\r\n    }\r\n\r\n    function getCounter(calculating) {\r\n        if (calculating === 0) {\r\n            return (<></>);\r\n        }\r\n        const leftValue = count.current + \" - \" + count.percent + \"%\";\r\n        const rightValue = count.bestTime;\r\n        const wrapText = (calculating === 2);\r\n        const currentElement = document.getElementById(\"modal-calc-item\");\r\n        if (currentElement) {\r\n            const curHeight = currentElement.offsetHeight;\r\n            if (!minHeight.current || minHeight.current < curHeight) {\r\n                minHeight.current = curHeight;\r\n            }\r\n        }\r\n        return (\r\n            <div style={{minHeight: minHeight.current}} id=\"modal-calc-item\">\r\n                <div className=\"mb-2 d-flex justify-content-center\">\r\n                    {keyValueTag(leftValue,  rightValue, 'volcano', {width: '100%', height: '1.34rem', fontSize: '1rem'}, false)}\r\n                </div>\r\n                <LegendaryCalcRowView legendary={count.config.legendary} width='50%' fontSize='65%' starSize='50%' />\r\n                <ModsCalcRowView minHeight='2.9rem' mods={count.config.mods} fontSize='65%' wrapText={wrapText} />\r\n                <EmblemCalcRowView imNames={count.config.perks} imageProvider={getPerkImage} iconSize='2.0rem' imageSize='1.864rem' borderRadius='5px' />\r\n                <EmblemCalcRowView imNames={count.config.consumables} imageProvider={ConsumablesBuilder.getImagePathById} iconSize='2.0rem' imageSize='1.864rem' />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function getCreatureNames() {\r\n        const result = [\"average\"];\r\n        for (const fieldName in props.creatureNamesRef.current) {\r\n            const data = props.creatureNamesRef.current[fieldName];\r\n            result.push(data[0]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function onSelectCreatureName(e) {\r\n        setSelectedCreature(e);\r\n    }\r\n\r\n    const creatureNames = getCreatureNames();\r\n    let selectedCreatureName;\r\n    if (creatureNames.includes(selectedCreature)) {\r\n        selectedCreatureName = CreatureDataProvider.capitalizeCreatureName(selectedCreature);\r\n    } else {\r\n        selectedCreatureName = \"Average\";\r\n        setSelectedCreature(\"average\");\r\n    }\r\n\r\n    function getSettings(calculating) {\r\n        if (calculating === 0) {\r\n            let show = !TemplateTools.hasDefaultLegendary(props.modalCalculate.template);\r\n            return (\r\n                <>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelectCreatureName} names={creatureNames} title={<strong>{selectedCreatureName}</strong>} />\r\n                    </div>\r\n                    <Divider className=\"mt-3 mb-2\">\r\n                        Accuracy\r\n                        <WarningPopoverBadge className=\"ms-3\" sign=\"?\" message={AccuracyHelper.ACCURACY_INFO} header={\"Accuracy\"} placement={'bottom'} />\r\n                    </Divider>\r\n                    <BSRadio className=\"d-flex justify-content-center m-1\" pairs={AccuracyHelper.ACC_PREFERENCE} selectedValue={accuracyPref} setSelectedValue={setAccuracyPref} parseValueInt={true} />\r\n                    <CalcMain main={main} setMain={setMain} frHead={frHead} setFrHead={setFrHead}></CalcMain>\r\n                    <CalcModGroups template={props.modalCalculate.template}></CalcModGroups>\r\n                    <CalcCards mainPerks={mainPerks} setMainPerks={setMainPerks} tempPerks={tempPerks} setTempPerks={setTempPerks} legPerks={legPerks} setLegPerks={setLegPerks} cards={cards} setCards={setCards} frCrit={frCrit} setFrCrit={setFrCrit}></CalcCards>\r\n                    <CalcLegendary leg={leg} setLeg={setLeg} leg1={leg1} setLeg1={setLeg1} leg2={leg2} setLeg2={setLeg2} leg3={leg3} setLeg3={setLeg3} show={show}></CalcLegendary>\r\n                    <CalcConsumables stuff={stuff} setStuff={setStuff} food={food} drink={drink} chemo={chemo} setFood={setFood} setDrink={setDrink} setChemo={setChemo} magazines={magazines} setMagazines={setMagazines} bobbleHeads={bobbleHeads} setBobbleHeads={setBobbleHeads} serums={serums} setSerums={setSerums}></CalcConsumables>\r\n                </>\r\n            );\r\n        }\r\n        return (<></>);\r\n    }\r\n\r\n    function nameView() {\r\n        if (calculating !== 0) {\r\n            return (<></>);\r\n        }\r\n        return (\r\n            <div className=\"d-flex justify-content-center mb-3\">\r\n                <strong><small>Calculate Best Options</small></strong>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function getModalView() {\r\n        if (calculating ===  3) {\r\n            return (\r\n                <Modal.Body className=\"modal-scroll-80-60\">\r\n                    <b>Loading...</b>\r\n                </Modal.Body>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Modal.Header className=\"d-flex justify-content-center p-1\">\r\n                    <Row className=\"p-1\" style={{width: '100%'}}>\r\n                        <Col className=\"d-flex justify-content-start p-0\" xs={2}>\r\n                            <WeaponEmblem template={props.modalCalculate.template} iconSize='2.5rem' />\r\n                        </Col>\r\n                        <Col xs={8} className=\"d-flex justify-content-center\">\r\n                            <div className=\"p-auto m-auto\" style={{fontSize: '1rem', fontWeight: 'bold'}}>{name}</div>\r\n                        </Col>\r\n                        <Col xs={2} className=\"d-flex justify-content-end m-auto pe-1\">\r\n                            <WarningPopoverBadge message={ParameterCalculator.info} sign=\"?\" header={\"Description\"} placement={'left'} />\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"modal-scroll-80-60\">\r\n                    {nameView()}\r\n                    {getCounter(calculating)}\r\n                    {getSettings(calculating)}\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"p-2\">\r\n                    <InputGroup className=\"mb-0 mt-0 flex-nowrap\">\r\n                        {getButtons(calculating)}\r\n                    </InputGroup>\r\n                </Modal.Footer>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.modalCalculate.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            {getModalView()}\r\n        </Modal>\r\n    );\r\n}","export function getDefaultCards() {\r\n    return {\"Main Boosts\": true, \"Temp Boosts\": false, \"Leg Boosts\": false, \"Team\": true, \"Low HP\": true, \"Power Armor\": true, \"Sneak\": false, \"Crit\": false};\r\n}\r\n\r\nexport function getDefaultMain() {\r\n    return {\"Strength\": 25, \"Head Shot\": true, \"Non-Automatic\": false, \"Scoped\": false, \"Night\": false};\r\n}\r\n\r\nexport function getDefaultStuff() {\r\n    return {\"Magazines\": false, \"Bobble Heads\": false, \"Chemicals\": true, \"Food\": false, \"Drink\": false, \"Serums\": true, \"Endangerol Syringer\": false};\r\n}\r\n\r\nexport function getDefaultLegendary() {\r\n    return {\"Legendary1\": true, \"Legendary2\": true, \"Legendary3\": true};\r\n}\r\n\r\nexport function getUsableFood() {\r\n    return {\r\n        \"tasty_mutant_hound_stew_food\": [true, \"Tasty mutant hound stew\"],\r\n        \"deathclaw_wellington_food\": [true, \"Deathclaw wellington\"],\r\n        \"spiked_venison_tato_stew_food\": [true, \"Spiked venison & Tato stew\"],\r\n        \"blight_soup_food\": [true, \"Blight soup\"],\r\n    }\r\n}\r\n\r\nexport function getUsableMagazines() {\r\n    return {\r\n        \"attack_of_the_fishmen_magazine\" : [true, \"\"],\r\n        \"curse_of_the_burned_magazine\" : [true, \"\"],\r\n        \"rise_of_the_mutants_magazine\" : [true, \"\"],\r\n        \"home_in_the_hills_magazine\" : [true, \"\"],\r\n        \"demon_slaves_demon_sands_magazine\" : [true, \"\"],\r\n        \"the_future_of_hunting_magazine\" : [true, \"\"],\r\n        \"bear_proofing_your_campsite_magazine\" : [true, \"\"],\r\n        \"guide_to_hunting_commies_magazine\" : [true, \"\"],\r\n        \"wendigo_magazine\" : [true, \"\"],\r\n        \"mothman_magazine\" : [true, \"\"],\r\n        \"grafton_magazine\" : [true, \"\"],\r\n        \"snallygaster_magazine\" : [true, \"\"],\r\n        \"flatwoods_alien_magazine\" : [true, \"\"],\r\n        \"invasion_of_the_zetans_magazine\" : [true, \"\"],\r\n        \"when_apes_go_bananas_magazine\" : [true, \"\"],\r\n        \"blood_on_the_harp_magazine\" : [true, \"\"],\r\n        \"corsair_queen_magazine\" : [true, \"\"],\r\n        \"the_starlet_sniper_magazine\" : [true, \"\"],\r\n        \"take_aim_army_style_magazine\" : [true, \"\"],\r\n        \"camouflage_special_magazine\" : [true, \"\"],\r\n        \"nuke_the_man_magazine\" : [true, \"\"],\r\n        \"tomorrow_technology_magazine\" : [true, \"\"],\r\n        \"giant_super_weapons_magazine\" : [true, \"\"],\r\n        \"acceptable_overkill_magazine\" : [true, \"\"],\r\n        \"little_guns_for_little_ladies_magazine\" : [true, \"\"],\r\n        \"plasma_the_weapon_of_tomorrow_magazine\" : [true, \"\"],\r\n        \"us_army_goes_to_space_magazine\" : [true, \"\"],\r\n        \"future_of_warfare_magazine\" : [true, \"\"],\r\n        \"rockobot_takes_the_nation_by_storm_magazine\" : [true, \"\"],\r\n    }\r\n}\r\n\r\nexport function getUsableBobbleHeads() {\r\n    return {\r\n        \"big_guns_bobble\" : [true, \"\"],\r\n        \"unarmed_bobble\" : [true, \"\"],\r\n        \"strength_bobble\" : [true, \"\"],\r\n        \"melee_bobble\" : [true, \"\"],\r\n        \"energy_bobble\" : [true, \"\"],\r\n        \"explosive_bobble\" : [true, \"\"],\r\n        \"repair_bobble\" : [true, \"\"],\r\n        \"small_guns_bobble\" : [true, \"\"],\r\n    }\r\n}\r\n\r\nexport function getUsableSerums() {\r\n    return {\r\n        \"adrenal_reaction_serum\" : [true, \"\"],\r\n        \"twisted_muscles_serum\" : [true, \"\"],\r\n        \"empath_serum\" : [true, \"\"],\r\n        \"talons_serum\" : [true, \"\"],\r\n        \"speed_demon_serum\" : [true, \"\"],\r\n        \"herd_mentality_serum\" : [true, \"\"],\r\n        \"eagle_eyes_serum\" : [true, \"\"],\r\n        \"carnivore_serum\" : [true, \"\"],\r\n        \"herbivore_serum\" : [true, \"\"],\r\n    }\r\n}\r\n\r\nexport function getUsableDrink() {\r\n    return {\r\n        \"hoppy_hunter_ipa_drink\": [false, \"Hoppy hunter IPA\"],\r\n        \"whiskey_drink\": [true, \"Whiskey\"],\r\n        \"gulpershine_vintage_drink\": [true, \"Gulpershine vintage\"],\r\n        \"sugar_free_nukashine_drink\": [true, \"Sugar-Free nukashine\"],\r\n        \"sweetmutfruit_drink\": [true, \"Sweet mut fruit tea\"],\r\n        \"ballistic_bock_drink\": [false, \"Ballistic bock\"],\r\n        \"high_voltage_hefe_drink\": [false, \"High voltage hefe\"],\r\n    }\r\n}\r\n\r\nexport function getUsableChemo() {\r\n    return {\r\n        \"psychobuff_psycho\": [true, \"Psychobuff\"],\r\n        \"nuclear_don_blend_psycho\": [false, \"Nuclear Don's blend\"],\r\n        \"fury_psycho\": [true, \"Fury\"],\r\n        \"overdrive_psycho\": [true, \"Overdrive\"],\r\n        \"calmex_psycho\": [true, \"Calmex\"],\r\n    }\r\n}\r\n\r\nexport function getMainPerks() {\r\n    return {\r\n        \"bloody_mess\": true,\r\n        \"glow_sight\": true,\r\n        \"mister_sandman\": true,\r\n        \"class_freak\": true,\r\n        \"strange_in_numbers\": true,\r\n        \"better_criticals\": true,\r\n        \"nerd_rage\": true,\r\n        \"science\": true,\r\n        \"power_user\": true,\r\n        \"ninja\": true,\r\n        \"covert_operative\": true,\r\n        \"demolition_expert\": true,\r\n        \"stabilized\": true,\r\n        \"heavy_gunner\": true,\r\n        \"lock_and_load\": true,\r\n        \"shotgunner\": true,\r\n        \"scattershot\": true,\r\n        \"tank_killer\": true,\r\n        \"commando\": true,\r\n        \"ground_pounder\": true,\r\n        \"rifleman\": true,\r\n        \"guerrilla\": true,\r\n        \"gunslinger\": true,\r\n        \"archer\": true,\r\n        \"bow_before_me\": true,\r\n        \"martial_artist\": true,\r\n        \"party_girl_boy\": true,\r\n        \"gladiator\": true,\r\n        \"slugger\": true,\r\n        \"incisor\": true,\r\n        \"iron_fist\": true,\r\n        \"exterminator\": true,\r\n    }\r\n}\r\n\r\nexport function getTempPerks() {\r\n    return {\r\n        \"adrenaline\": true,\r\n        \"tenderizer\": true,\r\n    }\r\n}\r\n\r\nexport function getLegPerks() {\r\n    return {\r\n        \"follow_through\": true,\r\n        \"toft\": true,\r\n    }\r\n}","import { Divider } from 'antd';\r\nimport { UCheckbox } from '../../../viewComponents/checkbox/UCheckbox';\r\nimport GroupView from '../../../helpers/views/GroupView';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nfunction buildGroupsView(groups, onGroupChange) {\r\n    let result = [];\r\n    for (const name in groups) {\r\n        result.push(getModItem(name, groups, onGroupChange));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getModItem(name, groups, onGroupChange) {\r\n    const checked = groups[name];\r\n    const outline = (checked) ? \"shadow-blue\" : \"\";\r\n    return (\r\n        <Col key={name}>\r\n            <GroupView className={outline}>\r\n                <InputGroup className=\"mb-1 mt-1 flex-nowrap justify-content-center\">\r\n                    <InputGroup.Text style={{ width: '2.8rem' }}>\r\n                        <UCheckbox title={name} onChange={onGroupChange} checked={checked}></UCheckbox>\r\n                    </InputGroup.Text>\r\n                    <InputGroup.Text style={{ width: '15rem' }}><small>{name}</small></InputGroup.Text>\r\n                </InputGroup>\r\n            </GroupView>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default function CalcModGroupsAll(props) {\r\n\r\n    function onGroupChange(e) {\r\n        props.groups[e.target.title] = e.target.checked;\r\n        props.setGroups({...props.groups});\r\n    }\r\n    return (\r\n        <>\r\n            <Divider key={'ModGroups'} className=\"p-0 mt-3 mb-1\">Mod Groups</Divider>\r\n            <Container>\r\n                <Row>\r\n                    {buildGroupsView(props.groups, onGroupChange)}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { getRowWithImage } from '../../../helpers/WTypeDropdown';\r\n\r\n\r\nexport default function CalcWGroupsDropdown({type, setType}) {\r\n    function onSelect(e) {\r\n        setType(e);\r\n    };\r\n    return (\r\n        <Row className=\"p-2 mb-2 mt-1\">\r\n            <Col className=\"d-flex justify-content-center\">\r\n                <DropdownButton size=\"sm\" variant=\"info\" onSelect={onSelect} id=\"dropdown-basic-button\" title={getRowWithImage(type)}>\r\n                    <Dropdown.Item eventKey=\"All\">All</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Heavy\">{getRowWithImage(\"Heavy\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Shotgun\">{getRowWithImage(\"Shotgun\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Rifle\">{getRowWithImage(\"Rifle\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Pistol\">{getRowWithImage(\"Pistol\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Bow\">{getRowWithImage(\"Bow\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Melee\">{getRowWithImage(\"Melee\")}</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Unarmed\">{getRowWithImage(\"Unarmed\")}</Dropdown.Item>\r\n                </DropdownButton>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import Card from 'react-bootstrap/Card';\r\nimport WeaponEmblem from '../../WeaponEmblem';\r\nimport { keyValueTag } from '../../../helpers/RowBuilder';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LegendaryCalcRowView from './LegendaryCalcRowView';\r\nimport ModsCalcRowView from './ModsCalcRowView';\r\nimport EmblemCalcRowView from './EmblemCalcRowView';\r\nimport ConsumablesBuilder from '../../../boostStuff/ConsumablesBuilder';\r\nimport getPerkImage from '../../../perkCardBoosts/PerkImageProvider';\r\nimport { useRef } from 'react';\r\n\r\n\r\nexport default function CalcCurrentItem(props) {\r\n    const minHeight = useRef(null);\r\n    const weaponName = useRef(null);\r\n    const leftValue = props.count.current + \" - \" + props.count.percent + \"%\";\r\n    const rightValue = props.count.bestTime;\r\n    const perksHeight = null; // (props.perksUsed) ? '4rem' : '0rem';\r\n    const consHeight = null; // (props.consUsed) ? '6rem' : '0rem';\r\n    const currentElement = document.getElementById(\"current-calc-item\");\r\n\r\n    // Adjust card height according to weapon name, we want to avoid height bouncing but be adjusted to\r\n    // every weapon\r\n    if (weaponName.current !== props.wName) {\r\n        weaponName.current = props.wName;\r\n        minHeight.current = null;\r\n    } else {\r\n        if (currentElement) {\r\n            const curHeight = currentElement.offsetHeight;\r\n            if (!minHeight.current || minHeight.current < curHeight) {\r\n                minHeight.current = curHeight;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card className=\"shadow-card-gold\" id=\"current-calc-item\" style={{minHeight: minHeight.current}}>\r\n                <Card.Body className=\"p-1 ps-2 m-0\">\r\n                    <Row>\r\n                        <Col className=\"m-auto\" xs={3}>\r\n                            <WeaponEmblem className=\"shadow-card-grey\" iconName={props.iconName} iconSize='2.8rem'></WeaponEmblem>\r\n                        </Col>\r\n                        <Col xs={9}>\r\n                            <div className=\"d-flex justify-content-end pe-1\"><strong className=\"text-shadow-blue2\">{props.wName}</strong></div>\r\n                            <div className=\"d-flex justify-content-end\">{keyValueTag(leftValue,  rightValue, 'red', {width: '100%', height: '1.34rem', fontSize: '1rem'})}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <LegendaryCalcRowView legendary={props.count.config.legendary} width='50%' fontSize='65%' starSize='50%' />\r\n                    <ModsCalcRowView minHeight='2.9rem' mods={props.count.config.mods} fontSize='65%' wrapText={false} />\r\n                    <EmblemCalcRowView style={{minHeight: perksHeight}} imNames={props.count.config.perks} imageProvider={getPerkImage} iconSize='1.5rem' imageSize='1.364rem' borderRadius='5px' />\r\n                    <EmblemCalcRowView style={{minHeight: consHeight}} imNames={props.count.config.consumables} imageProvider={ConsumablesBuilder.getImagePathById} iconSize='1.5rem' imageSize='1.364rem' />\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n}","import Card from 'react-bootstrap/Card';\r\nimport WeaponEmblem from '../../WeaponEmblem';\r\nimport { keyValueTag } from '../../../helpers/RowBuilder';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LegendaryCalcRowView from './LegendaryCalcRowView';\r\nimport ModsCalcRowView from './ModsCalcRowView';\r\nimport EmblemCalcRowView from './EmblemCalcRowView';\r\nimport { memo } from 'react';\r\nimport ConsumablesBuilder from '../../../boostStuff/ConsumablesBuilder';\r\nimport getPerkImage from '../../../perkCardBoosts/PerkImageProvider';\r\n\r\n\r\nconst CalcResultItem = memo(function CalcResultItem(props) {\r\n    // console.log(\"CalcResultItem\");\r\n    const leftValue = \"\";\r\n    const rightValue = props.bestTime;\r\n    function onClick(e) {\r\n        if (props.finishedRef.current) {\r\n            props.setWNameToApply(props.wName);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card className=\"shadow-outline-result-item mb-3\" onClick={onClick}>\r\n                <Card.Body className=\"p-1 ps-2 m-0\">\r\n                    <Row>\r\n                        <Col className=\"m-auto\" xs={3}>\r\n                            <WeaponEmblem className=\"shadow-card-grey\" iconName={props.iconName} iconSize='2.8rem'></WeaponEmblem>\r\n                        </Col>\r\n                        <Col xs={9}>\r\n                            <div className=\"d-flex justify-content-end pe-1\"><strong className=\"text-shadow-grey-blue\">{props.wName}</strong></div>\r\n                            <div className=\"d-flex justify-content-end\">{keyValueTag(leftValue,  rightValue, 'volcano', {width: '100%', height: '1.34rem', fontSize: '1rem'})}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <LegendaryCalcRowView legendary={props.config.legendary} width='50%' fontSize='65%' starSize='50%' />\r\n                    <ModsCalcRowView minHeight='1rem' mods={props.config.mods} fontSize='65%' wrapText={true} />\r\n                    <EmblemCalcRowView imNames={props.config.perks} imageProvider={getPerkImage} iconSize='1.5rem' imageSize='1.364rem' borderRadius='5px' />\r\n                    <EmblemCalcRowView imNames={props.config.consumables} imageProvider={ConsumablesBuilder.getImagePathById} iconSize='1.5rem' imageSize='1.364rem' borderRadius='4px' />\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default CalcResultItem;","import { memo } from 'react';\r\nimport CalcResultItem from \"./CalcResultItem\";\r\n\r\n\r\nfunction compareItems(item1, item2) {\r\n    if (item1 === null && item2 === null) {\r\n        return 0;\r\n    } else if (item1 === null) {\r\n        return 1;\r\n    } else if (item2 === null) {\r\n        return -1;\r\n    }\r\n    const time1 = item1.bestTimeCount;\r\n    const time2 = item2.bestTimeCount;\r\n    if (time1 < time2) {\r\n        return -1;\r\n    } else if (time2 < time1) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst CalcResultItems = memo(function CalcResultItems(props) {\r\n    console.log(\"CalcResultItems\");\r\n    let result = [];\r\n    const resultView = [];\r\n    for (let i = 0; i < props.calcItems.length; i++) {\r\n        const item = props.calcItems[i];\r\n        result.push(item);\r\n    }\r\n    result = result.sort(compareItems);\r\n    for (let i = 0; i < result.length; i++) {\r\n        const item = result[i];\r\n        resultView.push(<CalcResultItem key={item.wName} title={item.wName} finishedRef={props.finishedRef} setWNameToApply={props.setWNameToApply} config={item.config} wName={item.wName} bestTime={item.bestTime} iconName={item.iconName}></CalcResultItem>);\r\n    }\r\n    return (\r\n        <>\r\n            {resultView}\r\n        </>\r\n    );\r\n});\r\n\r\nexport default CalcResultItems;","import { useState, useEffect, useRef } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport ParameterCalculator from './calc/ParameterCalculator';\r\nimport CalcModGroupsAll from './calc/view/CalcModGroupsAll';\r\nimport CalcCards from './calc/view/CalcCards';\r\nimport PickedGroups from './calc/view/PickedGroups';\r\nimport CalcMain from './calc/view/CalcMain';\r\nimport CalcConsumables from './calc/view/CalcConsumables';\r\nimport CalcLegendary from './calc/view/CalcLegendary';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport BSRadio from '../helpers/views/BSRadio';\r\nimport { WarningPopoverBadge } from '../helpers/WarningPopover';\r\nimport TemplateTools from './TemplateTools';\r\nimport { modGroups, weaponIds } from './TemplateItems';\r\nimport CalcWGroupsDropdown from \"./calc/view/CalcWGroupsDropdown\";\r\nimport CalcCurrentItem from \"./calc/view/CalcCurrentItem\";\r\nimport CalcResultItems from \"./calc/view/CalcResultItems\";\r\nimport ParametersApplier from './calc/ParametersApplier';\r\nimport { getImage } from '../helpers/WTypeDropdown';\r\nimport { Divider } from 'antd';\r\nimport { Progress } from 'antd';\r\nimport AccuracyHelper from '../helpers/AccuracyHelper';\r\nimport { getMainPerks, getTempPerks, getLegPerks, getDefaultCards, getDefaultMain, getDefaultStuff, getDefaultLegendary, getUsableChemo, getUsableDrink, getUsableFood, getUsableMagazines, getUsableSerums, getUsableBobbleHeads} from './calc/CalcEntities';\r\nimport SimpleNameDropdown from '../helpers/views/SimpleNameDropdown';\r\nimport CreatureDataProvider from '../creature/CreatureDataProvider';\r\nimport LegsId from '../helpers/LegsId';\r\n\r\n\r\nlet parameterCalculator = null;\r\n\r\nlet firstShown = false;\r\n\r\nlet currentWIndex = 0;\r\n\r\nlet parameters = null;\r\n\r\nconst calcIterations = 4;\r\n\r\nfunction getDefaultModGroups() {\r\n    let result = {};\r\n    for (const name of modGroups) {\r\n        if (!PickedGroups.excluded(name)) {\r\n             result[name] = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function ModalCalculateWeapons(props) {\r\n    const [count, setCount] = useState({config: {}, current: 0, percent: 0, bestTime: Infinity});\r\n    const [groups, setGroups] = useState(getDefaultModGroups());\r\n    const [calculating, setCalculating] = useState(0); // 0 - start, 1 - calculating, 2 - finished\r\n    const [cards, setCards] = useState(getDefaultCards());\r\n    const [main, setMain] = useState(getDefaultMain());\r\n    const [stuff, setStuff] = useState(getDefaultStuff());\r\n\r\n    const [leg, setLeg] = useState(getDefaultLegendary());\r\n    const [leg1, setLeg1] = useState(LegsId.getLeg1());\r\n    const [leg2, setLeg2] = useState(LegsId.getLeg2());\r\n    const [leg3, setLeg3] = useState(LegsId.getLeg3());\r\n\r\n    const [chemo, setChemo] = useState(getUsableChemo());\r\n    const [food, setFood] = useState(getUsableFood());\r\n    const [drink, setDrink] = useState(getUsableDrink());\r\n    const [magazines, setMagazines] = useState(getUsableMagazines());\r\n    const [bobbleHeads, setBobbleHeads] = useState(getUsableBobbleHeads());\r\n    const [serums, setSerums] = useState(getUsableSerums());\r\n\r\n    const [mainPerks, setMainPerks] = useState(getMainPerks());\r\n    const [tempPerks, setTempPerks] = useState(getTempPerks());\r\n    const [legPerks, setLegPerks] = useState(getLegPerks());\r\n\r\n    const [frCrit, setFrCrit] = useState(4);\r\n    const [frHead, setFrHead] = useState(100);\r\n    const [completion, setCompletion] = useState({current: 0, size: 0});\r\n    const [selectedCreature, setSelectedCreature] = useState('average');\r\n    const [accuracyPref, setAccuracyPref] = useState(AccuracyHelper.BALANCE);\r\n    const [weaponResult, setWeaponResult] = useState([]);\r\n    const [type, setType] = useState(\"All\");\r\n    const [wNameToApply, setWNameToApply] = useState(null);\r\n    const [renderSwitch, setRenderSwitch] = useState(false);\r\n    const canCalculateRef = useRef(false);\r\n    const finishedRef = useRef(false);\r\n\r\n    /*\r\n    // Changes on every render, to allow a user smooth interaction and updates\r\n    useEffect(() => {\r\n        if (canCalculateRef.current) {\r\n            calculateParameters();\r\n            setRenderSwitch(!renderSwitch);\r\n        }\r\n    }, [renderSwitch]);\r\n    */\r\n\r\n    // We are finished and child asked to be applied.\r\n    useEffect(() => {\r\n        if (finishedRef.current) {\r\n            finishedRef.current = false;\r\n            const result = parameters.get(wNameToApply);\r\n            if (result) {\r\n                setCalculating(3);\r\n                setTimeout(() => {\r\n                    const parameters = result.Parameters;\r\n                    ParametersApplier.applyCalculatedParameters(parameters, props);\r\n                    onHide(null);\r\n                }, 100);\r\n            }\r\n        }\r\n    }, [wNameToApply]);\r\n\r\n    if (!props.modalCalculates.show) {\r\n        firstShown = false;\r\n        return (<></>);\r\n    }\r\n\r\n    if (!firstShown) {\r\n        currentWIndex = 0;\r\n        firstShown = true;\r\n        // The modal just popped up\r\n    }\r\n\r\n    function onHide(e) {\r\n        setCount({config: {}, current: 0, percent: 0, bestTime: Infinity});\r\n        setWeaponResult([]);\r\n        setCompletion({current: 0, size: 0});\r\n        setCalculating(0);\r\n        setWNameToApply(null);\r\n        finishedRef.current = false;\r\n        currentWIndex = 0;\r\n        props.setModalCalculates({show: false});\r\n        canCalculateRef.current = false;\r\n        parameterCalculator = null;\r\n        firstShown = false;\r\n        parameters = null;\r\n    }\r\n\r\n    function setupParameterCalculator() {\r\n        let wId = null;\r\n        if (props.modalCalculates.show) {\r\n            const wIds = weaponIds[type];\r\n            let idObj = wIds[currentWIndex];\r\n            while(idObj) {\r\n                currentWIndex++;\r\n                if (idObj.apply) {\r\n                    wId = idObj.id;\r\n                    break;\r\n                }\r\n                idObj = wIds[currentWIndex];\r\n            }\r\n            if (wId) {\r\n                const gNames = [];\r\n                for (const name in groups) {\r\n                    if (groups[name]) {\r\n                        gNames.push(name);\r\n                    }\r\n                }\r\n                parameterCalculator = new ParameterCalculator(props.creatureNamesRef.current, wId, gNames, cards, frCrit,\r\n                                        frHead, main, stuff, leg, {leg1: leg1, leg2: leg2, leg3: leg3},\r\n                                        {chemo: chemo, food: food, drink: drink, magazines: magazines, serums: serums, bobbleHeads: bobbleHeads},\r\n                                        {main: mainPerks, temp: tempPerks, leg: legPerks},\r\n                                        accuracyPref);\r\n                parameterCalculator.prepareAndCalcFirst(selectedCreature);\r\n            }\r\n        }\r\n        if (!wId) {\r\n            parameterCalculator = null;\r\n            currentWIndex = 0;\r\n        }\r\n        return (wId !== null);\r\n    }\r\n\r\n    function startCalculation(e) {\r\n        const wIds = weaponIds[type];\r\n        let size = 0;\r\n        for (let i = 0; i < wIds.length; i++) {\r\n            if (wIds[i].apply) {\r\n                size += 1;\r\n            }\r\n        }\r\n        parameters = new Map();\r\n        setCompletion({current: 0, size: size});\r\n        setupParameterCalculator();\r\n        setCalculating(1);\r\n        finishedRef.current = false;\r\n        setCount({config: parameterCalculator.getCurrentConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n        setRenderSwitch(!renderSwitch);\r\n        canCalculateRef.current = true;\r\n    }\r\n\r\n    if (calculating === 1 && canCalculateRef.current && parameterCalculator) {\r\n        canCalculateRef.current = false;\r\n        setTimeout(() => {\r\n            calculateParameters();\r\n        });\r\n    }\r\n\r\n    function calculateParameters() {\r\n        if (calculating === 1 && parameterCalculator) {\r\n            if (!parameterCalculator.calculateCombinations(calcIterations)) {\r\n                const template = parameterCalculator.getTemplate();\r\n                const wName = template.name;\r\n                const iconName = TemplateTools.getImage(template);\r\n                parameters.set(wName, parameterCalculator.getBestParameters());\r\n                weaponResult.push({config: parameterCalculator.getBestConfig(), wName: wName, iconName: iconName, bestTime: parameterCalculator.getBestTime(), bestTimeCount: parameterCalculator.getBestTime(false)});\r\n                setWeaponResult([...weaponResult]);\r\n                setCompletion({current: completion.current + 1, size: completion.size});\r\n                if (!setupParameterCalculator()) {\r\n                    finishedRef.current = true;\r\n                    setCalculating(2);\r\n                    return;\r\n                }\r\n            }\r\n            canCalculateRef.current = true;\r\n            setCount({config: parameterCalculator.getCurrentConfig(), current: parameterCalculator.getCount(), percent: parameterCalculator.getCompletionPercent(), bestTime: parameterCalculator.getBestTime()});\r\n        }\r\n    }\r\n\r\n    function getButtons(calculating) {\r\n        if (calculating === 0) {\r\n            return (\r\n                <>\r\n                    <Button className=\"w-100 me-1\" onClick={startCalculation}>Start</Button>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </>\r\n            );\r\n        } else if (calculating === 1) {\r\n            return (\r\n                <Button className=\"w-100 me-1\" onClick={onHide}>Stop And Close</Button>\r\n            );\r\n        } else if (calculating === 2) {\r\n            return (\r\n                <>\r\n                    <Button className=\"w-100 ms-1\" onClick={onHide}>Cancel</Button>\r\n                </>\r\n            );\r\n        } else {\r\n            return (<></>);\r\n        }\r\n    }\r\n\r\n    function getProgressNumber(percent) {\r\n        return (\r\n            <strong className=\"text-shadow-blue\"><small>{percent}%</small></strong>\r\n        );\r\n    }\r\n\r\n    function getCurrentItem() {\r\n        if (parameterCalculator) {\r\n            const template = parameterCalculator.getTemplate();\r\n            const iconName = TemplateTools.getImage(template);\r\n            const wName = template.name;\r\n            const perksUsed = cards[\"Main Boosts\"] || cards[\"Temp Boosts\"];\r\n            let consUsed = false;\r\n            for (const name in stuff) {\r\n                const item = stuff[name];\r\n                if (item) {\r\n                    consUsed = true;\r\n                    break;\r\n                }\r\n            }\r\n            return (<CalcCurrentItem perksUsed={perksUsed} consUsed={consUsed} iconName={iconName} count={count} wName={wName}></CalcCurrentItem>);\r\n        }\r\n    }\r\n\r\n    function getProgress(calculating) {\r\n        if (calculating === 0) {\r\n            return (<></>);\r\n        }\r\n        const percent = parseInt(100 * completion.current / completion.size);\r\n        const header = (calculating === 2) ? \"Tap To Apply\" : \"\";\r\n        return (\r\n            <>\r\n                <div className=\"d-flex justify-content-center mb-1\">\r\n                    <Progress\r\n                        size={40}\r\n                        type=\"dashboard\"\r\n                        steps={50}\r\n                        percent={percent}\r\n                        format={(percent) => getProgressNumber(percent)}\r\n                        strokeColor=\"rgb(0, 255, 136)\"\r\n                        trailColor=\"rgba(0, 0, 0, 0.1)\"\r\n                        strokeWidth={17} />\r\n                </div>\r\n                {getCurrentItem()}\r\n                <Divider className=\"mt-3 mb-3 text-shadow-blue2\"><b>{header}</b></Divider>\r\n                <CalcResultItems calcItems={weaponResult} finishedRef={finishedRef} setWNameToApply={setWNameToApply}></CalcResultItems>\r\n            </>\r\n        );\r\n    }\r\n\r\n    function getCreatureNames() {\r\n        const result = [\"average\"];\r\n        for (const fieldName in props.creatureNamesRef.current) {\r\n            const data = props.creatureNamesRef.current[fieldName];\r\n            result.push(data[0]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getSettings(calculating) {\r\n        function onSelectCreatureName(e) {\r\n            setSelectedCreature(e);\r\n        }\r\n\r\n        const creatureNames = getCreatureNames();\r\n        let selectedCreatureName;\r\n        if (creatureNames.includes(selectedCreature)) {\r\n            selectedCreatureName = CreatureDataProvider.capitalizeCreatureName(selectedCreature);\r\n        } else {\r\n            selectedCreatureName = \"Average\";\r\n            setSelectedCreature(\"average\");\r\n        }\r\n        if (calculating === 0) {\r\n            return (\r\n                <>\r\n                    <CalcWGroupsDropdown type={type} setType={setType}></CalcWGroupsDropdown>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <SimpleNameDropdown variant='blue-label' size='sm' onSelect={onSelectCreatureName} names={creatureNames} title={<strong>{selectedCreatureName}</strong>} />\r\n                    </div>\r\n                    <Divider className=\"mt-3 mb-2\">\r\n                        Accuracy\r\n                        <WarningPopoverBadge className=\"ms-3\" sign=\"?\" message={AccuracyHelper.ACCURACY_INFO} header={\"Accuracy\"} placement={'bottom'} />\r\n                    </Divider>\r\n                    <BSRadio className=\"d-flex justify-content-center m-1\" pairs={AccuracyHelper.ACC_PREFERENCE} selectedValue={accuracyPref} setSelectedValue={setAccuracyPref} parseValueInt={true} />\r\n                    <CalcMain main={main} setMain={setMain} frHead={frHead} setFrHead={setFrHead}></CalcMain>\r\n                    <CalcModGroupsAll groups={groups} setGroups={setGroups}></CalcModGroupsAll>\r\n                    <CalcCards mainPerks={mainPerks} setMainPerks={setMainPerks} tempPerks={tempPerks} setTempPerks={setTempPerks} legPerks={legPerks} setLegPerks={setLegPerks} cards={cards} setCards={setCards} frCrit={frCrit} setFrCrit={setFrCrit}></CalcCards>\r\n                    <CalcLegendary leg={leg} setLeg={setLeg} show={true} leg1={leg1} setLeg1={setLeg1} leg2={leg2} setLeg2={setLeg2} leg3={leg3} setLeg3={setLeg3}></CalcLegendary>\r\n                    <CalcConsumables stuff={stuff} setStuff={setStuff} food={food} drink={drink} chemo={chemo} setFood={setFood} setDrink={setDrink} setChemo={setChemo} magazines={magazines} setMagazines={setMagazines} bobbleHeads={bobbleHeads} setBobbleHeads={setBobbleHeads} serums={serums} setSerums={setSerums}></CalcConsumables>\r\n                </>\r\n            );\r\n        }\r\n        return (<></>);\r\n    }\r\n    const header = (calculating === 0) ? \"Best Of The Best\" : type;\r\n    const wIcon = (calculating === 0) ? \"\" : getImage(type);\r\n    function getModalView() {\r\n        if (calculating === 3) {\r\n            return (\r\n                <Modal.Body className=\"modal-scroll-80-60\">\r\n                    <b>Loading...</b>\r\n                </Modal.Body>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Modal.Header className=\"d-flex justify-content-center p-1\">\r\n                <Row className=\"p-1\" style={{width: '100%'}}>\r\n                    <Col className=\"d-flex justify-content-start ps-2 p-0\" xs={2}>\r\n                        {wIcon}\r\n                    </Col>\r\n                    <Col xs={8} className=\"d-flex justify-content-center\">\r\n                        <div className=\"p-auto m-auto text-shadow-indigo\" style={{fontSize: '1.1rem', letterSpacing: '1px', fontWeight: 'bold'}}>{header}</div>\r\n                    </Col>\r\n                    <Col xs={2} className=\"d-flex justify-content-end m-auto pe-1\">\r\n                        <WarningPopoverBadge message={ParameterCalculator.info} sign=\"?\" header={\"Description\"} placement={'left'} />\r\n                    </Col>\r\n                </Row>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"modal-scroll-80-60 pt-2 p-3\">\r\n                    {getProgress(calculating)}\r\n                    {getSettings(calculating)}\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"p-2\">\r\n                    <InputGroup className=\"mb-0 mt-0 flex-nowrap\">\r\n                        {getButtons(calculating)}\r\n                    </InputGroup>\r\n                </Modal.Footer>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <Modal\r\n            show = {props.modalCalculates.show}\r\n            onHide = {onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            {getModalView()}\r\n        </Modal>\r\n    );\r\n}","import { useState } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\n\r\n\r\nfunction TestedCarousel({data}) {\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const handleSelect = (selectedIndex) => {\r\n        setIndex(selectedIndex);\r\n    };\r\n    const titles = getTitles(data.img);\r\n    return (\r\n        <>\r\n            <p className=\"d-flex justify-content-center\">\r\n                {titles[index]}\r\n            </p>\r\n            <Carousel activeIndex={index} onSelect={handleSelect} interval={null} data-bs-theme=\"dark\">\r\n                {getImages(data.img, data.alt)}\r\n            </Carousel>\r\n            <p className=\"pt-2 pb-0\">\r\n                <small>{data.version}</small>\r\n            </p>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nfunction getImages(img, alt) {\r\n    let result = [];\r\n    for(let i = 0; i < img.length; i++) {\r\n        result.push(\r\n            <Carousel.Item style={{padding: '0% 15% 10% 15%'}}>\r\n                <img className=\"d-block w-100\" src={img[i]} alt={alt} />\r\n            </Carousel.Item>\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getTitles(images) {\r\n    let result = [];\r\n    for (let i = 0; i < images.length; i++) {\r\n        const img = images[i];\r\n        const firstIndex = img.indexOf(\"_\") + 1;\r\n        const lastIndex = img.indexOf(\"_\", firstIndex);\r\n        result.push(img.substring(firstIndex, lastIndex));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default TestedCarousel;","import Modal from 'react-bootstrap/Modal';\r\nimport TestedCarousel from './TestedCarousel';\r\nimport { testedWeapons } from './TestedWeapons';\r\n\r\n\r\nexport default function ModalTestedWeapon(props) {\r\n    console.log(\"ModalTestedWeapon\");\r\n    if (!props.modalTested.show) {\r\n        return (<></>);\r\n    }\r\n    function onHide(e) {\r\n        props.setModalTested({data: null, show: false});\r\n    }\r\n    const data = testedWeapons.get(props.modalTested.wId);\r\n    return (\r\n        <Modal\r\n            show = {props.modalTested.show}\r\n            onHide = {onHide}\r\n            size=\"xl\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Tests\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"pb-1\">\r\n                <TestedCarousel data={data} />\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}","import { memo, useState } from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport ModalApplyTemplate from './ModalApplyTemplate';\r\nimport ModalCalculateWeapon from './ModalCalculateWeapon';\r\nimport ModalCalculateWeapons from './ModalCalculateWeapons';\r\nimport ModalTestedWeapon from './ModalTestedWeapon';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport WTypeDropdown from '../helpers/WTypeDropdown';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport TemplateItems from './TemplateItems';\r\nimport { FloatButton } from 'antd';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nfunction buildLicense() {\r\n    return (\r\n        <Popover className=\"popover-adjustable\">\r\n            <Popover.Header as=\"h3\"><strong>Licensing</strong></Popover.Header>\r\n            <Popover.Body>\r\n                Weapon images below were taken from the video game Fallout 76 or from websites created and owned by Bethesda Softworks, the copyright of which is held by Bethesda Softworks, or were released to the press for promotional purposes by the same.\r\n                The use of images to illustrate items of the game concerning the subject of the images in question is believed to qualify as fair use under United States copyright law, as such display does not significantly impede the right of the copyright holder to sell the copyrighted material and is not being used to generate profit.\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nconst WeaponTemplates = memo(function WeaponTemplates(props) {\r\n    console.log(\"WeaponTemplates\");\r\n    const [modalTemplate, setModalTemplate] = useState({template: null, show: false});\r\n    const [modalCalculate, setModalCalculate] = useState({template: null, show: false});\r\n    const [modalCalculates, setModalCalculates] = useState({show: false});\r\n    const [modalTested, setModalTested] = useState({wId: '', show: false});\r\n    const [filterName, setFilterName] = useState(\"\");\r\n    const [weaponType, setWeaponType] = useState(\"All\");\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(20);\r\n    const [startIndex, setStartIndex] = useState(0);\r\n    function resetPage() {\r\n        setPage(1);\r\n        setStartIndex(0);\r\n    }\r\n    function filterNameChanged(e) {\r\n        setPage(1);\r\n        setStartIndex(0);\r\n        setFilterName(e.target.value);\r\n    }\r\n    function onPageChanged(page, pageSize) {\r\n        setStartIndex(pageSize * (page - 1));\r\n        setPage(page);\r\n        setPageSize(pageSize);\r\n    }\r\n    function onTestClick(e) {\r\n        setModalTested({wId: e.currentTarget.id, show: true});\r\n    }\r\n    function findBestClick(e) {\r\n        setModalCalculates({show: true});\r\n    }\r\n    return (\r\n        <>\r\n            <Row className=\"mt-1 ms-1 mb-2 me-2\">\r\n                <Col className=\"m-auto d-flex justify-content-start\">\r\n                    <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"top\" overlay={buildLicense()}>\r\n                        <Badge variant=\"black\" pill>!</Badge>\r\n                    </OverlayTrigger>\r\n                </Col>\r\n                <Col className=\"m-auto pe-2 d-flex justify-content-end\">\r\n                    <Button size=\"sm\" variant=\"danger\" onClick={findBestClick}><strong className=\"best-button-shadow\">Find The Best</strong></Button>\r\n                </Col>\r\n            </Row>\r\n            <ModalTestedWeapon modalTested={modalTested} setModalTested={setModalTested} />\r\n            <ModalApplyTemplate modalTemplate={modalTemplate} setModalTemplate={setModalTemplate} setWSpec={props.setWSpec}></ModalApplyTemplate>\r\n            <ModalCalculateWeapon creatureNamesRef={props.creatureNamesRef} modalCalculate={modalCalculate} setModalCalculate={setModalCalculate} setWSpec={props.setWSpec} setBoostDamage={props.setBoostDamage} setPlayer={props.setPlayer} setExtraDamage={props.setExtraDamage} setFoodPref={props.setFoodPref} setStuffBoost={props.setStuffBoost} setAdditionalDamages={props.setAdditionalDamages} setPlayerStats={props.setPlayerStats} setMagazines={props.setMagazines} setBobbleHeads={props.setBobbleHeads} setFood={props.setFood} setDrink={props.setDrink} setPsycho={props.setPsycho} setSerum={props.setSerum} setOthers={props.setOthers}></ModalCalculateWeapon>\r\n            <ModalCalculateWeapons creatureNamesRef={props.creatureNamesRef} modalCalculates={modalCalculates} setModalCalculates={setModalCalculates} setWSpec={props.setWSpec} setBoostDamage={props.setBoostDamage} setPlayer={props.setPlayer} setExtraDamage={props.setExtraDamage} setFoodPref={props.setFoodPref} setStuffBoost={props.setStuffBoost} setAdditionalDamages={props.setAdditionalDamages} setPlayerStats={props.setPlayerStats} setMagazines={props.setMagazines} setBobbleHeads={props.setBobbleHeads} setFood={props.setFood} setDrink={props.setDrink} setPsycho={props.setPsycho} setSerum={props.setSerum} setOthers={props.setOthers}></ModalCalculateWeapons>\r\n            <InputGroup className=\"ps-1 pe-1 pb-2 flex-nowrap\">\r\n                <WTypeDropdown weaponType={weaponType} setWeaponType={setWeaponType} resetPage={resetPage}></WTypeDropdown>\r\n                <Form.Control style={{width: '10rem'}} maxLength=\"70\" onChange={filterNameChanged} />\r\n            </InputGroup>\r\n            <Accordion className=\"accordion\">\r\n                <TemplateItems onTestClick={onTestClick} onPageChanged={onPageChanged} startIndex={startIndex} pageSize={pageSize} page={page} weaponType={weaponType} filterName={filterName} setModalTemplate={setModalTemplate} setModalCalculate={setModalCalculate}></TemplateItems>\r\n            </Accordion>\r\n            <FloatButton.BackTop style={{ right: 60 }} duration={100} visibilityHeight={2000} />\r\n        </>\r\n    );\r\n});\r\n\r\nexport default WeaponTemplates;","import ConsumablesBuilder from '../../boostStuff/ConsumablesBuilder';\r\n\r\n\r\nexport default class ParametersApplier {\r\n\r\n    static applyCalculatedParameters(parameters, props) {\r\n        props.setWSpec(parameters.wSpec);\r\n        props.setBoostDamage(parameters.boostDamage);\r\n        props.setPlayer(parameters.player);\r\n        props.setPlayerStats(parameters.playerStats);\r\n        props.setAdditionalDamages(parameters.additionalDamages);\r\n        props.setExtraDamage(parameters.extraDamage);\r\n\r\n        // Have to recalculate it for best result to set appropriate selection to items.\r\n        const [foodPref, stuffBoost, consumables] = ConsumablesBuilder.buildFromList(parameters.consumableList, parameters.player);\r\n        ConsumablesBuilder.setConsumableItems(consumables, props.setMagazines, props.setBobbleHeads, props.setFood, props.setDrink, props.setPsycho, props.setSerum, props.setOthers);\r\n        props.setFoodPref(foodPref);\r\n        props.setStuffBoost(stuffBoost);\r\n    }\r\n}","import Card from 'react-bootstrap/Card';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nconst imagePathMap = new Map();\r\n\r\nexport function getMark(key, imagePath, className, iconSize, imageSize, borderRadius) {\r\n    return (\r\n        <Card key={key} className={\"m-1 d-flex justify-content-center \" + className} style={{height: iconSize, width: iconSize}}>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <Image style={{borderRadius: borderRadius, height: imageSize, width: imageSize}} src={imagePath} />\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function EmblemCalcRowView(props) {\r\n    let className = \"shadow-outline-gold2\";\r\n    if (props.className) {\r\n        className = props.className;\r\n    }\r\n    const views = [];\r\n    for (let i = 0; i < props.imNames.length; i++) {\r\n        const imName = props.imNames[i];\r\n        if (imName) {\r\n            let imagePath = imagePathMap.get(imName);\r\n            if (!imagePath) {\r\n                imagePath = props.imageProvider(imName);\r\n                imagePathMap.set(imName, imagePath);\r\n            }\r\n            views.push(getMark(imName, imagePath, className, props.iconSize, props.imageSize, props.borderRadius));\r\n        }\r\n    }\r\n    return (\r\n        <Row className=\"d-flex justify-content-center\" style={props.style}>\r\n            {views}\r\n        </Row>\r\n    );\r\n}","// Custom checkbox\r\nexport function UCheckbox(props) {\r\n    let className = \"form-check-input \";\r\n    if (props.className) {\r\n        className += props.className;\r\n    }\r\n    let bgColor = null;\r\n    let bColor = null;\r\n    if (props.checkBgColor && props.checked) {\r\n        bgColor = props.checkBgColor;\r\n    }\r\n    if (props.checkBorderColor && props.checked) {\r\n        bColor = props.checkBorderColor;\r\n    }\r\n    const ms = (props.children) ? \"ms-1\" : \"ms-0\";\r\n    return (\r\n        <div>\r\n            <input id={props.id} title={props.title} style={{cursor: 'pointer', borderColor: bColor, backgroundColor: bgColor}} className={className} type=\"checkbox\" disabled={props.disabled} checked={props.checked} onChange={props.onChange} />\r\n            <label className={\"form-check-label \" + ms}>\r\n                {props.children}\r\n            </label>\r\n        </div>\r\n    );\r\n}","import Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\n\r\nfunction getItems(dict) {\r\n    const result = [];\r\n    for (const name in dict) {\r\n        result.push(<Dropdown.Item key={name} eventKey={name}>{dict[name]}</Dropdown.Item>);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default function BaseDropdown(props) {\r\n    let onSelect = props.onSelect;\r\n    if (!onSelect) {\r\n        onSelect = (e) => {\r\n            props.setValue(e);\r\n        };\r\n    }\r\n    return (\r\n        <DropdownButton variant={props.variant} size={props.size} onSelect={onSelect} title={props.title}>\r\n            {getItems(props.dict)}\r\n        </DropdownButton>\r\n    );\r\n}\r\n\r\n","import ReactDOM from 'react-dom/client';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\n\r\n\r\nexport default class StaticPopoverRenderer {\r\n\r\n    // Workaround as propagation is suppressed (onHide will no be invoked)\r\n    // This measure is intended to prevent of opening of several popovers if a propagation is suppressed and on\r\n    // hide can't be invoked\r\n    static lastOpened = null;\r\n\r\n    constructor(header, body, placeId, placement='top') {\r\n        this.header = header;\r\n        this.body = body;\r\n        this.placeId = placeId;\r\n        this.show = false;\r\n        this.root = null;\r\n        this.placement = placement;\r\n    }\r\n\r\n    renderToggle(target) {\r\n        this.show = !this.show;\r\n        if (StaticPopoverRenderer.lastOpened && StaticPopoverRenderer.lastOpened !== this) {\r\n            StaticPopoverRenderer.lastOpened.onHide();\r\n        }\r\n        if (this.show) {\r\n            StaticPopoverRenderer.lastOpened = this;\r\n        }\r\n        if (!this.root) {\r\n            this.root = ReactDOM.createRoot(document.getElementById(this.placeId))\r\n        }\r\n        this.root.render(this.buildLayout(this.header, this.body, this.show, target, this.placement));\r\n    }\r\n\r\n    renderToggleNewContent(target, header, body) {\r\n        this.header = header;\r\n        this.body = body;\r\n        this.renderToggle(target);\r\n    }\r\n\r\n    onHide(e) {\r\n        if (StaticPopoverRenderer.lastOpened === this) {\r\n            StaticPopoverRenderer.lastOpened = null;\r\n        }\r\n        this.show = false;\r\n        if (this.root) {\r\n            this.root.render((<></>));\r\n        }\r\n    }\r\n\r\n    buildLayout(header, body, show, target, placement) {\r\n        return (\r\n            <Overlay\r\n                show={show}\r\n                target={target}\r\n                rootClose='true'\r\n                onHide={e => (this.onHide(e))}\r\n                placement={placement}>\r\n                <Popover className=\"popover-adjustable\">\r\n                    <Popover.Header>\r\n                        {header}\r\n                    </Popover.Header>\r\n                    <Popover.Body>\r\n                        {body}\r\n                    </Popover.Body>\r\n                </Popover>\r\n            </Overlay>\r\n        );\r\n    }\r\n}\r\n","var map = {\n\t\"./bh_big_guns.webp\": 95529,\n\t\"./bh_energy.webp\": 47901,\n\t\"./bh_explosive.webp\": 18840,\n\t\"./bh_melee.webp\": 55959,\n\t\"./bh_repair.webp\": 58136,\n\t\"./bh_small_guns.webp\": 53574,\n\t\"./bh_sneak.webp\": 60603,\n\t\"./bh_strength.webp\": 14188,\n\t\"./bh_unarmed.webp\": 28373\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 53797;","var map = {\n\t\"./ballistic_bock.webp\": 68120,\n\t\"./beer.webp\": 91715,\n\t\"./blackwater_brew.webp\": 20220,\n\t\"./bourbon.webp\": 84664,\n\t\"./chally_milk.webp\": 48566,\n\t\"./cranberry_moonshine.webp\": 45866,\n\t\"./fern_flower_tea.webp\": 99811,\n\t\"./firecracker_berry_juice.webp\": 89318,\n\t\"./high_voltage_hefe.webp\": 74687,\n\t\"./liquid_courage.webp\": 64030,\n\t\"./mire_magic_moonshine.webp\": 24305,\n\t\"./moonshine.webp\": 52635,\n\t\"./mountain_honey.webp\": 92418,\n\t\"./new_river_red_ale.webp\": 60787,\n\t\"./nuka_cola_dark.webp\": 31201,\n\t\"./nuka_twist.webp\": 19104,\n\t\"./nukashine.webp\": 95415,\n\t\"./oak_holler_lager.webp\": 93197,\n\t\"./old_possum.webp\": 26110,\n\t\"./pickaxe_pilsner.webp\": 31396,\n\t\"./rum.webp\": 6851,\n\t\"./steeped_fern_flower_tea.webp\": 81894,\n\t\"./steeped_thistle_tea.webp\": 4948,\n\t\"./sweetmutfruit.webp\": 70939,\n\t\"./vodka.webp\": 35534,\n\t\"./whiskey.webp\": 51397,\n\t\"./wine.webp\": 48112\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 43242;","var map = {\n\t\"./blight_soup.webp\": 51365,\n\t\"./candy.webp\": 76572,\n\t\"./deathclaw_steak.webp\": 10593,\n\t\"./deathclaw_wellington.webp\": 98684,\n\t\"./glowing_steak.webp\": 26055,\n\t\"./gulper_stuffed_foot.webp\": 5001,\n\t\"./light_mutant_hound_chops.webp\": 79270,\n\t\"./mole_rat_chunks.webp\": 55139,\n\t\"./molerat_jerky.webp\": 23437,\n\t\"./mutton_chops.webp\": 12246,\n\t\"./nuka_cola_candy.webp\": 3416,\n\t\"./stingwing_filet.webp\": 67262,\n\t\"./tasty_mutant_hound_stew.webp\": 27397,\n\t\"./tasty_mutton_meat_pie.webp\": 87623,\n\t\"./yao_guai_ribs.webp\": 78016,\n\t\"./yao_guai_roast.webp\": 51555\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92122;","var map = {\n\t\"./acceptable_overkill.webp\": 66133,\n\t\"./attack_of_the_fishmen.webp\": 96923,\n\t\"./bear_proofing_your_campsite.webp\": 21842,\n\t\"./blood_on_the_harp.webp\": 49110,\n\t\"./camouflage_special.webp\": 55050,\n\t\"./corsair_queen.webp\": 47468,\n\t\"./curse_of_the_burned.webp\": 72609,\n\t\"./demon_slaves_demon_sands.webp\": 51986,\n\t\"./down_home_cooking.webp\": 72551,\n\t\"./flatwoods_monster.webp\": 39376,\n\t\"./future_of_warfare.webp\": 99986,\n\t\"./giant_super_weapons.webp\": 93557,\n\t\"./guide_to_hunting_commies.webp\": 7290,\n\t\"./hills_grafton.webp\": 40546,\n\t\"./home_in_the_hills.webp\": 47002,\n\t\"./invasion_of_the_zetans.webp\": 74413,\n\t\"./little_guns_for_little_ladies.webp\": 77246,\n\t\"./mothman.webp\": 17982,\n\t\"./nuke_the_man.webp\": 22716,\n\t\"./plasma_the_weapon_of_tomorrow.webp\": 98167,\n\t\"./rise_of_the_mutants.webp\": 48458,\n\t\"./rockobot_takes_the_nation_by_storm.webp\": 6934,\n\t\"./snallygaster.webp\": 77577,\n\t\"./take_aim_army_style.webp\": 92371,\n\t\"./the_future_of_hunting.webp\": 82555,\n\t\"./the_starlet_sniper.webp\": 40667,\n\t\"./tomorrow_technology.webp\": 70892,\n\t\"./us_army_goes_to_space.webp\": 49222,\n\t\"./wendigo.webp\": 84477,\n\t\"./when_apes_go_bananas.webp\": 85392\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18405;","var map = {\n\t\"./syringer.webp\": 23603\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97611;","var map = {\n\t\"./buffout.webp\": 50498,\n\t\"./bufftats.webp\": 57172,\n\t\"./calmex.webp\": 27405,\n\t\"./f.webp\": 63011,\n\t\"./mk1.webp\": 86846,\n\t\"./mk2.webp\": 75487,\n\t\"./mk3.webp\": 68892,\n\t\"./mk4.webp\": 27821,\n\t\"./nd.webp\": 58537,\n\t\"./o.webp\": 99336,\n\t\"./p.webp\": 76169,\n\t\"./pb.webp\": 35457,\n\t\"./psycho.webp\": 58127,\n\t\"./pt.webp\": 82683,\n\t\"./x_cell.webp\": 64618\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48114;","var map = {\n\t\"./ar_serum.webp\": 19820,\n\t\"./c_serum.webp\": 29906,\n\t\"./e_serum.webp\": 63088,\n\t\"./ee_serum.webp\": 71693,\n\t\"./h_serum.webp\": 17727,\n\t\"./hm_serum.webp\": 33592,\n\t\"./sd_serum.webp\": 32576,\n\t\"./serum.webp\": 21424,\n\t\"./t_serum.webp\": 74755,\n\t\"./tm_serum.webp\": 22876\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 37665;","var map = {\n\t\"./0003a0d4/version.json\": 95892\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 51619;","var map = {\n\t\"./0003a0d4/01_Details_weapon.webp\": 70730,\n\t\"./0003a0d4/02_Stats_.webp\": 72102,\n\t\"./0003a0d4/03_Perks_.webp\": 41273,\n\t\"./0003a0d4/04_Specifications_.webp\": 78207,\n\t\"./0003a0d4/05_Crit-Scorched_test.webp\": 61450,\n\t\"./0003a0d4/06_Sneak-Scorched_test.webp\": 51293\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 67443;","var map = {\n\t\"./adrenaline.webp\": 77939,\n\t\"./archer.webp\": 26487,\n\t\"./better_criticals.webp\": 98439,\n\t\"./bloody_mess.webp\": 18472,\n\t\"./bow_before_me.webp\": 69853,\n\t\"./class_freak.webp\": 64044,\n\t\"./commando.webp\": 85230,\n\t\"./covert_operative.webp\": 32371,\n\t\"./demolition_expert.webp\": 79375,\n\t\"./exterminator.webp\": 84992,\n\t\"./follow_through.webp\": 57743,\n\t\"./gladiator.webp\": 8985,\n\t\"./glow_sight.webp\": 37143,\n\t\"./ground_pounder.webp\": 78725,\n\t\"./guerrilla.webp\": 94933,\n\t\"./gun_fu.webp\": 41542,\n\t\"./gunslinger.webp\": 87912,\n\t\"./heavy_gunner.webp\": 58723,\n\t\"./incisor.webp\": 64005,\n\t\"./iron_fist.webp\": 43409,\n\t\"./lock_and_load.webp\": 38510,\n\t\"./martial_artist.webp\": 29416,\n\t\"./mister_sandman.webp\": 10979,\n\t\"./nerd_rage.webp\": 79361,\n\t\"./ninja.webp\": 8668,\n\t\"./party_girl_boy.webp\": 31306,\n\t\"./power_user.webp\": 18937,\n\t\"./rifleman.webp\": 30814,\n\t\"./scattershot.webp\": 12650,\n\t\"./science.webp\": 94710,\n\t\"./shotgunner.webp\": 51307,\n\t\"./slugger.webp\": 19563,\n\t\"./stabilized.webp\": 56659,\n\t\"./strange_in_numbers.webp\": 48479,\n\t\"./tank_killer.webp\": 16926,\n\t\"./tenderizer.webp\": 92478,\n\t\"./toft.webp\": 35123\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18541;","var map = {\n\t\"./10mm.json\": 67136,\n\t\"./10mmSubmachineGun.json\": 98223,\n\t\"./44.json\": 96691,\n\t\"./50CalMachineGun.json\": 7943,\n\t\"./AlienBlaster.json\": 75847,\n\t\"./AncientBlade.json\": 18197,\n\t\"./Anti-ScorchedTrainingPistol.json\": 62954,\n\t\"./AssaultRifle.json\": 73024,\n\t\"./AssaultronBlade.json\": 9661,\n\t\"./AutoAxe.json\": 34260,\n\t\"./AutoGrenadeLauncher.json\": 68390,\n\t\"./Bada-Boom.json\": 91467,\n\t\"./BaseballBat.json\": 13870,\n\t\"./BaseballGrenade.json\": 78575,\n\t\"./Baton.json\": 18199,\n\t\"./BearArm.json\": 89261,\n\t\"./BlackPowderBlunderbuss.json\": 47182,\n\t\"./BlackPowderPistol.json\": 55208,\n\t\"./BlackPowderRifle.json\": 51743,\n\t\"./BladeofBastet.json\": 52289,\n\t\"./BlastMine.json\": 55104,\n\t\"./BlueFlamer.json\": 82672,\n\t\"./Board.json\": 13605,\n\t\"./BoneClub.json\": 49269,\n\t\"./BoneHammer.json\": 43323,\n\t\"./Bow.json\": 75301,\n\t\"./BowieKnife.json\": 57908,\n\t\"./BoxingGlove.json\": 9033,\n\t\"./Broadsider.json\": 63064,\n\t\"./BugGrenade.json\": 30335,\n\t\"./BurningLove.json\": 91970,\n\t\"./CamdenWhacker.json\": 6144,\n\t\"./CandyCane.json\": 65817,\n\t\"./Cattleprod.json\": 82513,\n\t\"./Chainsaw.json\": 22433,\n\t\"./ChineseOfficerSword.json\": 13233,\n\t\"./CircuitBreaker.json\": 91582,\n\t\"./ColdShoulder.json\": 20329,\n\t\"./CombatKnife.json\": 95272,\n\t\"./CombatRifle.json\": 91267,\n\t\"./CombatShotgun.json\": 85119,\n\t\"./CommandersCharge.json\": 38248,\n\t\"./CommieWhacker.json\": 72100,\n\t\"./CompoundBow.json\": 40914,\n\t\"./Cremator.json\": 74592,\n\t\"./Crossbow.json\": 53231,\n\t\"./CrowdControl.json\": 45678,\n\t\"./CrusaderPistol.json\": 73655,\n\t\"./CrushingBlow.json\": 17010,\n\t\"./CryoMine.json\": 76209,\n\t\"./CryogenicGrenade.json\": 57254,\n\t\"./Cryolator.json\": 80934,\n\t\"./CultistBlade.json\": 44885,\n\t\"./CultistDagger.json\": 61499,\n\t\"./CultistPickaxe.json\": 92252,\n\t\"./DeathTambo.json\": 34520,\n\t\"./DeathclawGauntlet.json\": 44022,\n\t\"./DisorderlyConduct.json\": 65216,\n\t\"./DoctorsOrders.json\": 24120,\n\t\"./Double-BarrelShotgun.json\": 59577,\n\t\"./Drill.json\": 96708,\n\t\"./Dross.json\": 25292,\n\t\"./Dynamite.json\": 20416,\n\t\"./DynamiteBundle.json\": 25200,\n\t\"./ElectroEnforcer.json\": 11061,\n\t\"./EnclavePlasma.json\": 79305,\n\t\"./ExplosiveBait.json\": 21466,\n\t\"./FaceBreaker.json\": 85782,\n\t\"./FancyPumpActionShotgun.json\": 90634,\n\t\"./FatMan.json\": 76546,\n\t\"./FinalWord.json\": 88773,\n\t\"./FireAxe.json\": 13725,\n\t\"./Flamer.json\": 35276,\n\t\"./FloaterFlamerGrenade.json\": 52247,\n\t\"./FloaterFreezerGrenade.json\": 34831,\n\t\"./FloaterGnasherGrenade.json\": 48222,\n\t\"./FoundationsVengeance.json\": 41775,\n\t\"./FragmentationGrenade.json\": 82626,\n\t\"./FragmentationGrenadeMIRV.json\": 96328,\n\t\"./FragmentationMine.json\": 20059,\n\t\"./GammaGun.json\": 83158,\n\t\"./GatlingGun.json\": 43757,\n\t\"./GatlingLaser.json\": 4688,\n\t\"./GatlingPlasma.json\": 37971,\n\t\"./Gauntlet.json\": 35429,\n\t\"./GaussMinigun.json\": 58511,\n\t\"./GaussPistol.json\": 48787,\n\t\"./GaussRifle.json\": 32310,\n\t\"./GaussShotgun.json\": 82674,\n\t\"./GolfClub.json\": 65851,\n\t\"./GrandFinale.json\": 49396,\n\t\"./GrantsSaber.json\": 85437,\n\t\"./GrognaksAxe.json\": 60029,\n\t\"./GuitarSword.json\": 14106,\n\t\"./GulperSmacker.json\": 96750,\n\t\"./GunthersBigIron.json\": 48723,\n\t\"./HandmadeRifle.json\": 93263,\n\t\"./HarpoonGun.json\": 30080,\n\t\"./Hatchet.json\": 82634,\n\t\"./Hellstorm.json\": 40033,\n\t\"./HuntingRifle.json\": 78828,\n\t\"./ImposterAssaultronHead.json\": 27364,\n\t\"./Kingfisher.json\": 76841,\n\t\"./Knuckles.json\": 78333,\n\t\"./Laser.json\": 23482,\n\t\"./LeadPipe.json\": 54117,\n\t\"./LeverActionRifle.json\": 54119,\n\t\"./LightMachineGun.json\": 48844,\n\t\"./Love-Tap.json\": 52455,\n\t\"./M79GrenadeLauncher.json\": 47112,\n\t\"./Machete.json\": 23318,\n\t\"./MeatCleaver.json\": 37294,\n\t\"./MeatHook.json\": 70287,\n\t\"./MechanicsBestFriend.json\": 13476,\n\t\"./MedicalMalpractice.json\": 67205,\n\t\"./MeteoriticSword.json\": 46859,\n\t\"./MindOverMatter.json\": 15804,\n\t\"./Minigun.json\": 33626,\n\t\"./MissileLauncher.json\": 73989,\n\t\"./MoleMinerGauntlet.json\": 64161,\n\t\"./MoleratBat.json\": 83902,\n\t\"./MolotovCocktail.json\": 99285,\n\t\"./MrHandyBuzzBlade.json\": 31737,\n\t\"./Multi-PurposeAxe.json\": 43477,\n\t\"./Nailer.json\": 35116,\n\t\"./NightLight.json\": 12097,\n\t\"./NoxiousFogCrawler.json\": 95656,\n\t\"./Nuka-Launcher.json\": 20413,\n\t\"./NukaGrenade.json\": 44648,\n\t\"./NukaQuantumGrenade.json\": 93535,\n\t\"./NukeMine.json\": 86049,\n\t\"./Oathbreaker.json\": 81173,\n\t\"./OldGuards10mmSMG.json\": 43790,\n\t\"./PepperShaker.json\": 68343,\n\t\"./Pickaxe.json\": 70338,\n\t\"./Pipe.json\": 5951,\n\t\"./PipeBolt-Action.json\": 5769,\n\t\"./PipeRevolver.json\": 77652,\n\t\"./PipeWrench.json\": 76898,\n\t\"./PiratePunch.json\": 76818,\n\t\"./Pitchfork.json\": 47443,\n\t\"./Plasma.json\": 29613,\n\t\"./PlasmaCaster.json\": 96281,\n\t\"./PlasmaCutter.json\": 52830,\n\t\"./PlasmaGrenade.json\": 1573,\n\t\"./PlasmaMine.json\": 90094,\n\t\"./PoleHook.json\": 81950,\n\t\"./PollysAssaultronHead.json\": 19906,\n\t\"./PoolCue.json\": 67996,\n\t\"./PowerFist.json\": 62702,\n\t\"./PulseGrenade.json\": 47246,\n\t\"./PulseMine.json\": 65215,\n\t\"./PumpActionShotgun.json\": 74607,\n\t\"./PumpkinGrenade.json\": 19133,\n\t\"./QuadLauncher.json\": 66780,\n\t\"./Radium.json\": 5135,\n\t\"./Railway.json\": 92390,\n\t\"./ResoluteVeteran.json\": 99771,\n\t\"./RevolutionarySword.json\": 75347,\n\t\"./Ripper.json\": 46117,\n\t\"./RollingPin.json\": 14715,\n\t\"./SaltoftheEarth.json\": 41951,\n\t\"./SalvagedAssaultronHead.json\": 32160,\n\t\"./SheepsquatchClub.json\": 14543,\n\t\"./SheepsquatchShard.json\": 76101,\n\t\"./SheepsquatchStaff.json\": 96899,\n\t\"./ShepherdsCrook.json\": 37955,\n\t\"./Shishkebab.json\": 4973,\n\t\"./Shovel.json\": 264,\n\t\"./Sickle.json\": 18602,\n\t\"./SingleActionRevolver.json\": 83286,\n\t\"./SkiSword.json\": 25805,\n\t\"./Sledgehammer.json\": 43795,\n\t\"./SlugBuster.json\": 83241,\n\t\"./SmartFragmentationGrenade.json\": 96669,\n\t\"./SoleSurvivor.json\": 91140,\n\t\"./Spear.json\": 77336,\n\t\"./SubmachineGun.json\": 2234,\n\t\"./SuperSledge.json\": 19224,\n\t\"./Switchblade.json\": 93255,\n\t\"./Tenderizer.json\": 57521,\n\t\"./Tesla.json\": 10686,\n\t\"./TheActionHero.json\": 22372,\n\t\"./TheDebilitator.json\": 15429,\n\t\"./TheDragon.json\": 41349,\n\t\"./TheFarmhand.json\": 31247,\n\t\"./TheFixer.json\": 61878,\n\t\"./TheGuarantee.json\": 31400,\n\t\"./TheGutter.json\": 6849,\n\t\"./TheInvader.json\": 79119,\n\t\"./TheQuickFix.json\": 3740,\n\t\"./TheVATSUnknown.json\": 58448,\n\t\"./ThrowingKnife.json\": 30400,\n\t\"./TireIron.json\": 7899,\n\t\"./Tomahawk.json\": 71105,\n\t\"./ToneDeath.json\": 46019,\n\t\"./UltraciteGatlingLaser.json\": 2775,\n\t\"./UltraciteLaser.json\": 56859,\n\t\"./UnstoppableMonster.json\": 63214,\n\t\"./V63Zweihaender.json\": 49576,\n\t\"./WalkingCane.json\": 22055,\n\t\"./WarDrum.json\": 74403,\n\t\"./WarGlaive.json\": 5043,\n\t\"./WesternRevolver.json\": 47092,\n\t\"./WesternSpirit.json\": 88910,\n\t\"./WhackerSmacker.json\": 84152,\n\t\"./WhistleInTheDark.json\": 83003,\n\t\"./ZetasRevenge.json\": 34776\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 96539;","var map = {\n\t\"./10mm.webp\": 36795,\n\t\"./10mm_submachine_gun.webp\": 86374,\n\t\"./44.webp\": 69136,\n\t\"./50_cal_machine_gun.webp\": 35317,\n\t\"./alien_blaster.webp\": 86433,\n\t\"./ancient_blade.webp\": 56769,\n\t\"./anti-scorched_training_pistol.webp\": 45089,\n\t\"./assault_rifle.webp\": 83514,\n\t\"./assaultron_blade.webp\": 98915,\n\t\"./auto_axe.webp\": 82940,\n\t\"./auto_grenade_launcher.webp\": 69795,\n\t\"./bada-boom.webp\": 36466,\n\t\"./baseball_bat.webp\": 32828,\n\t\"./baseball_grenade.webp\": 59757,\n\t\"./baton.webp\": 20642,\n\t\"./bear_arm.webp\": 24883,\n\t\"./black_powder_blunderbuss.webp\": 25061,\n\t\"./black_powder_pistol.webp\": 23297,\n\t\"./black_powder_rifle.webp\": 87208,\n\t\"./black_powder_rifle_dragon.webp\": 60122,\n\t\"./blade_of_bastet.webp\": 14684,\n\t\"./blast_mine.webp\": 20564,\n\t\"./blue_flamer.webp\": 92974,\n\t\"./board.webp\": 59216,\n\t\"./bone_club.webp\": 49603,\n\t\"./bone_hammer.webp\": 80021,\n\t\"./bow.webp\": 69436,\n\t\"./bowie_knife.webp\": 42880,\n\t\"./boxing_glove.webp\": 85533,\n\t\"./broadsider.webp\": 18615,\n\t\"./bug_grenade.webp\": 22103,\n\t\"./burning_love.webp\": 84556,\n\t\"./camden_whacker.webp\": 59226,\n\t\"./candy_cane.webp\": 62551,\n\t\"./cattleprod.webp\": 31158,\n\t\"./chainsaw.webp\": 95458,\n\t\"./chinese_officer_sword.webp\": 36908,\n\t\"./circuit_breaker.webp\": 78104,\n\t\"./cold_shoulder.webp\": 28691,\n\t\"./combat_knife.webp\": 64006,\n\t\"./combat_rifle.webp\": 60797,\n\t\"./combat_shotgun.webp\": 45865,\n\t\"./commanders_charge.webp\": 11688,\n\t\"./commie_whacker.webp\": 89278,\n\t\"./compound_bow.webp\": 85118,\n\t\"./cremator.webp\": 43619,\n\t\"./crossbow.webp\": 95748,\n\t\"./crowd_control.webp\": 48583,\n\t\"./crusader_pistol.webp\": 80559,\n\t\"./crushing_blow.webp\": 22734,\n\t\"./cryo_mine.webp\": 38913,\n\t\"./cryogenic_grenade.webp\": 22940,\n\t\"./cryolator.webp\": 79715,\n\t\"./cultist_blade.webp\": 26037,\n\t\"./cultist_dagger.webp\": 9035,\n\t\"./cultist_pickaxe.webp\": 25692,\n\t\"./death_tambo.webp\": 80544,\n\t\"./deathclaw_gauntlet.webp\": 25336,\n\t\"./default.webp\": 37033,\n\t\"./disorderly_conduct.webp\": 4580,\n\t\"./doctors_orders.webp\": 90996,\n\t\"./double-barrel_shotgun.webp\": 89765,\n\t\"./drill.webp\": 75925,\n\t\"./dross.webp\": 16177,\n\t\"./dynamite.webp\": 28131,\n\t\"./dynamite_bundle.webp\": 39268,\n\t\"./electro_enforcer.webp\": 49225,\n\t\"./enclave_plasma.webp\": 6681,\n\t\"./enclave_plasma_rifle.webp\": 19296,\n\t\"./explosive_bait.webp\": 13144,\n\t\"./face_breaker.webp\": 21390,\n\t\"./fancy_pump_action_shotgun.webp\": 31258,\n\t\"./fat_man.webp\": 14956,\n\t\"./final_word.webp\": 81113,\n\t\"./fire_axe.webp\": 60503,\n\t\"./flamer.webp\": 79675,\n\t\"./floater_flamer_grenade.webp\": 64827,\n\t\"./floater_freezer_grenade.webp\": 45700,\n\t\"./floater_gnasher_grenade.webp\": 71903,\n\t\"./foundations_vengeance.webp\": 47267,\n\t\"./fragmentation_grenade.webp\": 69996,\n\t\"./fragmentation_grenade_mirv.webp\": 26587,\n\t\"./fragmentation_mine.webp\": 15665,\n\t\"./gamma_gun.webp\": 72432,\n\t\"./gatling_gun.webp\": 50709,\n\t\"./gatling_laser.webp\": 15592,\n\t\"./gatling_plasma.webp\": 76747,\n\t\"./gauntlet.webp\": 38530,\n\t\"./gauss_minigun.webp\": 63441,\n\t\"./gauss_pistol.webp\": 33261,\n\t\"./gauss_rifle.webp\": 30700,\n\t\"./gauss_shotgun.webp\": 9456,\n\t\"./golf_club.webp\": 19577,\n\t\"./grand_finale.webp\": 1100,\n\t\"./grants_saber.webp\": 22109,\n\t\"./grognaks_axe.webp\": 39115,\n\t\"./guitar_sword.webp\": 97292,\n\t\"./gulper_smacker.webp\": 35614,\n\t\"./gunthers_big_iron.webp\": 35214,\n\t\"./handmade_rifle.webp\": 67441,\n\t\"./harpoon_gun.webp\": 44594,\n\t\"./hatchet.webp\": 71623,\n\t\"./hellstorm.webp\": 37400,\n\t\"./hunting_rifle.webp\": 54134,\n\t\"./imposter_assaultron_head.webp\": 96909,\n\t\"./kingfisher.webp\": 30874,\n\t\"./knuckles.webp\": 24514,\n\t\"./laser.webp\": 77635,\n\t\"./laser_rifle.webp\": 23550,\n\t\"./lead_pipe.webp\": 3671,\n\t\"./lever_action_rifle.webp\": 19750,\n\t\"./light_machine_gun.webp\": 62579,\n\t\"./love-tap.webp\": 36944,\n\t\"./lucky_rabbits_foot.webp\": 85655,\n\t\"./m79_grenade_launcher.webp\": 88095,\n\t\"./machete.webp\": 50751,\n\t\"./meat_cleaver.webp\": 59882,\n\t\"./meat_hook.webp\": 71059,\n\t\"./mechanics_best_friend.webp\": 50859,\n\t\"./medical_malpractice.webp\": 72591,\n\t\"./meteoritic_sword.webp\": 39259,\n\t\"./mind_over_matter.webp\": 62713,\n\t\"./mind_over_matter_rifle.webp\": 74816,\n\t\"./minigun.webp\": 12547,\n\t\"./missile_launcher.webp\": 71965,\n\t\"./mole_miner_gauntlet.webp\": 4970,\n\t\"./molerat_bat.webp\": 16570,\n\t\"./molotov_cocktail.webp\": 45129,\n\t\"./mr_handy_buzz_blade.webp\": 94289,\n\t\"./multi-purpose_axe.webp\": 79753,\n\t\"./nailer.webp\": 98331,\n\t\"./night_light.webp\": 92953,\n\t\"./noxious_fog_crawler.webp\": 28525,\n\t\"./nuka-launcher.webp\": 62284,\n\t\"./nuka_grenade.webp\": 41616,\n\t\"./nuka_quantum_grenade.webp\": 83562,\n\t\"./nuke_mine.webp\": 60705,\n\t\"./oathbreaker.webp\": 28644,\n\t\"./old_guards_10mm_smg.webp\": 10784,\n\t\"./orbital_scan_beacon.webp\": 79576,\n\t\"./orbital_strike_beacon.webp\": 88345,\n\t\"./pepper_shaker.webp\": 30309,\n\t\"./pickaxe.webp\": 86255,\n\t\"./pipe.webp\": 59092,\n\t\"./pipe_bolt-action.webp\": 16383,\n\t\"./pipe_bolt-action_rifle.webp\": 37946,\n\t\"./pipe_revolver.webp\": 55134,\n\t\"./pipe_revolver_rifle.webp\": 12703,\n\t\"./pipe_rifle.webp\": 9105,\n\t\"./pipe_wrench.webp\": 40328,\n\t\"./pirate_punch.webp\": 43378,\n\t\"./pitchfork.webp\": 28126,\n\t\"./plasma.webp\": 50898,\n\t\"./plasma_caster.webp\": 44547,\n\t\"./plasma_cutter.webp\": 72244,\n\t\"./plasma_grenade.webp\": 8923,\n\t\"./plasma_mine.webp\": 82656,\n\t\"./plasma_rifle.webp\": 71987,\n\t\"./pole_hook.webp\": 83024,\n\t\"./pollys_assaultron_head.webp\": 89599,\n\t\"./pool_cue.webp\": 62434,\n\t\"./power_fist.webp\": 20376,\n\t\"./protest_sign_-_against_automation.webp\": 26089,\n\t\"./pulse_grenade.webp\": 81096,\n\t\"./pulse_mine.webp\": 36021,\n\t\"./pump_action_shotgun.webp\": 12964,\n\t\"./pumpkin_grenade.webp\": 47409,\n\t\"./quad_launcher.webp\": 18656,\n\t\"./radium.webp\": 52204,\n\t\"./railway.webp\": 84543,\n\t\"./resolute_veteran.webp\": 94083,\n\t\"./revolutionary_sword.webp\": 3477,\n\t\"./ripper.webp\": 79954,\n\t\"./rolling_pin.webp\": 2977,\n\t\"./salt_of_the_earth.webp\": 65339,\n\t\"./salvaged_assaultron_head.webp\": 36785,\n\t\"./sheepsquatch_club.webp\": 9353,\n\t\"./sheepsquatch_shard.webp\": 33003,\n\t\"./sheepsquatch_staff.webp\": 73925,\n\t\"./shepherds_crook.webp\": 92287,\n\t\"./shishkebab.webp\": 83950,\n\t\"./shovel.webp\": 4671,\n\t\"./sickle.webp\": 65725,\n\t\"./single_action_revolver.webp\": 32875,\n\t\"./ski_sword.webp\": 29875,\n\t\"./sledgehammer.webp\": 64084,\n\t\"./slug_buster.webp\": 99569,\n\t\"./slug_buster_rifle.webp\": 47688,\n\t\"./smart_fragmentation_grenade.webp\": 61502,\n\t\"./sole_survivor.webp\": 50872,\n\t\"./spear.webp\": 41669,\n\t\"./submachine_gun.webp\": 51498,\n\t\"./super_sledge.webp\": 4082,\n\t\"./switchblade.webp\": 25866,\n\t\"./tenderizer.webp\": 12926,\n\t\"./tesla.webp\": 81303,\n\t\"./the_action_hero.webp\": 84271,\n\t\"./the_debilitator.webp\": 95967,\n\t\"./the_dragon.webp\": 49151,\n\t\"./the_farmhand.webp\": 10901,\n\t\"./the_fixer.webp\": 18860,\n\t\"./the_guarantee.webp\": 27594,\n\t\"./the_gutter.webp\": 1019,\n\t\"./the_invader.webp\": 18625,\n\t\"./the_quick_fix.webp\": 64375,\n\t\"./the_vats_unknown.webp\": 2821,\n\t\"./throwing_knife.webp\": 1862,\n\t\"./tire_iron.webp\": 8633,\n\t\"./tomahawk.webp\": 54922,\n\t\"./tone_death.webp\": 86041,\n\t\"./ultracite_gatling_laser.webp\": 72610,\n\t\"./ultracite_laser.webp\": 26069,\n\t\"./ultracite_laser_rifle.webp\": 64508,\n\t\"./unstoppable_monster.webp\": 37140,\n\t\"./v63_zweihaender.webp\": 43150,\n\t\"./walking_cane.webp\": 3329,\n\t\"./war_drum.webp\": 57003,\n\t\"./war_glaive.webp\": 26827,\n\t\"./western_revolver.webp\": 64664,\n\t\"./western_spirit.webp\": 20458,\n\t\"./whacker_smacker.webp\": 52106,\n\t\"./whistle_in_the_dark.webp\": 17289,\n\t\"./zetas_revenge.webp\": 66897\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 70151;"],"names":["defPlayerStats","defaultPlayerStats","defPlayer","defaultPlayer","getDefaultGraphData","xValues","yValues","coef","Global","points","i","push","Main","console","log","key","setKey","useState","creatureChartNumber","setCreatureChartNumber","loadedScreen","setLoadedScreen","wSpec","setWSpec","defaultWeaponSpecs","showStat","setShowStat","graphValues","setGraphValues","creatures","setCreatures","defaultCreatures","boostDamage","setBoostDamage","defaultBoosts","resultDamage","setResultDamage","extraDamage","setExtraDamage","defaultExtraDamage","additionalDamages","setAdditionalDamages","defaultAdds","stuffBoost","setStuffBoost","ConsumablesBuilder","getEmptyConsumableBoosts","player","setPlayer","playerStats","setPlayerStats","magazines","setMagazines","getMagazines","bobbleHeads","setBobbleHeads","getBobbleHeads","food","setFood","getFood","drink","setDrink","getDrink","psycho","setPsycho","getPsycho","serum","setSerum","getSerum","others","setOthers","getOthers","foodPref","setFoodPref","carnivore","herbivore","consumableTouched","setConsumableTouched","creatureNamesRef","useRef","buildCreatureNames","applySnapshotRef","wSpecRef","resultDamageRef","playerRef","playerStatsRef","stuffBoostRef","boostDamageRef","extraDamageRef","additionalDamagesRef","creaturesRef","showStatRef","weaponDataRef","useEffect","weaponFactory","WeaponFactory","graphDamage","calcDamage","current","applySnapshot","cBoostDamage","cWSpec","cExtraDamage","cAdditionalDamages","cCreatures","cPlayer","cPlayerStats","cStuff","allStuffBoosts","consumables","buildFromList","setConsumableItems","_objectSpread","_jsx","LoadingLine","text","_jsxs","children","MainCardsDisplay","ToastSpecs","legendary","iconName","weaponName","defaultName","Tabs","id","activeKey","onSelect","k","className","Tab","eventKey","title","Accordion","Divider","WeaponSpecs","health","value","DamageBoosts","AdditionalDamage","ComparatorView","CreaturesView","RaceView","ConsumablesView","PerkCardView","WeaponTemplates","BoostStuff","Snapshots","buildPopover","Popover","Header","as","Body","qa","_Fragment","OverlayTrigger","rootClose","trigger","placement","overlay","Button","variant","addIconName","name","_ref","additionalDamage","updateAdditionalDamages","marks","redraw","setRedraw","width","isUsed","disabled","is_used","Row","Card","Col","InputGroup","Text","style","UCheckbox","onChange","e","target","checked","checkBgColor","Slider","onAfterChange","tooltip","open","min","max","step","getImagePathById","cId","jsonItems","getter","substring","lastIndexOf","getMagazine","getBobbleHead","getOther","length","item","imName","getMagazineItems","wType","wName","tags","crit","team","scoped","creatureTags","accessibleMagazines","result","combination","includes","addIfAccessible","getOtherItems","hasPhysicalDamage","getBobbleHeadItems","accessibleBobbleHeads","getDrinkItems","accessibleDrink","getFoodItems","accessibleFood","getSerumItems","lowHP","accessibleSerums","combination1","combination2","getSerumItemsBase","getSerumItemsAdditional","combination3","combination4","combination5","noEagle","arguments","undefined","isCarnivore","itemName","accessibleItems","collection","array","isAccessible","getChemicalItems","sneak","accessibleChemo","prepare","consumableObjs","consumableNames","prepareItems","creature","Map","weapon","JSON","parse","stringify","consumablesList","consumablesSet","Set","has","loadBoosts","Chart","getData","values","label","color","labels","datasets","type","data","yValuesRed","borderColor","pointRadius","borderWidth","fill","yValuesBlue","resPoints","b","f","c","p","r","drawChart","config","chartId","curChart","getChart","destroy","document","getElementById","ComparatorChartView","props","options","plugins","legend","display","elements","line","tension","scales","x","position","y","animation","maxWidth","maxHeight","explanation","creatureNames","CreatureDataProvider","getCreatureNames","marks90","buildDamages","consumableList","accuracy","getYPoint","xValue","point","buildYPoints","yValues1","yValues2","point1","point2","getResData","redY","blueY","memo","setCreature","buildCreature","reduction","setReduction","blueData","setBlueData","redData","setRedData","loading","setLoading","capName","blueValues","redValues","LoadingModal","show","Item","onClick","stopPropagation","flexDirection","WarningPopoverBadge","sign","message","header","justifyContent","CreatureDropdownButton","names","damageReduction","CreatureShortInfoButton","fontSize","onChangeComplete","ComparatorWeaponDataView","defTitle","itemId","setData","getColTag","keyId","minWidth","borderStyle","backgroundColor","borderRadius","Stack","direction","gap","getBulletSize","isRanged","bullet","getShotSize","getFireRate","fireRate","toFixed","getReload","getReloadTime","getCrit","getCritBonus","getSneak","getSneakBonus","getTeam","getStrength","strength","buildChanceAccuracyString","damage","chance","finalAccuracy","getDamages","damages","accuracyString","time","icon","getSymbolStyle","kind","WeaponBadgeView","getAmmoCapacity","ammo","marks100","getLabel","weaponData","left","right","getImageElement","height","getApplyButton","size","setTimeout","ParametersApplier","applyCalculatedParameters","getContent","weaponItemView","leftRight2","dataRef","newData","convertStuffBoost","weaponView","build","stuff","modTitle","mods","usedPerks","getUsedPerks","boostTitle","extraDamageView","getLegendary","ModView","BoostRowView","useCrit","useSneak","card","follow_through","displayed_value","useHead","critFreq","headFreq","leg1","getLegendaryNameFromSpec","leg2","leg3","leg4","leg5","getLegendaryBoxView","items","ConfigProvider","theme","components","Collapse","headerPadding","contentPadding","token","fontSizeIcon","accordion","expandIcon","isActive","rotate","transform","Arrow","getExpandIcon","objT","chT","dT","boT","mT","fT","itT","alT","cTypes","tagPrefixes","tagEndings","ConsumableTools","getTagName","tag","full","getItemType","startsWith","slice","prefix","endsWith","removeTagPrefix","tagName","tagPrefix","removeTagEndings","tagEnding","removePrefixSuffix","getItemColor","getItemColorDark","getEffectFilterInfo","resultName","durationText","valueColor","leftRight","wordBreak","ConsumableButton","typeColor","effectValues","effectTag","tagData","magnitudes","durations","magnitude","duration","Math","maxText","toString","minText","getEffectValues","effectTagsData","textBgColor","textStyle","itemType","margin","paddingTop","paddingBottom","padding","sortItems","consItems","sort","item1","item2","name1","name2","localeCompare","getItem","types","pageSize","setPageSize","onItemClick","currentTarget","currentItem","setShowToast","showToast","setCurrentItem","needTypeFilter","filterType","filterName","toLowerCase","filterEffect","effectTags","index","onPageChanged","page","setCurrentPage","paginated","start","currentPage","end","Container","Pagination","align","defaultPageSize","total","FloatButton","BackTop","visibilityHeight","ConsumableToast","ToastContainer","role","zIndex","Toast","bg","onClose","StackEffectView","typeDict","All","Chem","Food","Magazine","Serum","Drink","Bobblehead","Stimpak","BloodPack","Other","effectDict","effectDictJSON","ConsumableFilter","BaseDropdown","dict","setFilterType","Form","Control","maxLength","setFilterName","setFilterEffect","questionPopoverHeader","questionPopoverBody","consumablesParseVersion","consumablesParseVersionName","questionPopover","StaticPopoverRenderer","renderToggle","FilterDisplay","ConsumableItems","effect","keyValueRow","getConfig","titleText","headerClassName","CreatureNamesDropdown","SimpleNameDropdown","fieldName","level","levels","getCreatureLevels","CreatureLevelsDropdown","CreatureChooser","xs","raceMap","raceItems","set","RaceDataProvider","getRaceById","get","creatureName","creatureItems","creatureLevels","creatureLevelsWithMax","getCreatureData","getCreatureParametersByName","creatureData","getCreatureParametersByData","creatureDataCurve","lastItem","sample","sampleLevel","sampleValue","prevSampleLevel","prevSampleValue","calculateExactValue","immune_to_rad","immune_to_poison","reductions","reduction_only_not_bleeding","race","race_id","bodyData","body","getMaxBodyMultiplier","getAverageBodyMultiplier","maxMult","mult","damage_mult","multSum","count","prevLevel","nextLevel","curLevel","prevValue","nextValue","getMaxLevel","getLevelsList","maxLevel","capitalizeCreatureName","charAt","toUpperCase","replaceAll","getStyle","rType","getView","setCreatureName","CreatureDropdown","CreatureResHealthChartsView","CreatureDataView","getOnSelect","DropdownButton","getUniqueDropdownItemsByNames","CreatureInfoButton","creatureInfoPopover","cursor","creatureShortInfoPopover","getResBadge","immune","prepareTags","tags3","curTags","Tag","join","showDamageIf","what","damageLine","buildCreatureInfo2","armor","Object","keys","resultArmor","showHeadExp","explosiveDamage","headExpShotDamage","showCritHeadExp","critExplosiveDamage","critExplosiveHeadDamage","capitalized","immuneToPoison","immuneToRadiation","h","totalDamage","normalDamage","headShot","headShotDamage","critNormalDamage","critHeadNormalDamage","addText","tAmmo","reloads","millisToTime","reloadsTime","lifeTime","buildCreatureInfo","showDefaultResistance","weaponSection","wNameTrunc","truncate","defaultResistance","curBody","buildCreatureSnortInfo","buildResCols","cRes","typeData","CreatureChartView","CreatureParamsLineView","keyValueBadge","numberToString","enemy","CreaturesCardView","creature1","creature2","creature3","creature4","Creature","constructor","creatureInfo","this","physical","energy","fire","poison","cryo","radiation","damageReductionOnlyNotBleeding","headMult","bodyMult","bodyShot","expResistance","reported","maxHit","hits","sumDamages","lastShotTime","timeDamages","lastTotalDamage","lastTotalDamageWithAccuracy","lastTotalDamageNoTime","lastTotalDamageTime","lastDamageNoTime","lastExpDamageNoTime","minNormalShot","maxNormalShot","minHeadShot","maxHeadShot","minHeadExpShot","maxHeadExpShot","minNormalCritShot","maxNormalCritShot","minNormalHeadCritShot","maxNormalHeadCritShot","minExpShot","maxExpShot","minExpCritShot","maxExpCritShot","minExpCritHeadShot","maxExpCritHeadShot","bulletCount","minTotalDamage","maxTotalDamage","maxTimeEffects","tdCounter","sneakPercent","critPercent","bleed","getName","getArmor","reduceArmor","antiArmor","insect","takeDamage","hit","deltaTime","applyDamages","critShot","applyCritDamages","critDamages","isDead","setupBleed","damageInfo","causeNonTimeDamages","gatherTimeDamages","causeTimeDamages","recordDamage","baseDamage","bonus","bonusMult","getCreatureBonusMultiplier","creatureDamageBonuses","getTotalBonus","stack","existedDamages","buildTimeDamageItem","damageType","timeDamagesHandler","map","dTime","finalDamage","causeFinalDamage","memoDamage","deleteTimeDamages","filter","getMaxTimeEffects","forEach","cripple","powerAttack","lastShotBonus","expDTypeBonus","critBoost","bash","firstBloodBonus","totalBonus","sneakShot","expValue","getExplosiveDamage","weaponType","expBonus","critExp","tenderizer","nonCritExp","timeDamage","expDamage","getArmorValue","damageKind","totalDamageBonus","executionerBonus","damageBonus","bonusName","getLastTotalDamage","getLastTotalDamageWithAccuracy","getGetLastTotalDamageNoTime","getLastTotalDamageTime","isHead","explosive","getAverageHit","Infinity","totalTime","parseInt","formDeadReport","averageHit","damagedHealth","ratio","CreaturesProduction","produce","materials","property","produceByArmor","dummy","getDummy","grey","colors","blue","darkBlue","orange","magenta","indigo","red","UTag","colorScheme","bRadius","bWidth","bgColor","border","fontWeight","whiteSpace","getButton","getTag","getColTagView","onBodyPartClick","CreatureBodyView","bodyParts","partName","part","partText","CreatureReductionView","damageReductions","col","res_field","canDisable","chColor","checkBorderColor","getCheckbox","checkLength","parseFloat","ballistic","cold","rad","creatureTypes","Normal","Scorched","Glowing","CreatureTagsView","BSRadio","pairs","selectedValue","float","CreaturesStats","CreatureStats","getItems","creatureParseVersion","creatureParseVersionName","alt","setAlt","defaultCreaturesAlt","buildExtraDamageView","buildExtraDamageButtons","resultBadges","left1","right1","left2","right2","aab","aae","aaf","aac","aap","aar","getAATail","aa","aai","getDamageViews","damageViews","damageDetails","DamageDetailsCard","damageData","AAView","getRow","leftValue","rightValue","leftColor","rightColor","showExplosive","creatureBonus","numberEmoji","getNumberEmoji","currentCreature","additionalBonus","damageValue","getAnyCreatureBonus","bonusDamage","bonusText","critValue","displayedCrit","critText","totalSneakValue","isSneak","displayedSneak","totalDamageBonusMin","totalDamageBonusMinValue","totalDamageBonusMinPercent","totalDamageBonusMax","executioner","totalDamageBonusMaxValue","totalDamageBonusMaxPercent","totalDamageBonusText","sneakText","resultSneakValue","resultCritValue","isCrit","totalDamageMin","totalDamageMax","explosiveValueMin","explosiveValueMax","explosiveText","explosiveCritValueMin","explosiveCritValueMax","explosiveCritText","totalDamageText","tail","base","totalExp","totalExpCrit","getResult","dropdownItems","Dropdown","Footer","DamageEmulator","creatureInfos","needToStopByTime","timeLimit","floor","emulate","steps","getAntiArmor","deadCount","getReloadsCount","getReloadsTime","getType","defaultWeaponName","getDefaultName","getExplosiveDamageTypeBonus","getBonusMult","tDamage","getDisplayedDamage","getCreatureBonus","strengthBonus","getStrengthBonus","getExplosiveBonus","shotSize","reloadTime","ammoCapacity","dType","getInputItem","dItem","modalDeleteDamage","setModalDeleteDamage","symbol","TrashIcon","Weapon","weaponSpecsAssembler","getWeaponName","getDefaultWeaponName","getCritDamages","strengthBoost","getStrengthBoost","getBaseDamageMult","getCritBoost","explosiveBonus","explosiveDamageTypeBonus","getExplosivePhysicalBonus","getWeaponType","headShotFrequency","getHeadShotFrequency","critShotFrequency","getCritShotFrequency","sneakShotFrequency","getSneakShotFrequency","getCreatureDamageBonuses","getFirstBloodBonus","getLastShotBonus","getCripple","getBash","getPowerAttack","chargeTime","getChargeTime","chargePenalty","getChargePenalty","getTotalDamageBonus","magazine","enableCrit","enableHeadShot","reloadsCount","reloadTimeCounting","alwaysMaxHit","reloadsTotalTime","hitCount","setEnableCrit","flag","setEnableHeadShot","setLastShotBonus","setFirstBloodBonus","setChargeTime","setFireRate","setAlwaysMaxHit","disableReloadTimeCounting","getMaxHit","curDamage","Strings","Melee","Unarmed","chanceTriggered","hitIfFrequency","defDamage","frequency","random","StuffBoostsCollector","collectAllItems","stuffBoosts","collector","maxItem","getMaxItem","weaponNameOrTypeSatisfied","split","satisfyNameOrType","collect","weaponTags","customStacker","additional","satisfyTags","array1","array2","arrayLess","arrayMore","intersects","AccuracyAdjuster","adjustByLegendary","adjustByPerks","adjustByConsumables","WeaponSpecsAssembler","perks","extraDamageSettings","makeDamageItemCopy","concat","getDamageFromStuff","setFinalAccuracy","better_criticals","collectTags","ammoType","codeName","strPoints","collectFromLegendary","leg","exp","demolition_expert","damageToCreature","glow_sight","exist","toft","tdb","totalD","maxChargeTime","crippleChance","oper","covert_operative","sandman","mister_sandman","ninja","getBonusMultFromPerks","bResult","ballisticBDB","eResult","energyBDB","fResult","fireBDB","pResult","poisonBDB","cResult","coldBDB","rResult","radBDB","dtPhysical","dtEnergy","dtFire","dtPoison","dtCryo","dtRadiationExposure","buildBleedDamage","nerd_rage","bloody_mess","adrenaline","gun_fu","gladiator","hand","heavy_gunner","shotgunner","slugger","iron_fist","archer","commando","is_auto","rifleman","guerrilla","gunslinger","science","incisor","bow_before_me","tank_killer","stabilized","bMult","result2","exterminator","power_user","shot_size","weaponSpeed","speed","martial_artist","reloadSpeed","lock_and_load","scattershot","ground_pounder","defReloadTime","DEFAULT","NO_CRIT","rank","rank_values","max_x","category","info","cost","im_name","party_girl_boy","strange_in_numbers","class_freak","special","perception","endurance","charisma","intelligence","agility","luck","getAverageTimeMillis","sum","getAverageTime","averageShot","getCreatureByName","defBody","dps","buildDefCreature","normalMult","averageMult","immuneToRad","reductionOnlyNotBleeding","average","strange","freak","alcoholEffects","getStrangeMult","getFreakReduction","functions","nukeTheMan","partyGirlBoy","defValue","adrenalineReaction","ar","eagleEyes","eagleEyesNegative","empathSerum","carnivoreSerum","herbivoreSerum","foodCalc","foodType","herdMentality","posValue","speedDemonMove","speedDemonReload","talons1","talons2","twistedMuscles","collectBoosts","Array","from","boosts","add","parentId","loadedStuff","used","applyBoost","anyway","boost","funcUsed","func","things","bobbles","serums","applyAllStuff","applyStuff","remainStuff","delete","deleteBoost","modParser","ModParser","getDefaultLegs","legIds","convertTemplateToSpecs","template","assignCurrentlyActiveUserLegendary","isAuto","defRate","manualRate","modCategoryName","allMods","categoryMods","j","mod","getMods","group","legs","legendary1","legendary2","legendary3","legendary4","legendary5","replaceAdjustableLegs","collectAllDamages","sortedDamages","d","ignore","critDamagesData","crSpellId","critDamageData","critItem","convertDamageDataToDamageItem","weaponId","capacity","legendaryHealthUpdated","currentLegendaryIds","applyLegendaryModToWSpec","adDamage","interval","area","AdditionalDView","iMap","createMap","getAmmo","require","magazinesList","bobbleHeadsList","bobbleHead","foods","foodsList","drinks","drinksList","psychos","psychoList","serumList","othersList","other","nameList","firstIndex","lastIndex","indexOf","creaturesInfo","buildGraphValues","shotsPerSecond","resistanceByAntiArmor","addResPoints","pointsSize","staticResistance","headShotPercent","normalShotPercent","headShotMult","normalShotCount","critShotCount","shotSum","yValuesNoCrit","maxRes","creatureRes","cArmor","graphPoints","ceil","res","a","getColorsForHotMeter","g","damageExtractor","DamageExtractor","CritView","crits","weapId","allItems","visual","ench","extractEnch","spells","type_name","curv","vmadObjects","getEffect","effects","setVMADObject","object","getVMADObject","clearVMADObjects","clear","number","image","src","Image","fluid","iBullet","iAmmo","iFireRate","iTAmmo","gun","iGun","rifle","iRifle","shotgun","iShotgun","bow","iBow","melee","iMelee","heavy","iHeavy","unarmed","iUnarmed","thrown","iThrown","imageF","marginLeft","val","str","truncateLongWords","words","word","getHotPercentage","timeToPercent","percent","buildItem","wSpecCopy","averageTime","star","getLegendaryByStar","legObj","formatName","legendaryName","starsCount","stars","repeat","LegendaryView","isLeg1","isLeg2","isLeg3","isLeg4","isLeg5","getPerks","getProj","getHazardOverlay","hazard","overlayButton","WeaponPopoverOverlay","popoverHeader","popoverContent","buildHazardView","itemToOverly","getExpView","expl","popover","projectile","objectExplosion","placedWeapon","combined","getResolvedField","proj","renderWeaponPopover","buildProjView","getProjButton","getProjectileOverlay","hazd","d_type","getField","getCardSpell","enchantment","getExplosiveForPopover","buildProjViewById","projId","destructible","buildProjViewByIds","ids","ProjView","projInfo","getSpell","getEffects","vType","v_type","buildEightEffect","buildFifthEffect","Error","buildFirstEffect","spell","getSpellHeader","getEffectsForPopover","mag_effects","actor1","getActorData","actor2","lValue","rValue","keyValueTag","actor","getActor","under_row","actorData","getNameValueField","getPerkButton","perkId","perk","getPerkContent","getGlobDuration","dur","glob_duration","getGlobMagnitude","mag","glob_magnitude","getEffectContent","mEffect","ability","resist","a_type","e_type","only_player","d_curv","explosion","actor_value1","actor_value2","getOverlay","buttonStyle","getEffectButton","buildSpellView","spellId","SpellView","round","emojis","getRandomNumber","getRandomEmoji","buildRandomEmojiString","space","spaceChars","eSize","templates","templateList","getTemplates","getTemplateCopyById","t","q","strTime","hideEmpty","cell","css","value1","value2","setWeaponType","resetPage","customTitle","getRowWithImage","customName","getImage","images","imageList","content","minHeight","paddingLeft","popoverBack","onToggle","initWeaponPopover","ReactDOM","render","extractPlacedObjects","damageTypes","resTypes","e_type_name","v_type_name","operation","skipFunctions","tomahawk","throwingKnife","extractFromTemplate","extract","ammoId","curWeapId","ammoData","extractAmmo","projIds","projData","extractProj","effectIds","adEffects","effectId","parent","ammoDamage","ammo_type","dTypes","addDamageNode","extractExp","resolveAndExtractProj","extractPerk","enchTime","extractEffects","enchId","existedEffects","globMagnitude","globDuration","onlyPlayer","m_effect","blood","resolveCurv","findEffectDamageType","source","resId","extractObject","obj","wId","dDamage","expCurv","exp_curv","view_name","type_id","type_full_name","directParent","entries","abs","DamageBlackList","check","damageId","list","ignoreMap","buildDamageItem","getDamageTypeFromCellName","getDamageValue","damageItem","cellNames","cellName","DamageSetter","setDamages","setDamage","setDamageForCategory","setCurrent","placeValueByType","putDamage","field","newDamage","DamageBonusMult","Apply","apply","super","getValue","addSetMullAdd","op","applyLegendary","modId","starIndex","update","checkOp","Ammo","val1","isChangingDefaultDamage","IsAutomatic","Speed","autoRate","mullAddToProperty","APCost","ap","Weight","weight","AttackDelay","CriticalDamageMult","addToProperty","AmmoCapacity","ReloadSpeed","OverrideProjectile","splice","HasRepeatableSingleFire","ActorValues","getCurvValue","val2","applyValue","isLegendary","checkZero","applied","needToRemove","Keywords","addTag","print","CritEffect","AttackDamage","bbDamage","DamageTypeValues","ebDamage","fbDamage","pbDamage","cbDamage","rbDamage","to","mullAddFromTo","WeightReduction","mullAdd","Enchantments","newValue","depend","adjustValueByHealth","NumProjectiles","Appliers","appliers","ConIronSight","SightedTransition","MaxConDegree","MinConDegree","RecoilMaxDegree","RecoilMinDegree","skip_legendary","applyOrRevoke","modData","mutatingDamage","modifiers","applier","prop","changeDefault","applySpecific","modEffects","ModTools","hasSilencerById","hasSilencer","expected","val3","allowNegative","setToProperty","mullSet","conIronSight","maxConDegree","minConDegree","recoilMaxDegree","recoilMinDegree","sightedTransition","getButtons","small","marginRight","setSelectedValue","parseValueInt","GroupView","Modal","onHide","centered","redRounded","getNameByLabel","isEffectIdEmpty","getVMADButton","vmad","onEffectClick","buttonName","vmadObject","vmadView","buildRow","leftRightTag","buildConditionStrings","conditions","conditionStrings","cond","textAlign","textWrap","buildTextBlock","footer","trim","headerView","footerView","buildActor","desc","def","idNameRow","overflow","getGlob","glob","buildEffect","buildCurve","curve","maxValue","pathCurve","perkButtons","onPerkClick","perkData","costs","mPerkId","fPerkId","mPerk","fPerk","PerkCardCompactView","perkCard","getPerkCard","perkCardId","PerkCardTools","getColor","legBadge","buildPerkEffect","rows","entry","buildActors","getRows","indent","PerkCompactView","curve_max_value","SpellCompactView","range","checkEmpty","getPerk","EffectCompactView","resistance","getTagView","bordered","ConsumableTagsView","flexWrap","getItemDescription","getTag3","mt","mb","textOverflow","getWeight","getAddictionView","addictionChance","addiction_chance","addiction_spell","detailsView","alchemy","AlchemyCompactView","dnam_desc","buildBody","vmadId","textBlock","script_name","objView","objArrayView","structArrayView","objArray","objs","vmads","getScriptNameView","scriptName","effectButtonView","getGlobValue","buildView","VMADCompactView","viewIdStackRef","startItemIdRef","startItem","lastViewIdIndex","getEffectItem","backButton","onBackClick","getBackButton","newLength","effectView","marks100P","defaultValue","marks200","ADRow","AdditionalTable","InfoPopover","setShow","setTarget","bodyBuilder","headerBuilder","Overlay","popoverBodyStyle","buildOverlay","Badge","pill","getPopoverInfoBody","popoverId","getPopoverInfoHeader","categoryName","picHeight","imPadding","setItems","colorName","colorValue","getPicture","useHeader","maxRows","setUpdate","cardClick","recalculateDynamicItems","valueType","description","emptyRows","emojiStrings","secondEmoji","outline","head","maxPopoverHeight","documentElement","getPropertyValue","Img","gameId","couple","first","second","cardHeight","EffectItem","rItems","EffectView","EffectItems","marks50","marksH","ANRow","General","badgeIf","condition","checkCardConditions","cardType","setCardType","xBadge","w","perkColor","getPerkColor","cName","imagePath","getPerkImage","getMark","bgCardColor","getComputedStyle","calculateSpecial","rank_len","changeRank","WarningPopover","element","onRadioClick","Basic","Expert","Master","getInfo","BRow1","BRow2","_ref2","BRow3","_ref3","BRow4","_ref4","BRow5","_ref5","BRow6","_ref6","BRow7","_ref7","BRow8","_ref8","BRow9","_ref9","BRow10","_ref10","getStatBadge","cParams","letter","getDropdown","PerkCardBuilder","BoostTable","GraphInfoView","cPercent","Progress","format","strokeColor","trailColor","strokeWidth","ResistanceChart","creatureNumber","setCreatureNumber","HotMeter","setIndex","copyColors","shiftIndex","limit","newIndex","showInfo","imagePopover","weaponIcon","percentC","weaponTitleName","renderToggleNewContent","SummaryView","DamageDetails","creatureField","need","setValue","getLegendaryPrefix","legendaryPrefix","curLegPrefix","getInputText","legPrefixCheck","setLegPrefixCheck","setModalNewItemShow","closeButton","Title","useLegPrefix","nextId","newItems","setNextId","createItem","getJsonFileRef","URL","createObjectURL","Blob","getFileRef","modalDownloadSnapshots","setModalDownloadSnapshots","href","download","_unused","downloadName","modalDownloadSnapshot","setModalDownloadSnapshot","fileName","setModalDeleteItem","modalDeleteAll","setModalDeleteAll","modalView","applyItem","ModalApplyItem","setModalApplyItem","copy","readSnapshotsFromInput","inputId","setIdCallback","setItemsCallback","oldItems","maxItems","file","reader","FileReader","onload","readSnapshotsJson","readAsText","readSnapshotsFrom","files","newMaxItems","radio","Add","Replace","addOld","setAddOld","setModalUploadSnapshots","htmlFor","readOnly","accept","_unused2","setModalRenameItem","setItem","modalUpdateItem","setModalUpdateItem","oldItem","uniqueCreatureNames","sortCreatureName","setSortCreatureName","downloadButton","UploadIcon","uploadButton","DownloadIcon","row","tagColor","bodyContent","isOpen","critUsed","sneakUsed","headUsed","leg1Name","leg2Name","leg3Name","leg4Name","leg5Name","fireRateLabel","getFireRateLabel","UpdateIcon","PlayIcon","headerBody","isItemOpen","setIsItemOpen","displayedWeaponName","RenameIcon","compareAverage","time1","time2","startIndex","sortAlg","compareCreatureGeneral","snapshots","SnapshotItem","showSizeChanger","getPagination","modalNewItemShow","modalRenameItem","modalUploadSnapshots","modalDeleteItem","modalApplyItem","setIsOpen","setPage","setStartIndex","readSnapshotsFromResources","snapshotsFile","defaultItems","uniqueNames","buildUniqueCreatureNames","onClickOpen","SnapshotsHeader","ModalDownloadSnapshots","ModalDownloadSnapshot","ModalUploadSnapshots","ModalNewItem","ModalDeleteItem","ModalDeleteAll","ModalRenameItem","ModalUpdateItem","WTypeDropdown","CollapseIcon","ExpandIcon","SnapshotItems","mainInfoPopover","MainInfoButton","infoButton","TemplateTools","isWeaponRangedByType","damageText","fireRateText","fRate","getLegendaryRow","legendaryId","legData","getPrevButtonDetails","showView","detailsLength","detailIndex","setDetailIndex","getNextButtonDetails","getNextButtonCreature","getPrevButtonCreature","getCreatures","getDetails","view","getMainToast","totalBonusText","setShowView","strengthTail","bonuses","totalBonusTextMin","totalBonusTextMax","toastBody","column2","onChange1","onChange2","id1","id2","max1","max2","column","creatureIndex","creatureViews","fireRateIcon","defFireRateLabel","allMarks","marks3","marks25","marks40","marks95","marks20","marks24","marks300","marks15","legendaryInfo","marksName","wSpecLeg","adjustable","setCurrentLegendaryIds","legendaryItems","updateLegendary","getLegendaryDropdown","legName","legId","getQM","getEffectTag","getLegendaryAdjust","LegSlider","getLegendaryDetails","legBody","getCollapse","headerName","LegendarySelector","autoW","handW","auto","NotificationToast","toastState","delay","autohide","setToastState","openNotification","DamageAdd","api","contextHolder","notification","useNotification","AmmoInfoView","TagInfoView","modElement","dItems","DamageItem","ModalDeleteDamage","WRow","AutoHandSelector","DamageTable","buildName","setupGeneral","setupCard","getImageNamesForPickedCards","setupIfAccessible","buildWithOptions","automatic","energyTag","explosiveTag","fusionTag","oneHandedTag","twoHandedTag","silencerTag","shotgunTag","main","temp","lowHp","pa","night","useSerums","bodyTags","accessiblePerks","adr","extra","prepareName","perkCards","mPerk1","mName","fPerk1","sortedItems","fullName","getSortedPerkCards","PerkCardButton","filterStatus","Strength","Perception","Endurance","Charisma","Intelligence","Agility","Luck","statusDict","Legendary","Ordinary","PerkCardFilter","setFilterStatus","PerkCardToast","perkCardParseVersion","perkCardParseVersionName","PerkCardItems","ChartView","GeneralRaceView","RaceBodyView","RaceTools","prepareRaceName","pair","raceName","setRaceName","RaceTagView","raceParseVersion","raceParseVersionName","racePairs","raceComparator","race1","race2","it","getRaceTagView","getRaceBodyView","RaceDropdown","ResistanceView","imNames","EmblemCalcRowView","imageProvider","iconSize","imageSize","modView","buildModCard","mod_e","excludeMod","mId","eIds","excludedModIds","getDamagedModIndexes","includeGroups","accuracyMods","silencerDamage","exclude","defaultIndex","accuracyBestIndex","indexes","bestMod","resetMods","modCategories","modCategory","hasDefaultLegendary","getDefaultLegendary","legendarySetter","extractDefaultLegendary","isWeaponRanged","isWeaponExplosive","getGroups","applyTemplate","ModalApplyTemplate","modalTemplate","setModalTemplate","specItem","buildProj","buildAmmoView","AmmoView","overrideProj","ammoInfo","getDamagesData","getDamageData","buildCard","DamageView","Base","getTags","tagNames","buildGeneralView","crMult","crit_spells","crit_views","general","getDamageCards","damageCollapse","DamageOverview","ModRow","modsSameType","checkMod","defMods","modSameType","modRow","CheckableTag","getModRow","testImagePaths","versionPaths","testedWeapons","versions","buildMap","imagesMap","resultMap","version","img","buildTestedWeapons","paths","path","weaponRestrictions","setModalCalculate","onTestClick","restrictions","isTested","getResetButton","itemsLength","resetButtonActive","setResetButtonActive","cleanTemplate","modsSetter","setTemplatesMods","left3","right3","WeaponTemplate","changed","setChanged","cleanTemplateAndApplyCurrentMods","unverified","divider","iSize","badgeStyle","badgesRow","infoRows","filteredInfo","filteredMarks","badgesCols","buildInfoRows","GeneralView","LegendarySetter","privateSet","lastWord","propMods","modGroups","weaponIds","damageSetter","setTemplatesDefaultMods","resetTemplate","applyModValues","setLegendary","getSkeletons","Skeleton","avatar","paragraph","weaponIdsExists","weaponIdsByType","buildTemplates","wData","setWData","loaded","filterByName","filterByType","prepareTemplates","Combinator","combinations","currentCombination","lastIndexes","curIndexes","hbRead","combinationsCount","groupName","last","currentNumber","getCombinationsCount","getCurrentNumber","next","isLast","nextCombination","currentCombinations","rowPos","AccuracyHelper","getCleanTemplate","getBestMods","preference","resultMods","hide","hasAccuracyData","useful","getTheBestModsForCategory","pFunc","RECOIL","determineBestRecoilPriority","CON","determineBestConPriority","BALANCE","determineBestBalance","best","currentId","currentData","th","bestCon","getAverageCon","currentCon","bestBalance","getAverageRecoil","currentBalance","bestTransition","getTransition","currentTransition","bestSight","getSight","currentSight","bestRecoil","currentRecoil","_AccuracyHelper","ACCURACY_INFO","ACC_PREFERENCE","Recoil","Spread","Balance","accuracyProps","LegsId","getNames","QUAD","ARISTOCRAT","ANTI_ARMOR","TWO_SHOT","EXECUTIONER","BLOODIED","STEADY","MELEE_RAPID","HITMAN","RANGED_RAPID","VITAL","EXPLOSIVE","CRIPPLING","SWIFT","STRENGTH","getLeg1","getLeg2","getLeg3","_LegsId","LegendaryCalcBuilder","pushIfAccessible","accessibleList","getLegendary1","isRange","initLegs","getLegendary2","getLegendary3","ParameterCalculator","cards","frCrit","frHead","legendaryOpts","accessibleLeg","accessibleStuff","accuracyPreference","modCombinator","boostCombinator","bestParameters","lastParameters","bestTime","lastTime","maxCount","defaultLegendary","hasGotLastCombination","currentConfig","bestConfig","bestAverageHit","accuracyHelper","defaultExplosive","perkImageNames","bestAccuracyMods","getBestParameters","getTemplate","getCount","getMaxCount","getBestTime","clockFormat","prepareAndCalcFirst","getCreatureTags","getBodyTags","isDefaultExplosive","buildLegendary","Night","Sneak","modCombinations","applyMods","buildBoostCombinator","consList","legsList","buildConsumableList","buildLegendaryList","calculateAndCount","Legendary1","Legendary2","Legendary3","uniqueTags","getConsumables","Crit","Team","bobble","chemo","consumableBoostsList","calculateCombination","updateBestConfig","consCombinations","boostCombinations","nextBoostExists","calculateCombinations","modCombinationExists","currentBoosts","isFinished","getCompletionPercent","onePart","modGroup","modIndex","nonAutomatic","applyLegendaryToWSpec","legIndex","memoConfig","cons","getBestConfig","getCurrentConfig","buildNewCreatures","updateLeg","legToApply","buildPerks","consumableBoosts","report","PickedGroups","init","groups","excluded","excludeGroups","buildGroupsView","onGroupChange","getModItem","CalcModGroups","setGroups","getDefaultModGroups","infos","headButton","setFrHead","setFrCrit","opt","critButton","dis","strengthField","CalcModOptionsView","buildNameFromItemId","fName","setCards","CalcCards","tempPerks","setTempPerks","paddingRight","mainPerks","setMainPerks","legPerks","setLegPerks","CalcMain","setMain","cutTail","setCons","CalcConsumables","setChemo","setSerums","setStuff","setLeg","CalcLegendary","setLeg1","setLeg2","setLeg3","WeaponEmblem","LegendaryCalcRowView","getLeg","wrap","starSize","ModsCalcRowView","modViews","columns","wrapText","widths","rest","getWidths","alignItems","parameterCalculator","firstShown","ModalCalculateWeapon","setCount","calculating","setCalculating","selectedCreature","setSelectedCreature","accuracyPref","setAccuracyPref","modalCalculate","parameters","Parameters","startCalculation","getCounter","currentElement","curHeight","offsetHeight","onSelectCreatureName","selectedCreatureName","getSettings","CalcModGroupsAll","CalcWGroupsDropdown","setType","CalcCurrentItem","finishedRef","setWNameToApply","compareItems","bestTimeCount","resultView","calcItems","CalcResultItem","currentWIndex","ModalCalculateWeapons","completion","setCompletion","weaponResult","setWeaponResult","wNameToApply","renderSwitch","setRenderSwitch","canCalculateRef","modalCalculates","setModalCalculates","setupParameterCalculator","wIds","idObj","gNames","getCurrentItem","perksUsed","consUsed","getProgress","getProgressNumber","CalcResultItems","calculateParameters","wIcon","letterSpacing","getImages","Carousel","titles","getTitles","activeIndex","selectedIndex","ModalTestedWeapon","modalTested","setModalTested","TestedCarousel","TemplateItems","imagePathMap","views","bColor","ms","placeId","root","lastOpened","buildLayout","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","resolve","module","exports"],"sourceRoot":""}